"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_codemirror_legacy-modes_mode_cobol_js"],{

/***/ "(app-pages-browser)/./node_modules/@codemirror/legacy-modes/mode/cobol.js":
/*!*************************************************************!*\
  !*** ./node_modules/@codemirror/legacy-modes/mode/cobol.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cobol: function() { return /* binding */ cobol; }\n/* harmony export */ });\nvar BUILTIN = \"builtin\", COMMENT = \"comment\", STRING = \"string\",\n    ATOM = \"atom\", NUMBER = \"number\", KEYWORD = \"keyword\", MODTAG = \"header\",\n    COBOLLINENUM = \"def\", PERIOD = \"link\";\nfunction makeKeywords(str) {\n  var obj = {}, words = str.split(\" \");\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n  return obj;\n}\nvar atoms = makeKeywords(\"TRUE FALSE ZEROES ZEROS ZERO SPACES SPACE LOW-VALUE LOW-VALUES \");\nvar keywords = makeKeywords(\n  \"ACCEPT ACCESS ACQUIRE ADD ADDRESS \" +\n    \"ADVANCING AFTER ALIAS ALL ALPHABET \" +\n    \"ALPHABETIC ALPHABETIC-LOWER ALPHABETIC-UPPER ALPHANUMERIC ALPHANUMERIC-EDITED \" +\n    \"ALSO ALTER ALTERNATE AND ANY \" +\n    \"ARE AREA AREAS ARITHMETIC ASCENDING \" +\n    \"ASSIGN AT ATTRIBUTE AUTHOR AUTO \" +\n    \"AUTO-SKIP AUTOMATIC B-AND B-EXOR B-LESS \" +\n    \"B-NOT B-OR BACKGROUND-COLOR BACKGROUND-COLOUR BEEP \" +\n    \"BEFORE BELL BINARY BIT BITS \" +\n    \"BLANK BLINK BLOCK BOOLEAN BOTTOM \" +\n    \"BY CALL CANCEL CD CF \" +\n    \"CH CHARACTER CHARACTERS CLASS CLOCK-UNITS \" +\n    \"CLOSE COBOL CODE CODE-SET COL \" +\n    \"COLLATING COLUMN COMMA COMMIT COMMITMENT \" +\n    \"COMMON COMMUNICATION COMP COMP-0 COMP-1 \" +\n    \"COMP-2 COMP-3 COMP-4 COMP-5 COMP-6 \" +\n    \"COMP-7 COMP-8 COMP-9 COMPUTATIONAL COMPUTATIONAL-0 \" +\n    \"COMPUTATIONAL-1 COMPUTATIONAL-2 COMPUTATIONAL-3 COMPUTATIONAL-4 COMPUTATIONAL-5 \" +\n    \"COMPUTATIONAL-6 COMPUTATIONAL-7 COMPUTATIONAL-8 COMPUTATIONAL-9 COMPUTE \" +\n    \"CONFIGURATION CONNECT CONSOLE CONTAINED CONTAINS \" +\n    \"CONTENT CONTINUE CONTROL CONTROL-AREA CONTROLS \" +\n    \"CONVERTING COPY CORR CORRESPONDING COUNT \" +\n    \"CRT CRT-UNDER CURRENCY CURRENT CURSOR \" +\n    \"DATA DATE DATE-COMPILED DATE-WRITTEN DAY \" +\n    \"DAY-OF-WEEK DB DB-ACCESS-CONTROL-KEY DB-DATA-NAME DB-EXCEPTION \" +\n    \"DB-FORMAT-NAME DB-RECORD-NAME DB-SET-NAME DB-STATUS DBCS \" +\n    \"DBCS-EDITED DE DEBUG-CONTENTS DEBUG-ITEM DEBUG-LINE \" +\n    \"DEBUG-NAME DEBUG-SUB-1 DEBUG-SUB-2 DEBUG-SUB-3 DEBUGGING \" +\n    \"DECIMAL-POINT DECLARATIVES DEFAULT DELETE DELIMITED \" +\n    \"DELIMITER DEPENDING DESCENDING DESCRIBED DESTINATION \" +\n    \"DETAIL DISABLE DISCONNECT DISPLAY DISPLAY-1 \" +\n    \"DISPLAY-2 DISPLAY-3 DISPLAY-4 DISPLAY-5 DISPLAY-6 \" +\n    \"DISPLAY-7 DISPLAY-8 DISPLAY-9 DIVIDE DIVISION \" +\n    \"DOWN DROP DUPLICATE DUPLICATES DYNAMIC \" +\n    \"EBCDIC EGI EJECT ELSE EMI \" +\n    \"EMPTY EMPTY-CHECK ENABLE END END. END-ACCEPT END-ACCEPT. \" +\n    \"END-ADD END-CALL END-COMPUTE END-DELETE END-DISPLAY \" +\n    \"END-DIVIDE END-EVALUATE END-IF END-INVOKE END-MULTIPLY \" +\n    \"END-OF-PAGE END-PERFORM END-READ END-RECEIVE END-RETURN \" +\n    \"END-REWRITE END-SEARCH END-START END-STRING END-SUBTRACT \" +\n    \"END-UNSTRING END-WRITE END-XML ENTER ENTRY \" +\n    \"ENVIRONMENT EOP EQUAL EQUALS ERASE \" +\n    \"ERROR ESI EVALUATE EVERY EXCEEDS \" +\n    \"EXCEPTION EXCLUSIVE EXIT EXTEND EXTERNAL \" +\n    \"EXTERNALLY-DESCRIBED-KEY FD FETCH FILE FILE-CONTROL \" +\n    \"FILE-STREAM FILES FILLER FINAL FIND \" +\n    \"FINISH FIRST FOOTING FOR FOREGROUND-COLOR \" +\n    \"FOREGROUND-COLOUR FORMAT FREE FROM FULL \" +\n    \"FUNCTION GENERATE GET GIVING GLOBAL \" +\n    \"GO GOBACK GREATER GROUP HEADING \" +\n    \"HIGH-VALUE HIGH-VALUES HIGHLIGHT I-O I-O-CONTROL \" +\n    \"ID IDENTIFICATION IF IN INDEX \" +\n    \"INDEX-1 INDEX-2 INDEX-3 INDEX-4 INDEX-5 \" +\n    \"INDEX-6 INDEX-7 INDEX-8 INDEX-9 INDEXED \" +\n    \"INDIC INDICATE INDICATOR INDICATORS INITIAL \" +\n    \"INITIALIZE INITIATE INPUT INPUT-OUTPUT INSPECT \" +\n    \"INSTALLATION INTO INVALID INVOKE IS \" +\n    \"JUST JUSTIFIED KANJI KEEP KEY \" +\n    \"LABEL LAST LD LEADING LEFT \" +\n    \"LEFT-JUSTIFY LENGTH LENGTH-CHECK LESS LIBRARY \" +\n    \"LIKE LIMIT LIMITS LINAGE LINAGE-COUNTER \" +\n    \"LINE LINE-COUNTER LINES LINKAGE LOCAL-STORAGE \" +\n    \"LOCALE LOCALLY LOCK \" +\n    \"MEMBER MEMORY MERGE MESSAGE METACLASS \" +\n    \"MODE MODIFIED MODIFY MODULES MOVE \" +\n    \"MULTIPLE MULTIPLY NATIONAL NATIVE NEGATIVE \" +\n    \"NEXT NO NO-ECHO NONE NOT \" +\n    \"NULL NULL-KEY-MAP NULL-MAP NULLS NUMBER \" +\n    \"NUMERIC NUMERIC-EDITED OBJECT OBJECT-COMPUTER OCCURS \" +\n    \"OF OFF OMITTED ON ONLY \" +\n    \"OPEN OPTIONAL OR ORDER ORGANIZATION \" +\n    \"OTHER OUTPUT OVERFLOW OWNER PACKED-DECIMAL \" +\n    \"PADDING PAGE PAGE-COUNTER PARSE PERFORM \" +\n    \"PF PH PIC PICTURE PLUS \" +\n    \"POINTER POSITION POSITIVE PREFIX PRESENT \" +\n    \"PRINTING PRIOR PROCEDURE PROCEDURE-POINTER PROCEDURES \" +\n    \"PROCEED PROCESS PROCESSING PROGRAM PROGRAM-ID \" +\n    \"PROMPT PROTECTED PURGE QUEUE QUOTE \" +\n    \"QUOTES RANDOM RD READ READY \" +\n    \"REALM RECEIVE RECONNECT RECORD RECORD-NAME \" +\n    \"RECORDS RECURSIVE REDEFINES REEL REFERENCE \" +\n    \"REFERENCE-MONITOR REFERENCES RELATION RELATIVE RELEASE \" +\n    \"REMAINDER REMOVAL RENAMES REPEATED REPLACE \" +\n    \"REPLACING REPORT REPORTING REPORTS REPOSITORY \" +\n    \"REQUIRED RERUN RESERVE RESET RETAINING \" +\n    \"RETRIEVAL RETURN RETURN-CODE RETURNING REVERSE-VIDEO \" +\n    \"REVERSED REWIND REWRITE RF RH \" +\n    \"RIGHT RIGHT-JUSTIFY ROLLBACK ROLLING ROUNDED \" +\n    \"RUN SAME SCREEN SD SEARCH \" +\n    \"SECTION SECURE SECURITY SEGMENT SEGMENT-LIMIT \" +\n    \"SELECT SEND SENTENCE SEPARATE SEQUENCE \" +\n    \"SEQUENTIAL SET SHARED SIGN SIZE \" +\n    \"SKIP1 SKIP2 SKIP3 SORT SORT-MERGE \" +\n    \"SORT-RETURN SOURCE SOURCE-COMPUTER SPACE-FILL \" +\n    \"SPECIAL-NAMES STANDARD STANDARD-1 STANDARD-2 \" +\n    \"START STARTING STATUS STOP STORE \" +\n    \"STRING SUB-QUEUE-1 SUB-QUEUE-2 SUB-QUEUE-3 SUB-SCHEMA \" +\n    \"SUBFILE SUBSTITUTE SUBTRACT SUM SUPPRESS \" +\n    \"SYMBOLIC SYNC SYNCHRONIZED SYSIN SYSOUT \" +\n    \"TABLE TALLYING TAPE TENANT TERMINAL \" +\n    \"TERMINATE TEST TEXT THAN THEN \" +\n    \"THROUGH THRU TIME TIMES TITLE \" +\n    \"TO TOP TRAILING TRAILING-SIGN TRANSACTION \" +\n    \"TYPE TYPEDEF UNDERLINE UNEQUAL UNIT \" +\n    \"UNSTRING UNTIL UP UPDATE UPON \" +\n    \"USAGE USAGE-MODE USE USING VALID \" +\n    \"VALIDATE VALUE VALUES VARYING VLR \" +\n    \"WAIT WHEN WHEN-COMPILED WITH WITHIN \" +\n    \"WORDS WORKING-STORAGE WRITE XML XML-CODE \" +\n    \"XML-EVENT XML-NTEXT XML-TEXT ZERO ZERO-FILL \" );\n\nvar builtins = makeKeywords(\"- * ** / + < <= = > >= \");\nvar tests = {\n  digit: /\\d/,\n  digit_or_colon: /[\\d:]/,\n  hex: /[0-9a-f]/i,\n  sign: /[+-]/,\n  exponent: /e/i,\n  keyword_char: /[^\\s\\(\\[\\;\\)\\]]/,\n  symbol: /[\\w*+\\-]/\n};\nfunction isNumber(ch, stream){\n  // hex\n  if ( ch === '0' && stream.eat(/x/i) ) {\n    stream.eatWhile(tests.hex);\n    return true;\n  }\n  // leading sign\n  if ( ( ch == '+' || ch == '-' ) && ( tests.digit.test(stream.peek()) ) ) {\n    stream.eat(tests.sign);\n    ch = stream.next();\n  }\n  if ( tests.digit.test(ch) ) {\n    stream.eat(ch);\n    stream.eatWhile(tests.digit);\n    if ( '.' == stream.peek()) {\n      stream.eat('.');\n      stream.eatWhile(tests.digit);\n    }\n    if ( stream.eat(tests.exponent) ) {\n      stream.eat(tests.sign);\n      stream.eatWhile(tests.digit);\n    }\n    return true;\n  }\n  return false;\n}\nconst cobol = {\n  name: \"cobol\",\n  startState: function () {\n    return {\n      indentStack: null,\n      indentation: 0,\n      mode: false\n    };\n  },\n  token: function (stream, state) {\n    if (state.indentStack == null && stream.sol()) {\n      // update indentation, but only if indentStack is empty\n      state.indentation = 6 ; //stream.indentation();\n    }\n    // skip spaces\n    if (stream.eatSpace()) {\n      return null;\n    }\n    var returnType = null;\n    switch(state.mode){\n    case \"string\": // multi-line string parsing mode\n      var next = false;\n      while ((next = stream.next()) != null) {\n        if ((next == \"\\\"\" || next == \"\\'\") && !stream.match(/['\"]/, false)) {\n          state.mode = false;\n          break;\n        }\n      }\n      returnType = STRING; // continue on in string mode\n      break;\n    default: // default parsing mode\n      var ch = stream.next();\n      var col = stream.column();\n      if (col >= 0 && col <= 5) {\n        returnType = COBOLLINENUM;\n      } else if (col >= 72 && col <= 79) {\n        stream.skipToEnd();\n        returnType = MODTAG;\n      } else if (ch == \"*\" && col == 6) { // comment\n        stream.skipToEnd(); // rest of the line is a comment\n        returnType = COMMENT;\n      } else if (ch == \"\\\"\" || ch == \"\\'\") {\n        state.mode = \"string\";\n        returnType = STRING;\n      } else if (ch == \"'\" && !( tests.digit_or_colon.test(stream.peek()) )) {\n        returnType = ATOM;\n      } else if (ch == \".\") {\n        returnType = PERIOD;\n      } else if (isNumber(ch,stream)){\n        returnType = NUMBER;\n      } else {\n        if (stream.current().match(tests.symbol)) {\n          while (col < 71) {\n            if (stream.eat(tests.symbol) === undefined) {\n              break;\n            } else {\n              col++;\n            }\n          }\n        }\n        if (keywords && keywords.propertyIsEnumerable(stream.current().toUpperCase())) {\n          returnType = KEYWORD;\n        } else if (builtins && builtins.propertyIsEnumerable(stream.current().toUpperCase())) {\n          returnType = BUILTIN;\n        } else if (atoms && atoms.propertyIsEnumerable(stream.current().toUpperCase())) {\n          returnType = ATOM;\n        } else returnType = null;\n      }\n    }\n    return returnType;\n  },\n  indent: function (state) {\n    if (state.indentStack == null) return state.indentation;\n    return state.indentStack.indent;\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY29kZW1pcnJvci9sZWdhY3ktbW9kZXMvbW9kZS9jb2JvbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Qsa0JBQWtCLGtCQUFrQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxRQUFRLGtDQUFrQztBQUMxQyw0QkFBNEI7QUFDNUI7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLFFBQVE7QUFDUjtBQUNBLFFBQVE7QUFDUjtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bjb2RlbWlycm9yL2xlZ2FjeS1tb2Rlcy9tb2RlL2NvYm9sLmpzP2RjOTYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEJVSUxUSU4gPSBcImJ1aWx0aW5cIiwgQ09NTUVOVCA9IFwiY29tbWVudFwiLCBTVFJJTkcgPSBcInN0cmluZ1wiLFxuICAgIEFUT00gPSBcImF0b21cIiwgTlVNQkVSID0gXCJudW1iZXJcIiwgS0VZV09SRCA9IFwia2V5d29yZFwiLCBNT0RUQUcgPSBcImhlYWRlclwiLFxuICAgIENPQk9MTElORU5VTSA9IFwiZGVmXCIsIFBFUklPRCA9IFwibGlua1wiO1xuZnVuY3Rpb24gbWFrZUtleXdvcmRzKHN0cikge1xuICB2YXIgb2JqID0ge30sIHdvcmRzID0gc3RyLnNwbGl0KFwiIFwiKTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB3b3Jkcy5sZW5ndGg7ICsraSkgb2JqW3dvcmRzW2ldXSA9IHRydWU7XG4gIHJldHVybiBvYmo7XG59XG52YXIgYXRvbXMgPSBtYWtlS2V5d29yZHMoXCJUUlVFIEZBTFNFIFpFUk9FUyBaRVJPUyBaRVJPIFNQQUNFUyBTUEFDRSBMT1ctVkFMVUUgTE9XLVZBTFVFUyBcIik7XG52YXIga2V5d29yZHMgPSBtYWtlS2V5d29yZHMoXG4gIFwiQUNDRVBUIEFDQ0VTUyBBQ1FVSVJFIEFERCBBRERSRVNTIFwiICtcbiAgICBcIkFEVkFOQ0lORyBBRlRFUiBBTElBUyBBTEwgQUxQSEFCRVQgXCIgK1xuICAgIFwiQUxQSEFCRVRJQyBBTFBIQUJFVElDLUxPV0VSIEFMUEhBQkVUSUMtVVBQRVIgQUxQSEFOVU1FUklDIEFMUEhBTlVNRVJJQy1FRElURUQgXCIgK1xuICAgIFwiQUxTTyBBTFRFUiBBTFRFUk5BVEUgQU5EIEFOWSBcIiArXG4gICAgXCJBUkUgQVJFQSBBUkVBUyBBUklUSE1FVElDIEFTQ0VORElORyBcIiArXG4gICAgXCJBU1NJR04gQVQgQVRUUklCVVRFIEFVVEhPUiBBVVRPIFwiICtcbiAgICBcIkFVVE8tU0tJUCBBVVRPTUFUSUMgQi1BTkQgQi1FWE9SIEItTEVTUyBcIiArXG4gICAgXCJCLU5PVCBCLU9SIEJBQ0tHUk9VTkQtQ09MT1IgQkFDS0dST1VORC1DT0xPVVIgQkVFUCBcIiArXG4gICAgXCJCRUZPUkUgQkVMTCBCSU5BUlkgQklUIEJJVFMgXCIgK1xuICAgIFwiQkxBTksgQkxJTksgQkxPQ0sgQk9PTEVBTiBCT1RUT00gXCIgK1xuICAgIFwiQlkgQ0FMTCBDQU5DRUwgQ0QgQ0YgXCIgK1xuICAgIFwiQ0ggQ0hBUkFDVEVSIENIQVJBQ1RFUlMgQ0xBU1MgQ0xPQ0stVU5JVFMgXCIgK1xuICAgIFwiQ0xPU0UgQ09CT0wgQ09ERSBDT0RFLVNFVCBDT0wgXCIgK1xuICAgIFwiQ09MTEFUSU5HIENPTFVNTiBDT01NQSBDT01NSVQgQ09NTUlUTUVOVCBcIiArXG4gICAgXCJDT01NT04gQ09NTVVOSUNBVElPTiBDT01QIENPTVAtMCBDT01QLTEgXCIgK1xuICAgIFwiQ09NUC0yIENPTVAtMyBDT01QLTQgQ09NUC01IENPTVAtNiBcIiArXG4gICAgXCJDT01QLTcgQ09NUC04IENPTVAtOSBDT01QVVRBVElPTkFMIENPTVBVVEFUSU9OQUwtMCBcIiArXG4gICAgXCJDT01QVVRBVElPTkFMLTEgQ09NUFVUQVRJT05BTC0yIENPTVBVVEFUSU9OQUwtMyBDT01QVVRBVElPTkFMLTQgQ09NUFVUQVRJT05BTC01IFwiICtcbiAgICBcIkNPTVBVVEFUSU9OQUwtNiBDT01QVVRBVElPTkFMLTcgQ09NUFVUQVRJT05BTC04IENPTVBVVEFUSU9OQUwtOSBDT01QVVRFIFwiICtcbiAgICBcIkNPTkZJR1VSQVRJT04gQ09OTkVDVCBDT05TT0xFIENPTlRBSU5FRCBDT05UQUlOUyBcIiArXG4gICAgXCJDT05URU5UIENPTlRJTlVFIENPTlRST0wgQ09OVFJPTC1BUkVBIENPTlRST0xTIFwiICtcbiAgICBcIkNPTlZFUlRJTkcgQ09QWSBDT1JSIENPUlJFU1BPTkRJTkcgQ09VTlQgXCIgK1xuICAgIFwiQ1JUIENSVC1VTkRFUiBDVVJSRU5DWSBDVVJSRU5UIENVUlNPUiBcIiArXG4gICAgXCJEQVRBIERBVEUgREFURS1DT01QSUxFRCBEQVRFLVdSSVRURU4gREFZIFwiICtcbiAgICBcIkRBWS1PRi1XRUVLIERCIERCLUFDQ0VTUy1DT05UUk9MLUtFWSBEQi1EQVRBLU5BTUUgREItRVhDRVBUSU9OIFwiICtcbiAgICBcIkRCLUZPUk1BVC1OQU1FIERCLVJFQ09SRC1OQU1FIERCLVNFVC1OQU1FIERCLVNUQVRVUyBEQkNTIFwiICtcbiAgICBcIkRCQ1MtRURJVEVEIERFIERFQlVHLUNPTlRFTlRTIERFQlVHLUlURU0gREVCVUctTElORSBcIiArXG4gICAgXCJERUJVRy1OQU1FIERFQlVHLVNVQi0xIERFQlVHLVNVQi0yIERFQlVHLVNVQi0zIERFQlVHR0lORyBcIiArXG4gICAgXCJERUNJTUFMLVBPSU5UIERFQ0xBUkFUSVZFUyBERUZBVUxUIERFTEVURSBERUxJTUlURUQgXCIgK1xuICAgIFwiREVMSU1JVEVSIERFUEVORElORyBERVNDRU5ESU5HIERFU0NSSUJFRCBERVNUSU5BVElPTiBcIiArXG4gICAgXCJERVRBSUwgRElTQUJMRSBESVNDT05ORUNUIERJU1BMQVkgRElTUExBWS0xIFwiICtcbiAgICBcIkRJU1BMQVktMiBESVNQTEFZLTMgRElTUExBWS00IERJU1BMQVktNSBESVNQTEFZLTYgXCIgK1xuICAgIFwiRElTUExBWS03IERJU1BMQVktOCBESVNQTEFZLTkgRElWSURFIERJVklTSU9OIFwiICtcbiAgICBcIkRPV04gRFJPUCBEVVBMSUNBVEUgRFVQTElDQVRFUyBEWU5BTUlDIFwiICtcbiAgICBcIkVCQ0RJQyBFR0kgRUpFQ1QgRUxTRSBFTUkgXCIgK1xuICAgIFwiRU1QVFkgRU1QVFktQ0hFQ0sgRU5BQkxFIEVORCBFTkQuIEVORC1BQ0NFUFQgRU5ELUFDQ0VQVC4gXCIgK1xuICAgIFwiRU5ELUFERCBFTkQtQ0FMTCBFTkQtQ09NUFVURSBFTkQtREVMRVRFIEVORC1ESVNQTEFZIFwiICtcbiAgICBcIkVORC1ESVZJREUgRU5ELUVWQUxVQVRFIEVORC1JRiBFTkQtSU5WT0tFIEVORC1NVUxUSVBMWSBcIiArXG4gICAgXCJFTkQtT0YtUEFHRSBFTkQtUEVSRk9STSBFTkQtUkVBRCBFTkQtUkVDRUlWRSBFTkQtUkVUVVJOIFwiICtcbiAgICBcIkVORC1SRVdSSVRFIEVORC1TRUFSQ0ggRU5ELVNUQVJUIEVORC1TVFJJTkcgRU5ELVNVQlRSQUNUIFwiICtcbiAgICBcIkVORC1VTlNUUklORyBFTkQtV1JJVEUgRU5ELVhNTCBFTlRFUiBFTlRSWSBcIiArXG4gICAgXCJFTlZJUk9OTUVOVCBFT1AgRVFVQUwgRVFVQUxTIEVSQVNFIFwiICtcbiAgICBcIkVSUk9SIEVTSSBFVkFMVUFURSBFVkVSWSBFWENFRURTIFwiICtcbiAgICBcIkVYQ0VQVElPTiBFWENMVVNJVkUgRVhJVCBFWFRFTkQgRVhURVJOQUwgXCIgK1xuICAgIFwiRVhURVJOQUxMWS1ERVNDUklCRUQtS0VZIEZEIEZFVENIIEZJTEUgRklMRS1DT05UUk9MIFwiICtcbiAgICBcIkZJTEUtU1RSRUFNIEZJTEVTIEZJTExFUiBGSU5BTCBGSU5EIFwiICtcbiAgICBcIkZJTklTSCBGSVJTVCBGT09USU5HIEZPUiBGT1JFR1JPVU5ELUNPTE9SIFwiICtcbiAgICBcIkZPUkVHUk9VTkQtQ09MT1VSIEZPUk1BVCBGUkVFIEZST00gRlVMTCBcIiArXG4gICAgXCJGVU5DVElPTiBHRU5FUkFURSBHRVQgR0lWSU5HIEdMT0JBTCBcIiArXG4gICAgXCJHTyBHT0JBQ0sgR1JFQVRFUiBHUk9VUCBIRUFESU5HIFwiICtcbiAgICBcIkhJR0gtVkFMVUUgSElHSC1WQUxVRVMgSElHSExJR0hUIEktTyBJLU8tQ09OVFJPTCBcIiArXG4gICAgXCJJRCBJREVOVElGSUNBVElPTiBJRiBJTiBJTkRFWCBcIiArXG4gICAgXCJJTkRFWC0xIElOREVYLTIgSU5ERVgtMyBJTkRFWC00IElOREVYLTUgXCIgK1xuICAgIFwiSU5ERVgtNiBJTkRFWC03IElOREVYLTggSU5ERVgtOSBJTkRFWEVEIFwiICtcbiAgICBcIklORElDIElORElDQVRFIElORElDQVRPUiBJTkRJQ0FUT1JTIElOSVRJQUwgXCIgK1xuICAgIFwiSU5JVElBTElaRSBJTklUSUFURSBJTlBVVCBJTlBVVC1PVVRQVVQgSU5TUEVDVCBcIiArXG4gICAgXCJJTlNUQUxMQVRJT04gSU5UTyBJTlZBTElEIElOVk9LRSBJUyBcIiArXG4gICAgXCJKVVNUIEpVU1RJRklFRCBLQU5KSSBLRUVQIEtFWSBcIiArXG4gICAgXCJMQUJFTCBMQVNUIExEIExFQURJTkcgTEVGVCBcIiArXG4gICAgXCJMRUZULUpVU1RJRlkgTEVOR1RIIExFTkdUSC1DSEVDSyBMRVNTIExJQlJBUlkgXCIgK1xuICAgIFwiTElLRSBMSU1JVCBMSU1JVFMgTElOQUdFIExJTkFHRS1DT1VOVEVSIFwiICtcbiAgICBcIkxJTkUgTElORS1DT1VOVEVSIExJTkVTIExJTktBR0UgTE9DQUwtU1RPUkFHRSBcIiArXG4gICAgXCJMT0NBTEUgTE9DQUxMWSBMT0NLIFwiICtcbiAgICBcIk1FTUJFUiBNRU1PUlkgTUVSR0UgTUVTU0FHRSBNRVRBQ0xBU1MgXCIgK1xuICAgIFwiTU9ERSBNT0RJRklFRCBNT0RJRlkgTU9EVUxFUyBNT1ZFIFwiICtcbiAgICBcIk1VTFRJUExFIE1VTFRJUExZIE5BVElPTkFMIE5BVElWRSBORUdBVElWRSBcIiArXG4gICAgXCJORVhUIE5PIE5PLUVDSE8gTk9ORSBOT1QgXCIgK1xuICAgIFwiTlVMTCBOVUxMLUtFWS1NQVAgTlVMTC1NQVAgTlVMTFMgTlVNQkVSIFwiICtcbiAgICBcIk5VTUVSSUMgTlVNRVJJQy1FRElURUQgT0JKRUNUIE9CSkVDVC1DT01QVVRFUiBPQ0NVUlMgXCIgK1xuICAgIFwiT0YgT0ZGIE9NSVRURUQgT04gT05MWSBcIiArXG4gICAgXCJPUEVOIE9QVElPTkFMIE9SIE9SREVSIE9SR0FOSVpBVElPTiBcIiArXG4gICAgXCJPVEhFUiBPVVRQVVQgT1ZFUkZMT1cgT1dORVIgUEFDS0VELURFQ0lNQUwgXCIgK1xuICAgIFwiUEFERElORyBQQUdFIFBBR0UtQ09VTlRFUiBQQVJTRSBQRVJGT1JNIFwiICtcbiAgICBcIlBGIFBIIFBJQyBQSUNUVVJFIFBMVVMgXCIgK1xuICAgIFwiUE9JTlRFUiBQT1NJVElPTiBQT1NJVElWRSBQUkVGSVggUFJFU0VOVCBcIiArXG4gICAgXCJQUklOVElORyBQUklPUiBQUk9DRURVUkUgUFJPQ0VEVVJFLVBPSU5URVIgUFJPQ0VEVVJFUyBcIiArXG4gICAgXCJQUk9DRUVEIFBST0NFU1MgUFJPQ0VTU0lORyBQUk9HUkFNIFBST0dSQU0tSUQgXCIgK1xuICAgIFwiUFJPTVBUIFBST1RFQ1RFRCBQVVJHRSBRVUVVRSBRVU9URSBcIiArXG4gICAgXCJRVU9URVMgUkFORE9NIFJEIFJFQUQgUkVBRFkgXCIgK1xuICAgIFwiUkVBTE0gUkVDRUlWRSBSRUNPTk5FQ1QgUkVDT1JEIFJFQ09SRC1OQU1FIFwiICtcbiAgICBcIlJFQ09SRFMgUkVDVVJTSVZFIFJFREVGSU5FUyBSRUVMIFJFRkVSRU5DRSBcIiArXG4gICAgXCJSRUZFUkVOQ0UtTU9OSVRPUiBSRUZFUkVOQ0VTIFJFTEFUSU9OIFJFTEFUSVZFIFJFTEVBU0UgXCIgK1xuICAgIFwiUkVNQUlOREVSIFJFTU9WQUwgUkVOQU1FUyBSRVBFQVRFRCBSRVBMQUNFIFwiICtcbiAgICBcIlJFUExBQ0lORyBSRVBPUlQgUkVQT1JUSU5HIFJFUE9SVFMgUkVQT1NJVE9SWSBcIiArXG4gICAgXCJSRVFVSVJFRCBSRVJVTiBSRVNFUlZFIFJFU0VUIFJFVEFJTklORyBcIiArXG4gICAgXCJSRVRSSUVWQUwgUkVUVVJOIFJFVFVSTi1DT0RFIFJFVFVSTklORyBSRVZFUlNFLVZJREVPIFwiICtcbiAgICBcIlJFVkVSU0VEIFJFV0lORCBSRVdSSVRFIFJGIFJIIFwiICtcbiAgICBcIlJJR0hUIFJJR0hULUpVU1RJRlkgUk9MTEJBQ0sgUk9MTElORyBST1VOREVEIFwiICtcbiAgICBcIlJVTiBTQU1FIFNDUkVFTiBTRCBTRUFSQ0ggXCIgK1xuICAgIFwiU0VDVElPTiBTRUNVUkUgU0VDVVJJVFkgU0VHTUVOVCBTRUdNRU5ULUxJTUlUIFwiICtcbiAgICBcIlNFTEVDVCBTRU5EIFNFTlRFTkNFIFNFUEFSQVRFIFNFUVVFTkNFIFwiICtcbiAgICBcIlNFUVVFTlRJQUwgU0VUIFNIQVJFRCBTSUdOIFNJWkUgXCIgK1xuICAgIFwiU0tJUDEgU0tJUDIgU0tJUDMgU09SVCBTT1JULU1FUkdFIFwiICtcbiAgICBcIlNPUlQtUkVUVVJOIFNPVVJDRSBTT1VSQ0UtQ09NUFVURVIgU1BBQ0UtRklMTCBcIiArXG4gICAgXCJTUEVDSUFMLU5BTUVTIFNUQU5EQVJEIFNUQU5EQVJELTEgU1RBTkRBUkQtMiBcIiArXG4gICAgXCJTVEFSVCBTVEFSVElORyBTVEFUVVMgU1RPUCBTVE9SRSBcIiArXG4gICAgXCJTVFJJTkcgU1VCLVFVRVVFLTEgU1VCLVFVRVVFLTIgU1VCLVFVRVVFLTMgU1VCLVNDSEVNQSBcIiArXG4gICAgXCJTVUJGSUxFIFNVQlNUSVRVVEUgU1VCVFJBQ1QgU1VNIFNVUFBSRVNTIFwiICtcbiAgICBcIlNZTUJPTElDIFNZTkMgU1lOQ0hST05JWkVEIFNZU0lOIFNZU09VVCBcIiArXG4gICAgXCJUQUJMRSBUQUxMWUlORyBUQVBFIFRFTkFOVCBURVJNSU5BTCBcIiArXG4gICAgXCJURVJNSU5BVEUgVEVTVCBURVhUIFRIQU4gVEhFTiBcIiArXG4gICAgXCJUSFJPVUdIIFRIUlUgVElNRSBUSU1FUyBUSVRMRSBcIiArXG4gICAgXCJUTyBUT1AgVFJBSUxJTkcgVFJBSUxJTkctU0lHTiBUUkFOU0FDVElPTiBcIiArXG4gICAgXCJUWVBFIFRZUEVERUYgVU5ERVJMSU5FIFVORVFVQUwgVU5JVCBcIiArXG4gICAgXCJVTlNUUklORyBVTlRJTCBVUCBVUERBVEUgVVBPTiBcIiArXG4gICAgXCJVU0FHRSBVU0FHRS1NT0RFIFVTRSBVU0lORyBWQUxJRCBcIiArXG4gICAgXCJWQUxJREFURSBWQUxVRSBWQUxVRVMgVkFSWUlORyBWTFIgXCIgK1xuICAgIFwiV0FJVCBXSEVOIFdIRU4tQ09NUElMRUQgV0lUSCBXSVRISU4gXCIgK1xuICAgIFwiV09SRFMgV09SS0lORy1TVE9SQUdFIFdSSVRFIFhNTCBYTUwtQ09ERSBcIiArXG4gICAgXCJYTUwtRVZFTlQgWE1MLU5URVhUIFhNTC1URVhUIFpFUk8gWkVSTy1GSUxMIFwiICk7XG5cbnZhciBidWlsdGlucyA9IG1ha2VLZXl3b3JkcyhcIi0gKiAqKiAvICsgPCA8PSA9ID4gPj0gXCIpO1xudmFyIHRlc3RzID0ge1xuICBkaWdpdDogL1xcZC8sXG4gIGRpZ2l0X29yX2NvbG9uOiAvW1xcZDpdLyxcbiAgaGV4OiAvWzAtOWEtZl0vaSxcbiAgc2lnbjogL1srLV0vLFxuICBleHBvbmVudDogL2UvaSxcbiAga2V5d29yZF9jaGFyOiAvW15cXHNcXChcXFtcXDtcXClcXF1dLyxcbiAgc3ltYm9sOiAvW1xcdyorXFwtXS9cbn07XG5mdW5jdGlvbiBpc051bWJlcihjaCwgc3RyZWFtKXtcbiAgLy8gaGV4XG4gIGlmICggY2ggPT09ICcwJyAmJiBzdHJlYW0uZWF0KC94L2kpICkge1xuICAgIHN0cmVhbS5lYXRXaGlsZSh0ZXN0cy5oZXgpO1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIC8vIGxlYWRpbmcgc2lnblxuICBpZiAoICggY2ggPT0gJysnIHx8IGNoID09ICctJyApICYmICggdGVzdHMuZGlnaXQudGVzdChzdHJlYW0ucGVlaygpKSApICkge1xuICAgIHN0cmVhbS5lYXQodGVzdHMuc2lnbik7XG4gICAgY2ggPSBzdHJlYW0ubmV4dCgpO1xuICB9XG4gIGlmICggdGVzdHMuZGlnaXQudGVzdChjaCkgKSB7XG4gICAgc3RyZWFtLmVhdChjaCk7XG4gICAgc3RyZWFtLmVhdFdoaWxlKHRlc3RzLmRpZ2l0KTtcbiAgICBpZiAoICcuJyA9PSBzdHJlYW0ucGVlaygpKSB7XG4gICAgICBzdHJlYW0uZWF0KCcuJyk7XG4gICAgICBzdHJlYW0uZWF0V2hpbGUodGVzdHMuZGlnaXQpO1xuICAgIH1cbiAgICBpZiAoIHN0cmVhbS5lYXQodGVzdHMuZXhwb25lbnQpICkge1xuICAgICAgc3RyZWFtLmVhdCh0ZXN0cy5zaWduKTtcbiAgICAgIHN0cmVhbS5lYXRXaGlsZSh0ZXN0cy5kaWdpdCk7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cbmV4cG9ydCBjb25zdCBjb2JvbCA9IHtcbiAgbmFtZTogXCJjb2JvbFwiLFxuICBzdGFydFN0YXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGluZGVudFN0YWNrOiBudWxsLFxuICAgICAgaW5kZW50YXRpb246IDAsXG4gICAgICBtb2RlOiBmYWxzZVxuICAgIH07XG4gIH0sXG4gIHRva2VuOiBmdW5jdGlvbiAoc3RyZWFtLCBzdGF0ZSkge1xuICAgIGlmIChzdGF0ZS5pbmRlbnRTdGFjayA9PSBudWxsICYmIHN0cmVhbS5zb2woKSkge1xuICAgICAgLy8gdXBkYXRlIGluZGVudGF0aW9uLCBidXQgb25seSBpZiBpbmRlbnRTdGFjayBpcyBlbXB0eVxuICAgICAgc3RhdGUuaW5kZW50YXRpb24gPSA2IDsgLy9zdHJlYW0uaW5kZW50YXRpb24oKTtcbiAgICB9XG4gICAgLy8gc2tpcCBzcGFjZXNcbiAgICBpZiAoc3RyZWFtLmVhdFNwYWNlKCkpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICB2YXIgcmV0dXJuVHlwZSA9IG51bGw7XG4gICAgc3dpdGNoKHN0YXRlLm1vZGUpe1xuICAgIGNhc2UgXCJzdHJpbmdcIjogLy8gbXVsdGktbGluZSBzdHJpbmcgcGFyc2luZyBtb2RlXG4gICAgICB2YXIgbmV4dCA9IGZhbHNlO1xuICAgICAgd2hpbGUgKChuZXh0ID0gc3RyZWFtLm5leHQoKSkgIT0gbnVsbCkge1xuICAgICAgICBpZiAoKG5leHQgPT0gXCJcXFwiXCIgfHwgbmV4dCA9PSBcIlxcJ1wiKSAmJiAhc3RyZWFtLm1hdGNoKC9bJ1wiXS8sIGZhbHNlKSkge1xuICAgICAgICAgIHN0YXRlLm1vZGUgPSBmYWxzZTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuVHlwZSA9IFNUUklORzsgLy8gY29udGludWUgb24gaW4gc3RyaW5nIG1vZGVcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6IC8vIGRlZmF1bHQgcGFyc2luZyBtb2RlXG4gICAgICB2YXIgY2ggPSBzdHJlYW0ubmV4dCgpO1xuICAgICAgdmFyIGNvbCA9IHN0cmVhbS5jb2x1bW4oKTtcbiAgICAgIGlmIChjb2wgPj0gMCAmJiBjb2wgPD0gNSkge1xuICAgICAgICByZXR1cm5UeXBlID0gQ09CT0xMSU5FTlVNO1xuICAgICAgfSBlbHNlIGlmIChjb2wgPj0gNzIgJiYgY29sIDw9IDc5KSB7XG4gICAgICAgIHN0cmVhbS5za2lwVG9FbmQoKTtcbiAgICAgICAgcmV0dXJuVHlwZSA9IE1PRFRBRztcbiAgICAgIH0gZWxzZSBpZiAoY2ggPT0gXCIqXCIgJiYgY29sID09IDYpIHsgLy8gY29tbWVudFxuICAgICAgICBzdHJlYW0uc2tpcFRvRW5kKCk7IC8vIHJlc3Qgb2YgdGhlIGxpbmUgaXMgYSBjb21tZW50XG4gICAgICAgIHJldHVyblR5cGUgPSBDT01NRU5UO1xuICAgICAgfSBlbHNlIGlmIChjaCA9PSBcIlxcXCJcIiB8fCBjaCA9PSBcIlxcJ1wiKSB7XG4gICAgICAgIHN0YXRlLm1vZGUgPSBcInN0cmluZ1wiO1xuICAgICAgICByZXR1cm5UeXBlID0gU1RSSU5HO1xuICAgICAgfSBlbHNlIGlmIChjaCA9PSBcIidcIiAmJiAhKCB0ZXN0cy5kaWdpdF9vcl9jb2xvbi50ZXN0KHN0cmVhbS5wZWVrKCkpICkpIHtcbiAgICAgICAgcmV0dXJuVHlwZSA9IEFUT007XG4gICAgICB9IGVsc2UgaWYgKGNoID09IFwiLlwiKSB7XG4gICAgICAgIHJldHVyblR5cGUgPSBQRVJJT0Q7XG4gICAgICB9IGVsc2UgaWYgKGlzTnVtYmVyKGNoLHN0cmVhbSkpe1xuICAgICAgICByZXR1cm5UeXBlID0gTlVNQkVSO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKHN0cmVhbS5jdXJyZW50KCkubWF0Y2godGVzdHMuc3ltYm9sKSkge1xuICAgICAgICAgIHdoaWxlIChjb2wgPCA3MSkge1xuICAgICAgICAgICAgaWYgKHN0cmVhbS5lYXQodGVzdHMuc3ltYm9sKSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgY29sKys7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChrZXl3b3JkcyAmJiBrZXl3b3Jkcy5wcm9wZXJ0eUlzRW51bWVyYWJsZShzdHJlYW0uY3VycmVudCgpLnRvVXBwZXJDYXNlKCkpKSB7XG4gICAgICAgICAgcmV0dXJuVHlwZSA9IEtFWVdPUkQ7XG4gICAgICAgIH0gZWxzZSBpZiAoYnVpbHRpbnMgJiYgYnVpbHRpbnMucHJvcGVydHlJc0VudW1lcmFibGUoc3RyZWFtLmN1cnJlbnQoKS50b1VwcGVyQ2FzZSgpKSkge1xuICAgICAgICAgIHJldHVyblR5cGUgPSBCVUlMVElOO1xuICAgICAgICB9IGVsc2UgaWYgKGF0b21zICYmIGF0b21zLnByb3BlcnR5SXNFbnVtZXJhYmxlKHN0cmVhbS5jdXJyZW50KCkudG9VcHBlckNhc2UoKSkpIHtcbiAgICAgICAgICByZXR1cm5UeXBlID0gQVRPTTtcbiAgICAgICAgfSBlbHNlIHJldHVyblR5cGUgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmV0dXJuVHlwZTtcbiAgfSxcbiAgaW5kZW50OiBmdW5jdGlvbiAoc3RhdGUpIHtcbiAgICBpZiAoc3RhdGUuaW5kZW50U3RhY2sgPT0gbnVsbCkgcmV0dXJuIHN0YXRlLmluZGVudGF0aW9uO1xuICAgIHJldHVybiBzdGF0ZS5pbmRlbnRTdGFjay5pbmRlbnQ7XG4gIH1cbn07XG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@codemirror/legacy-modes/mode/cobol.js\n"));

/***/ })

}]);