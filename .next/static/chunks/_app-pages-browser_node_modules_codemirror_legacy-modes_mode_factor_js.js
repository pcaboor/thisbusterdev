"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_codemirror_legacy-modes_mode_factor_js"],{

/***/ "(app-pages-browser)/./node_modules/@codemirror/legacy-modes/mode/factor.js":
/*!**************************************************************!*\
  !*** ./node_modules/@codemirror/legacy-modes/mode/factor.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   factor: function() { return /* binding */ factor; }\n/* harmony export */ });\n/* harmony import */ var _simple_mode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./simple-mode.js */ \"(app-pages-browser)/./node_modules/@codemirror/legacy-modes/mode/simple-mode.js\");\n\n\nconst factor = (0,_simple_mode_js__WEBPACK_IMPORTED_MODULE_0__.simpleMode)({\n    start: [\n      // comments\n      {regex: /#?!.*/, token: \"comment\"},\n      // strings \"\"\", multiline --> state\n      {regex: /\"\"\"/, token: \"string\", next: \"string3\"},\n      {regex: /(STRING:)(\\s)/, token: [\"keyword\", null], next: \"string2\"},\n      {regex: /\\S*?\"/, token: \"string\", next: \"string\"},\n      // numbers: dec, hex, unicode, bin, fractional, complex\n      {regex: /(?:0x[\\d,a-f]+)|(?:0o[0-7]+)|(?:0b[0,1]+)|(?:\\-?\\d+.?\\d*)(?=\\s)/, token: \"number\"},\n      //{regex: /[+-]?/} //fractional\n      // definition: defining word, defined word, etc\n      {regex: /((?:GENERIC)|\\:?\\:)(\\s+)(\\S+)(\\s+)(\\()/, token: [\"keyword\", null, \"def\", null, \"bracket\"], next: \"stack\"},\n      // method definition: defining word, type, defined word, etc\n      {regex: /(M\\:)(\\s+)(\\S+)(\\s+)(\\S+)/, token: [\"keyword\", null, \"def\", null, \"tag\"]},\n      // vocabulary using --> state\n      {regex: /USING\\:/, token: \"keyword\", next: \"vocabulary\"},\n      // vocabulary definition/use\n      {regex: /(USE\\:|IN\\:)(\\s+)(\\S+)(?=\\s|$)/, token: [\"keyword\", null, \"tag\"]},\n      // definition: a defining word, defined word\n      {regex: /(\\S+\\:)(\\s+)(\\S+)(?=\\s|$)/, token: [\"keyword\", null, \"def\"]},\n      // \"keywords\", incl. ; t f . [ ] { } defining words\n      {regex: /(?:;|\\\\|t|f|if|loop|while|until|do|PRIVATE>|<PRIVATE|\\.|\\S*\\[|\\]|\\S*\\{|\\})(?=\\s|$)/, token: \"keyword\"},\n      // <constructors> and the like\n      {regex: /\\S+[\\)>\\.\\*\\?]+(?=\\s|$)/, token: \"builtin\"},\n      {regex: /[\\)><]+\\S+(?=\\s|$)/, token: \"builtin\"},\n      // operators\n      {regex: /(?:[\\+\\-\\=\\/\\*<>])(?=\\s|$)/, token: \"keyword\"},\n      // any id (?)\n      {regex: /\\S+/, token: \"variable\"},\n      {regex: /\\s+|./, token: null}\n    ],\n    vocabulary: [\n      {regex: /;/, token: \"keyword\", next: \"start\"},\n      {regex: /\\S+/, token: \"tag\"},\n      {regex: /\\s+|./, token: null}\n    ],\n    string: [\n      {regex: /(?:[^\\\\]|\\\\.)*?\"/, token: \"string\", next: \"start\"},\n      {regex: /.*/, token: \"string\"}\n    ],\n    string2: [\n      {regex: /^;/, token: \"keyword\", next: \"start\"},\n      {regex: /.*/, token: \"string\"}\n    ],\n    string3: [\n      {regex: /(?:[^\\\\]|\\\\.)*?\"\"\"/, token: \"string\", next: \"start\"},\n      {regex: /.*/, token: \"string\"}\n    ],\n    stack: [\n      {regex: /\\)/, token: \"bracket\", next: \"start\"},\n      {regex: /--/, token: \"bracket\"},\n      {regex: /\\S+/, token: \"meta\"},\n      {regex: /\\s+|./, token: null}\n    ],\n    languageData: {\n      name: \"factor\",\n      dontIndentStates: [\"start\", \"vocabulary\", \"string\", \"string3\", \"stack\"],\n      commentTokens: {line: \"!\"}\n    }\n  });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY29kZW1pcnJvci9sZWdhY3ktbW9kZXMvbW9kZS9mYWN0b3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMkM7O0FBRXBDLGVBQWUsMkRBQVU7QUFDaEM7QUFDQTtBQUNBLE9BQU8saUNBQWlDO0FBQ3hDO0FBQ0EsT0FBTywrQ0FBK0M7QUFDdEQsT0FBTyxrRUFBa0U7QUFDekUsT0FBTyxnREFBZ0Q7QUFDdkQ7QUFDQSxPQUFPLDBGQUEwRjtBQUNqRyxTQUFTLGdCQUFnQjtBQUN6QjtBQUNBLE9BQU8saUhBQWlIO0FBQ3hIO0FBQ0EsT0FBTyxpRkFBaUY7QUFDeEY7QUFDQSxPQUFPLHVEQUF1RDtBQUM5RDtBQUNBLE9BQU8seUVBQXlFO0FBQ2hGO0FBQ0EsT0FBTyxvRUFBb0U7QUFDM0UsNkJBQTZCLGNBQWM7QUFDM0MsT0FBTyxZQUFZLGtFQUFrRSxHQUFHLDZCQUE2QjtBQUNySDtBQUNBLE9BQU8sbURBQW1EO0FBQzFELE9BQU8sOENBQThDO0FBQ3JEO0FBQ0EsT0FBTyxzREFBc0Q7QUFDN0Q7QUFDQSxPQUFPLGdDQUFnQztBQUN2QyxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU8sU0FBUyxtQ0FBbUM7QUFDbkQsT0FBTywyQkFBMkI7QUFDbEMsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPLDBEQUEwRDtBQUNqRSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU8sVUFBVSxtQ0FBbUM7QUFDcEQsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPLDREQUE0RDtBQUNuRSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE9BQU8sNkNBQTZDO0FBQ3BELE9BQU8sOEJBQThCO0FBQ3JDLE9BQU8sNEJBQTRCO0FBQ25DLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bjb2RlbWlycm9yL2xlZ2FjeS1tb2Rlcy9tb2RlL2ZhY3Rvci5qcz9iOWZiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7c2ltcGxlTW9kZX0gZnJvbSBcIi4vc2ltcGxlLW1vZGUuanNcIlxuXG5leHBvcnQgY29uc3QgZmFjdG9yID0gc2ltcGxlTW9kZSh7XG4gICAgc3RhcnQ6IFtcbiAgICAgIC8vIGNvbW1lbnRzXG4gICAgICB7cmVnZXg6IC8jPyEuKi8sIHRva2VuOiBcImNvbW1lbnRcIn0sXG4gICAgICAvLyBzdHJpbmdzIFwiXCJcIiwgbXVsdGlsaW5lIC0tPiBzdGF0ZVxuICAgICAge3JlZ2V4OiAvXCJcIlwiLywgdG9rZW46IFwic3RyaW5nXCIsIG5leHQ6IFwic3RyaW5nM1wifSxcbiAgICAgIHtyZWdleDogLyhTVFJJTkc6KShcXHMpLywgdG9rZW46IFtcImtleXdvcmRcIiwgbnVsbF0sIG5leHQ6IFwic3RyaW5nMlwifSxcbiAgICAgIHtyZWdleDogL1xcUyo/XCIvLCB0b2tlbjogXCJzdHJpbmdcIiwgbmV4dDogXCJzdHJpbmdcIn0sXG4gICAgICAvLyBudW1iZXJzOiBkZWMsIGhleCwgdW5pY29kZSwgYmluLCBmcmFjdGlvbmFsLCBjb21wbGV4XG4gICAgICB7cmVnZXg6IC8oPzoweFtcXGQsYS1mXSspfCg/OjBvWzAtN10rKXwoPzowYlswLDFdKyl8KD86XFwtP1xcZCsuP1xcZCopKD89XFxzKS8sIHRva2VuOiBcIm51bWJlclwifSxcbiAgICAgIC8ve3JlZ2V4OiAvWystXT8vfSAvL2ZyYWN0aW9uYWxcbiAgICAgIC8vIGRlZmluaXRpb246IGRlZmluaW5nIHdvcmQsIGRlZmluZWQgd29yZCwgZXRjXG4gICAgICB7cmVnZXg6IC8oKD86R0VORVJJQyl8XFw6P1xcOikoXFxzKykoXFxTKykoXFxzKykoXFwoKS8sIHRva2VuOiBbXCJrZXl3b3JkXCIsIG51bGwsIFwiZGVmXCIsIG51bGwsIFwiYnJhY2tldFwiXSwgbmV4dDogXCJzdGFja1wifSxcbiAgICAgIC8vIG1ldGhvZCBkZWZpbml0aW9uOiBkZWZpbmluZyB3b3JkLCB0eXBlLCBkZWZpbmVkIHdvcmQsIGV0Y1xuICAgICAge3JlZ2V4OiAvKE1cXDopKFxccyspKFxcUyspKFxccyspKFxcUyspLywgdG9rZW46IFtcImtleXdvcmRcIiwgbnVsbCwgXCJkZWZcIiwgbnVsbCwgXCJ0YWdcIl19LFxuICAgICAgLy8gdm9jYWJ1bGFyeSB1c2luZyAtLT4gc3RhdGVcbiAgICAgIHtyZWdleDogL1VTSU5HXFw6LywgdG9rZW46IFwia2V5d29yZFwiLCBuZXh0OiBcInZvY2FidWxhcnlcIn0sXG4gICAgICAvLyB2b2NhYnVsYXJ5IGRlZmluaXRpb24vdXNlXG4gICAgICB7cmVnZXg6IC8oVVNFXFw6fElOXFw6KShcXHMrKShcXFMrKSg/PVxcc3wkKS8sIHRva2VuOiBbXCJrZXl3b3JkXCIsIG51bGwsIFwidGFnXCJdfSxcbiAgICAgIC8vIGRlZmluaXRpb246IGEgZGVmaW5pbmcgd29yZCwgZGVmaW5lZCB3b3JkXG4gICAgICB7cmVnZXg6IC8oXFxTK1xcOikoXFxzKykoXFxTKykoPz1cXHN8JCkvLCB0b2tlbjogW1wia2V5d29yZFwiLCBudWxsLCBcImRlZlwiXX0sXG4gICAgICAvLyBcImtleXdvcmRzXCIsIGluY2wuIDsgdCBmIC4gWyBdIHsgfSBkZWZpbmluZyB3b3Jkc1xuICAgICAge3JlZ2V4OiAvKD86O3xcXFxcfHR8ZnxpZnxsb29wfHdoaWxlfHVudGlsfGRvfFBSSVZBVEU+fDxQUklWQVRFfFxcLnxcXFMqXFxbfFxcXXxcXFMqXFx7fFxcfSkoPz1cXHN8JCkvLCB0b2tlbjogXCJrZXl3b3JkXCJ9LFxuICAgICAgLy8gPGNvbnN0cnVjdG9ycz4gYW5kIHRoZSBsaWtlXG4gICAgICB7cmVnZXg6IC9cXFMrW1xcKT5cXC5cXCpcXD9dKyg/PVxcc3wkKS8sIHRva2VuOiBcImJ1aWx0aW5cIn0sXG4gICAgICB7cmVnZXg6IC9bXFwpPjxdK1xcUysoPz1cXHN8JCkvLCB0b2tlbjogXCJidWlsdGluXCJ9LFxuICAgICAgLy8gb3BlcmF0b3JzXG4gICAgICB7cmVnZXg6IC8oPzpbXFwrXFwtXFw9XFwvXFwqPD5dKSg/PVxcc3wkKS8sIHRva2VuOiBcImtleXdvcmRcIn0sXG4gICAgICAvLyBhbnkgaWQgKD8pXG4gICAgICB7cmVnZXg6IC9cXFMrLywgdG9rZW46IFwidmFyaWFibGVcIn0sXG4gICAgICB7cmVnZXg6IC9cXHMrfC4vLCB0b2tlbjogbnVsbH1cbiAgICBdLFxuICAgIHZvY2FidWxhcnk6IFtcbiAgICAgIHtyZWdleDogLzsvLCB0b2tlbjogXCJrZXl3b3JkXCIsIG5leHQ6IFwic3RhcnRcIn0sXG4gICAgICB7cmVnZXg6IC9cXFMrLywgdG9rZW46IFwidGFnXCJ9LFxuICAgICAge3JlZ2V4OiAvXFxzK3wuLywgdG9rZW46IG51bGx9XG4gICAgXSxcbiAgICBzdHJpbmc6IFtcbiAgICAgIHtyZWdleDogLyg/OlteXFxcXF18XFxcXC4pKj9cIi8sIHRva2VuOiBcInN0cmluZ1wiLCBuZXh0OiBcInN0YXJ0XCJ9LFxuICAgICAge3JlZ2V4OiAvLiovLCB0b2tlbjogXCJzdHJpbmdcIn1cbiAgICBdLFxuICAgIHN0cmluZzI6IFtcbiAgICAgIHtyZWdleDogL147LywgdG9rZW46IFwia2V5d29yZFwiLCBuZXh0OiBcInN0YXJ0XCJ9LFxuICAgICAge3JlZ2V4OiAvLiovLCB0b2tlbjogXCJzdHJpbmdcIn1cbiAgICBdLFxuICAgIHN0cmluZzM6IFtcbiAgICAgIHtyZWdleDogLyg/OlteXFxcXF18XFxcXC4pKj9cIlwiXCIvLCB0b2tlbjogXCJzdHJpbmdcIiwgbmV4dDogXCJzdGFydFwifSxcbiAgICAgIHtyZWdleDogLy4qLywgdG9rZW46IFwic3RyaW5nXCJ9XG4gICAgXSxcbiAgICBzdGFjazogW1xuICAgICAge3JlZ2V4OiAvXFwpLywgdG9rZW46IFwiYnJhY2tldFwiLCBuZXh0OiBcInN0YXJ0XCJ9LFxuICAgICAge3JlZ2V4OiAvLS0vLCB0b2tlbjogXCJicmFja2V0XCJ9LFxuICAgICAge3JlZ2V4OiAvXFxTKy8sIHRva2VuOiBcIm1ldGFcIn0sXG4gICAgICB7cmVnZXg6IC9cXHMrfC4vLCB0b2tlbjogbnVsbH1cbiAgICBdLFxuICAgIGxhbmd1YWdlRGF0YToge1xuICAgICAgbmFtZTogXCJmYWN0b3JcIixcbiAgICAgIGRvbnRJbmRlbnRTdGF0ZXM6IFtcInN0YXJ0XCIsIFwidm9jYWJ1bGFyeVwiLCBcInN0cmluZ1wiLCBcInN0cmluZzNcIiwgXCJzdGFja1wiXSxcbiAgICAgIGNvbW1lbnRUb2tlbnM6IHtsaW5lOiBcIiFcIn1cbiAgICB9XG4gIH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@codemirror/legacy-modes/mode/factor.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@codemirror/legacy-modes/mode/simple-mode.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@codemirror/legacy-modes/mode/simple-mode.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   simpleMode: function() { return /* binding */ simpleMode; }\n/* harmony export */ });\nfunction simpleMode(states) {\n  ensureState(states, \"start\");\n  var states_ = {}, meta = states.languageData || {}, hasIndentation = false;\n  for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n    var list = states_[state] = [], orig = states[state];\n    for (var i = 0; i < orig.length; i++) {\n      var data = orig[i];\n      list.push(new Rule(data, states));\n      if (data.indent || data.dedent) hasIndentation = true;\n    }\n  }\n  return {\n    name: meta.name,\n    startState: function() {\n      return {state: \"start\", pending: null, indent: hasIndentation ? [] : null};\n    },\n    copyState: function(state) {\n      var s = {state: state.state, pending: state.pending, indent: state.indent && state.indent.slice(0)};\n      if (state.stack)\n        s.stack = state.stack.slice(0);\n      return s;\n    },\n    token: tokenFunction(states_),\n    indent: indentFunction(states_, meta),\n    languageData: meta\n  }\n};\n\nfunction ensureState(states, name) {\n  if (!states.hasOwnProperty(name))\n    throw new Error(\"Undefined state \" + name + \" in simple mode\");\n}\n\nfunction toRegex(val, caret) {\n  if (!val) return /(?:)/;\n  var flags = \"\";\n  if (val instanceof RegExp) {\n    if (val.ignoreCase) flags = \"i\";\n    val = val.source;\n  } else {\n    val = String(val);\n  }\n  return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n}\n\nfunction asToken(val) {\n  if (!val) return null;\n  if (val.apply) return val\n  if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n  var result = [];\n  for (var i = 0; i < val.length; i++)\n    result.push(val[i] && val[i].replace(/\\./g, \" \"));\n  return result;\n}\n\nfunction Rule(data, states) {\n  if (data.next || data.push) ensureState(states, data.next || data.push);\n  this.regex = toRegex(data.regex);\n  this.token = asToken(data.token);\n  this.data = data;\n}\n\nfunction tokenFunction(states) {\n  return function(stream, state) {\n    if (state.pending) {\n      var pend = state.pending.shift();\n      if (state.pending.length == 0) state.pending = null;\n      stream.pos += pend.text.length;\n      return pend.token;\n    }\n\n    var curState = states[state.state];\n    for (var i = 0; i < curState.length; i++) {\n      var rule = curState[i];\n      var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n      if (matches) {\n        if (rule.data.next) {\n          state.state = rule.data.next;\n        } else if (rule.data.push) {\n          (state.stack || (state.stack = [])).push(state.state);\n          state.state = rule.data.push;\n        } else if (rule.data.pop && state.stack && state.stack.length) {\n          state.state = state.stack.pop();\n        }\n\n        if (rule.data.indent)\n          state.indent.push(stream.indentation() + stream.indentUnit);\n        if (rule.data.dedent)\n          state.indent.pop();\n        var token = rule.token\n        if (token && token.apply) token = token(matches)\n        if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n          state.pending = [];\n          for (var j = 2; j < matches.length; j++)\n            if (matches[j])\n              state.pending.push({text: matches[j], token: rule.token[j - 1]});\n          stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n          return token[0];\n        } else if (token && token.join) {\n          return token[0];\n        } else {\n          return token;\n        }\n      }\n    }\n    stream.next();\n    return null;\n  };\n}\n\nfunction indentFunction(states, meta) {\n  return function(state, textAfter) {\n    if (state.indent == null || meta.dontIndentStates && meta.doneIndentState.indexOf(state.state) > -1)\n      return null\n\n    var pos = state.indent.length - 1, rules = states[state.state];\n    scan: for (;;) {\n      for (var i = 0; i < rules.length; i++) {\n        var rule = rules[i];\n        if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n          var m = rule.regex.exec(textAfter);\n          if (m && m[0]) {\n            pos--;\n            if (rule.next || rule.push) rules = states[rule.next || rule.push];\n            textAfter = textAfter.slice(m[0].length);\n            continue scan;\n          }\n        }\n      }\n      break;\n    }\n    return pos < 0 ? 0 : state.indent[pos];\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY29kZW1pcnJvci9sZWdhY3ktbW9kZXMvbW9kZS9zaW1wbGUtbW9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBLGtCQUFrQixrQ0FBa0M7QUFDcEQ7QUFDQTtBQUNBLG9CQUFvQixpQkFBaUI7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxLQUFLO0FBQ0w7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsZ0JBQWdCO0FBQ2xDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG9CQUFvQixxQkFBcUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixvQkFBb0I7QUFDOUM7QUFDQSxrQ0FBa0MsMkNBQTJDO0FBQzdFO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlCQUFpQjtBQUNqQixzQkFBc0Isa0JBQWtCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY29kZW1pcnJvci9sZWdhY3ktbW9kZXMvbW9kZS9zaW1wbGUtbW9kZS5qcz8zYjVmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBzaW1wbGVNb2RlKHN0YXRlcykge1xuICBlbnN1cmVTdGF0ZShzdGF0ZXMsIFwic3RhcnRcIik7XG4gIHZhciBzdGF0ZXNfID0ge30sIG1ldGEgPSBzdGF0ZXMubGFuZ3VhZ2VEYXRhIHx8IHt9LCBoYXNJbmRlbnRhdGlvbiA9IGZhbHNlO1xuICBmb3IgKHZhciBzdGF0ZSBpbiBzdGF0ZXMpIGlmIChzdGF0ZSAhPSBtZXRhICYmIHN0YXRlcy5oYXNPd25Qcm9wZXJ0eShzdGF0ZSkpIHtcbiAgICB2YXIgbGlzdCA9IHN0YXRlc19bc3RhdGVdID0gW10sIG9yaWcgPSBzdGF0ZXNbc3RhdGVdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgb3JpZy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGRhdGEgPSBvcmlnW2ldO1xuICAgICAgbGlzdC5wdXNoKG5ldyBSdWxlKGRhdGEsIHN0YXRlcykpO1xuICAgICAgaWYgKGRhdGEuaW5kZW50IHx8IGRhdGEuZGVkZW50KSBoYXNJbmRlbnRhdGlvbiA9IHRydWU7XG4gICAgfVxuICB9XG4gIHJldHVybiB7XG4gICAgbmFtZTogbWV0YS5uYW1lLFxuICAgIHN0YXJ0U3RhdGU6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHtzdGF0ZTogXCJzdGFydFwiLCBwZW5kaW5nOiBudWxsLCBpbmRlbnQ6IGhhc0luZGVudGF0aW9uID8gW10gOiBudWxsfTtcbiAgICB9LFxuICAgIGNvcHlTdGF0ZTogZnVuY3Rpb24oc3RhdGUpIHtcbiAgICAgIHZhciBzID0ge3N0YXRlOiBzdGF0ZS5zdGF0ZSwgcGVuZGluZzogc3RhdGUucGVuZGluZywgaW5kZW50OiBzdGF0ZS5pbmRlbnQgJiYgc3RhdGUuaW5kZW50LnNsaWNlKDApfTtcbiAgICAgIGlmIChzdGF0ZS5zdGFjaylcbiAgICAgICAgcy5zdGFjayA9IHN0YXRlLnN0YWNrLnNsaWNlKDApO1xuICAgICAgcmV0dXJuIHM7XG4gICAgfSxcbiAgICB0b2tlbjogdG9rZW5GdW5jdGlvbihzdGF0ZXNfKSxcbiAgICBpbmRlbnQ6IGluZGVudEZ1bmN0aW9uKHN0YXRlc18sIG1ldGEpLFxuICAgIGxhbmd1YWdlRGF0YTogbWV0YVxuICB9XG59O1xuXG5mdW5jdGlvbiBlbnN1cmVTdGF0ZShzdGF0ZXMsIG5hbWUpIHtcbiAgaWYgKCFzdGF0ZXMuaGFzT3duUHJvcGVydHkobmFtZSkpXG4gICAgdGhyb3cgbmV3IEVycm9yKFwiVW5kZWZpbmVkIHN0YXRlIFwiICsgbmFtZSArIFwiIGluIHNpbXBsZSBtb2RlXCIpO1xufVxuXG5mdW5jdGlvbiB0b1JlZ2V4KHZhbCwgY2FyZXQpIHtcbiAgaWYgKCF2YWwpIHJldHVybiAvKD86KS87XG4gIHZhciBmbGFncyA9IFwiXCI7XG4gIGlmICh2YWwgaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICBpZiAodmFsLmlnbm9yZUNhc2UpIGZsYWdzID0gXCJpXCI7XG4gICAgdmFsID0gdmFsLnNvdXJjZTtcbiAgfSBlbHNlIHtcbiAgICB2YWwgPSBTdHJpbmcodmFsKTtcbiAgfVxuICByZXR1cm4gbmV3IFJlZ0V4cCgoY2FyZXQgPT09IGZhbHNlID8gXCJcIiA6IFwiXlwiKSArIFwiKD86XCIgKyB2YWwgKyBcIilcIiwgZmxhZ3MpO1xufVxuXG5mdW5jdGlvbiBhc1Rva2VuKHZhbCkge1xuICBpZiAoIXZhbCkgcmV0dXJuIG51bGw7XG4gIGlmICh2YWwuYXBwbHkpIHJldHVybiB2YWxcbiAgaWYgKHR5cGVvZiB2YWwgPT0gXCJzdHJpbmdcIikgcmV0dXJuIHZhbC5yZXBsYWNlKC9cXC4vZywgXCIgXCIpO1xuICB2YXIgcmVzdWx0ID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdmFsLmxlbmd0aDsgaSsrKVxuICAgIHJlc3VsdC5wdXNoKHZhbFtpXSAmJiB2YWxbaV0ucmVwbGFjZSgvXFwuL2csIFwiIFwiKSk7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIFJ1bGUoZGF0YSwgc3RhdGVzKSB7XG4gIGlmIChkYXRhLm5leHQgfHwgZGF0YS5wdXNoKSBlbnN1cmVTdGF0ZShzdGF0ZXMsIGRhdGEubmV4dCB8fCBkYXRhLnB1c2gpO1xuICB0aGlzLnJlZ2V4ID0gdG9SZWdleChkYXRhLnJlZ2V4KTtcbiAgdGhpcy50b2tlbiA9IGFzVG9rZW4oZGF0YS50b2tlbik7XG4gIHRoaXMuZGF0YSA9IGRhdGE7XG59XG5cbmZ1bmN0aW9uIHRva2VuRnVuY3Rpb24oc3RhdGVzKSB7XG4gIHJldHVybiBmdW5jdGlvbihzdHJlYW0sIHN0YXRlKSB7XG4gICAgaWYgKHN0YXRlLnBlbmRpbmcpIHtcbiAgICAgIHZhciBwZW5kID0gc3RhdGUucGVuZGluZy5zaGlmdCgpO1xuICAgICAgaWYgKHN0YXRlLnBlbmRpbmcubGVuZ3RoID09IDApIHN0YXRlLnBlbmRpbmcgPSBudWxsO1xuICAgICAgc3RyZWFtLnBvcyArPSBwZW5kLnRleHQubGVuZ3RoO1xuICAgICAgcmV0dXJuIHBlbmQudG9rZW47XG4gICAgfVxuXG4gICAgdmFyIGN1clN0YXRlID0gc3RhdGVzW3N0YXRlLnN0YXRlXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGN1clN0YXRlLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgcnVsZSA9IGN1clN0YXRlW2ldO1xuICAgICAgdmFyIG1hdGNoZXMgPSAoIXJ1bGUuZGF0YS5zb2wgfHwgc3RyZWFtLnNvbCgpKSAmJiBzdHJlYW0ubWF0Y2gocnVsZS5yZWdleCk7XG4gICAgICBpZiAobWF0Y2hlcykge1xuICAgICAgICBpZiAocnVsZS5kYXRhLm5leHQpIHtcbiAgICAgICAgICBzdGF0ZS5zdGF0ZSA9IHJ1bGUuZGF0YS5uZXh0O1xuICAgICAgICB9IGVsc2UgaWYgKHJ1bGUuZGF0YS5wdXNoKSB7XG4gICAgICAgICAgKHN0YXRlLnN0YWNrIHx8IChzdGF0ZS5zdGFjayA9IFtdKSkucHVzaChzdGF0ZS5zdGF0ZSk7XG4gICAgICAgICAgc3RhdGUuc3RhdGUgPSBydWxlLmRhdGEucHVzaDtcbiAgICAgICAgfSBlbHNlIGlmIChydWxlLmRhdGEucG9wICYmIHN0YXRlLnN0YWNrICYmIHN0YXRlLnN0YWNrLmxlbmd0aCkge1xuICAgICAgICAgIHN0YXRlLnN0YXRlID0gc3RhdGUuc3RhY2sucG9wKCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAocnVsZS5kYXRhLmluZGVudClcbiAgICAgICAgICBzdGF0ZS5pbmRlbnQucHVzaChzdHJlYW0uaW5kZW50YXRpb24oKSArIHN0cmVhbS5pbmRlbnRVbml0KTtcbiAgICAgICAgaWYgKHJ1bGUuZGF0YS5kZWRlbnQpXG4gICAgICAgICAgc3RhdGUuaW5kZW50LnBvcCgpO1xuICAgICAgICB2YXIgdG9rZW4gPSBydWxlLnRva2VuXG4gICAgICAgIGlmICh0b2tlbiAmJiB0b2tlbi5hcHBseSkgdG9rZW4gPSB0b2tlbihtYXRjaGVzKVxuICAgICAgICBpZiAobWF0Y2hlcy5sZW5ndGggPiAyICYmIHJ1bGUudG9rZW4gJiYgdHlwZW9mIHJ1bGUudG9rZW4gIT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgIHN0YXRlLnBlbmRpbmcgPSBbXTtcbiAgICAgICAgICBmb3IgKHZhciBqID0gMjsgaiA8IG1hdGNoZXMubGVuZ3RoOyBqKyspXG4gICAgICAgICAgICBpZiAobWF0Y2hlc1tqXSlcbiAgICAgICAgICAgICAgc3RhdGUucGVuZGluZy5wdXNoKHt0ZXh0OiBtYXRjaGVzW2pdLCB0b2tlbjogcnVsZS50b2tlbltqIC0gMV19KTtcbiAgICAgICAgICBzdHJlYW0uYmFja1VwKG1hdGNoZXNbMF0ubGVuZ3RoIC0gKG1hdGNoZXNbMV0gPyBtYXRjaGVzWzFdLmxlbmd0aCA6IDApKTtcbiAgICAgICAgICByZXR1cm4gdG9rZW5bMF07XG4gICAgICAgIH0gZWxzZSBpZiAodG9rZW4gJiYgdG9rZW4uam9pbikge1xuICAgICAgICAgIHJldHVybiB0b2tlblswXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gdG9rZW47XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgc3RyZWFtLm5leHQoKTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcbn1cblxuZnVuY3Rpb24gaW5kZW50RnVuY3Rpb24oc3RhdGVzLCBtZXRhKSB7XG4gIHJldHVybiBmdW5jdGlvbihzdGF0ZSwgdGV4dEFmdGVyKSB7XG4gICAgaWYgKHN0YXRlLmluZGVudCA9PSBudWxsIHx8IG1ldGEuZG9udEluZGVudFN0YXRlcyAmJiBtZXRhLmRvbmVJbmRlbnRTdGF0ZS5pbmRleE9mKHN0YXRlLnN0YXRlKSA+IC0xKVxuICAgICAgcmV0dXJuIG51bGxcblxuICAgIHZhciBwb3MgPSBzdGF0ZS5pbmRlbnQubGVuZ3RoIC0gMSwgcnVsZXMgPSBzdGF0ZXNbc3RhdGUuc3RhdGVdO1xuICAgIHNjYW46IGZvciAoOzspIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcnVsZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIHJ1bGUgPSBydWxlc1tpXTtcbiAgICAgICAgaWYgKHJ1bGUuZGF0YS5kZWRlbnQgJiYgcnVsZS5kYXRhLmRlZGVudElmTGluZVN0YXJ0ICE9PSBmYWxzZSkge1xuICAgICAgICAgIHZhciBtID0gcnVsZS5yZWdleC5leGVjKHRleHRBZnRlcik7XG4gICAgICAgICAgaWYgKG0gJiYgbVswXSkge1xuICAgICAgICAgICAgcG9zLS07XG4gICAgICAgICAgICBpZiAocnVsZS5uZXh0IHx8IHJ1bGUucHVzaCkgcnVsZXMgPSBzdGF0ZXNbcnVsZS5uZXh0IHx8IHJ1bGUucHVzaF07XG4gICAgICAgICAgICB0ZXh0QWZ0ZXIgPSB0ZXh0QWZ0ZXIuc2xpY2UobVswXS5sZW5ndGgpO1xuICAgICAgICAgICAgY29udGludWUgc2NhbjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgICByZXR1cm4gcG9zIDwgMCA/IDAgOiBzdGF0ZS5pbmRlbnRbcG9zXTtcbiAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@codemirror/legacy-modes/mode/simple-mode.js\n"));

/***/ })

}]);