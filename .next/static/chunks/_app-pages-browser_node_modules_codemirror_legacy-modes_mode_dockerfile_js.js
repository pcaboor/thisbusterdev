"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_codemirror_legacy-modes_mode_dockerfile_js"],{

/***/ "(app-pages-browser)/./node_modules/@codemirror/legacy-modes/mode/dockerfile.js":
/*!******************************************************************!*\
  !*** ./node_modules/@codemirror/legacy-modes/mode/dockerfile.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dockerFile: function() { return /* binding */ dockerFile; }\n/* harmony export */ });\n/* harmony import */ var _simple_mode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./simple-mode.js */ \"(app-pages-browser)/./node_modules/@codemirror/legacy-modes/mode/simple-mode.js\");\n\n\nvar from = \"from\";\nvar fromRegex = new RegExp(\"^(\\\\s*)\\\\b(\" + from + \")\\\\b\", \"i\");\n\nvar shells = [\"run\", \"cmd\", \"entrypoint\", \"shell\"];\nvar shellsAsArrayRegex = new RegExp(\"^(\\\\s*)(\" + shells.join('|') + \")(\\\\s+\\\\[)\", \"i\");\n\nvar expose = \"expose\";\nvar exposeRegex = new RegExp(\"^(\\\\s*)(\" + expose + \")(\\\\s+)\", \"i\");\n\nvar others = [\n  \"arg\", \"from\", \"maintainer\", \"label\", \"env\",\n  \"add\", \"copy\", \"volume\", \"user\",\n  \"workdir\", \"onbuild\", \"stopsignal\", \"healthcheck\", \"shell\"\n];\n\n// Collect all Dockerfile directives\nvar instructions = [from, expose].concat(shells).concat(others),\n    instructionRegex = \"(\" + instructions.join('|') + \")\",\n    instructionOnlyLine = new RegExp(\"^(\\\\s*)\" + instructionRegex + \"(\\\\s*)(#.*)?$\", \"i\"),\n    instructionWithArguments = new RegExp(\"^(\\\\s*)\" + instructionRegex + \"(\\\\s+)\", \"i\");\n\nconst dockerFile = (0,_simple_mode_js__WEBPACK_IMPORTED_MODULE_0__.simpleMode)({\n  start: [\n    // Block comment: This is a line starting with a comment\n    {\n      regex: /^\\s*#.*$/,\n      sol: true,\n      token: \"comment\"\n    },\n    {\n      regex: fromRegex,\n      token: [null, \"keyword\"],\n      sol: true,\n      next: \"from\"\n    },\n    // Highlight an instruction without any arguments (for convenience)\n    {\n      regex: instructionOnlyLine,\n      token: [null, \"keyword\", null, \"error\"],\n      sol: true\n    },\n    {\n      regex: shellsAsArrayRegex,\n      token: [null, \"keyword\", null],\n      sol: true,\n      next: \"array\"\n    },\n    {\n      regex: exposeRegex,\n      token: [null, \"keyword\", null],\n      sol: true,\n      next: \"expose\"\n    },\n    // Highlight an instruction followed by arguments\n    {\n      regex: instructionWithArguments,\n      token: [null, \"keyword\", null],\n      sol: true,\n      next: \"arguments\"\n    },\n    {\n      regex: /./,\n      token: null\n    }\n  ],\n  from: [\n    {\n      regex: /\\s*$/,\n      token: null,\n      next: \"start\"\n    },\n    {\n      // Line comment without instruction arguments is an error\n      regex: /(\\s*)(#.*)$/,\n      token: [null, \"error\"],\n      next: \"start\"\n    },\n    {\n      regex: /(\\s*\\S+\\s+)(as)/i,\n      token: [null, \"keyword\"],\n      next: \"start\"\n    },\n    // Fail safe return to start\n    {\n      token: null,\n      next: \"start\"\n    }\n  ],\n  single: [\n    {\n      regex: /(?:[^\\\\']|\\\\.)/,\n      token: \"string\"\n    },\n    {\n      regex: /'/,\n      token: \"string\",\n      pop: true\n    }\n  ],\n  double: [\n    {\n      regex: /(?:[^\\\\\"]|\\\\.)/,\n      token: \"string\"\n    },\n    {\n      regex: /\"/,\n      token: \"string\",\n      pop: true\n    }\n  ],\n  array: [\n    {\n      regex: /\\]/,\n      token: null,\n      next: \"start\"\n    },\n    {\n      regex: /\"(?:[^\\\\\"]|\\\\.)*\"?/,\n      token: \"string\"\n    }\n  ],\n  expose: [\n    {\n      regex: /\\d+$/,\n      token: \"number\",\n      next: \"start\"\n    },\n    {\n      regex: /[^\\d]+$/,\n      token: null,\n      next: \"start\"\n    },\n    {\n      regex: /\\d+/,\n      token: \"number\"\n    },\n    {\n      regex: /[^\\d]+/,\n      token: null\n    },\n    // Fail safe return to start\n    {\n      token: null,\n      next: \"start\"\n    }\n  ],\n  arguments: [\n    {\n      regex: /^\\s*#.*$/,\n      sol: true,\n      token: \"comment\"\n    },\n    {\n      regex: /\"(?:[^\\\\\"]|\\\\.)*\"?$/,\n      token: \"string\",\n      next: \"start\"\n    },\n    {\n      regex: /\"/,\n      token: \"string\",\n      push: \"double\"\n    },\n    {\n      regex: /'(?:[^\\\\']|\\\\.)*'?$/,\n      token: \"string\",\n      next: \"start\"\n    },\n    {\n      regex: /'/,\n      token: \"string\",\n      push: \"single\"\n    },\n    {\n      regex: /[^#\"']+[\\\\`]$/,\n      token: null\n    },\n    {\n      regex: /[^#\"']+$/,\n      token: null,\n      next: \"start\"\n    },\n    {\n      regex: /[^#\"']+/,\n      token: null\n    },\n    // Fail safe return to start\n    {\n      token: null,\n      next: \"start\"\n    }\n  ],\n  languageData: {\n    commentTokens: {line: \"#\"}\n  }\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY29kZW1pcnJvci9sZWdhY3ktbW9kZXMvbW9kZS9kb2NrZXJmaWxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTJDOztBQUUzQztBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRU8sbUJBQW1CLDJEQUFVO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY29kZW1pcnJvci9sZWdhY3ktbW9kZXMvbW9kZS9kb2NrZXJmaWxlLmpzPzdmYzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtzaW1wbGVNb2RlfSBmcm9tIFwiLi9zaW1wbGUtbW9kZS5qc1wiXG5cbnZhciBmcm9tID0gXCJmcm9tXCI7XG52YXIgZnJvbVJlZ2V4ID0gbmV3IFJlZ0V4cChcIl4oXFxcXHMqKVxcXFxiKFwiICsgZnJvbSArIFwiKVxcXFxiXCIsIFwiaVwiKTtcblxudmFyIHNoZWxscyA9IFtcInJ1blwiLCBcImNtZFwiLCBcImVudHJ5cG9pbnRcIiwgXCJzaGVsbFwiXTtcbnZhciBzaGVsbHNBc0FycmF5UmVnZXggPSBuZXcgUmVnRXhwKFwiXihcXFxccyopKFwiICsgc2hlbGxzLmpvaW4oJ3wnKSArIFwiKShcXFxccytcXFxcWylcIiwgXCJpXCIpO1xuXG52YXIgZXhwb3NlID0gXCJleHBvc2VcIjtcbnZhciBleHBvc2VSZWdleCA9IG5ldyBSZWdFeHAoXCJeKFxcXFxzKikoXCIgKyBleHBvc2UgKyBcIikoXFxcXHMrKVwiLCBcImlcIik7XG5cbnZhciBvdGhlcnMgPSBbXG4gIFwiYXJnXCIsIFwiZnJvbVwiLCBcIm1haW50YWluZXJcIiwgXCJsYWJlbFwiLCBcImVudlwiLFxuICBcImFkZFwiLCBcImNvcHlcIiwgXCJ2b2x1bWVcIiwgXCJ1c2VyXCIsXG4gIFwid29ya2RpclwiLCBcIm9uYnVpbGRcIiwgXCJzdG9wc2lnbmFsXCIsIFwiaGVhbHRoY2hlY2tcIiwgXCJzaGVsbFwiXG5dO1xuXG4vLyBDb2xsZWN0IGFsbCBEb2NrZXJmaWxlIGRpcmVjdGl2ZXNcbnZhciBpbnN0cnVjdGlvbnMgPSBbZnJvbSwgZXhwb3NlXS5jb25jYXQoc2hlbGxzKS5jb25jYXQob3RoZXJzKSxcbiAgICBpbnN0cnVjdGlvblJlZ2V4ID0gXCIoXCIgKyBpbnN0cnVjdGlvbnMuam9pbignfCcpICsgXCIpXCIsXG4gICAgaW5zdHJ1Y3Rpb25Pbmx5TGluZSA9IG5ldyBSZWdFeHAoXCJeKFxcXFxzKilcIiArIGluc3RydWN0aW9uUmVnZXggKyBcIihcXFxccyopKCMuKik/JFwiLCBcImlcIiksXG4gICAgaW5zdHJ1Y3Rpb25XaXRoQXJndW1lbnRzID0gbmV3IFJlZ0V4cChcIl4oXFxcXHMqKVwiICsgaW5zdHJ1Y3Rpb25SZWdleCArIFwiKFxcXFxzKylcIiwgXCJpXCIpO1xuXG5leHBvcnQgY29uc3QgZG9ja2VyRmlsZSA9IHNpbXBsZU1vZGUoe1xuICBzdGFydDogW1xuICAgIC8vIEJsb2NrIGNvbW1lbnQ6IFRoaXMgaXMgYSBsaW5lIHN0YXJ0aW5nIHdpdGggYSBjb21tZW50XG4gICAge1xuICAgICAgcmVnZXg6IC9eXFxzKiMuKiQvLFxuICAgICAgc29sOiB0cnVlLFxuICAgICAgdG9rZW46IFwiY29tbWVudFwiXG4gICAgfSxcbiAgICB7XG4gICAgICByZWdleDogZnJvbVJlZ2V4LFxuICAgICAgdG9rZW46IFtudWxsLCBcImtleXdvcmRcIl0sXG4gICAgICBzb2w6IHRydWUsXG4gICAgICBuZXh0OiBcImZyb21cIlxuICAgIH0sXG4gICAgLy8gSGlnaGxpZ2h0IGFuIGluc3RydWN0aW9uIHdpdGhvdXQgYW55IGFyZ3VtZW50cyAoZm9yIGNvbnZlbmllbmNlKVxuICAgIHtcbiAgICAgIHJlZ2V4OiBpbnN0cnVjdGlvbk9ubHlMaW5lLFxuICAgICAgdG9rZW46IFtudWxsLCBcImtleXdvcmRcIiwgbnVsbCwgXCJlcnJvclwiXSxcbiAgICAgIHNvbDogdHJ1ZVxuICAgIH0sXG4gICAge1xuICAgICAgcmVnZXg6IHNoZWxsc0FzQXJyYXlSZWdleCxcbiAgICAgIHRva2VuOiBbbnVsbCwgXCJrZXl3b3JkXCIsIG51bGxdLFxuICAgICAgc29sOiB0cnVlLFxuICAgICAgbmV4dDogXCJhcnJheVwiXG4gICAgfSxcbiAgICB7XG4gICAgICByZWdleDogZXhwb3NlUmVnZXgsXG4gICAgICB0b2tlbjogW251bGwsIFwia2V5d29yZFwiLCBudWxsXSxcbiAgICAgIHNvbDogdHJ1ZSxcbiAgICAgIG5leHQ6IFwiZXhwb3NlXCJcbiAgICB9LFxuICAgIC8vIEhpZ2hsaWdodCBhbiBpbnN0cnVjdGlvbiBmb2xsb3dlZCBieSBhcmd1bWVudHNcbiAgICB7XG4gICAgICByZWdleDogaW5zdHJ1Y3Rpb25XaXRoQXJndW1lbnRzLFxuICAgICAgdG9rZW46IFtudWxsLCBcImtleXdvcmRcIiwgbnVsbF0sXG4gICAgICBzb2w6IHRydWUsXG4gICAgICBuZXh0OiBcImFyZ3VtZW50c1wiXG4gICAgfSxcbiAgICB7XG4gICAgICByZWdleDogLy4vLFxuICAgICAgdG9rZW46IG51bGxcbiAgICB9XG4gIF0sXG4gIGZyb206IFtcbiAgICB7XG4gICAgICByZWdleDogL1xccyokLyxcbiAgICAgIHRva2VuOiBudWxsLFxuICAgICAgbmV4dDogXCJzdGFydFwiXG4gICAgfSxcbiAgICB7XG4gICAgICAvLyBMaW5lIGNvbW1lbnQgd2l0aG91dCBpbnN0cnVjdGlvbiBhcmd1bWVudHMgaXMgYW4gZXJyb3JcbiAgICAgIHJlZ2V4OiAvKFxccyopKCMuKikkLyxcbiAgICAgIHRva2VuOiBbbnVsbCwgXCJlcnJvclwiXSxcbiAgICAgIG5leHQ6IFwic3RhcnRcIlxuICAgIH0sXG4gICAge1xuICAgICAgcmVnZXg6IC8oXFxzKlxcUytcXHMrKShhcykvaSxcbiAgICAgIHRva2VuOiBbbnVsbCwgXCJrZXl3b3JkXCJdLFxuICAgICAgbmV4dDogXCJzdGFydFwiXG4gICAgfSxcbiAgICAvLyBGYWlsIHNhZmUgcmV0dXJuIHRvIHN0YXJ0XG4gICAge1xuICAgICAgdG9rZW46IG51bGwsXG4gICAgICBuZXh0OiBcInN0YXJ0XCJcbiAgICB9XG4gIF0sXG4gIHNpbmdsZTogW1xuICAgIHtcbiAgICAgIHJlZ2V4OiAvKD86W15cXFxcJ118XFxcXC4pLyxcbiAgICAgIHRva2VuOiBcInN0cmluZ1wiXG4gICAgfSxcbiAgICB7XG4gICAgICByZWdleDogLycvLFxuICAgICAgdG9rZW46IFwic3RyaW5nXCIsXG4gICAgICBwb3A6IHRydWVcbiAgICB9XG4gIF0sXG4gIGRvdWJsZTogW1xuICAgIHtcbiAgICAgIHJlZ2V4OiAvKD86W15cXFxcXCJdfFxcXFwuKS8sXG4gICAgICB0b2tlbjogXCJzdHJpbmdcIlxuICAgIH0sXG4gICAge1xuICAgICAgcmVnZXg6IC9cIi8sXG4gICAgICB0b2tlbjogXCJzdHJpbmdcIixcbiAgICAgIHBvcDogdHJ1ZVxuICAgIH1cbiAgXSxcbiAgYXJyYXk6IFtcbiAgICB7XG4gICAgICByZWdleDogL1xcXS8sXG4gICAgICB0b2tlbjogbnVsbCxcbiAgICAgIG5leHQ6IFwic3RhcnRcIlxuICAgIH0sXG4gICAge1xuICAgICAgcmVnZXg6IC9cIig/OlteXFxcXFwiXXxcXFxcLikqXCI/LyxcbiAgICAgIHRva2VuOiBcInN0cmluZ1wiXG4gICAgfVxuICBdLFxuICBleHBvc2U6IFtcbiAgICB7XG4gICAgICByZWdleDogL1xcZCskLyxcbiAgICAgIHRva2VuOiBcIm51bWJlclwiLFxuICAgICAgbmV4dDogXCJzdGFydFwiXG4gICAgfSxcbiAgICB7XG4gICAgICByZWdleDogL1teXFxkXSskLyxcbiAgICAgIHRva2VuOiBudWxsLFxuICAgICAgbmV4dDogXCJzdGFydFwiXG4gICAgfSxcbiAgICB7XG4gICAgICByZWdleDogL1xcZCsvLFxuICAgICAgdG9rZW46IFwibnVtYmVyXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIHJlZ2V4OiAvW15cXGRdKy8sXG4gICAgICB0b2tlbjogbnVsbFxuICAgIH0sXG4gICAgLy8gRmFpbCBzYWZlIHJldHVybiB0byBzdGFydFxuICAgIHtcbiAgICAgIHRva2VuOiBudWxsLFxuICAgICAgbmV4dDogXCJzdGFydFwiXG4gICAgfVxuICBdLFxuICBhcmd1bWVudHM6IFtcbiAgICB7XG4gICAgICByZWdleDogL15cXHMqIy4qJC8sXG4gICAgICBzb2w6IHRydWUsXG4gICAgICB0b2tlbjogXCJjb21tZW50XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIHJlZ2V4OiAvXCIoPzpbXlxcXFxcIl18XFxcXC4pKlwiPyQvLFxuICAgICAgdG9rZW46IFwic3RyaW5nXCIsXG4gICAgICBuZXh0OiBcInN0YXJ0XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIHJlZ2V4OiAvXCIvLFxuICAgICAgdG9rZW46IFwic3RyaW5nXCIsXG4gICAgICBwdXNoOiBcImRvdWJsZVwiXG4gICAgfSxcbiAgICB7XG4gICAgICByZWdleDogLycoPzpbXlxcXFwnXXxcXFxcLikqJz8kLyxcbiAgICAgIHRva2VuOiBcInN0cmluZ1wiLFxuICAgICAgbmV4dDogXCJzdGFydFwiXG4gICAgfSxcbiAgICB7XG4gICAgICByZWdleDogLycvLFxuICAgICAgdG9rZW46IFwic3RyaW5nXCIsXG4gICAgICBwdXNoOiBcInNpbmdsZVwiXG4gICAgfSxcbiAgICB7XG4gICAgICByZWdleDogL1teI1wiJ10rW1xcXFxgXSQvLFxuICAgICAgdG9rZW46IG51bGxcbiAgICB9LFxuICAgIHtcbiAgICAgIHJlZ2V4OiAvW14jXCInXSskLyxcbiAgICAgIHRva2VuOiBudWxsLFxuICAgICAgbmV4dDogXCJzdGFydFwiXG4gICAgfSxcbiAgICB7XG4gICAgICByZWdleDogL1teI1wiJ10rLyxcbiAgICAgIHRva2VuOiBudWxsXG4gICAgfSxcbiAgICAvLyBGYWlsIHNhZmUgcmV0dXJuIHRvIHN0YXJ0XG4gICAge1xuICAgICAgdG9rZW46IG51bGwsXG4gICAgICBuZXh0OiBcInN0YXJ0XCJcbiAgICB9XG4gIF0sXG4gIGxhbmd1YWdlRGF0YToge1xuICAgIGNvbW1lbnRUb2tlbnM6IHtsaW5lOiBcIiNcIn1cbiAgfVxufSk7XG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@codemirror/legacy-modes/mode/dockerfile.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@codemirror/legacy-modes/mode/simple-mode.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@codemirror/legacy-modes/mode/simple-mode.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   simpleMode: function() { return /* binding */ simpleMode; }\n/* harmony export */ });\nfunction simpleMode(states) {\n  ensureState(states, \"start\");\n  var states_ = {}, meta = states.languageData || {}, hasIndentation = false;\n  for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n    var list = states_[state] = [], orig = states[state];\n    for (var i = 0; i < orig.length; i++) {\n      var data = orig[i];\n      list.push(new Rule(data, states));\n      if (data.indent || data.dedent) hasIndentation = true;\n    }\n  }\n  return {\n    name: meta.name,\n    startState: function() {\n      return {state: \"start\", pending: null, indent: hasIndentation ? [] : null};\n    },\n    copyState: function(state) {\n      var s = {state: state.state, pending: state.pending, indent: state.indent && state.indent.slice(0)};\n      if (state.stack)\n        s.stack = state.stack.slice(0);\n      return s;\n    },\n    token: tokenFunction(states_),\n    indent: indentFunction(states_, meta),\n    languageData: meta\n  }\n};\n\nfunction ensureState(states, name) {\n  if (!states.hasOwnProperty(name))\n    throw new Error(\"Undefined state \" + name + \" in simple mode\");\n}\n\nfunction toRegex(val, caret) {\n  if (!val) return /(?:)/;\n  var flags = \"\";\n  if (val instanceof RegExp) {\n    if (val.ignoreCase) flags = \"i\";\n    val = val.source;\n  } else {\n    val = String(val);\n  }\n  return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n}\n\nfunction asToken(val) {\n  if (!val) return null;\n  if (val.apply) return val\n  if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n  var result = [];\n  for (var i = 0; i < val.length; i++)\n    result.push(val[i] && val[i].replace(/\\./g, \" \"));\n  return result;\n}\n\nfunction Rule(data, states) {\n  if (data.next || data.push) ensureState(states, data.next || data.push);\n  this.regex = toRegex(data.regex);\n  this.token = asToken(data.token);\n  this.data = data;\n}\n\nfunction tokenFunction(states) {\n  return function(stream, state) {\n    if (state.pending) {\n      var pend = state.pending.shift();\n      if (state.pending.length == 0) state.pending = null;\n      stream.pos += pend.text.length;\n      return pend.token;\n    }\n\n    var curState = states[state.state];\n    for (var i = 0; i < curState.length; i++) {\n      var rule = curState[i];\n      var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n      if (matches) {\n        if (rule.data.next) {\n          state.state = rule.data.next;\n        } else if (rule.data.push) {\n          (state.stack || (state.stack = [])).push(state.state);\n          state.state = rule.data.push;\n        } else if (rule.data.pop && state.stack && state.stack.length) {\n          state.state = state.stack.pop();\n        }\n\n        if (rule.data.indent)\n          state.indent.push(stream.indentation() + stream.indentUnit);\n        if (rule.data.dedent)\n          state.indent.pop();\n        var token = rule.token\n        if (token && token.apply) token = token(matches)\n        if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n          state.pending = [];\n          for (var j = 2; j < matches.length; j++)\n            if (matches[j])\n              state.pending.push({text: matches[j], token: rule.token[j - 1]});\n          stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n          return token[0];\n        } else if (token && token.join) {\n          return token[0];\n        } else {\n          return token;\n        }\n      }\n    }\n    stream.next();\n    return null;\n  };\n}\n\nfunction indentFunction(states, meta) {\n  return function(state, textAfter) {\n    if (state.indent == null || meta.dontIndentStates && meta.doneIndentState.indexOf(state.state) > -1)\n      return null\n\n    var pos = state.indent.length - 1, rules = states[state.state];\n    scan: for (;;) {\n      for (var i = 0; i < rules.length; i++) {\n        var rule = rules[i];\n        if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n          var m = rule.regex.exec(textAfter);\n          if (m && m[0]) {\n            pos--;\n            if (rule.next || rule.push) rules = states[rule.next || rule.push];\n            textAfter = textAfter.slice(m[0].length);\n            continue scan;\n          }\n        }\n      }\n      break;\n    }\n    return pos < 0 ? 0 : state.indent[pos];\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY29kZW1pcnJvci9sZWdhY3ktbW9kZXMvbW9kZS9zaW1wbGUtbW9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBLGtCQUFrQixrQ0FBa0M7QUFDcEQ7QUFDQTtBQUNBLG9CQUFvQixpQkFBaUI7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxLQUFLO0FBQ0w7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsZ0JBQWdCO0FBQ2xDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG9CQUFvQixxQkFBcUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixvQkFBb0I7QUFDOUM7QUFDQSxrQ0FBa0MsMkNBQTJDO0FBQzdFO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlCQUFpQjtBQUNqQixzQkFBc0Isa0JBQWtCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AY29kZW1pcnJvci9sZWdhY3ktbW9kZXMvbW9kZS9zaW1wbGUtbW9kZS5qcz8zYjVmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBzaW1wbGVNb2RlKHN0YXRlcykge1xuICBlbnN1cmVTdGF0ZShzdGF0ZXMsIFwic3RhcnRcIik7XG4gIHZhciBzdGF0ZXNfID0ge30sIG1ldGEgPSBzdGF0ZXMubGFuZ3VhZ2VEYXRhIHx8IHt9LCBoYXNJbmRlbnRhdGlvbiA9IGZhbHNlO1xuICBmb3IgKHZhciBzdGF0ZSBpbiBzdGF0ZXMpIGlmIChzdGF0ZSAhPSBtZXRhICYmIHN0YXRlcy5oYXNPd25Qcm9wZXJ0eShzdGF0ZSkpIHtcbiAgICB2YXIgbGlzdCA9IHN0YXRlc19bc3RhdGVdID0gW10sIG9yaWcgPSBzdGF0ZXNbc3RhdGVdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgb3JpZy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGRhdGEgPSBvcmlnW2ldO1xuICAgICAgbGlzdC5wdXNoKG5ldyBSdWxlKGRhdGEsIHN0YXRlcykpO1xuICAgICAgaWYgKGRhdGEuaW5kZW50IHx8IGRhdGEuZGVkZW50KSBoYXNJbmRlbnRhdGlvbiA9IHRydWU7XG4gICAgfVxuICB9XG4gIHJldHVybiB7XG4gICAgbmFtZTogbWV0YS5uYW1lLFxuICAgIHN0YXJ0U3RhdGU6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHtzdGF0ZTogXCJzdGFydFwiLCBwZW5kaW5nOiBudWxsLCBpbmRlbnQ6IGhhc0luZGVudGF0aW9uID8gW10gOiBudWxsfTtcbiAgICB9LFxuICAgIGNvcHlTdGF0ZTogZnVuY3Rpb24oc3RhdGUpIHtcbiAgICAgIHZhciBzID0ge3N0YXRlOiBzdGF0ZS5zdGF0ZSwgcGVuZGluZzogc3RhdGUucGVuZGluZywgaW5kZW50OiBzdGF0ZS5pbmRlbnQgJiYgc3RhdGUuaW5kZW50LnNsaWNlKDApfTtcbiAgICAgIGlmIChzdGF0ZS5zdGFjaylcbiAgICAgICAgcy5zdGFjayA9IHN0YXRlLnN0YWNrLnNsaWNlKDApO1xuICAgICAgcmV0dXJuIHM7XG4gICAgfSxcbiAgICB0b2tlbjogdG9rZW5GdW5jdGlvbihzdGF0ZXNfKSxcbiAgICBpbmRlbnQ6IGluZGVudEZ1bmN0aW9uKHN0YXRlc18sIG1ldGEpLFxuICAgIGxhbmd1YWdlRGF0YTogbWV0YVxuICB9XG59O1xuXG5mdW5jdGlvbiBlbnN1cmVTdGF0ZShzdGF0ZXMsIG5hbWUpIHtcbiAgaWYgKCFzdGF0ZXMuaGFzT3duUHJvcGVydHkobmFtZSkpXG4gICAgdGhyb3cgbmV3IEVycm9yKFwiVW5kZWZpbmVkIHN0YXRlIFwiICsgbmFtZSArIFwiIGluIHNpbXBsZSBtb2RlXCIpO1xufVxuXG5mdW5jdGlvbiB0b1JlZ2V4KHZhbCwgY2FyZXQpIHtcbiAgaWYgKCF2YWwpIHJldHVybiAvKD86KS87XG4gIHZhciBmbGFncyA9IFwiXCI7XG4gIGlmICh2YWwgaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICBpZiAodmFsLmlnbm9yZUNhc2UpIGZsYWdzID0gXCJpXCI7XG4gICAgdmFsID0gdmFsLnNvdXJjZTtcbiAgfSBlbHNlIHtcbiAgICB2YWwgPSBTdHJpbmcodmFsKTtcbiAgfVxuICByZXR1cm4gbmV3IFJlZ0V4cCgoY2FyZXQgPT09IGZhbHNlID8gXCJcIiA6IFwiXlwiKSArIFwiKD86XCIgKyB2YWwgKyBcIilcIiwgZmxhZ3MpO1xufVxuXG5mdW5jdGlvbiBhc1Rva2VuKHZhbCkge1xuICBpZiAoIXZhbCkgcmV0dXJuIG51bGw7XG4gIGlmICh2YWwuYXBwbHkpIHJldHVybiB2YWxcbiAgaWYgKHR5cGVvZiB2YWwgPT0gXCJzdHJpbmdcIikgcmV0dXJuIHZhbC5yZXBsYWNlKC9cXC4vZywgXCIgXCIpO1xuICB2YXIgcmVzdWx0ID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdmFsLmxlbmd0aDsgaSsrKVxuICAgIHJlc3VsdC5wdXNoKHZhbFtpXSAmJiB2YWxbaV0ucmVwbGFjZSgvXFwuL2csIFwiIFwiKSk7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIFJ1bGUoZGF0YSwgc3RhdGVzKSB7XG4gIGlmIChkYXRhLm5leHQgfHwgZGF0YS5wdXNoKSBlbnN1cmVTdGF0ZShzdGF0ZXMsIGRhdGEubmV4dCB8fCBkYXRhLnB1c2gpO1xuICB0aGlzLnJlZ2V4ID0gdG9SZWdleChkYXRhLnJlZ2V4KTtcbiAgdGhpcy50b2tlbiA9IGFzVG9rZW4oZGF0YS50b2tlbik7XG4gIHRoaXMuZGF0YSA9IGRhdGE7XG59XG5cbmZ1bmN0aW9uIHRva2VuRnVuY3Rpb24oc3RhdGVzKSB7XG4gIHJldHVybiBmdW5jdGlvbihzdHJlYW0sIHN0YXRlKSB7XG4gICAgaWYgKHN0YXRlLnBlbmRpbmcpIHtcbiAgICAgIHZhciBwZW5kID0gc3RhdGUucGVuZGluZy5zaGlmdCgpO1xuICAgICAgaWYgKHN0YXRlLnBlbmRpbmcubGVuZ3RoID09IDApIHN0YXRlLnBlbmRpbmcgPSBudWxsO1xuICAgICAgc3RyZWFtLnBvcyArPSBwZW5kLnRleHQubGVuZ3RoO1xuICAgICAgcmV0dXJuIHBlbmQudG9rZW47XG4gICAgfVxuXG4gICAgdmFyIGN1clN0YXRlID0gc3RhdGVzW3N0YXRlLnN0YXRlXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGN1clN0YXRlLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgcnVsZSA9IGN1clN0YXRlW2ldO1xuICAgICAgdmFyIG1hdGNoZXMgPSAoIXJ1bGUuZGF0YS5zb2wgfHwgc3RyZWFtLnNvbCgpKSAmJiBzdHJlYW0ubWF0Y2gocnVsZS5yZWdleCk7XG4gICAgICBpZiAobWF0Y2hlcykge1xuICAgICAgICBpZiAocnVsZS5kYXRhLm5leHQpIHtcbiAgICAgICAgICBzdGF0ZS5zdGF0ZSA9IHJ1bGUuZGF0YS5uZXh0O1xuICAgICAgICB9IGVsc2UgaWYgKHJ1bGUuZGF0YS5wdXNoKSB7XG4gICAgICAgICAgKHN0YXRlLnN0YWNrIHx8IChzdGF0ZS5zdGFjayA9IFtdKSkucHVzaChzdGF0ZS5zdGF0ZSk7XG4gICAgICAgICAgc3RhdGUuc3RhdGUgPSBydWxlLmRhdGEucHVzaDtcbiAgICAgICAgfSBlbHNlIGlmIChydWxlLmRhdGEucG9wICYmIHN0YXRlLnN0YWNrICYmIHN0YXRlLnN0YWNrLmxlbmd0aCkge1xuICAgICAgICAgIHN0YXRlLnN0YXRlID0gc3RhdGUuc3RhY2sucG9wKCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAocnVsZS5kYXRhLmluZGVudClcbiAgICAgICAgICBzdGF0ZS5pbmRlbnQucHVzaChzdHJlYW0uaW5kZW50YXRpb24oKSArIHN0cmVhbS5pbmRlbnRVbml0KTtcbiAgICAgICAgaWYgKHJ1bGUuZGF0YS5kZWRlbnQpXG4gICAgICAgICAgc3RhdGUuaW5kZW50LnBvcCgpO1xuICAgICAgICB2YXIgdG9rZW4gPSBydWxlLnRva2VuXG4gICAgICAgIGlmICh0b2tlbiAmJiB0b2tlbi5hcHBseSkgdG9rZW4gPSB0b2tlbihtYXRjaGVzKVxuICAgICAgICBpZiAobWF0Y2hlcy5sZW5ndGggPiAyICYmIHJ1bGUudG9rZW4gJiYgdHlwZW9mIHJ1bGUudG9rZW4gIT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgIHN0YXRlLnBlbmRpbmcgPSBbXTtcbiAgICAgICAgICBmb3IgKHZhciBqID0gMjsgaiA8IG1hdGNoZXMubGVuZ3RoOyBqKyspXG4gICAgICAgICAgICBpZiAobWF0Y2hlc1tqXSlcbiAgICAgICAgICAgICAgc3RhdGUucGVuZGluZy5wdXNoKHt0ZXh0OiBtYXRjaGVzW2pdLCB0b2tlbjogcnVsZS50b2tlbltqIC0gMV19KTtcbiAgICAgICAgICBzdHJlYW0uYmFja1VwKG1hdGNoZXNbMF0ubGVuZ3RoIC0gKG1hdGNoZXNbMV0gPyBtYXRjaGVzWzFdLmxlbmd0aCA6IDApKTtcbiAgICAgICAgICByZXR1cm4gdG9rZW5bMF07XG4gICAgICAgIH0gZWxzZSBpZiAodG9rZW4gJiYgdG9rZW4uam9pbikge1xuICAgICAgICAgIHJldHVybiB0b2tlblswXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gdG9rZW47XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgc3RyZWFtLm5leHQoKTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcbn1cblxuZnVuY3Rpb24gaW5kZW50RnVuY3Rpb24oc3RhdGVzLCBtZXRhKSB7XG4gIHJldHVybiBmdW5jdGlvbihzdGF0ZSwgdGV4dEFmdGVyKSB7XG4gICAgaWYgKHN0YXRlLmluZGVudCA9PSBudWxsIHx8IG1ldGEuZG9udEluZGVudFN0YXRlcyAmJiBtZXRhLmRvbmVJbmRlbnRTdGF0ZS5pbmRleE9mKHN0YXRlLnN0YXRlKSA+IC0xKVxuICAgICAgcmV0dXJuIG51bGxcblxuICAgIHZhciBwb3MgPSBzdGF0ZS5pbmRlbnQubGVuZ3RoIC0gMSwgcnVsZXMgPSBzdGF0ZXNbc3RhdGUuc3RhdGVdO1xuICAgIHNjYW46IGZvciAoOzspIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcnVsZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIHJ1bGUgPSBydWxlc1tpXTtcbiAgICAgICAgaWYgKHJ1bGUuZGF0YS5kZWRlbnQgJiYgcnVsZS5kYXRhLmRlZGVudElmTGluZVN0YXJ0ICE9PSBmYWxzZSkge1xuICAgICAgICAgIHZhciBtID0gcnVsZS5yZWdleC5leGVjKHRleHRBZnRlcik7XG4gICAgICAgICAgaWYgKG0gJiYgbVswXSkge1xuICAgICAgICAgICAgcG9zLS07XG4gICAgICAgICAgICBpZiAocnVsZS5uZXh0IHx8IHJ1bGUucHVzaCkgcnVsZXMgPSBzdGF0ZXNbcnVsZS5uZXh0IHx8IHJ1bGUucHVzaF07XG4gICAgICAgICAgICB0ZXh0QWZ0ZXIgPSB0ZXh0QWZ0ZXIuc2xpY2UobVswXS5sZW5ndGgpO1xuICAgICAgICAgICAgY29udGludWUgc2NhbjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgICByZXR1cm4gcG9zIDwgMCA/IDAgOiBzdGF0ZS5pbmRlbnRbcG9zXTtcbiAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@codemirror/legacy-modes/mode/simple-mode.js\n"));

/***/ })

}]);