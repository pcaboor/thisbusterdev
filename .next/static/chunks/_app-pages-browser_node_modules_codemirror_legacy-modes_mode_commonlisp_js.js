"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_codemirror_legacy-modes_mode_commonlisp_js"],{

/***/ "(app-pages-browser)/./node_modules/@codemirror/legacy-modes/mode/commonlisp.js":
/*!******************************************************************!*\
  !*** ./node_modules/@codemirror/legacy-modes/mode/commonlisp.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   commonLisp: function() { return /* binding */ commonLisp; }\n/* harmony export */ });\nvar specialForm = /^(block|let*|return-from|catch|load-time-value|setq|eval-when|locally|symbol-macrolet|flet|macrolet|tagbody|function|multiple-value-call|the|go|multiple-value-prog1|throw|if|progn|unwind-protect|labels|progv|let|quote)$/;\nvar assumeBody = /^with|^def|^do|^prog|case$|^cond$|bind$|when$|unless$/;\nvar numLiteral = /^(?:[+\\-]?(?:\\d+|\\d*\\.\\d+)(?:[efd][+\\-]?\\d+)?|[+\\-]?\\d+(?:\\/[+\\-]?\\d+)?|#b[+\\-]?[01]+|#o[+\\-]?[0-7]+|#x[+\\-]?[\\da-f]+)/;\nvar symbol = /[^\\s'`,@()\\[\\]\";]/;\nvar type;\n\nfunction readSym(stream) {\n  var ch;\n  while (ch = stream.next()) {\n    if (ch == \"\\\\\") stream.next();\n    else if (!symbol.test(ch)) { stream.backUp(1); break; }\n  }\n  return stream.current();\n}\n\nfunction base(stream, state) {\n  if (stream.eatSpace()) {type = \"ws\"; return null;}\n  if (stream.match(numLiteral)) return \"number\";\n  var ch = stream.next();\n  if (ch == \"\\\\\") ch = stream.next();\n\n  if (ch == '\"') return (state.tokenize = inString)(stream, state);\n  else if (ch == \"(\") { type = \"open\"; return \"bracket\"; }\n  else if (ch == \")\") { type = \"close\"; return \"bracket\"; }\n  else if (ch == \";\") { stream.skipToEnd(); type = \"ws\"; return \"comment\"; }\n  else if (/['`,@]/.test(ch)) return null;\n  else if (ch == \"|\") {\n    if (stream.skipTo(\"|\")) { stream.next(); return \"variableName\"; }\n    else { stream.skipToEnd(); return \"error\"; }\n  } else if (ch == \"#\") {\n    var ch = stream.next();\n    if (ch == \"(\") { type = \"open\"; return \"bracket\"; }\n    else if (/[+\\-=\\.']/.test(ch)) return null;\n    else if (/\\d/.test(ch) && stream.match(/^\\d*#/)) return null;\n    else if (ch == \"|\") return (state.tokenize = inComment)(stream, state);\n    else if (ch == \":\") { readSym(stream); return \"meta\"; }\n    else if (ch == \"\\\\\") { stream.next(); readSym(stream); return \"string.special\" }\n    else return \"error\";\n  } else {\n    var name = readSym(stream);\n    if (name == \".\") return null;\n    type = \"symbol\";\n    if (name == \"nil\" || name == \"t\" || name.charAt(0) == \":\") return \"atom\";\n    if (state.lastType == \"open\" && (specialForm.test(name) || assumeBody.test(name))) return \"keyword\";\n    if (name.charAt(0) == \"&\") return \"variableName.special\";\n    return \"variableName\";\n  }\n}\n\nfunction inString(stream, state) {\n  var escaped = false, next;\n  while (next = stream.next()) {\n    if (next == '\"' && !escaped) { state.tokenize = base; break; }\n    escaped = !escaped && next == \"\\\\\";\n  }\n  return \"string\";\n}\n\nfunction inComment(stream, state) {\n  var next, last;\n  while (next = stream.next()) {\n    if (next == \"#\" && last == \"|\") { state.tokenize = base; break; }\n    last = next;\n  }\n  type = \"ws\";\n  return \"comment\";\n}\n\nconst commonLisp = {\n  name: \"commonlisp\",\n  startState: function () {\n    return {ctx: {prev: null, start: 0, indentTo: 0}, lastType: null, tokenize: base};\n  },\n\n  token: function (stream, state) {\n    if (stream.sol() && typeof state.ctx.indentTo != \"number\")\n      state.ctx.indentTo = state.ctx.start + 1;\n\n    type = null;\n    var style = state.tokenize(stream, state);\n    if (type != \"ws\") {\n      if (state.ctx.indentTo == null) {\n        if (type == \"symbol\" && assumeBody.test(stream.current()))\n          state.ctx.indentTo = state.ctx.start + stream.indentUnit;\n        else\n          state.ctx.indentTo = \"next\";\n      } else if (state.ctx.indentTo == \"next\") {\n        state.ctx.indentTo = stream.column();\n      }\n      state.lastType = type;\n    }\n    if (type == \"open\") state.ctx = {prev: state.ctx, start: stream.column(), indentTo: null};\n    else if (type == \"close\") state.ctx = state.ctx.prev || state.ctx;\n    return style;\n  },\n\n  indent: function (state) {\n    var i = state.ctx.indentTo;\n    return typeof i == \"number\" ? i : state.ctx.start + 1;\n  },\n\n  languageData: {\n    commentTokens: {line: \";;\", block: {open: \"#|\", close: \"|#\"}},\n    closeBrackets: {brackets: [\"(\", \"[\", \"{\", '\"']}\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AY29kZW1pcnJvci9sZWdhY3ktbW9kZXMvbW9kZS9jb21tb25saXNwLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsa0JBQWtCO0FBQ25EO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQixhQUFhO0FBQ3ZDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHdCQUF3QixlQUFlO0FBQ3ZDLHdCQUF3QixnQkFBZ0I7QUFDeEMsbUJBQW1CLEtBQUssb0JBQW9CLGFBQWE7QUFDekQ7QUFDQTtBQUNBLDhCQUE4QixlQUFlO0FBQzdDLFdBQVcsb0JBQW9CO0FBQy9CLElBQUk7QUFDSjtBQUNBLHFCQUFxQixlQUFlO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixpQkFBaUI7QUFDM0MsMkJBQTJCLGVBQWUsaUJBQWlCO0FBQzNEO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsdUJBQXVCO0FBQzFEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyx1QkFBdUI7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQSxZQUFZLE1BQU0sa0NBQWtDO0FBQ3BELEdBQUc7O0FBRUg7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLG9CQUFvQixTQUFTLFdBQVcseUJBQXlCO0FBQ2pFLG9CQUFvQix1QkFBdUI7QUFDM0M7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNvZGVtaXJyb3IvbGVnYWN5LW1vZGVzL21vZGUvY29tbW9ubGlzcC5qcz8xNzNmIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBzcGVjaWFsRm9ybSA9IC9eKGJsb2NrfGxldCp8cmV0dXJuLWZyb218Y2F0Y2h8bG9hZC10aW1lLXZhbHVlfHNldHF8ZXZhbC13aGVufGxvY2FsbHl8c3ltYm9sLW1hY3JvbGV0fGZsZXR8bWFjcm9sZXR8dGFnYm9keXxmdW5jdGlvbnxtdWx0aXBsZS12YWx1ZS1jYWxsfHRoZXxnb3xtdWx0aXBsZS12YWx1ZS1wcm9nMXx0aHJvd3xpZnxwcm9nbnx1bndpbmQtcHJvdGVjdHxsYWJlbHN8cHJvZ3Z8bGV0fHF1b3RlKSQvO1xudmFyIGFzc3VtZUJvZHkgPSAvXndpdGh8XmRlZnxeZG98XnByb2d8Y2FzZSR8XmNvbmQkfGJpbmQkfHdoZW4kfHVubGVzcyQvO1xudmFyIG51bUxpdGVyYWwgPSAvXig/OlsrXFwtXT8oPzpcXGQrfFxcZCpcXC5cXGQrKSg/OltlZmRdWytcXC1dP1xcZCspP3xbK1xcLV0/XFxkKyg/OlxcL1srXFwtXT9cXGQrKT98I2JbK1xcLV0/WzAxXSt8I29bK1xcLV0/WzAtN10rfCN4WytcXC1dP1tcXGRhLWZdKykvO1xudmFyIHN5bWJvbCA9IC9bXlxccydgLEAoKVxcW1xcXVwiO10vO1xudmFyIHR5cGU7XG5cbmZ1bmN0aW9uIHJlYWRTeW0oc3RyZWFtKSB7XG4gIHZhciBjaDtcbiAgd2hpbGUgKGNoID0gc3RyZWFtLm5leHQoKSkge1xuICAgIGlmIChjaCA9PSBcIlxcXFxcIikgc3RyZWFtLm5leHQoKTtcbiAgICBlbHNlIGlmICghc3ltYm9sLnRlc3QoY2gpKSB7IHN0cmVhbS5iYWNrVXAoMSk7IGJyZWFrOyB9XG4gIH1cbiAgcmV0dXJuIHN0cmVhbS5jdXJyZW50KCk7XG59XG5cbmZ1bmN0aW9uIGJhc2Uoc3RyZWFtLCBzdGF0ZSkge1xuICBpZiAoc3RyZWFtLmVhdFNwYWNlKCkpIHt0eXBlID0gXCJ3c1wiOyByZXR1cm4gbnVsbDt9XG4gIGlmIChzdHJlYW0ubWF0Y2gobnVtTGl0ZXJhbCkpIHJldHVybiBcIm51bWJlclwiO1xuICB2YXIgY2ggPSBzdHJlYW0ubmV4dCgpO1xuICBpZiAoY2ggPT0gXCJcXFxcXCIpIGNoID0gc3RyZWFtLm5leHQoKTtcblxuICBpZiAoY2ggPT0gJ1wiJykgcmV0dXJuIChzdGF0ZS50b2tlbml6ZSA9IGluU3RyaW5nKShzdHJlYW0sIHN0YXRlKTtcbiAgZWxzZSBpZiAoY2ggPT0gXCIoXCIpIHsgdHlwZSA9IFwib3BlblwiOyByZXR1cm4gXCJicmFja2V0XCI7IH1cbiAgZWxzZSBpZiAoY2ggPT0gXCIpXCIpIHsgdHlwZSA9IFwiY2xvc2VcIjsgcmV0dXJuIFwiYnJhY2tldFwiOyB9XG4gIGVsc2UgaWYgKGNoID09IFwiO1wiKSB7IHN0cmVhbS5za2lwVG9FbmQoKTsgdHlwZSA9IFwid3NcIjsgcmV0dXJuIFwiY29tbWVudFwiOyB9XG4gIGVsc2UgaWYgKC9bJ2AsQF0vLnRlc3QoY2gpKSByZXR1cm4gbnVsbDtcbiAgZWxzZSBpZiAoY2ggPT0gXCJ8XCIpIHtcbiAgICBpZiAoc3RyZWFtLnNraXBUbyhcInxcIikpIHsgc3RyZWFtLm5leHQoKTsgcmV0dXJuIFwidmFyaWFibGVOYW1lXCI7IH1cbiAgICBlbHNlIHsgc3RyZWFtLnNraXBUb0VuZCgpOyByZXR1cm4gXCJlcnJvclwiOyB9XG4gIH0gZWxzZSBpZiAoY2ggPT0gXCIjXCIpIHtcbiAgICB2YXIgY2ggPSBzdHJlYW0ubmV4dCgpO1xuICAgIGlmIChjaCA9PSBcIihcIikgeyB0eXBlID0gXCJvcGVuXCI7IHJldHVybiBcImJyYWNrZXRcIjsgfVxuICAgIGVsc2UgaWYgKC9bK1xcLT1cXC4nXS8udGVzdChjaCkpIHJldHVybiBudWxsO1xuICAgIGVsc2UgaWYgKC9cXGQvLnRlc3QoY2gpICYmIHN0cmVhbS5tYXRjaCgvXlxcZCojLykpIHJldHVybiBudWxsO1xuICAgIGVsc2UgaWYgKGNoID09IFwifFwiKSByZXR1cm4gKHN0YXRlLnRva2VuaXplID0gaW5Db21tZW50KShzdHJlYW0sIHN0YXRlKTtcbiAgICBlbHNlIGlmIChjaCA9PSBcIjpcIikgeyByZWFkU3ltKHN0cmVhbSk7IHJldHVybiBcIm1ldGFcIjsgfVxuICAgIGVsc2UgaWYgKGNoID09IFwiXFxcXFwiKSB7IHN0cmVhbS5uZXh0KCk7IHJlYWRTeW0oc3RyZWFtKTsgcmV0dXJuIFwic3RyaW5nLnNwZWNpYWxcIiB9XG4gICAgZWxzZSByZXR1cm4gXCJlcnJvclwiO1xuICB9IGVsc2Uge1xuICAgIHZhciBuYW1lID0gcmVhZFN5bShzdHJlYW0pO1xuICAgIGlmIChuYW1lID09IFwiLlwiKSByZXR1cm4gbnVsbDtcbiAgICB0eXBlID0gXCJzeW1ib2xcIjtcbiAgICBpZiAobmFtZSA9PSBcIm5pbFwiIHx8IG5hbWUgPT0gXCJ0XCIgfHwgbmFtZS5jaGFyQXQoMCkgPT0gXCI6XCIpIHJldHVybiBcImF0b21cIjtcbiAgICBpZiAoc3RhdGUubGFzdFR5cGUgPT0gXCJvcGVuXCIgJiYgKHNwZWNpYWxGb3JtLnRlc3QobmFtZSkgfHwgYXNzdW1lQm9keS50ZXN0KG5hbWUpKSkgcmV0dXJuIFwia2V5d29yZFwiO1xuICAgIGlmIChuYW1lLmNoYXJBdCgwKSA9PSBcIiZcIikgcmV0dXJuIFwidmFyaWFibGVOYW1lLnNwZWNpYWxcIjtcbiAgICByZXR1cm4gXCJ2YXJpYWJsZU5hbWVcIjtcbiAgfVxufVxuXG5mdW5jdGlvbiBpblN0cmluZyhzdHJlYW0sIHN0YXRlKSB7XG4gIHZhciBlc2NhcGVkID0gZmFsc2UsIG5leHQ7XG4gIHdoaWxlIChuZXh0ID0gc3RyZWFtLm5leHQoKSkge1xuICAgIGlmIChuZXh0ID09ICdcIicgJiYgIWVzY2FwZWQpIHsgc3RhdGUudG9rZW5pemUgPSBiYXNlOyBicmVhazsgfVxuICAgIGVzY2FwZWQgPSAhZXNjYXBlZCAmJiBuZXh0ID09IFwiXFxcXFwiO1xuICB9XG4gIHJldHVybiBcInN0cmluZ1wiO1xufVxuXG5mdW5jdGlvbiBpbkNvbW1lbnQoc3RyZWFtLCBzdGF0ZSkge1xuICB2YXIgbmV4dCwgbGFzdDtcbiAgd2hpbGUgKG5leHQgPSBzdHJlYW0ubmV4dCgpKSB7XG4gICAgaWYgKG5leHQgPT0gXCIjXCIgJiYgbGFzdCA9PSBcInxcIikgeyBzdGF0ZS50b2tlbml6ZSA9IGJhc2U7IGJyZWFrOyB9XG4gICAgbGFzdCA9IG5leHQ7XG4gIH1cbiAgdHlwZSA9IFwid3NcIjtcbiAgcmV0dXJuIFwiY29tbWVudFwiO1xufVxuXG5leHBvcnQgY29uc3QgY29tbW9uTGlzcCA9IHtcbiAgbmFtZTogXCJjb21tb25saXNwXCIsXG4gIHN0YXJ0U3RhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4ge2N0eDoge3ByZXY6IG51bGwsIHN0YXJ0OiAwLCBpbmRlbnRUbzogMH0sIGxhc3RUeXBlOiBudWxsLCB0b2tlbml6ZTogYmFzZX07XG4gIH0sXG5cbiAgdG9rZW46IGZ1bmN0aW9uIChzdHJlYW0sIHN0YXRlKSB7XG4gICAgaWYgKHN0cmVhbS5zb2woKSAmJiB0eXBlb2Ygc3RhdGUuY3R4LmluZGVudFRvICE9IFwibnVtYmVyXCIpXG4gICAgICBzdGF0ZS5jdHguaW5kZW50VG8gPSBzdGF0ZS5jdHguc3RhcnQgKyAxO1xuXG4gICAgdHlwZSA9IG51bGw7XG4gICAgdmFyIHN0eWxlID0gc3RhdGUudG9rZW5pemUoc3RyZWFtLCBzdGF0ZSk7XG4gICAgaWYgKHR5cGUgIT0gXCJ3c1wiKSB7XG4gICAgICBpZiAoc3RhdGUuY3R4LmluZGVudFRvID09IG51bGwpIHtcbiAgICAgICAgaWYgKHR5cGUgPT0gXCJzeW1ib2xcIiAmJiBhc3N1bWVCb2R5LnRlc3Qoc3RyZWFtLmN1cnJlbnQoKSkpXG4gICAgICAgICAgc3RhdGUuY3R4LmluZGVudFRvID0gc3RhdGUuY3R4LnN0YXJ0ICsgc3RyZWFtLmluZGVudFVuaXQ7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICBzdGF0ZS5jdHguaW5kZW50VG8gPSBcIm5leHRcIjtcbiAgICAgIH0gZWxzZSBpZiAoc3RhdGUuY3R4LmluZGVudFRvID09IFwibmV4dFwiKSB7XG4gICAgICAgIHN0YXRlLmN0eC5pbmRlbnRUbyA9IHN0cmVhbS5jb2x1bW4oKTtcbiAgICAgIH1cbiAgICAgIHN0YXRlLmxhc3RUeXBlID0gdHlwZTtcbiAgICB9XG4gICAgaWYgKHR5cGUgPT0gXCJvcGVuXCIpIHN0YXRlLmN0eCA9IHtwcmV2OiBzdGF0ZS5jdHgsIHN0YXJ0OiBzdHJlYW0uY29sdW1uKCksIGluZGVudFRvOiBudWxsfTtcbiAgICBlbHNlIGlmICh0eXBlID09IFwiY2xvc2VcIikgc3RhdGUuY3R4ID0gc3RhdGUuY3R4LnByZXYgfHwgc3RhdGUuY3R4O1xuICAgIHJldHVybiBzdHlsZTtcbiAgfSxcblxuICBpbmRlbnQ6IGZ1bmN0aW9uIChzdGF0ZSkge1xuICAgIHZhciBpID0gc3RhdGUuY3R4LmluZGVudFRvO1xuICAgIHJldHVybiB0eXBlb2YgaSA9PSBcIm51bWJlclwiID8gaSA6IHN0YXRlLmN0eC5zdGFydCArIDE7XG4gIH0sXG5cbiAgbGFuZ3VhZ2VEYXRhOiB7XG4gICAgY29tbWVudFRva2Vuczoge2xpbmU6IFwiOztcIiwgYmxvY2s6IHtvcGVuOiBcIiN8XCIsIGNsb3NlOiBcInwjXCJ9fSxcbiAgICBjbG9zZUJyYWNrZXRzOiB7YnJhY2tldHM6IFtcIihcIiwgXCJbXCIsIFwie1wiLCAnXCInXX1cbiAgfVxufTtcblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@codemirror/legacy-modes/mode/commonlisp.js\n"));

/***/ })

}]);