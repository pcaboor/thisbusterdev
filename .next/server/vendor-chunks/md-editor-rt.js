"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/md-editor-rt";
exports.ids = ["vendor-chunks/md-editor-rt"];
exports.modules = {

/***/ "(ssr)/./node_modules/md-editor-rt/node_modules/lru-cache/dist/commonjs/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/md-editor-rt/node_modules/lru-cache/dist/commonjs/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/**\n * @module LRUCache\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LRUCache = void 0;\nconst perf = typeof performance === 'object' &&\n    performance &&\n    typeof performance.now === 'function'\n    ? performance\n    : Date;\nconst warned = new Set();\n/* c8 ignore start */\nconst PROCESS = (typeof process === 'object' && !!process ? process : {});\n/* c8 ignore start */\nconst emitWarning = (msg, type, code, fn) => {\n    typeof PROCESS.emitWarning === 'function'\n        ? PROCESS.emitWarning(msg, type, code, fn)\n        : console.error(`[${code}] ${type}: ${msg}`);\n};\nlet AC = globalThis.AbortController;\nlet AS = globalThis.AbortSignal;\n/* c8 ignore start */\nif (typeof AC === 'undefined') {\n    //@ts-ignore\n    AS = class AbortSignal {\n        onabort;\n        _onabort = [];\n        reason;\n        aborted = false;\n        addEventListener(_, fn) {\n            this._onabort.push(fn);\n        }\n    };\n    //@ts-ignore\n    AC = class AbortController {\n        constructor() {\n            warnACPolyfill();\n        }\n        signal = new AS();\n        abort(reason) {\n            if (this.signal.aborted)\n                return;\n            //@ts-ignore\n            this.signal.reason = reason;\n            //@ts-ignore\n            this.signal.aborted = true;\n            //@ts-ignore\n            for (const fn of this.signal._onabort) {\n                fn(reason);\n            }\n            this.signal.onabort?.(reason);\n        }\n    };\n    let printACPolyfillWarning = PROCESS.env?.LRU_CACHE_IGNORE_AC_WARNING !== '1';\n    const warnACPolyfill = () => {\n        if (!printACPolyfillWarning)\n            return;\n        printACPolyfillWarning = false;\n        emitWarning('AbortController is not defined. If using lru-cache in ' +\n            'node 14, load an AbortController polyfill from the ' +\n            '`node-abort-controller` package. A minimal polyfill is ' +\n            'provided for use by LRUCache.fetch(), but it should not be ' +\n            'relied upon in other contexts (eg, passing it to other APIs that ' +\n            'use AbortController/AbortSignal might have undesirable effects). ' +\n            'You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.', 'NO_ABORT_CONTROLLER', 'ENOTSUP', warnACPolyfill);\n    };\n}\n/* c8 ignore stop */\nconst shouldWarn = (code) => !warned.has(code);\nconst TYPE = Symbol('type');\nconst isPosInt = (n) => n && n === Math.floor(n) && n > 0 && isFinite(n);\n/* c8 ignore start */\n// This is a little bit ridiculous, tbh.\n// The maximum array length is 2^32-1 or thereabouts on most JS impls.\n// And well before that point, you're caching the entire world, I mean,\n// that's ~32GB of just integers for the next/prev links, plus whatever\n// else to hold that many keys and values.  Just filling the memory with\n// zeroes at init time is brutal when you get that big.\n// But why not be complete?\n// Maybe in the future, these limits will have expanded.\nconst getUintArray = (max) => !isPosInt(max)\n    ? null\n    : max <= Math.pow(2, 8)\n        ? Uint8Array\n        : max <= Math.pow(2, 16)\n            ? Uint16Array\n            : max <= Math.pow(2, 32)\n                ? Uint32Array\n                : max <= Number.MAX_SAFE_INTEGER\n                    ? ZeroArray\n                    : null;\n/* c8 ignore stop */\nclass ZeroArray extends Array {\n    constructor(size) {\n        super(size);\n        this.fill(0);\n    }\n}\nclass Stack {\n    heap;\n    length;\n    // private constructor\n    static #constructing = false;\n    static create(max) {\n        const HeapCls = getUintArray(max);\n        if (!HeapCls)\n            return [];\n        Stack.#constructing = true;\n        const s = new Stack(max, HeapCls);\n        Stack.#constructing = false;\n        return s;\n    }\n    constructor(max, HeapCls) {\n        /* c8 ignore start */\n        if (!Stack.#constructing) {\n            throw new TypeError('instantiate Stack using Stack.create(n)');\n        }\n        /* c8 ignore stop */\n        this.heap = new HeapCls(max);\n        this.length = 0;\n    }\n    push(n) {\n        this.heap[this.length++] = n;\n    }\n    pop() {\n        return this.heap[--this.length];\n    }\n}\n/**\n * Default export, the thing you're using this module to get.\n *\n * The `K` and `V` types define the key and value types, respectively. The\n * optional `FC` type defines the type of the `context` object passed to\n * `cache.fetch()` and `cache.memo()`.\n *\n * Keys and values **must not** be `null` or `undefined`.\n *\n * All properties from the options object (with the exception of `max`,\n * `maxSize`, `fetchMethod`, `memoMethod`, `dispose` and `disposeAfter`) are\n * added as normal public members. (The listed options are read-only getters.)\n *\n * Changing any of these will alter the defaults for subsequent method calls.\n */\nclass LRUCache {\n    // options that cannot be changed without disaster\n    #max;\n    #maxSize;\n    #dispose;\n    #disposeAfter;\n    #fetchMethod;\n    #memoMethod;\n    /**\n     * {@link LRUCache.OptionsBase.ttl}\n     */\n    ttl;\n    /**\n     * {@link LRUCache.OptionsBase.ttlResolution}\n     */\n    ttlResolution;\n    /**\n     * {@link LRUCache.OptionsBase.ttlAutopurge}\n     */\n    ttlAutopurge;\n    /**\n     * {@link LRUCache.OptionsBase.updateAgeOnGet}\n     */\n    updateAgeOnGet;\n    /**\n     * {@link LRUCache.OptionsBase.updateAgeOnHas}\n     */\n    updateAgeOnHas;\n    /**\n     * {@link LRUCache.OptionsBase.allowStale}\n     */\n    allowStale;\n    /**\n     * {@link LRUCache.OptionsBase.noDisposeOnSet}\n     */\n    noDisposeOnSet;\n    /**\n     * {@link LRUCache.OptionsBase.noUpdateTTL}\n     */\n    noUpdateTTL;\n    /**\n     * {@link LRUCache.OptionsBase.maxEntrySize}\n     */\n    maxEntrySize;\n    /**\n     * {@link LRUCache.OptionsBase.sizeCalculation}\n     */\n    sizeCalculation;\n    /**\n     * {@link LRUCache.OptionsBase.noDeleteOnFetchRejection}\n     */\n    noDeleteOnFetchRejection;\n    /**\n     * {@link LRUCache.OptionsBase.noDeleteOnStaleGet}\n     */\n    noDeleteOnStaleGet;\n    /**\n     * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort}\n     */\n    allowStaleOnFetchAbort;\n    /**\n     * {@link LRUCache.OptionsBase.allowStaleOnFetchRejection}\n     */\n    allowStaleOnFetchRejection;\n    /**\n     * {@link LRUCache.OptionsBase.ignoreFetchAbort}\n     */\n    ignoreFetchAbort;\n    // computed properties\n    #size;\n    #calculatedSize;\n    #keyMap;\n    #keyList;\n    #valList;\n    #next;\n    #prev;\n    #head;\n    #tail;\n    #free;\n    #disposed;\n    #sizes;\n    #starts;\n    #ttls;\n    #hasDispose;\n    #hasFetchMethod;\n    #hasDisposeAfter;\n    /**\n     * Do not call this method unless you need to inspect the\n     * inner workings of the cache.  If anything returned by this\n     * object is modified in any way, strange breakage may occur.\n     *\n     * These fields are private for a reason!\n     *\n     * @internal\n     */\n    static unsafeExposeInternals(c) {\n        return {\n            // properties\n            starts: c.#starts,\n            ttls: c.#ttls,\n            sizes: c.#sizes,\n            keyMap: c.#keyMap,\n            keyList: c.#keyList,\n            valList: c.#valList,\n            next: c.#next,\n            prev: c.#prev,\n            get head() {\n                return c.#head;\n            },\n            get tail() {\n                return c.#tail;\n            },\n            free: c.#free,\n            // methods\n            isBackgroundFetch: (p) => c.#isBackgroundFetch(p),\n            backgroundFetch: (k, index, options, context) => c.#backgroundFetch(k, index, options, context),\n            moveToTail: (index) => c.#moveToTail(index),\n            indexes: (options) => c.#indexes(options),\n            rindexes: (options) => c.#rindexes(options),\n            isStale: (index) => c.#isStale(index),\n        };\n    }\n    // Protected read-only members\n    /**\n     * {@link LRUCache.OptionsBase.max} (read-only)\n     */\n    get max() {\n        return this.#max;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.maxSize} (read-only)\n     */\n    get maxSize() {\n        return this.#maxSize;\n    }\n    /**\n     * The total computed size of items in the cache (read-only)\n     */\n    get calculatedSize() {\n        return this.#calculatedSize;\n    }\n    /**\n     * The number of items stored in the cache (read-only)\n     */\n    get size() {\n        return this.#size;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.fetchMethod} (read-only)\n     */\n    get fetchMethod() {\n        return this.#fetchMethod;\n    }\n    get memoMethod() {\n        return this.#memoMethod;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.dispose} (read-only)\n     */\n    get dispose() {\n        return this.#dispose;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.disposeAfter} (read-only)\n     */\n    get disposeAfter() {\n        return this.#disposeAfter;\n    }\n    constructor(options) {\n        const { max = 0, ttl, ttlResolution = 1, ttlAutopurge, updateAgeOnGet, updateAgeOnHas, allowStale, dispose, disposeAfter, noDisposeOnSet, noUpdateTTL, maxSize = 0, maxEntrySize = 0, sizeCalculation, fetchMethod, memoMethod, noDeleteOnFetchRejection, noDeleteOnStaleGet, allowStaleOnFetchRejection, allowStaleOnFetchAbort, ignoreFetchAbort, } = options;\n        if (max !== 0 && !isPosInt(max)) {\n            throw new TypeError('max option must be a nonnegative integer');\n        }\n        const UintArray = max ? getUintArray(max) : Array;\n        if (!UintArray) {\n            throw new Error('invalid max value: ' + max);\n        }\n        this.#max = max;\n        this.#maxSize = maxSize;\n        this.maxEntrySize = maxEntrySize || this.#maxSize;\n        this.sizeCalculation = sizeCalculation;\n        if (this.sizeCalculation) {\n            if (!this.#maxSize && !this.maxEntrySize) {\n                throw new TypeError('cannot set sizeCalculation without setting maxSize or maxEntrySize');\n            }\n            if (typeof this.sizeCalculation !== 'function') {\n                throw new TypeError('sizeCalculation set to non-function');\n            }\n        }\n        if (memoMethod !== undefined &&\n            typeof memoMethod !== 'function') {\n            throw new TypeError('memoMethod must be a function if defined');\n        }\n        this.#memoMethod = memoMethod;\n        if (fetchMethod !== undefined &&\n            typeof fetchMethod !== 'function') {\n            throw new TypeError('fetchMethod must be a function if specified');\n        }\n        this.#fetchMethod = fetchMethod;\n        this.#hasFetchMethod = !!fetchMethod;\n        this.#keyMap = new Map();\n        this.#keyList = new Array(max).fill(undefined);\n        this.#valList = new Array(max).fill(undefined);\n        this.#next = new UintArray(max);\n        this.#prev = new UintArray(max);\n        this.#head = 0;\n        this.#tail = 0;\n        this.#free = Stack.create(max);\n        this.#size = 0;\n        this.#calculatedSize = 0;\n        if (typeof dispose === 'function') {\n            this.#dispose = dispose;\n        }\n        if (typeof disposeAfter === 'function') {\n            this.#disposeAfter = disposeAfter;\n            this.#disposed = [];\n        }\n        else {\n            this.#disposeAfter = undefined;\n            this.#disposed = undefined;\n        }\n        this.#hasDispose = !!this.#dispose;\n        this.#hasDisposeAfter = !!this.#disposeAfter;\n        this.noDisposeOnSet = !!noDisposeOnSet;\n        this.noUpdateTTL = !!noUpdateTTL;\n        this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection;\n        this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection;\n        this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort;\n        this.ignoreFetchAbort = !!ignoreFetchAbort;\n        // NB: maxEntrySize is set to maxSize if it's set\n        if (this.maxEntrySize !== 0) {\n            if (this.#maxSize !== 0) {\n                if (!isPosInt(this.#maxSize)) {\n                    throw new TypeError('maxSize must be a positive integer if specified');\n                }\n            }\n            if (!isPosInt(this.maxEntrySize)) {\n                throw new TypeError('maxEntrySize must be a positive integer if specified');\n            }\n            this.#initializeSizeTracking();\n        }\n        this.allowStale = !!allowStale;\n        this.noDeleteOnStaleGet = !!noDeleteOnStaleGet;\n        this.updateAgeOnGet = !!updateAgeOnGet;\n        this.updateAgeOnHas = !!updateAgeOnHas;\n        this.ttlResolution =\n            isPosInt(ttlResolution) || ttlResolution === 0\n                ? ttlResolution\n                : 1;\n        this.ttlAutopurge = !!ttlAutopurge;\n        this.ttl = ttl || 0;\n        if (this.ttl) {\n            if (!isPosInt(this.ttl)) {\n                throw new TypeError('ttl must be a positive integer if specified');\n            }\n            this.#initializeTTLTracking();\n        }\n        // do not allow completely unbounded caches\n        if (this.#max === 0 && this.ttl === 0 && this.#maxSize === 0) {\n            throw new TypeError('At least one of max, maxSize, or ttl is required');\n        }\n        if (!this.ttlAutopurge && !this.#max && !this.#maxSize) {\n            const code = 'LRU_CACHE_UNBOUNDED';\n            if (shouldWarn(code)) {\n                warned.add(code);\n                const msg = 'TTL caching without ttlAutopurge, max, or maxSize can ' +\n                    'result in unbounded memory consumption.';\n                emitWarning(msg, 'UnboundedCacheWarning', code, LRUCache);\n            }\n        }\n    }\n    /**\n     * Return the number of ms left in the item's TTL. If item is not in cache,\n     * returns `0`. Returns `Infinity` if item is in cache without a defined TTL.\n     */\n    getRemainingTTL(key) {\n        return this.#keyMap.has(key) ? Infinity : 0;\n    }\n    #initializeTTLTracking() {\n        const ttls = new ZeroArray(this.#max);\n        const starts = new ZeroArray(this.#max);\n        this.#ttls = ttls;\n        this.#starts = starts;\n        this.#setItemTTL = (index, ttl, start = perf.now()) => {\n            starts[index] = ttl !== 0 ? start : 0;\n            ttls[index] = ttl;\n            if (ttl !== 0 && this.ttlAutopurge) {\n                const t = setTimeout(() => {\n                    if (this.#isStale(index)) {\n                        this.#delete(this.#keyList[index], 'expire');\n                    }\n                }, ttl + 1);\n                // unref() not supported on all platforms\n                /* c8 ignore start */\n                if (t.unref) {\n                    t.unref();\n                }\n                /* c8 ignore stop */\n            }\n        };\n        this.#updateItemAge = index => {\n            starts[index] = ttls[index] !== 0 ? perf.now() : 0;\n        };\n        this.#statusTTL = (status, index) => {\n            if (ttls[index]) {\n                const ttl = ttls[index];\n                const start = starts[index];\n                /* c8 ignore next */\n                if (!ttl || !start)\n                    return;\n                status.ttl = ttl;\n                status.start = start;\n                status.now = cachedNow || getNow();\n                const age = status.now - start;\n                status.remainingTTL = ttl - age;\n            }\n        };\n        // debounce calls to perf.now() to 1s so we're not hitting\n        // that costly call repeatedly.\n        let cachedNow = 0;\n        const getNow = () => {\n            const n = perf.now();\n            if (this.ttlResolution > 0) {\n                cachedNow = n;\n                const t = setTimeout(() => (cachedNow = 0), this.ttlResolution);\n                // not available on all platforms\n                /* c8 ignore start */\n                if (t.unref) {\n                    t.unref();\n                }\n                /* c8 ignore stop */\n            }\n            return n;\n        };\n        this.getRemainingTTL = key => {\n            const index = this.#keyMap.get(key);\n            if (index === undefined) {\n                return 0;\n            }\n            const ttl = ttls[index];\n            const start = starts[index];\n            if (!ttl || !start) {\n                return Infinity;\n            }\n            const age = (cachedNow || getNow()) - start;\n            return ttl - age;\n        };\n        this.#isStale = index => {\n            const s = starts[index];\n            const t = ttls[index];\n            return !!t && !!s && (cachedNow || getNow()) - s > t;\n        };\n    }\n    // conditionally set private methods related to TTL\n    #updateItemAge = () => { };\n    #statusTTL = () => { };\n    #setItemTTL = () => { };\n    /* c8 ignore stop */\n    #isStale = () => false;\n    #initializeSizeTracking() {\n        const sizes = new ZeroArray(this.#max);\n        this.#calculatedSize = 0;\n        this.#sizes = sizes;\n        this.#removeItemSize = index => {\n            this.#calculatedSize -= sizes[index];\n            sizes[index] = 0;\n        };\n        this.#requireSize = (k, v, size, sizeCalculation) => {\n            // provisionally accept background fetches.\n            // actual value size will be checked when they return.\n            if (this.#isBackgroundFetch(v)) {\n                return 0;\n            }\n            if (!isPosInt(size)) {\n                if (sizeCalculation) {\n                    if (typeof sizeCalculation !== 'function') {\n                        throw new TypeError('sizeCalculation must be a function');\n                    }\n                    size = sizeCalculation(v, k);\n                    if (!isPosInt(size)) {\n                        throw new TypeError('sizeCalculation return invalid (expect positive integer)');\n                    }\n                }\n                else {\n                    throw new TypeError('invalid size value (must be positive integer). ' +\n                        'When maxSize or maxEntrySize is used, sizeCalculation ' +\n                        'or size must be set.');\n                }\n            }\n            return size;\n        };\n        this.#addItemSize = (index, size, status) => {\n            sizes[index] = size;\n            if (this.#maxSize) {\n                const maxSize = this.#maxSize - sizes[index];\n                while (this.#calculatedSize > maxSize) {\n                    this.#evict(true);\n                }\n            }\n            this.#calculatedSize += sizes[index];\n            if (status) {\n                status.entrySize = size;\n                status.totalCalculatedSize = this.#calculatedSize;\n            }\n        };\n    }\n    #removeItemSize = _i => { };\n    #addItemSize = (_i, _s, _st) => { };\n    #requireSize = (_k, _v, size, sizeCalculation) => {\n        if (size || sizeCalculation) {\n            throw new TypeError('cannot set size without setting maxSize or maxEntrySize on cache');\n        }\n        return 0;\n    };\n    *#indexes({ allowStale = this.allowStale } = {}) {\n        if (this.#size) {\n            for (let i = this.#tail; true;) {\n                if (!this.#isValidIndex(i)) {\n                    break;\n                }\n                if (allowStale || !this.#isStale(i)) {\n                    yield i;\n                }\n                if (i === this.#head) {\n                    break;\n                }\n                else {\n                    i = this.#prev[i];\n                }\n            }\n        }\n    }\n    *#rindexes({ allowStale = this.allowStale } = {}) {\n        if (this.#size) {\n            for (let i = this.#head; true;) {\n                if (!this.#isValidIndex(i)) {\n                    break;\n                }\n                if (allowStale || !this.#isStale(i)) {\n                    yield i;\n                }\n                if (i === this.#tail) {\n                    break;\n                }\n                else {\n                    i = this.#next[i];\n                }\n            }\n        }\n    }\n    #isValidIndex(index) {\n        return (index !== undefined &&\n            this.#keyMap.get(this.#keyList[index]) === index);\n    }\n    /**\n     * Return a generator yielding `[key, value]` pairs,\n     * in order from most recently used to least recently used.\n     */\n    *entries() {\n        for (const i of this.#indexes()) {\n            if (this.#valList[i] !== undefined &&\n                this.#keyList[i] !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield [this.#keyList[i], this.#valList[i]];\n            }\n        }\n    }\n    /**\n     * Inverse order version of {@link LRUCache.entries}\n     *\n     * Return a generator yielding `[key, value]` pairs,\n     * in order from least recently used to most recently used.\n     */\n    *rentries() {\n        for (const i of this.#rindexes()) {\n            if (this.#valList[i] !== undefined &&\n                this.#keyList[i] !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield [this.#keyList[i], this.#valList[i]];\n            }\n        }\n    }\n    /**\n     * Return a generator yielding the keys in the cache,\n     * in order from most recently used to least recently used.\n     */\n    *keys() {\n        for (const i of this.#indexes()) {\n            const k = this.#keyList[i];\n            if (k !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield k;\n            }\n        }\n    }\n    /**\n     * Inverse order version of {@link LRUCache.keys}\n     *\n     * Return a generator yielding the keys in the cache,\n     * in order from least recently used to most recently used.\n     */\n    *rkeys() {\n        for (const i of this.#rindexes()) {\n            const k = this.#keyList[i];\n            if (k !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield k;\n            }\n        }\n    }\n    /**\n     * Return a generator yielding the values in the cache,\n     * in order from most recently used to least recently used.\n     */\n    *values() {\n        for (const i of this.#indexes()) {\n            const v = this.#valList[i];\n            if (v !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield this.#valList[i];\n            }\n        }\n    }\n    /**\n     * Inverse order version of {@link LRUCache.values}\n     *\n     * Return a generator yielding the values in the cache,\n     * in order from least recently used to most recently used.\n     */\n    *rvalues() {\n        for (const i of this.#rindexes()) {\n            const v = this.#valList[i];\n            if (v !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield this.#valList[i];\n            }\n        }\n    }\n    /**\n     * Iterating over the cache itself yields the same results as\n     * {@link LRUCache.entries}\n     */\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    /**\n     * A String value that is used in the creation of the default string\n     * description of an object. Called by the built-in method\n     * `Object.prototype.toString`.\n     */\n    [Symbol.toStringTag] = 'LRUCache';\n    /**\n     * Find a value for which the supplied fn method returns a truthy value,\n     * similar to `Array.find()`. fn is called as `fn(value, key, cache)`.\n     */\n    find(fn, getOptions = {}) {\n        for (const i of this.#indexes()) {\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined)\n                continue;\n            if (fn(value, this.#keyList[i], this)) {\n                return this.get(this.#keyList[i], getOptions);\n            }\n        }\n    }\n    /**\n     * Call the supplied function on each item in the cache, in order from most\n     * recently used to least recently used.\n     *\n     * `fn` is called as `fn(value, key, cache)`.\n     *\n     * If `thisp` is provided, function will be called in the `this`-context of\n     * the provided object, or the cache if no `thisp` object is provided.\n     *\n     * Does not update age or recenty of use, or iterate over stale values.\n     */\n    forEach(fn, thisp = this) {\n        for (const i of this.#indexes()) {\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined)\n                continue;\n            fn.call(thisp, value, this.#keyList[i], this);\n        }\n    }\n    /**\n     * The same as {@link LRUCache.forEach} but items are iterated over in\n     * reverse order.  (ie, less recently used items are iterated over first.)\n     */\n    rforEach(fn, thisp = this) {\n        for (const i of this.#rindexes()) {\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined)\n                continue;\n            fn.call(thisp, value, this.#keyList[i], this);\n        }\n    }\n    /**\n     * Delete any stale entries. Returns true if anything was removed,\n     * false otherwise.\n     */\n    purgeStale() {\n        let deleted = false;\n        for (const i of this.#rindexes({ allowStale: true })) {\n            if (this.#isStale(i)) {\n                this.#delete(this.#keyList[i], 'expire');\n                deleted = true;\n            }\n        }\n        return deleted;\n    }\n    /**\n     * Get the extended info about a given entry, to get its value, size, and\n     * TTL info simultaneously. Returns `undefined` if the key is not present.\n     *\n     * Unlike {@link LRUCache#dump}, which is designed to be portable and survive\n     * serialization, the `start` value is always the current timestamp, and the\n     * `ttl` is a calculated remaining time to live (negative if expired).\n     *\n     * Always returns stale values, if their info is found in the cache, so be\n     * sure to check for expirations (ie, a negative {@link LRUCache.Entry#ttl})\n     * if relevant.\n     */\n    info(key) {\n        const i = this.#keyMap.get(key);\n        if (i === undefined)\n            return undefined;\n        const v = this.#valList[i];\n        const value = this.#isBackgroundFetch(v)\n            ? v.__staleWhileFetching\n            : v;\n        if (value === undefined)\n            return undefined;\n        const entry = { value };\n        if (this.#ttls && this.#starts) {\n            const ttl = this.#ttls[i];\n            const start = this.#starts[i];\n            if (ttl && start) {\n                const remain = ttl - (perf.now() - start);\n                entry.ttl = remain;\n                entry.start = Date.now();\n            }\n        }\n        if (this.#sizes) {\n            entry.size = this.#sizes[i];\n        }\n        return entry;\n    }\n    /**\n     * Return an array of [key, {@link LRUCache.Entry}] tuples which can be\n     * passed to {@link LRLUCache#load}.\n     *\n     * The `start` fields are calculated relative to a portable `Date.now()`\n     * timestamp, even if `performance.now()` is available.\n     *\n     * Stale entries are always included in the `dump`, even if\n     * {@link LRUCache.OptionsBase.allowStale} is false.\n     *\n     * Note: this returns an actual array, not a generator, so it can be more\n     * easily passed around.\n     */\n    dump() {\n        const arr = [];\n        for (const i of this.#indexes({ allowStale: true })) {\n            const key = this.#keyList[i];\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined || key === undefined)\n                continue;\n            const entry = { value };\n            if (this.#ttls && this.#starts) {\n                entry.ttl = this.#ttls[i];\n                // always dump the start relative to a portable timestamp\n                // it's ok for this to be a bit slow, it's a rare operation.\n                const age = perf.now() - this.#starts[i];\n                entry.start = Math.floor(Date.now() - age);\n            }\n            if (this.#sizes) {\n                entry.size = this.#sizes[i];\n            }\n            arr.unshift([key, entry]);\n        }\n        return arr;\n    }\n    /**\n     * Reset the cache and load in the items in entries in the order listed.\n     *\n     * The shape of the resulting cache may be different if the same options are\n     * not used in both caches.\n     *\n     * The `start` fields are assumed to be calculated relative to a portable\n     * `Date.now()` timestamp, even if `performance.now()` is available.\n     */\n    load(arr) {\n        this.clear();\n        for (const [key, entry] of arr) {\n            if (entry.start) {\n                // entry.start is a portable timestamp, but we may be using\n                // node's performance.now(), so calculate the offset, so that\n                // we get the intended remaining TTL, no matter how long it's\n                // been on ice.\n                //\n                // it's ok for this to be a bit slow, it's a rare operation.\n                const age = Date.now() - entry.start;\n                entry.start = perf.now() - age;\n            }\n            this.set(key, entry.value, entry);\n        }\n    }\n    /**\n     * Add a value to the cache.\n     *\n     * Note: if `undefined` is specified as a value, this is an alias for\n     * {@link LRUCache#delete}\n     *\n     * Fields on the {@link LRUCache.SetOptions} options param will override\n     * their corresponding values in the constructor options for the scope\n     * of this single `set()` operation.\n     *\n     * If `start` is provided, then that will set the effective start\n     * time for the TTL calculation. Note that this must be a previous\n     * value of `performance.now()` if supported, or a previous value of\n     * `Date.now()` if not.\n     *\n     * Options object may also include `size`, which will prevent\n     * calling the `sizeCalculation` function and just use the specified\n     * number if it is a positive integer, and `noDisposeOnSet` which\n     * will prevent calling a `dispose` function in the case of\n     * overwrites.\n     *\n     * If the `size` (or return value of `sizeCalculation`) for a given\n     * entry is greater than `maxEntrySize`, then the item will not be\n     * added to the cache.\n     *\n     * Will update the recency of the entry.\n     *\n     * If the value is `undefined`, then this is an alias for\n     * `cache.delete(key)`. `undefined` is never stored in the cache.\n     */\n    set(k, v, setOptions = {}) {\n        if (v === undefined) {\n            this.delete(k);\n            return this;\n        }\n        const { ttl = this.ttl, start, noDisposeOnSet = this.noDisposeOnSet, sizeCalculation = this.sizeCalculation, status, } = setOptions;\n        let { noUpdateTTL = this.noUpdateTTL } = setOptions;\n        const size = this.#requireSize(k, v, setOptions.size || 0, sizeCalculation);\n        // if the item doesn't fit, don't do anything\n        // NB: maxEntrySize set to maxSize by default\n        if (this.maxEntrySize && size > this.maxEntrySize) {\n            if (status) {\n                status.set = 'miss';\n                status.maxEntrySizeExceeded = true;\n            }\n            // have to delete, in case something is there already.\n            this.#delete(k, 'set');\n            return this;\n        }\n        let index = this.#size === 0 ? undefined : this.#keyMap.get(k);\n        if (index === undefined) {\n            // addition\n            index = (this.#size === 0\n                ? this.#tail\n                : this.#free.length !== 0\n                    ? this.#free.pop()\n                    : this.#size === this.#max\n                        ? this.#evict(false)\n                        : this.#size);\n            this.#keyList[index] = k;\n            this.#valList[index] = v;\n            this.#keyMap.set(k, index);\n            this.#next[this.#tail] = index;\n            this.#prev[index] = this.#tail;\n            this.#tail = index;\n            this.#size++;\n            this.#addItemSize(index, size, status);\n            if (status)\n                status.set = 'add';\n            noUpdateTTL = false;\n        }\n        else {\n            // update\n            this.#moveToTail(index);\n            const oldVal = this.#valList[index];\n            if (v !== oldVal) {\n                if (this.#hasFetchMethod && this.#isBackgroundFetch(oldVal)) {\n                    oldVal.__abortController.abort(new Error('replaced'));\n                    const { __staleWhileFetching: s } = oldVal;\n                    if (s !== undefined && !noDisposeOnSet) {\n                        if (this.#hasDispose) {\n                            this.#dispose?.(s, k, 'set');\n                        }\n                        if (this.#hasDisposeAfter) {\n                            this.#disposed?.push([s, k, 'set']);\n                        }\n                    }\n                }\n                else if (!noDisposeOnSet) {\n                    if (this.#hasDispose) {\n                        this.#dispose?.(oldVal, k, 'set');\n                    }\n                    if (this.#hasDisposeAfter) {\n                        this.#disposed?.push([oldVal, k, 'set']);\n                    }\n                }\n                this.#removeItemSize(index);\n                this.#addItemSize(index, size, status);\n                this.#valList[index] = v;\n                if (status) {\n                    status.set = 'replace';\n                    const oldValue = oldVal && this.#isBackgroundFetch(oldVal)\n                        ? oldVal.__staleWhileFetching\n                        : oldVal;\n                    if (oldValue !== undefined)\n                        status.oldValue = oldValue;\n                }\n            }\n            else if (status) {\n                status.set = 'update';\n            }\n        }\n        if (ttl !== 0 && !this.#ttls) {\n            this.#initializeTTLTracking();\n        }\n        if (this.#ttls) {\n            if (!noUpdateTTL) {\n                this.#setItemTTL(index, ttl, start);\n            }\n            if (status)\n                this.#statusTTL(status, index);\n        }\n        if (!noDisposeOnSet && this.#hasDisposeAfter && this.#disposed) {\n            const dt = this.#disposed;\n            let task;\n            while ((task = dt?.shift())) {\n                this.#disposeAfter?.(...task);\n            }\n        }\n        return this;\n    }\n    /**\n     * Evict the least recently used item, returning its value or\n     * `undefined` if cache is empty.\n     */\n    pop() {\n        try {\n            while (this.#size) {\n                const val = this.#valList[this.#head];\n                this.#evict(true);\n                if (this.#isBackgroundFetch(val)) {\n                    if (val.__staleWhileFetching) {\n                        return val.__staleWhileFetching;\n                    }\n                }\n                else if (val !== undefined) {\n                    return val;\n                }\n            }\n        }\n        finally {\n            if (this.#hasDisposeAfter && this.#disposed) {\n                const dt = this.#disposed;\n                let task;\n                while ((task = dt?.shift())) {\n                    this.#disposeAfter?.(...task);\n                }\n            }\n        }\n    }\n    #evict(free) {\n        const head = this.#head;\n        const k = this.#keyList[head];\n        const v = this.#valList[head];\n        if (this.#hasFetchMethod && this.#isBackgroundFetch(v)) {\n            v.__abortController.abort(new Error('evicted'));\n        }\n        else if (this.#hasDispose || this.#hasDisposeAfter) {\n            if (this.#hasDispose) {\n                this.#dispose?.(v, k, 'evict');\n            }\n            if (this.#hasDisposeAfter) {\n                this.#disposed?.push([v, k, 'evict']);\n            }\n        }\n        this.#removeItemSize(head);\n        // if we aren't about to use the index, then null these out\n        if (free) {\n            this.#keyList[head] = undefined;\n            this.#valList[head] = undefined;\n            this.#free.push(head);\n        }\n        if (this.#size === 1) {\n            this.#head = this.#tail = 0;\n            this.#free.length = 0;\n        }\n        else {\n            this.#head = this.#next[head];\n        }\n        this.#keyMap.delete(k);\n        this.#size--;\n        return head;\n    }\n    /**\n     * Check if a key is in the cache, without updating the recency of use.\n     * Will return false if the item is stale, even though it is technically\n     * in the cache.\n     *\n     * Check if a key is in the cache, without updating the recency of\n     * use. Age is updated if {@link LRUCache.OptionsBase.updateAgeOnHas} is set\n     * to `true` in either the options or the constructor.\n     *\n     * Will return `false` if the item is stale, even though it is technically in\n     * the cache. The difference can be determined (if it matters) by using a\n     * `status` argument, and inspecting the `has` field.\n     *\n     * Will not update item age unless\n     * {@link LRUCache.OptionsBase.updateAgeOnHas} is set.\n     */\n    has(k, hasOptions = {}) {\n        const { updateAgeOnHas = this.updateAgeOnHas, status } = hasOptions;\n        const index = this.#keyMap.get(k);\n        if (index !== undefined) {\n            const v = this.#valList[index];\n            if (this.#isBackgroundFetch(v) &&\n                v.__staleWhileFetching === undefined) {\n                return false;\n            }\n            if (!this.#isStale(index)) {\n                if (updateAgeOnHas) {\n                    this.#updateItemAge(index);\n                }\n                if (status) {\n                    status.has = 'hit';\n                    this.#statusTTL(status, index);\n                }\n                return true;\n            }\n            else if (status) {\n                status.has = 'stale';\n                this.#statusTTL(status, index);\n            }\n        }\n        else if (status) {\n            status.has = 'miss';\n        }\n        return false;\n    }\n    /**\n     * Like {@link LRUCache#get} but doesn't update recency or delete stale\n     * items.\n     *\n     * Returns `undefined` if the item is stale, unless\n     * {@link LRUCache.OptionsBase.allowStale} is set.\n     */\n    peek(k, peekOptions = {}) {\n        const { allowStale = this.allowStale } = peekOptions;\n        const index = this.#keyMap.get(k);\n        if (index === undefined ||\n            (!allowStale && this.#isStale(index))) {\n            return;\n        }\n        const v = this.#valList[index];\n        // either stale and allowed, or forcing a refresh of non-stale value\n        return this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;\n    }\n    #backgroundFetch(k, index, options, context) {\n        const v = index === undefined ? undefined : this.#valList[index];\n        if (this.#isBackgroundFetch(v)) {\n            return v;\n        }\n        const ac = new AC();\n        const { signal } = options;\n        // when/if our AC signals, then stop listening to theirs.\n        signal?.addEventListener('abort', () => ac.abort(signal.reason), {\n            signal: ac.signal,\n        });\n        const fetchOpts = {\n            signal: ac.signal,\n            options,\n            context,\n        };\n        const cb = (v, updateCache = false) => {\n            const { aborted } = ac.signal;\n            const ignoreAbort = options.ignoreFetchAbort && v !== undefined;\n            if (options.status) {\n                if (aborted && !updateCache) {\n                    options.status.fetchAborted = true;\n                    options.status.fetchError = ac.signal.reason;\n                    if (ignoreAbort)\n                        options.status.fetchAbortIgnored = true;\n                }\n                else {\n                    options.status.fetchResolved = true;\n                }\n            }\n            if (aborted && !ignoreAbort && !updateCache) {\n                return fetchFail(ac.signal.reason);\n            }\n            // either we didn't abort, and are still here, or we did, and ignored\n            const bf = p;\n            if (this.#valList[index] === p) {\n                if (v === undefined) {\n                    if (bf.__staleWhileFetching) {\n                        this.#valList[index] = bf.__staleWhileFetching;\n                    }\n                    else {\n                        this.#delete(k, 'fetch');\n                    }\n                }\n                else {\n                    if (options.status)\n                        options.status.fetchUpdated = true;\n                    this.set(k, v, fetchOpts.options);\n                }\n            }\n            return v;\n        };\n        const eb = (er) => {\n            if (options.status) {\n                options.status.fetchRejected = true;\n                options.status.fetchError = er;\n            }\n            return fetchFail(er);\n        };\n        const fetchFail = (er) => {\n            const { aborted } = ac.signal;\n            const allowStaleAborted = aborted && options.allowStaleOnFetchAbort;\n            const allowStale = allowStaleAborted || options.allowStaleOnFetchRejection;\n            const noDelete = allowStale || options.noDeleteOnFetchRejection;\n            const bf = p;\n            if (this.#valList[index] === p) {\n                // if we allow stale on fetch rejections, then we need to ensure that\n                // the stale value is not removed from the cache when the fetch fails.\n                const del = !noDelete || bf.__staleWhileFetching === undefined;\n                if (del) {\n                    this.#delete(k, 'fetch');\n                }\n                else if (!allowStaleAborted) {\n                    // still replace the *promise* with the stale value,\n                    // since we are done with the promise at this point.\n                    // leave it untouched if we're still waiting for an\n                    // aborted background fetch that hasn't yet returned.\n                    this.#valList[index] = bf.__staleWhileFetching;\n                }\n            }\n            if (allowStale) {\n                if (options.status && bf.__staleWhileFetching !== undefined) {\n                    options.status.returnedStale = true;\n                }\n                return bf.__staleWhileFetching;\n            }\n            else if (bf.__returned === bf) {\n                throw er;\n            }\n        };\n        const pcall = (res, rej) => {\n            const fmp = this.#fetchMethod?.(k, v, fetchOpts);\n            if (fmp && fmp instanceof Promise) {\n                fmp.then(v => res(v === undefined ? undefined : v), rej);\n            }\n            // ignored, we go until we finish, regardless.\n            // defer check until we are actually aborting,\n            // so fetchMethod can override.\n            ac.signal.addEventListener('abort', () => {\n                if (!options.ignoreFetchAbort ||\n                    options.allowStaleOnFetchAbort) {\n                    res(undefined);\n                    // when it eventually resolves, update the cache.\n                    if (options.allowStaleOnFetchAbort) {\n                        res = v => cb(v, true);\n                    }\n                }\n            });\n        };\n        if (options.status)\n            options.status.fetchDispatched = true;\n        const p = new Promise(pcall).then(cb, eb);\n        const bf = Object.assign(p, {\n            __abortController: ac,\n            __staleWhileFetching: v,\n            __returned: undefined,\n        });\n        if (index === undefined) {\n            // internal, don't expose status.\n            this.set(k, bf, { ...fetchOpts.options, status: undefined });\n            index = this.#keyMap.get(k);\n        }\n        else {\n            this.#valList[index] = bf;\n        }\n        return bf;\n    }\n    #isBackgroundFetch(p) {\n        if (!this.#hasFetchMethod)\n            return false;\n        const b = p;\n        return (!!b &&\n            b instanceof Promise &&\n            b.hasOwnProperty('__staleWhileFetching') &&\n            b.__abortController instanceof AC);\n    }\n    async fetch(k, fetchOptions = {}) {\n        const { \n        // get options\n        allowStale = this.allowStale, updateAgeOnGet = this.updateAgeOnGet, noDeleteOnStaleGet = this.noDeleteOnStaleGet, \n        // set options\n        ttl = this.ttl, noDisposeOnSet = this.noDisposeOnSet, size = 0, sizeCalculation = this.sizeCalculation, noUpdateTTL = this.noUpdateTTL, \n        // fetch exclusive options\n        noDeleteOnFetchRejection = this.noDeleteOnFetchRejection, allowStaleOnFetchRejection = this.allowStaleOnFetchRejection, ignoreFetchAbort = this.ignoreFetchAbort, allowStaleOnFetchAbort = this.allowStaleOnFetchAbort, context, forceRefresh = false, status, signal, } = fetchOptions;\n        if (!this.#hasFetchMethod) {\n            if (status)\n                status.fetch = 'get';\n            return this.get(k, {\n                allowStale,\n                updateAgeOnGet,\n                noDeleteOnStaleGet,\n                status,\n            });\n        }\n        const options = {\n            allowStale,\n            updateAgeOnGet,\n            noDeleteOnStaleGet,\n            ttl,\n            noDisposeOnSet,\n            size,\n            sizeCalculation,\n            noUpdateTTL,\n            noDeleteOnFetchRejection,\n            allowStaleOnFetchRejection,\n            allowStaleOnFetchAbort,\n            ignoreFetchAbort,\n            status,\n            signal,\n        };\n        let index = this.#keyMap.get(k);\n        if (index === undefined) {\n            if (status)\n                status.fetch = 'miss';\n            const p = this.#backgroundFetch(k, index, options, context);\n            return (p.__returned = p);\n        }\n        else {\n            // in cache, maybe already fetching\n            const v = this.#valList[index];\n            if (this.#isBackgroundFetch(v)) {\n                const stale = allowStale && v.__staleWhileFetching !== undefined;\n                if (status) {\n                    status.fetch = 'inflight';\n                    if (stale)\n                        status.returnedStale = true;\n                }\n                return stale ? v.__staleWhileFetching : (v.__returned = v);\n            }\n            // if we force a refresh, that means do NOT serve the cached value,\n            // unless we are already in the process of refreshing the cache.\n            const isStale = this.#isStale(index);\n            if (!forceRefresh && !isStale) {\n                if (status)\n                    status.fetch = 'hit';\n                this.#moveToTail(index);\n                if (updateAgeOnGet) {\n                    this.#updateItemAge(index);\n                }\n                if (status)\n                    this.#statusTTL(status, index);\n                return v;\n            }\n            // ok, it is stale or a forced refresh, and not already fetching.\n            // refresh the cache.\n            const p = this.#backgroundFetch(k, index, options, context);\n            const hasStale = p.__staleWhileFetching !== undefined;\n            const staleVal = hasStale && allowStale;\n            if (status) {\n                status.fetch = isStale ? 'stale' : 'refresh';\n                if (staleVal && isStale)\n                    status.returnedStale = true;\n            }\n            return staleVal ? p.__staleWhileFetching : (p.__returned = p);\n        }\n    }\n    async forceFetch(k, fetchOptions = {}) {\n        const v = await this.fetch(k, fetchOptions);\n        if (v === undefined)\n            throw new Error('fetch() returned undefined');\n        return v;\n    }\n    memo(k, memoOptions = {}) {\n        const memoMethod = this.#memoMethod;\n        if (!memoMethod) {\n            throw new Error('no memoMethod provided to constructor');\n        }\n        const { context, forceRefresh, ...options } = memoOptions;\n        const v = this.get(k, options);\n        if (!forceRefresh && v !== undefined)\n            return v;\n        const vv = memoMethod(k, v, {\n            options,\n            context,\n        });\n        this.set(k, vv, options);\n        return vv;\n    }\n    /**\n     * Return a value from the cache. Will update the recency of the cache\n     * entry found.\n     *\n     * If the key is not found, get() will return `undefined`.\n     */\n    get(k, getOptions = {}) {\n        const { allowStale = this.allowStale, updateAgeOnGet = this.updateAgeOnGet, noDeleteOnStaleGet = this.noDeleteOnStaleGet, status, } = getOptions;\n        const index = this.#keyMap.get(k);\n        if (index !== undefined) {\n            const value = this.#valList[index];\n            const fetching = this.#isBackgroundFetch(value);\n            if (status)\n                this.#statusTTL(status, index);\n            if (this.#isStale(index)) {\n                if (status)\n                    status.get = 'stale';\n                // delete only if not an in-flight background fetch\n                if (!fetching) {\n                    if (!noDeleteOnStaleGet) {\n                        this.#delete(k, 'expire');\n                    }\n                    if (status && allowStale)\n                        status.returnedStale = true;\n                    return allowStale ? value : undefined;\n                }\n                else {\n                    if (status &&\n                        allowStale &&\n                        value.__staleWhileFetching !== undefined) {\n                        status.returnedStale = true;\n                    }\n                    return allowStale ? value.__staleWhileFetching : undefined;\n                }\n            }\n            else {\n                if (status)\n                    status.get = 'hit';\n                // if we're currently fetching it, we don't actually have it yet\n                // it's not stale, which means this isn't a staleWhileRefetching.\n                // If it's not stale, and fetching, AND has a __staleWhileFetching\n                // value, then that means the user fetched with {forceRefresh:true},\n                // so it's safe to return that value.\n                if (fetching) {\n                    return value.__staleWhileFetching;\n                }\n                this.#moveToTail(index);\n                if (updateAgeOnGet) {\n                    this.#updateItemAge(index);\n                }\n                return value;\n            }\n        }\n        else if (status) {\n            status.get = 'miss';\n        }\n    }\n    #connect(p, n) {\n        this.#prev[n] = p;\n        this.#next[p] = n;\n    }\n    #moveToTail(index) {\n        // if tail already, nothing to do\n        // if head, move head to next[index]\n        // else\n        //   move next[prev[index]] to next[index] (head has no prev)\n        //   move prev[next[index]] to prev[index]\n        // prev[index] = tail\n        // next[tail] = index\n        // tail = index\n        if (index !== this.#tail) {\n            if (index === this.#head) {\n                this.#head = this.#next[index];\n            }\n            else {\n                this.#connect(this.#prev[index], this.#next[index]);\n            }\n            this.#connect(this.#tail, index);\n            this.#tail = index;\n        }\n    }\n    /**\n     * Deletes a key out of the cache.\n     *\n     * Returns true if the key was deleted, false otherwise.\n     */\n    delete(k) {\n        return this.#delete(k, 'delete');\n    }\n    #delete(k, reason) {\n        let deleted = false;\n        if (this.#size !== 0) {\n            const index = this.#keyMap.get(k);\n            if (index !== undefined) {\n                deleted = true;\n                if (this.#size === 1) {\n                    this.#clear(reason);\n                }\n                else {\n                    this.#removeItemSize(index);\n                    const v = this.#valList[index];\n                    if (this.#isBackgroundFetch(v)) {\n                        v.__abortController.abort(new Error('deleted'));\n                    }\n                    else if (this.#hasDispose || this.#hasDisposeAfter) {\n                        if (this.#hasDispose) {\n                            this.#dispose?.(v, k, reason);\n                        }\n                        if (this.#hasDisposeAfter) {\n                            this.#disposed?.push([v, k, reason]);\n                        }\n                    }\n                    this.#keyMap.delete(k);\n                    this.#keyList[index] = undefined;\n                    this.#valList[index] = undefined;\n                    if (index === this.#tail) {\n                        this.#tail = this.#prev[index];\n                    }\n                    else if (index === this.#head) {\n                        this.#head = this.#next[index];\n                    }\n                    else {\n                        const pi = this.#prev[index];\n                        this.#next[pi] = this.#next[index];\n                        const ni = this.#next[index];\n                        this.#prev[ni] = this.#prev[index];\n                    }\n                    this.#size--;\n                    this.#free.push(index);\n                }\n            }\n        }\n        if (this.#hasDisposeAfter && this.#disposed?.length) {\n            const dt = this.#disposed;\n            let task;\n            while ((task = dt?.shift())) {\n                this.#disposeAfter?.(...task);\n            }\n        }\n        return deleted;\n    }\n    /**\n     * Clear the cache entirely, throwing away all values.\n     */\n    clear() {\n        return this.#clear('delete');\n    }\n    #clear(reason) {\n        for (const index of this.#rindexes({ allowStale: true })) {\n            const v = this.#valList[index];\n            if (this.#isBackgroundFetch(v)) {\n                v.__abortController.abort(new Error('deleted'));\n            }\n            else {\n                const k = this.#keyList[index];\n                if (this.#hasDispose) {\n                    this.#dispose?.(v, k, reason);\n                }\n                if (this.#hasDisposeAfter) {\n                    this.#disposed?.push([v, k, reason]);\n                }\n            }\n        }\n        this.#keyMap.clear();\n        this.#valList.fill(undefined);\n        this.#keyList.fill(undefined);\n        if (this.#ttls && this.#starts) {\n            this.#ttls.fill(0);\n            this.#starts.fill(0);\n        }\n        if (this.#sizes) {\n            this.#sizes.fill(0);\n        }\n        this.#head = 0;\n        this.#tail = 0;\n        this.#free.length = 0;\n        this.#calculatedSize = 0;\n        this.#size = 0;\n        if (this.#hasDisposeAfter && this.#disposed) {\n            const dt = this.#disposed;\n            let task;\n            while ((task = dt?.shift())) {\n                this.#disposeAfter?.(...task);\n            }\n        }\n    }\n}\nexports.LRUCache = LRUCache;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/md-editor-rt/node_modules/lru-cache/dist/commonjs/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/md-editor-rt/lib/style.css":
/*!*************************************************!*\
  !*** ./node_modules/md-editor-rt/lib/style.css ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"68fc618b4b18\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWQtZWRpdG9yLXJ0L2xpYi9zdHlsZS5jc3MiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLGNBQWM7QUFDN0IsSUFBSSxLQUFVLEVBQUUsRUFBdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy9tZC1lZGl0b3ItcnQvbGliL3N0eWxlLmNzcz82YmM1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiNjhmYzYxOGI0YjE4XCJcbmlmIChtb2R1bGUuaG90KSB7IG1vZHVsZS5ob3QuYWNjZXB0KCkgfVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/md-editor-rt/lib/style.css\n");

/***/ }),

/***/ "(ssr)/./node_modules/md-editor-rt/lib/cjs/DropdownToolbar.cjs":
/*!***************************************************************!*\
  !*** ./node_modules/md-editor-rt/lib/cjs/DropdownToolbar.cjs ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const t=__webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\"),o=__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"),n=__webpack_require__(/*! ./chunks/config.cjs */ \"(ssr)/./node_modules/md-editor-rt/lib/cjs/chunks/config.cjs\"),r=__webpack_require__(/*! ./chunks/Editor.cjs */ \"(ssr)/./node_modules/md-editor-rt/lib/cjs/chunks/Editor.cjs\"),l=e=>{const{editorId:i}=o.useContext(r.EditorContext);return t.jsx(r.DropDown,{relative:`#${i}-toolbar-wrapper`,visible:e.visible,onChange:e.onChange,overlay:e.overlay,children:t.jsxs(\"div\",{className:`${n.prefix}-toolbar-item`,title:e.title||\"\",children:[e.trigger,e.children]})})};module.exports=l;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWQtZWRpdG9yLXJ0L2xpYi9janMvRHJvcGRvd25Ub29sYmFyLmNqcyIsIm1hcHBpbmdzIjoiQUFBYSxRQUFRLG1CQUFPLENBQUMsZ0lBQW1CLElBQUksbUJBQU8sQ0FBQyx3R0FBTyxJQUFJLG1CQUFPLENBQUMsd0ZBQXFCLElBQUksbUJBQU8sQ0FBQyx3RkFBcUIsUUFBUSxNQUFNLFdBQVcsK0JBQStCLHlCQUF5QixhQUFhLEVBQUUsaUdBQWlHLGFBQWEsU0FBUyxpRUFBaUUsRUFBRSxHQUFHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvbWQtZWRpdG9yLXJ0L2xpYi9janMvRHJvcGRvd25Ub29sYmFyLmNqcz85Mjk2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO2NvbnN0IHQ9cmVxdWlyZShcInJlYWN0L2pzeC1ydW50aW1lXCIpLG89cmVxdWlyZShcInJlYWN0XCIpLG49cmVxdWlyZShcIi4vY2h1bmtzL2NvbmZpZy5janNcIikscj1yZXF1aXJlKFwiLi9jaHVua3MvRWRpdG9yLmNqc1wiKSxsPWU9Pntjb25zdHtlZGl0b3JJZDppfT1vLnVzZUNvbnRleHQoci5FZGl0b3JDb250ZXh0KTtyZXR1cm4gdC5qc3goci5Ecm9wRG93bix7cmVsYXRpdmU6YCMke2l9LXRvb2xiYXItd3JhcHBlcmAsdmlzaWJsZTplLnZpc2libGUsb25DaGFuZ2U6ZS5vbkNoYW5nZSxvdmVybGF5OmUub3ZlcmxheSxjaGlsZHJlbjp0LmpzeHMoXCJkaXZcIix7Y2xhc3NOYW1lOmAke24ucHJlZml4fS10b29sYmFyLWl0ZW1gLHRpdGxlOmUudGl0bGV8fFwiXCIsY2hpbGRyZW46W2UudHJpZ2dlcixlLmNoaWxkcmVuXX0pfSl9O21vZHVsZS5leHBvcnRzPWw7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/md-editor-rt/lib/cjs/DropdownToolbar.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/md-editor-rt/lib/cjs/MdPreview.cjs":
/*!*********************************************************!*\
  !*** ./node_modules/md-editor-rt/lib/cjs/MdPreview.cjs ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const u=__webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\"),r=__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"),d=__webpack_require__(/*! ./chunks/Editor.cjs */ \"(ssr)/./node_modules/md-editor-rt/lib/cjs/chunks/Editor.cjs\"),a=__webpack_require__(/*! ./chunks/index.cjs */ \"(ssr)/./node_modules/md-editor-rt/lib/cjs/chunks/index.cjs\"),e=__webpack_require__(/*! ./chunks/config.cjs */ \"(ssr)/./node_modules/md-editor-rt/lib/cjs/chunks/config.cjs\"),F=(o,s)=>{const{editorId:n}=o;r.useImperativeHandle(s,()=>({rerender(){a.bus.emit(n,a.RERENDER)}}),[n])},j=r.forwardRef((o,s)=>{const{modelValue:n=e.defaultProps.modelValue,onChange:f=e.defaultProps.onChange,theme:c=e.defaultProps.theme,className:g=e.defaultProps.className,editorId:i=a.getNextId(e.defaultEditorId+\"_\"),showCodeRowNumber:p=e.defaultProps.showCodeRowNumber,previewTheme:h=e.defaultProps.previewTheme,noMermaid:P=e.defaultProps.noMermaid,noKatex:x=e.defaultProps.noKatex,onHtmlChanged:I=e.defaultProps.onHtmlChanged,onGetCatalog:C=e.defaultProps.onGetCatalog,sanitize:w=e.defaultProps.sanitize,mdHeadingId:v=e.defaultProps.mdHeadingId,noIconfont:M=e.defaultProps.noIconfont,noHighlight:R=e.defaultProps.noHighlight,noImgZoomIn:H=e.defaultProps.noImgZoomIn,language:E=e.defaultProps.language,sanitizeMermaid:b=e.defaultProps.sanitizeMermaid,codeFoldable:N=e.defaultProps.codeFoldable,autoFoldThreshold:T=e.defaultProps.autoFoldThreshold}=o,[t]=r.useState(()=>({editorId:i,noKatex:x,noMermaid:P,noIconfont:M,noHighlight:R})),m=r.useRef(null);d.useExpansionPreview(t);const[q,y,l]=d.useConfig(o);return F(t,s),r.useEffect(()=>()=>{a.bus.clear(i)},[i]),u.jsx(d.EditorContext.Provider,{value:{editorId:t.editorId,tabWidth:2,theme:c,language:E,highlight:q,showCodeRowNumber:p,usedLanguageText:y,previewTheme:h,customIcon:o.customIcon||{},rootRef:m},children:u.jsx(\"div\",{id:t.editorId,className:a.classnames([e.prefix,g,c===\"dark\"&&`${e.prefix}-dark`,l.fullscreen||l.pageFullscreen?`${e.prefix}-fullscreen`:\"\",`${e.prefix}-previewOnly`]),style:o.style,ref:m,children:u.jsx(d.ContentPreview,{modelValue:n,onChange:f,setting:l,mdHeadingId:v,onHtmlChanged:I,onGetCatalog:C,sanitize:w,noMermaid:t.noMermaid,noHighlight:t.noHighlight,noKatex:t.noKatex,formatCopiedText:o.formatCopiedText,noImgZoomIn:H,previewOnly:!0,sanitizeMermaid:b,codeFoldable:N,autoFoldThreshold:T},\"preview-only\")})})});module.exports=j;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWQtZWRpdG9yLXJ0L2xpYi9janMvTWRQcmV2aWV3LmNqcyIsIm1hcHBpbmdzIjoiQUFBYSxRQUFRLG1CQUFPLENBQUMsZ0lBQW1CLElBQUksbUJBQU8sQ0FBQyx3R0FBTyxJQUFJLG1CQUFPLENBQUMsd0ZBQXFCLElBQUksbUJBQU8sQ0FBQyxzRkFBb0IsSUFBSSxtQkFBTyxDQUFDLHdGQUFxQixZQUFZLE1BQU0sV0FBVyxHQUFHLDhCQUE4QixXQUFXLDBCQUEwQixPQUFPLHdCQUF3QixNQUFNLGl6QkFBaXpCLHdCQUF3Qiw0REFBNEQsb0JBQW9CLHlCQUF5Qiw0QkFBNEIsbUNBQW1DLGVBQWUsc0NBQXNDLE9BQU8sK0lBQStJLFdBQVcsdUJBQXVCLGdFQUFnRSxTQUFTLHlDQUF5QyxTQUFTLG1CQUFtQixTQUFTLHFFQUFxRSxrUkFBa1IsaUJBQWlCLEVBQUUsRUFBRSxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvbWQtZWRpdG9yLXJ0L2xpYi9janMvTWRQcmV2aWV3LmNqcz8yNGIyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO2NvbnN0IHU9cmVxdWlyZShcInJlYWN0L2pzeC1ydW50aW1lXCIpLHI9cmVxdWlyZShcInJlYWN0XCIpLGQ9cmVxdWlyZShcIi4vY2h1bmtzL0VkaXRvci5janNcIiksYT1yZXF1aXJlKFwiLi9jaHVua3MvaW5kZXguY2pzXCIpLGU9cmVxdWlyZShcIi4vY2h1bmtzL2NvbmZpZy5janNcIiksRj0obyxzKT0+e2NvbnN0e2VkaXRvcklkOm59PW87ci51c2VJbXBlcmF0aXZlSGFuZGxlKHMsKCk9Pih7cmVyZW5kZXIoKXthLmJ1cy5lbWl0KG4sYS5SRVJFTkRFUil9fSksW25dKX0saj1yLmZvcndhcmRSZWYoKG8scyk9Pntjb25zdHttb2RlbFZhbHVlOm49ZS5kZWZhdWx0UHJvcHMubW9kZWxWYWx1ZSxvbkNoYW5nZTpmPWUuZGVmYXVsdFByb3BzLm9uQ2hhbmdlLHRoZW1lOmM9ZS5kZWZhdWx0UHJvcHMudGhlbWUsY2xhc3NOYW1lOmc9ZS5kZWZhdWx0UHJvcHMuY2xhc3NOYW1lLGVkaXRvcklkOmk9YS5nZXROZXh0SWQoZS5kZWZhdWx0RWRpdG9ySWQrXCJfXCIpLHNob3dDb2RlUm93TnVtYmVyOnA9ZS5kZWZhdWx0UHJvcHMuc2hvd0NvZGVSb3dOdW1iZXIscHJldmlld1RoZW1lOmg9ZS5kZWZhdWx0UHJvcHMucHJldmlld1RoZW1lLG5vTWVybWFpZDpQPWUuZGVmYXVsdFByb3BzLm5vTWVybWFpZCxub0thdGV4Ong9ZS5kZWZhdWx0UHJvcHMubm9LYXRleCxvbkh0bWxDaGFuZ2VkOkk9ZS5kZWZhdWx0UHJvcHMub25IdG1sQ2hhbmdlZCxvbkdldENhdGFsb2c6Qz1lLmRlZmF1bHRQcm9wcy5vbkdldENhdGFsb2csc2FuaXRpemU6dz1lLmRlZmF1bHRQcm9wcy5zYW5pdGl6ZSxtZEhlYWRpbmdJZDp2PWUuZGVmYXVsdFByb3BzLm1kSGVhZGluZ0lkLG5vSWNvbmZvbnQ6TT1lLmRlZmF1bHRQcm9wcy5ub0ljb25mb250LG5vSGlnaGxpZ2h0OlI9ZS5kZWZhdWx0UHJvcHMubm9IaWdobGlnaHQsbm9JbWdab29tSW46SD1lLmRlZmF1bHRQcm9wcy5ub0ltZ1pvb21JbixsYW5ndWFnZTpFPWUuZGVmYXVsdFByb3BzLmxhbmd1YWdlLHNhbml0aXplTWVybWFpZDpiPWUuZGVmYXVsdFByb3BzLnNhbml0aXplTWVybWFpZCxjb2RlRm9sZGFibGU6Tj1lLmRlZmF1bHRQcm9wcy5jb2RlRm9sZGFibGUsYXV0b0ZvbGRUaHJlc2hvbGQ6VD1lLmRlZmF1bHRQcm9wcy5hdXRvRm9sZFRocmVzaG9sZH09byxbdF09ci51c2VTdGF0ZSgoKT0+KHtlZGl0b3JJZDppLG5vS2F0ZXg6eCxub01lcm1haWQ6UCxub0ljb25mb250Ok0sbm9IaWdobGlnaHQ6Un0pKSxtPXIudXNlUmVmKG51bGwpO2QudXNlRXhwYW5zaW9uUHJldmlldyh0KTtjb25zdFtxLHksbF09ZC51c2VDb25maWcobyk7cmV0dXJuIEYodCxzKSxyLnVzZUVmZmVjdCgoKT0+KCk9PnthLmJ1cy5jbGVhcihpKX0sW2ldKSx1LmpzeChkLkVkaXRvckNvbnRleHQuUHJvdmlkZXIse3ZhbHVlOntlZGl0b3JJZDp0LmVkaXRvcklkLHRhYldpZHRoOjIsdGhlbWU6YyxsYW5ndWFnZTpFLGhpZ2hsaWdodDpxLHNob3dDb2RlUm93TnVtYmVyOnAsdXNlZExhbmd1YWdlVGV4dDp5LHByZXZpZXdUaGVtZTpoLGN1c3RvbUljb246by5jdXN0b21JY29ufHx7fSxyb290UmVmOm19LGNoaWxkcmVuOnUuanN4KFwiZGl2XCIse2lkOnQuZWRpdG9ySWQsY2xhc3NOYW1lOmEuY2xhc3NuYW1lcyhbZS5wcmVmaXgsZyxjPT09XCJkYXJrXCImJmAke2UucHJlZml4fS1kYXJrYCxsLmZ1bGxzY3JlZW58fGwucGFnZUZ1bGxzY3JlZW4/YCR7ZS5wcmVmaXh9LWZ1bGxzY3JlZW5gOlwiXCIsYCR7ZS5wcmVmaXh9LXByZXZpZXdPbmx5YF0pLHN0eWxlOm8uc3R5bGUscmVmOm0sY2hpbGRyZW46dS5qc3goZC5Db250ZW50UHJldmlldyx7bW9kZWxWYWx1ZTpuLG9uQ2hhbmdlOmYsc2V0dGluZzpsLG1kSGVhZGluZ0lkOnYsb25IdG1sQ2hhbmdlZDpJLG9uR2V0Q2F0YWxvZzpDLHNhbml0aXplOncsbm9NZXJtYWlkOnQubm9NZXJtYWlkLG5vSGlnaGxpZ2h0OnQubm9IaWdobGlnaHQsbm9LYXRleDp0Lm5vS2F0ZXgsZm9ybWF0Q29waWVkVGV4dDpvLmZvcm1hdENvcGllZFRleHQsbm9JbWdab29tSW46SCxwcmV2aWV3T25seTohMCxzYW5pdGl6ZU1lcm1haWQ6Yixjb2RlRm9sZGFibGU6TixhdXRvRm9sZFRocmVzaG9sZDpUfSxcInByZXZpZXctb25seVwiKX0pfSl9KTttb2R1bGUuZXhwb3J0cz1qO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/md-editor-rt/lib/cjs/MdPreview.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/md-editor-rt/lib/cjs/ModalToolbar.cjs":
/*!************************************************************!*\
  !*** ./node_modules/md-editor-rt/lib/cjs/ModalToolbar.cjs ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const t=__webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\"),n=__webpack_require__(/*! ./chunks/config.cjs */ \"(ssr)/./node_modules/md-editor-rt/lib/cjs/chunks/config.cjs\"),c=__webpack_require__(/*! ./chunks/Editor.cjs */ \"(ssr)/./node_modules/md-editor-rt/lib/cjs/chunks/Editor.cjs\"),a=e=>{const{width:i=\"auto\",height:l=\"auto\"}=e;return t.jsxs(t.Fragment,{children:[t.jsx(\"div\",{className:`${n.prefix}-toolbar-item`,title:e.title,onClick:e.onClick,children:e.trigger}),t.jsx(c.Modal,{className:e.className,style:e.style,width:i,height:l,title:e.modalTitle,visible:e.visible,showMask:e.showMask,onClose:e.onClose,showAdjust:e.showAdjust,isFullscreen:e.isFullscreen,onAdjust:s=>{e.onAdjust instanceof Function&&e.onAdjust(s)},children:e.children})]})};module.exports=a;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWQtZWRpdG9yLXJ0L2xpYi9janMvTW9kYWxUb29sYmFyLmNqcyIsIm1hcHBpbmdzIjoiQUFBYSxRQUFRLG1CQUFPLENBQUMsZ0lBQW1CLElBQUksbUJBQU8sQ0FBQyx3RkFBcUIsSUFBSSxtQkFBTyxDQUFDLHdGQUFxQixRQUFRLE1BQU0sK0JBQStCLEdBQUcsMEJBQTBCLHVCQUF1QixhQUFhLFNBQVMsa0VBQWtFLGlCQUFpQixpTUFBaU0sOENBQThDLHFCQUFxQixHQUFHLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy9tZC1lZGl0b3ItcnQvbGliL2Nqcy9Nb2RhbFRvb2xiYXIuY2pzPzg1MGIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7Y29uc3QgdD1yZXF1aXJlKFwicmVhY3QvanN4LXJ1bnRpbWVcIiksbj1yZXF1aXJlKFwiLi9jaHVua3MvY29uZmlnLmNqc1wiKSxjPXJlcXVpcmUoXCIuL2NodW5rcy9FZGl0b3IuY2pzXCIpLGE9ZT0+e2NvbnN0e3dpZHRoOmk9XCJhdXRvXCIsaGVpZ2h0Omw9XCJhdXRvXCJ9PWU7cmV0dXJuIHQuanN4cyh0LkZyYWdtZW50LHtjaGlsZHJlbjpbdC5qc3goXCJkaXZcIix7Y2xhc3NOYW1lOmAke24ucHJlZml4fS10b29sYmFyLWl0ZW1gLHRpdGxlOmUudGl0bGUsb25DbGljazplLm9uQ2xpY2ssY2hpbGRyZW46ZS50cmlnZ2VyfSksdC5qc3goYy5Nb2RhbCx7Y2xhc3NOYW1lOmUuY2xhc3NOYW1lLHN0eWxlOmUuc3R5bGUsd2lkdGg6aSxoZWlnaHQ6bCx0aXRsZTplLm1vZGFsVGl0bGUsdmlzaWJsZTplLnZpc2libGUsc2hvd01hc2s6ZS5zaG93TWFzayxvbkNsb3NlOmUub25DbG9zZSxzaG93QWRqdXN0OmUuc2hvd0FkanVzdCxpc0Z1bGxzY3JlZW46ZS5pc0Z1bGxzY3JlZW4sb25BZGp1c3Q6cz0+e2Uub25BZGp1c3QgaW5zdGFuY2VvZiBGdW5jdGlvbiYmZS5vbkFkanVzdChzKX0sY2hpbGRyZW46ZS5jaGlsZHJlbn0pXX0pfTttb2R1bGUuZXhwb3J0cz1hO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/md-editor-rt/lib/cjs/ModalToolbar.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/md-editor-rt/lib/cjs/NormalToolbar.cjs":
/*!*************************************************************!*\
  !*** ./node_modules/md-editor-rt/lib/cjs/NormalToolbar.cjs ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const t=__webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\"),i=__webpack_require__(/*! ./chunks/config.cjs */ \"(ssr)/./node_modules/md-editor-rt/lib/cjs/chunks/config.cjs\"),r=e=>t.jsx(\"div\",{className:`${i.prefix}-toolbar-item`,title:e.title,onClick:e.onClick,children:e.trigger});module.exports=r;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWQtZWRpdG9yLXJ0L2xpYi9janMvTm9ybWFsVG9vbGJhci5janMiLCJtYXBwaW5ncyI6IkFBQWEsUUFBUSxtQkFBTyxDQUFDLGdJQUFtQixJQUFJLG1CQUFPLENBQUMsd0ZBQXFCLG9CQUFvQixhQUFhLFNBQVMsa0VBQWtFLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy9tZC1lZGl0b3ItcnQvbGliL2Nqcy9Ob3JtYWxUb29sYmFyLmNqcz8xNjk1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO2NvbnN0IHQ9cmVxdWlyZShcInJlYWN0L2pzeC1ydW50aW1lXCIpLGk9cmVxdWlyZShcIi4vY2h1bmtzL2NvbmZpZy5janNcIikscj1lPT50LmpzeChcImRpdlwiLHtjbGFzc05hbWU6YCR7aS5wcmVmaXh9LXRvb2xiYXItaXRlbWAsdGl0bGU6ZS50aXRsZSxvbkNsaWNrOmUub25DbGljayxjaGlsZHJlbjplLnRyaWdnZXJ9KTttb2R1bGUuZXhwb3J0cz1yO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/md-editor-rt/lib/cjs/NormalToolbar.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/md-editor-rt/lib/cjs/chunks/Editor.cjs":
/*!*************************************************************!*\
  !*** ./node_modules/md-editor-rt/lib/cjs/chunks/Editor.cjs ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var hr=Object.defineProperty;var pr=(e,r,t)=>r in e?hr(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t;var oe=(e,r,t)=>pr(e,typeof r!=\"symbol\"?r+\"\":r,t);const u=__webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\"),f=__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"),g=__webpack_require__(/*! ./index.cjs */ \"(ssr)/./node_modules/md-editor-rt/lib/cjs/chunks/index.cjs\"),a=__webpack_require__(/*! ./config.cjs */ \"(ssr)/./node_modules/md-editor-rt/lib/cjs/chunks/config.cjs\"),ke=__webpack_require__(/*! @vavt/util */ \"(ssr)/./node_modules/@vavt/util/lib/cjs/index.cjs\"),de=__webpack_require__(/*! codemirror */ \"(ssr)/./node_modules/codemirror/dist/index.cjs\"),pe=__webpack_require__(/*! @codemirror/view */ \"(ssr)/./node_modules/@codemirror/view/dist/index.cjs\"),br=__webpack_require__(/*! @codemirror/language-data */ \"(ssr)/./node_modules/@codemirror/language-data/dist/index.cjs\"),xr=__webpack_require__(/*! @codemirror/lang-markdown */ \"(ssr)/./node_modules/@codemirror/lang-markdown/dist/index.cjs\"),z=__webpack_require__(/*! @codemirror/state */ \"(ssr)/./node_modules/@codemirror/state/dist/index.cjs\"),le=__webpack_require__(/*! @codemirror/commands */ \"(ssr)/./node_modules/@codemirror/commands/dist/index.cjs\"),we=__webpack_require__(/*! @codemirror/language */ \"(ssr)/./node_modules/@codemirror/language/dist/index.cjs\"),y=__webpack_require__(/*! @lezer/highlight */ \"(ssr)/./node_modules/@lezer/highlight/dist/index.cjs\"),vr=__webpack_require__(/*! @codemirror/autocomplete */ \"(ssr)/./node_modules/@codemirror/autocomplete/dist/index.cjs\"),Cr=__webpack_require__(/*! @codemirror/search */ \"(ssr)/./node_modules/@codemirror/search/dist/index.cjs\"),kr=__webpack_require__(/*! medium-zoom */ \"(ssr)/./node_modules/medium-zoom/dist/medium-zoom.min.js\"),wr=__webpack_require__(/*! copy-to-clipboard */ \"(ssr)/./node_modules/copy-to-clipboard/index.js\"),yr=__webpack_require__(/*! markdown-it */ \"(ssr)/./node_modules/markdown-it/dist/index.cjs.js\"),Er=__webpack_require__(/*! markdown-it-image-figures */ \"(ssr)/./node_modules/markdown-it-image-figures/dist/markdown-it-images-figures.cjs\"),$r=__webpack_require__(/*! markdown-it-sub */ \"(ssr)/./node_modules/markdown-it-sub/dist/index.cjs.js\"),Tr=__webpack_require__(/*! markdown-it-sup */ \"(ssr)/./node_modules/markdown-it-sup/dist/index.cjs.js\"),Sr=__webpack_require__(/*! lru-cache */ \"(ssr)/./node_modules/md-editor-rt/node_modules/lru-cache/dist/commonjs/index.js\"),Ar=__webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\");function Nr(e,r){for(var t=0;t<r.length;t++){const n=r[t];if(typeof n!=\"string\"&&!Array.isArray(n)){for(const s in n)if(s!==\"default\"&&!(s in e)){const i=Object.getOwnPropertyDescriptor(n,s);i&&Object.defineProperty(e,s,i.get?i:{enumerable:!0,get:()=>n[s]})}}}return Object.freeze(Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}))}const Ir=(e,r)=>{const t=n=>{const s=e.parentElement||document.body,i=s.offsetWidth,l=s.offsetHeight,{clientWidth:c,clientHeight:d}=document.documentElement,p=n.offsetX,o=n.offsetY,m=x=>{let b=x.x+document.body.scrollLeft-document.body.clientLeft-p,k=x.y+document.body.scrollTop-document.body.clientTop-o;b=b<1?1:b<c-i-1?b:c-i-1,k=k<1?1:k<d-l-1?k:d-l-1,r?r(b,k):(s.style.left=b+\"px\",s.style.top=k+\"px\")};document.addEventListener(\"mousemove\",m);const h=()=>{document.removeEventListener(\"mousemove\",m),document.removeEventListener(\"mouseup\",h)};document.addEventListener(\"mouseup\",h)};return e.addEventListener(\"mousedown\",t),()=>{e.removeEventListener(\"mousedown\",t)}},K=(e,r,t=\"\")=>{var s;const n=document.getElementById(r.id);if(n)t!==\"\"&&(Reflect.get(window,t)?(s=r.onload)==null||s.call(n,new Event(\"load\")):r.onload&&n.addEventListener(\"load\",r.onload));else{const i={...r};i.onload=null;const l=jr(e,i);r.onload&&l.addEventListener(\"load\",r.onload),document.head.appendChild(l)}},Lr=(e,r)=>{const t=document.getElementById(r.id);t==null||t.remove(),K(e,r)},jr=(e,r)=>{const t=document.createElement(e);return Object.keys(r).forEach(n=>{r[n]!==void 0&&(t[n]=r[n])}),t},Tt=(()=>{const e=t=>{if(!t)return;const n=t.firstChild;let s=1,i=0,l=0,c=!1,d,p,o,m=1;const h=()=>{n.style.transform=`translate(${i}px, ${l}px) scale(${s})`};t.addEventListener(\"touchstart\",x=>{x.touches.length===1?(c=!0,d=x.touches[0].clientX-i,p=x.touches[0].clientY-l):x.touches.length===2&&(o=Math.hypot(x.touches[0].clientX-x.touches[1].clientX,x.touches[0].clientY-x.touches[1].clientY),m=s)},{passive:!1}),t.addEventListener(\"touchmove\",x=>{if(x.preventDefault(),c&&x.touches.length===1)i=x.touches[0].clientX-d,l=x.touches[0].clientY-p,h();else if(x.touches.length===2){const k=Math.hypot(x.touches[0].clientX-x.touches[1].clientX,x.touches[0].clientY-x.touches[1].clientY)/o,v=s;s=m*(1+(k-1));const C=(x.touches[0].clientX+x.touches[1].clientX)/2,w=(x.touches[0].clientY+x.touches[1].clientY)/2,E=n.getBoundingClientRect(),$=(C-E.left)/v,T=(w-E.top)/v;i-=$*(s-v),l-=T*(s-v),h()}},{passive:!1}),t.addEventListener(\"touchend\",()=>{c=!1}),t.addEventListener(\"wheel\",x=>{x.preventDefault();const b=.02,k=s;x.deltaY<0?s+=b:s=Math.max(.1,s-b);const v=n.getBoundingClientRect(),C=x.clientX-v.left,w=x.clientY-v.top;i-=C/k*(s-k),l-=w/k*(s-k),h()},{passive:!1}),t.addEventListener(\"mousedown\",x=>{c=!0,d=x.clientX-i,p=x.clientY-l}),t.addEventListener(\"mousemove\",x=>{c&&(i=x.clientX-d,l=x.clientY-p,h())}),t.addEventListener(\"mouseup\",()=>{c=!1}),t.addEventListener(\"mouseleave\",()=>{c=!1})};return t=>{t.forEach(n=>{e(n)})}})(),Rr=(e,r)=>{const{modelValue:t,onSave:n}=e,{editorId:s}=r,[i,l]=f.useState({buildFinished:!1,html:\"\"});f.useEffect(()=>{const c=d=>{l(()=>({buildFinished:!0,html:d}))};return g.bus.on(s,{name:g.BUILD_FINISHED,callback:c}),()=>{g.bus.remove(s,g.BUILD_FINISHED,c)}},[s]),f.useEffect(()=>{const c=()=>{if(n){const d=new Promise(p=>{if(i.buildFinished)p(i.html);else{const o=m=>{p(m),g.bus.remove(s,g.BUILD_FINISHED,o)};g.bus.on(s,{name:g.BUILD_FINISHED,callback:o})}});n(t,d)}};return g.bus.on(s,{name:g.ON_SAVE,callback:c}),()=>{g.bus.remove(s,g.ON_SAVE,c)}},[s,t,n,i.buildFinished,i.html]),f.useEffect(()=>{l(c=>({...c,buildFinished:!1}))},[t])},Pr=e=>{const{noPrettier:r,noUploadImg:t}=e;f.useEffect(()=>{const{editorExtensions:n,editorExtensionsAttrs:s}=a.configOption,i=r||!!n.prettier.prettierInstance,l=r||!!n.prettier.parserMarkdownInstance;if(!(t||!!n.cropper.instance)){const{js:d={},css:p={}}=s.cropper||{};K(\"link\",{...p,rel:\"stylesheet\",href:n.cropper.css,id:`${a.prefix}-cropperCss`}),K(\"script\",{...d,src:n.cropper.js,id:`${a.prefix}-cropper`})}if(!i){const{standaloneJs:d={}}=s.prettier||{};K(\"script\",{...d,src:n.prettier.standaloneJs,id:`${a.prefix}-prettier`})}if(!l){const{parserMarkdownJs:d={}}=s.prettier||{};K(\"script\",{...d,src:n.prettier.parserMarkdownJs,id:`${a.prefix}-prettierMD`})}},[r,t]),Yt(e)},Yt=({noIconfont:e})=>{f.useEffect(()=>{const{editorExtensions:r,editorExtensionsAttrs:t,iconfontType:n}=a.configOption;e||(n===\"svg\"?K(\"script\",{...t.iconfont,src:r.iconfont,id:`${a.prefix}-icon`}):K(\"link\",{...t.iconfontClass,rel:\"stylesheet\",href:r.iconfontClass,id:`${a.prefix}-icon-class`}))},[e])},_r=(e,r)=>{f.useEffect(()=>(g.bus.on(e,{name:g.ERROR_CATCHER,callback:r}),()=>{g.bus.remove(e,g.ERROR_CATCHER,r)}),[e,r])},Or=(e,r)=>{const{editorId:t}=r,{onUploadImg:n}=e;f.useEffect(()=>{const s=(i,l)=>{const c=d=>{g.bus.emit(t,g.REPLACE,\"image\",{desc:\"\",urls:d}),l&&l()};n==null||n(i,c)};return g.bus.on(t,{name:g.UPLOAD_IMAGE,callback:s}),()=>{g.bus.remove(t,g.UPLOAD_IMAGE,s)}},[t,n])},Mr=(e,r)=>{const{toolbars:t=a.allToolbar,toolbarsExclude:n=[]}=e,{editorId:s}=r,[i,l]=f.useState(!1);return f.useEffect(()=>{const d=p=>{l(p===void 0?o=>!o:p)};return g.bus.on(s,{name:g.CHANGE_CATALOG_VISIBLE,callback:d}),()=>{g.bus.remove(s,g.CHANGE_CATALOG_VISIBLE,d)}},[s]),f.useMemo(()=>!n.includes(\"catalog\")&&t.includes(\"catalog\")&&i,[i,t,n])};let St=\"\";const Zt=e=>{const{theme:r=a.defaultProps.theme,preview:t=a.defaultProps.preview,htmlPreview:n=a.defaultProps.htmlPreview,pageFullscreen:s=a.defaultProps.pageFullscreen,previewTheme:i=a.defaultProps.previewTheme,codeTheme:l=a.defaultProps.codeTheme,language:c=a.defaultProps.language,codeStyleReverse:d=a.defaultProps.codeStyleReverse,codeStyleReverseList:p=a.defaultProps.codeStyleReverseList}=e,o=f.useMemo(()=>{const v=a.configOption.editorExtensions.highlight,C=a.configOption.editorExtensionsAttrs.highlight,{js:w}=v,E={...a.codeCss,...v.css},{js:$,css:T={}}=C||{},A=d&&p.includes(i)?\"dark\":r,S=E[l]?E[l][A]:a.codeCss.atom[A],j=E[l]&&T[l]?T[l][A]:T.atom?T.atom[A]:{};return{js:{src:w,...$},css:{href:S,...j}}},[d,p,i,r,l]),m=f.useMemo(()=>{const v={...a.staticTextDefault,...a.configOption.editorConfig.languageUserDefined};return v[c]?v[c]:a.staticTextDefault[\"zh-CN\"]},[c]),[h,x]=f.useState({pageFullscreen:s,fullscreen:!1,preview:t,htmlPreview:t?!1:n,previewOnly:!1}),b=f.useRef(h),k=f.useCallback((v,C)=>{x(w=>{const E=C===void 0?!w[v]:C,$={...w};switch(v){case\"preview\":{$.htmlPreview=!1,$.previewOnly=!1;break}case\"htmlPreview\":{$.preview=!1,$.previewOnly=!1;break}case\"previewOnly\":{E?!$.preview&&!$.htmlPreview&&($.preview=!0):(b.current.preview||($.preview=!1),b.current.htmlPreview||($.htmlPreview=!1));break}}return b.current[v]=E,$[v]=E,$})},[]);return f.useEffect(()=>{St=document.body.style.overflow},[]),f.useEffect(()=>{h.pageFullscreen||h.fullscreen?document.body.style.overflow=\"hidden\":document.body.style.overflow=St},[h.pageFullscreen,h.fullscreen]),[o,m,h,k]},Dr=(e,r,t,n,s,i)=>{const{editorId:l}=r;f.useEffect(()=>{g.bus.emit(l,g.PAGE_FULL_SCREEN_CHANGED,n.pageFullscreen)},[l,n.pageFullscreen]),f.useEffect(()=>{g.bus.emit(l,g.FULL_SCREEN_CHANGED,n.fullscreen)},[l,n.fullscreen]),f.useEffect(()=>{g.bus.emit(l,g.PREVIEW_CHANGED,n.preview)},[l,n.preview]),f.useEffect(()=>{g.bus.emit(l,g.PREVIEW_ONLY_CHANGED,n.previewOnly)},[l,n.previewOnly]),f.useEffect(()=>{g.bus.emit(l,g.HTML_PREVIEW_CHANGED,n.htmlPreview)},[l,n.htmlPreview]),f.useEffect(()=>{g.bus.emit(l,g.CATALOG_VISIBLE_CHANGED,t)},[t,l]),f.useImperativeHandle(e,()=>({on(d,p){switch(d){case\"pageFullscreen\":{g.bus.on(l,{name:g.PAGE_FULL_SCREEN_CHANGED,callback(o){p(o)}});break}case\"fullscreen\":{g.bus.on(l,{name:g.FULL_SCREEN_CHANGED,callback(o){p(o)}});break}case\"preview\":{g.bus.on(l,{name:g.PREVIEW_CHANGED,callback(o){p(o)}});break}case\"previewOnly\":{g.bus.on(l,{name:g.PREVIEW_ONLY_CHANGED,callback(o){p(o)}});break}case\"htmlPreview\":{g.bus.on(l,{name:g.HTML_PREVIEW_CHANGED,callback(o){p(o)}});break}case\"catalog\":{g.bus.on(l,{name:g.CATALOG_VISIBLE_CHANGED,callback(o){p(o)}});break}}},togglePageFullscreen(d){s(\"pageFullscreen\",d)},toggleFullscreen(d){g.bus.emit(l,g.CHANGE_FULL_SCREEN,d)},togglePreview(d){s(\"preview\",d)},togglePreviewOnly(d){s(\"previewOnly\",d)},toggleHtmlPreview(d){s(\"htmlPreview\",d)},toggleCatalog(d){g.bus.emit(l,g.CHANGE_CATALOG_VISIBLE,d)},triggerSave(){g.bus.emit(l,g.ON_SAVE)},insert(d){g.bus.emit(l,g.REPLACE,\"universal\",{generate:d})},focus(d){var p;(p=i.current)==null||p.focus(d)},rerender(){g.bus.emit(l,g.RERENDER)},getSelectedText(){var d;return(d=i.current)==null?void 0:d.getSelectedText()},resetHistory(){var d;(d=i.current)==null||d.resetHistory()},domEventHandlers(d){g.bus.emit(l,g.EVENT_LISTENER,d)},execCommand(d){g.bus.emit(l,g.REPLACE,d)},getEditorView(){var d;return(d=i.current)==null?void 0:d.getEditorView()}}),[i,l,s])},Hr=()=>u.jsx(\"div\",{className:`${a.prefix}-divider`}),At=`${a.prefix}-dropdown-hidden`,he=e=>{const{relative:r=\"html\"}=e,[t,n]=f.useState({overlayClass:At,overlayStyle:{}}),s=f.useRef({triggerHover:!1,overlayHover:!1}),i=f.useRef(null),l=f.useRef(null),c=f.useCallback(()=>{var W,V;s.current.triggerHover=!0;const k=i.current,v=l.current;if(!k||!v)return;const C=k.getBoundingClientRect(),w=k.offsetTop,E=k.offsetLeft,$=C.height,T=C.width,A=k.getRootNode(),S=((W=A.querySelector(r))==null?void 0:W.scrollLeft)||0,j=((V=A.querySelector(r))==null?void 0:V.clientWidth)||0;let _=E-v.offsetWidth/2+T/2-S;_+v.offsetWidth>S+j&&(_=S+j-v.offsetWidth),_<0&&(_=0),n(Q=>({...Q,overlayStyle:{top:w+$+\"px\",left:_+\"px\"}})),e.onChange(!0)},[e,r]),d=()=>{s.current.overlayHover=!0};f.useEffect(()=>{e.visible?n(k=>({...k,overlayClass:\"\"})):n(k=>({...k,overlayClass:At}))},[e.visible]);const p=f.useRef(-1),o=f.useCallback(k=>{i.current===k.target?s.current.triggerHover=!1:s.current.overlayHover=!1,clearTimeout(p.current),p.current=window.setTimeout(()=>{!s.current.overlayHover&&!s.current.triggerHover&&e.onChange(!1)},10)},[e]);f.useEffect(()=>{var k,v,C,w;return(k=i.current)==null||k.addEventListener(\"mouseenter\",c),(v=i.current)==null||v.addEventListener(\"mouseleave\",o),(C=l.current)==null||C.addEventListener(\"mouseenter\",d),(w=l.current)==null||w.addEventListener(\"mouseleave\",o),()=>{var E,$,T,A;(E=i.current)==null||E.removeEventListener(\"mouseenter\",c),($=i.current)==null||$.removeEventListener(\"mouseleave\",o),(T=l.current)==null||T.removeEventListener(\"mouseenter\",d),(A=l.current)==null||A.removeEventListener(\"mouseleave\",o)}},[o,c]);const m=e.children,h=e.overlay,x=f.cloneElement(m,{ref:i,key:\"cloned-dropdown-trigger\"}),b=u.jsx(\"div\",{className:`${a.prefix}-dropdown ${t.overlayClass}`,style:t.overlayStyle,ref:l,children:u.jsx(\"div\",{className:`${a.prefix}-dropdown-overlay`,children:h instanceof Array?h[0]:h})});return u.jsxs(u.Fragment,{children:[x,b]})},Fr=e=>a.configOption.iconfontType===\"svg\"?u.jsx(\"svg\",{className:`${a.prefix}-icon`,\"aria-hidden\":\"true\",children:u.jsx(\"use\",{xlinkHref:`#${a.prefix}-icon-${e.name}`})}):u.jsx(\"i\",{className:`${a.prefix}-iconfont ${a.prefix}-icon-${e.name}`}),L=e=>{const{customIcon:r}=f.useContext(F),t=r[e.name];if(typeof t==\"object\"){const n=t.component;return typeof n==\"function\"?u.jsx(n,{...t.props}):u.jsx(\"span\",{dangerouslySetInnerHTML:{__html:t.component}})}return u.jsx(Fr,{name:e.name})},Vr=`${a.prefix}-modal-container`,Me=e=>{const{theme:r,rootRef:t}=f.useContext(F),{onClose:n=()=>{},onAdjust:s=()=>{},style:i={},showMask:l=!0}=e,[c,d]=f.useState(e.visible),[p,o]=f.useState([`${a.prefix}-modal`]),m=f.useRef(null),h=f.useRef(null),x=f.useRef(),b=f.useRef(null),[k,v]=f.useState({maskStyle:{zIndex:-1},modalStyle:{zIndex:-1},initPos:{left:\"0px\",top:\"0px\"},historyPos:{left:\"0px\",top:\"0px\"}}),C=f.useMemo(()=>e.isFullscreen?{width:\"100%\",height:\"100%\"}:{width:e.width,height:e.height},[e.height,e.isFullscreen,e.width]);return f.useEffect(()=>{var E;const w=(E=t.current)==null?void 0:E.getRootNode();return x.current=w instanceof Document?document.body:w,()=>{x.current=void 0}},[t]),f.useEffect(()=>{let w=()=>{};return!e.isFullscreen&&e.visible&&(w=Ir(h.current,(E,$)=>{v(T=>({...T,initPos:{left:E+\"px\",top:$+\"px\"}}))})),w},[e.isFullscreen,e.visible]),f.useEffect(()=>{if(c){const w=m.current.offsetWidth/2,E=m.current.offsetHeight/2,$=document.documentElement.clientWidth/2,T=document.documentElement.clientHeight/2;v(A=>({...A,maskStyle:{zIndex:a.configOption.editorConfig.zIndex+g.getZIndexIncrement()},modalStyle:{zIndex:a.configOption.editorConfig.zIndex+g.getZIndexIncrement()},initPos:{left:$-w+\"px\",top:T-E+\"px\"}}))}},[c]),f.useEffect(()=>{const w=e.visible;w?(o(()=>[`${a.prefix}-modal`,\"zoom-in\"]),d(w)):(o(()=>[`${a.prefix}-modal`,\"zoom-out\"]),setTimeout(()=>{d(w)},150))},[e.visible]),u.jsx(u.Fragment,{children:x.current&&Ar.createPortal(u.jsx(\"div\",{ref:b,className:Vr,\"data-theme\":r,children:u.jsxs(\"div\",{className:e.className,style:{...i,display:c?\"block\":\"none\"},children:[l&&u.jsx(\"div\",{className:`${a.prefix}-modal-mask`,style:k.maskStyle,onClick:n}),u.jsxs(\"div\",{className:p.join(\" \"),style:{...k.modalStyle,...k.initPos,...C},ref:m,children:[u.jsx(\"div\",{className:`${a.prefix}-modal-header`,ref:h,children:e.title||\"\"}),u.jsxs(\"div\",{className:`${a.prefix}-modal-func`,children:[e.showAdjust&&u.jsx(\"div\",{className:`${a.prefix}-modal-adjust`,onClick:w=>{w.stopPropagation(),e.isFullscreen?v(E=>({...E,initPos:E.historyPos})):v(E=>({...E,historyPos:E.initPos,initPos:{left:\"0\",top:\"0\"}})),s instanceof Function&&s(!e.isFullscreen)},children:u.jsx(L,{name:e.isFullscreen?\"suoxiao\":\"fangda\"})}),u.jsx(\"div\",{className:`${a.prefix}-modal-close`,onClick:w=>{w.stopPropagation(),e.onClose&&e.onClose()},children:u.jsx(L,{name:\"close\"})})]}),u.jsx(\"div\",{className:`${a.prefix}-modal-body`,children:e.children})]})]})}),x.current)})},Wr=e=>{var l,c,d,p,o;const{editorId:r,usedLanguageText:t}=f.useContext(F),n=f.useMemo(()=>{var m,h;switch(e.type){case\"link\":return(m=t.linkModalTips)==null?void 0:m.linkTitle;case\"image\":return(h=t.linkModalTips)==null?void 0:h.imageTitle;default:return\"\"}},[e.type,t]),[s,i]=f.useState({desc:\"\",url:\"\"});return f.useEffect(()=>{e.visible||setTimeout(()=>{i({desc:\"\",url:\"\"})},200)},[e.visible]),f.useMemo(()=>{var m,h,x,b,k;return u.jsxs(Me,{title:n,visible:e.visible,onClose:e.onCancel,children:[u.jsxs(\"div\",{className:`${a.prefix}-form-item`,children:[u.jsx(\"label\",{className:`${a.prefix}-label`,htmlFor:`link-desc-${r}`,children:(m=t.linkModalTips)==null?void 0:m.descLabel}),u.jsx(\"input\",{placeholder:(h=t.linkModalTips)==null?void 0:h.descLabelPlaceHolder,className:`${a.prefix}-input`,id:`link-desc-${r}`,type:\"text\",value:s.desc,onChange:v=>{i(C=>({...C,desc:v.target.value}))}})]}),u.jsxs(\"div\",{className:`${a.prefix}-form-item`,children:[u.jsx(\"label\",{className:`${a.prefix}-label`,htmlFor:`link-url-${r}`,children:(x=t.linkModalTips)==null?void 0:x.urlLabel}),u.jsx(\"input\",{placeholder:(b=t.linkModalTips)==null?void 0:b.urlLabelPlaceHolder,className:`${a.prefix}-input`,id:`link-url-${r}`,type:\"text\",value:s.url,onChange:v=>{i(C=>({...C,url:v.target.value}))}})]}),u.jsx(\"div\",{className:`${a.prefix}-form-item`,children:u.jsx(\"button\",{className:`${a.prefix}-btn ${a.prefix}-btn-row`,type:\"button\",onClick:()=>{e.onOk(s),i(v=>({...v,desc:\"\",url:\"\"}))},children:(k=t.linkModalTips)==null?void 0:k.buttonOK})})]})},[n,e,r,(l=t.linkModalTips)==null?void 0:l.descLabel,(c=t.linkModalTips)==null?void 0:c.descLabelPlaceHolder,(d=t.linkModalTips)==null?void 0:d.urlLabel,(p=t.linkModalTips)==null?void 0:p.urlLabelPlaceHolder,(o=t.linkModalTips)==null?void 0:o.buttonOK,s])};let ie=null;const Gr=e=>{var b,k,v;const r=f.useContext(F),{editorId:t,usedLanguageText:n,rootRef:s}=r,i=a.configOption.editorExtensions.cropper.instance,l=f.useRef(null),c=f.useRef(null),d=f.useRef(null),[p,o]=f.useState({cropperInited:!1,imgSelected:!1,imgSrc:\"\",isFullscreen:!1});f.useEffect(()=>{e.visible&&!p.cropperInited&&(window.Cropper=i||window.Cropper,l.current.onchange=()=>{if(!window.Cropper){g.bus.emit(t,g.ERROR_CATCHER,{name:\"Cropper\",message:\"Cropper is undefined\"});return}const C=l.current.files||[];if((C==null?void 0:C.length)>0){const w=new FileReader;w.onload=E=>{o($=>({...$,imgSelected:!0,imgSrc:E.target.result}))},w.readAsDataURL(C[0])}})},[e.visible,p.cropperInited,i,t]),f.useEffect(()=>{var C;(C=d.current)==null||C.setAttribute(\"style\",\"\")},[p.imgSelected]),f.useEffect(()=>{var C,w;ie==null||ie.destroy(),(C=d.current)==null||C.setAttribute(\"style\",\"\"),c.current&&p.imgSrc&&(ie=new window.Cropper(c.current,{viewMode:2,preview:((w=s.current)==null?void 0:w.getRootNode()).querySelector(`.${a.prefix}-clip-preview-target`)}))},[p.imgSrc,p.isFullscreen,s]);const m=f.useMemo(()=>p.isFullscreen?{width:\"100%\",height:\"100%\"}:{width:\"668px\",height:\"392px\"},[p.isFullscreen]),h=()=>{ie.clear(),ie.destroy(),ie=null,l.current.value=\"\",o(C=>({...C,imgSrc:\"\",imgSelected:!1}))},x=f.useCallback(C=>{o(w=>({...w,isFullscreen:C}))},[]);return f.useMemo(()=>{var C,w,E;return u.jsxs(Me,{className:`${a.prefix}-modal-clip`,title:(C=n.clipModalTips)==null?void 0:C.title,visible:e.visible,onClose:e.onCancel,showAdjust:!0,isFullscreen:p.isFullscreen,onAdjust:x,...m,children:[u.jsxs(\"div\",{className:`${a.prefix}-form-item ${a.prefix}-clip`,children:[u.jsx(\"div\",{className:`${a.prefix}-clip-main`,children:p.imgSelected?u.jsxs(\"div\",{className:`${a.prefix}-clip-cropper`,children:[u.jsx(\"img\",{src:p.imgSrc,ref:c,style:{display:\"none\"},alt:\"\"}),u.jsx(\"div\",{className:`${a.prefix}-clip-delete`,onClick:h,children:u.jsx(L,{name:\"delete\"})})]}):u.jsx(\"div\",{className:`${a.prefix}-clip-upload`,onClick:()=>{l.current.click()},role:\"button\",tabIndex:0,\"aria-label\":(w=n.imgTitleItem)==null?void 0:w.upload,children:u.jsx(L,{name:\"upload\"})})}),u.jsx(\"div\",{className:`${a.prefix}-clip-preview`,children:u.jsx(\"div\",{className:`${a.prefix}-clip-preview-target`,ref:d})})]}),u.jsx(\"div\",{className:`${a.prefix}-form-item`,children:u.jsx(\"button\",{className:`${a.prefix}-btn`,type:\"button\",onClick:()=>{if(ie){const $=ie.getCroppedCanvas();g.bus.emit(t,g.UPLOAD_IMAGE,[g.base642File($.toDataURL(\"image/png\"))],e.onOk),h()}},children:(E=n.linkModalTips)==null?void 0:E.buttonOK})}),u.jsx(\"input\",{ref:l,accept:\"image/*\",type:\"file\",multiple:!1,style:{display:\"none\"},\"aria-hidden\":\"true\"})]})},[(b=n.clipModalTips)==null?void 0:b.title,(k=n.linkModalTips)==null?void 0:k.buttonOK,(v=n.imgTitleItem)==null?void 0:v.upload,e.visible,e.onCancel,e.onOk,p.isFullscreen,p.imgSelected,p.imgSrc,x,m,t])},Br=e=>u.jsxs(u.Fragment,{children:[u.jsx(Wr,{type:e.type,visible:e.linkVisible,onOk:e.onOk,onCancel:e.onCancel}),u.jsx(Gr,{visible:e.clipVisible,onOk:e.onOk,onCancel:e.onCancel})]}),qr=e=>{const[r,t]=f.useState({x:-1,y:-1}),n=f.useMemo(()=>JSON.stringify(e.tableShape),[e.tableShape]),s=f.useCallback(()=>{const c=[...JSON.parse(n)];return(!c[2]||c[2]<c[0])&&(c[2]=c[0]),(!c[3]||c[3]<c[3])&&(c[3]=c[1]),c},[n]),[i,l]=f.useState(s);return f.useEffect(()=>{l(s),t({x:-1,y:-1})},[s]),u.jsx(\"div\",{className:`${a.prefix}-table-shape`,onMouseLeave:()=>{l(s),t({x:-1,y:-1})},children:new Array(i[1]).fill(\"\").map((c,d)=>u.jsx(\"div\",{className:`${a.prefix}-table-shape-row`,children:new Array(i[0]).fill(\"\").map((p,o)=>u.jsx(\"div\",{className:`${a.prefix}-table-shape-col`,onMouseEnter:()=>{t({x:d,y:o}),o+1===i[0]&&o+1<i[2]?l(m=>{const h=[...m];return h[0]=m[0]+1,h}):o+2<i[0]&&i[0]>e.tableShape[0]&&l(m=>{const h=[...m];return h[0]=m[0]-1,h}),d+1===i[1]&&d+1<i[3]?l(m=>{const h=[...m];return h[1]=m[1]+1,h}):d+2<i[1]&&i[1]>e.tableShape[1]&&l(m=>{const h=[...m];return h[1]=m[1]-1,h})},onClick:()=>{e.onSelected(r)},children:u.jsx(\"div\",{className:[`${a.prefix}-table-shape-col-default`,d<=r.x&&o<=r.y&&`${a.prefix}-table-shape-col-include`].filter(m=>!!m).join(\" \")})},`table-shape-col-${o}`))},`table-shape-row-${d}`))})},zr=e=>{const{updateSetting:r}=e,{editorId:t}=f.useContext(F),n=f.useRef(a.configOption.editorExtensions.screenfull.instance),s=f.useRef(!1),i=f.useCallback(l=>{if(!n.current){g.bus.emit(t,g.ERROR_CATCHER,{name:\"fullscreen\",message:\"fullscreen is undefined\"});return}n.current.isEnabled?(s.current=!s.current,(l===void 0?!n.current.isFullscreen:l)?n.current.request():n.current.exit()):console.error(\"browser does not support screenfull!\")},[t]);return f.useEffect(()=>{const l=()=>{r(\"fullscreen\",s.current)};let c=-1;if(!n.current){const{editorExtensions:d,editorExtensionsAttrs:p}=a.configOption;c=requestAnimationFrame(()=>{var o;K(\"script\",{...(o=p.screenfull)==null?void 0:o.js,src:d.screenfull.js,id:`${a.prefix}-screenfull`,onload(){n.current=window.screenfull,n.current&&n.current.isEnabled&&n.current.on(\"change\",l)}},\"screenfull\")})}return n.current&&n.current.isEnabled&&n.current.on(\"change\",l),()=>{n.current||cancelAnimationFrame(c),n.current&&n.current.isEnabled&&n.current.off(\"change\",l)}},[r]),f.useEffect(()=>(g.bus.on(t,{name:g.CHANGE_FULL_SCREEN,callback:i}),()=>{g.bus.remove(t,g.CHANGE_FULL_SCREEN,i)}),[t,i]),{fullscreenHandler:i}},Ur=(e,r)=>{const{editorId:t}=f.useContext(F),[n,s]=f.useState({type:\"link\",linkVisible:!1,clipVisible:!1}),i=f.useCallback(()=>{s(c=>({...c,linkVisible:!1,clipVisible:!1}))},[]),l=f.useCallback(c=>{c&&r(n.type,{desc:c.desc,url:c.url,transform:n.type===\"image\"}),i()},[r,n.type,i]);return f.useEffect(()=>{g.bus.on(t,{name:g.OPEN_MODALS,callback(d){s(p=>({...p,type:d,linkVisible:!0}))}});const c=()=>{g.bus.emit(t,g.UPLOAD_IMAGE,Array.from(e.current.files||[])),e.current.value=\"\"};e.current.addEventListener(\"change\",c)},[t,e]),{modalData:n,setModalData:s,onCancel:i,onOk:l}},Xr=e=>{const[r,t]=f.useState({title:!1,catalog:!1,image:!1,table:!1,mermaid:!1,katex:!1}),n=f.useCallback(x=>{t(b=>({...b,title:x}))},[]),s=f.useCallback(()=>{t(x=>({...x,title:!1}))},[]),i=f.useCallback(x=>{t(b=>({...b,image:x}))},[]),l=f.useCallback(()=>{t(x=>({...x,image:!1}))},[]),c=f.useCallback(x=>{t(b=>({...b,table:x}))},[]),d=f.useCallback(x=>{e(\"table\",{selectedShape:x})},[e]),p=f.useCallback(x=>{t(b=>({...b,mermaid:x}))},[]),o=f.useCallback(()=>{t(x=>({...x,mermaid:!1}))},[]),m=f.useCallback(x=>{t(b=>({...b,katex:x}))},[]),h=f.useCallback(()=>{t(x=>({...x,katex:!1}))},[]);return{visible:r,onTitleChange:n,onTitleClose:s,onImageChange:i,onImageClose:l,onTableChange:c,onTableSelected:d,onMermaidChange:p,onMermaidClose:o,onKatexChange:m,onKatexClose:h}};let Kr=0;const Yr=e=>{var ae;const{toolbars:r,toolbarsExclude:t,updateSetting:n,codeTheme:s}=e,{editorId:i,usedLanguageText:l,theme:c,previewTheme:d,language:p}=f.useContext(F),o=l,[m]=f.useState(()=>`${i}-toolbar-wrapper`),h=f.useRef(null),x=f.useRef(null),b=f.useCallback((I,R)=>{g.bus.emit(i,g.REPLACE,I,R)},[i]),{fullscreenHandler:k}=zr(e),{modalData:v,setModalData:C,onCancel:w,onOk:E}=Ur(x,b),{visible:$,onTitleChange:T,onTitleClose:A,onImageChange:S,onImageClose:j,onTableChange:_,onTableSelected:W,onMermaidChange:V,onMermaidClose:Q,onKatexChange:ee,onKatexClose:te}=Xr(b),re=f.useMemo(()=>{var I,R,N,D,H,P,q,Y;return u.jsx(he,{relative:`#${m}`,visible:$.title,onChange:T,overlay:u.jsxs(\"ul\",{className:`${a.prefix}-menu`,onClick:A,role:\"menu\",children:[u.jsx(\"li\",{className:`${a.prefix}-menu-item ${a.prefix}-menu-item-title`,onClick:()=>{b(\"h1\")},role:\"menuitem\",tabIndex:0,children:(I=o.titleItem)==null?void 0:I.h1}),u.jsx(\"li\",{className:`${a.prefix}-menu-item ${a.prefix}-menu-item-title`,onClick:()=>{b(\"h2\")},role:\"menuitem\",tabIndex:0,children:(R=o.titleItem)==null?void 0:R.h2}),u.jsx(\"li\",{className:`${a.prefix}-menu-item ${a.prefix}-menu-item-title`,onClick:()=>{b(\"h3\")},role:\"menuitem\",tabIndex:0,children:(N=o.titleItem)==null?void 0:N.h3}),u.jsx(\"li\",{className:`${a.prefix}-menu-item ${a.prefix}-menu-item-title`,onClick:()=>{b(\"h4\")},role:\"menuitem\",tabIndex:0,children:(D=o.titleItem)==null?void 0:D.h4}),u.jsx(\"li\",{className:`${a.prefix}-menu-item ${a.prefix}-menu-item-title`,onClick:()=>{b(\"h5\")},role:\"menuitem\",tabIndex:0,children:(H=o.titleItem)==null?void 0:H.h5}),u.jsx(\"li\",{className:`${a.prefix}-menu-item ${a.prefix}-menu-item-title`,onClick:()=>{b(\"h6\")},role:\"menuitem\",tabIndex:0,children:(P=o.titleItem)==null?void 0:P.h6})]},\"bar-title-overlay\"),children:u.jsxs(\"div\",{className:`${a.prefix}-toolbar-item`,title:(q=o.toolbarTips)==null?void 0:q.title,children:[u.jsx(L,{name:\"title\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:(Y=o.toolbarTips)==null?void 0:Y.title})]},\"bar-title-trigger\")},\"bar-title\")},[m,$.title,T,A,o.titleItem,o.toolbarTips,e.showToolbarName,b]),J=f.useMemo(()=>{var I,R,N,D,H;return u.jsx(he,{relative:`#${m}`,visible:$.image,onChange:S,overlay:u.jsxs(\"ul\",{className:`${a.prefix}-menu`,onClick:j,role:\"menu\",children:[u.jsx(\"li\",{className:`${a.prefix}-menu-item ${a.prefix}-menu-item-image`,onClick:()=>{C(P=>({...P,type:\"image\",linkVisible:!0}))},role:\"menuitem\",tabIndex:0,children:(I=o.imgTitleItem)==null?void 0:I.link}),u.jsx(\"li\",{className:`${a.prefix}-menu-item ${a.prefix}-menu-item-image`,onClick:()=>{x.current.click()},role:\"menuitem\",tabIndex:0,children:(R=o.imgTitleItem)==null?void 0:R.upload}),u.jsx(\"li\",{className:`${a.prefix}-menu-item ${a.prefix}-menu-item-image`,onClick:()=>{C(P=>({...P,type:\"image\",clipVisible:!0}))},role:\"menuitem\",tabIndex:0,children:(N=o.imgTitleItem)==null?void 0:N.clip2upload})]},\"bar-image-overlay\"),children:u.jsxs(\"div\",{className:`${a.prefix}-toolbar-item`,title:(D=o.toolbarTips)==null?void 0:D.image,children:[u.jsx(L,{name:\"image\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:(H=o.toolbarTips)==null?void 0:H.image})]},\"bar-image-trigger\")},\"bar-image\")},[m,$.image,S,j,o.imgTitleItem,o.toolbarTips,e.showToolbarName,C]),G=f.useMemo(()=>{var I,R;return u.jsx(he,{relative:`#${m}`,visible:$.table,onChange:_,overlay:u.jsx(qr,{tableShape:e.tableShape,onSelected:W},\"bar-table-overlay\"),children:u.jsxs(\"div\",{className:`${a.prefix}-toolbar-item`,title:(I=o.toolbarTips)==null?void 0:I.table,children:[u.jsx(L,{name:\"table\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:(R=o.toolbarTips)==null?void 0:R.table})]},\"bar-table-trigger\")},\"bar-table\")},[m,$.table,_,e.tableShape,e.showToolbarName,W,o.toolbarTips]),B=f.useMemo(()=>{var I,R,N,D,H,P,q,Y,X,ue;return u.jsx(he,{relative:`#${m}`,visible:$.mermaid,onChange:V,overlay:u.jsxs(\"ul\",{className:`${a.prefix}-menu`,onClick:Q,role:\"menu\",children:[u.jsx(\"li\",{className:`${a.prefix}-menu-item ${a.prefix}-menu-item-mermaid`,onClick:()=>{b(\"flow\")},role:\"menuitem\",tabIndex:0,children:(I=o.mermaid)==null?void 0:I.flow}),u.jsx(\"li\",{className:`${a.prefix}-menu-item ${a.prefix}-menu-item-mermaid`,onClick:()=>{b(\"sequence\")},role:\"menuitem\",tabIndex:0,children:(R=o.mermaid)==null?void 0:R.sequence}),u.jsx(\"li\",{className:`${a.prefix}-menu-item ${a.prefix}-menu-item-mermaid`,onClick:()=>{b(\"gantt\")},role:\"menuitem\",tabIndex:0,children:(N=o.mermaid)==null?void 0:N.gantt}),u.jsx(\"li\",{className:`${a.prefix}-menu-item ${a.prefix}-menu-item-mermaid`,onClick:()=>{b(\"class\")},role:\"menuitem\",tabIndex:0,children:(D=o.mermaid)==null?void 0:D.class}),u.jsx(\"li\",{className:`${a.prefix}-menu-item ${a.prefix}-menu-item-mermaid`,onClick:()=>{b(\"state\")},role:\"menuitem\",tabIndex:0,children:(H=o.mermaid)==null?void 0:H.state}),u.jsx(\"li\",{className:`${a.prefix}-menu-item ${a.prefix}-menu-item-mermaid`,onClick:()=>{b(\"pie\")},role:\"menuitem\",tabIndex:0,children:(P=o.mermaid)==null?void 0:P.pie}),u.jsx(\"li\",{className:`${a.prefix}-menu-item ${a.prefix}-menu-item-mermaid`,onClick:()=>{b(\"relationship\")},role:\"menuitem\",tabIndex:0,children:(q=o.mermaid)==null?void 0:q.relationship}),u.jsx(\"li\",{className:`${a.prefix}-menu-item ${a.prefix}-menu-item-mermaid`,onClick:()=>{b(\"journey\")},role:\"menuitem\",tabIndex:0,children:(Y=o.mermaid)==null?void 0:Y.journey})]},\"bar-mermaid-overlay\"),children:u.jsxs(\"div\",{className:`${a.prefix}-toolbar-item`,title:(X=o.toolbarTips)==null?void 0:X.mermaid,children:[u.jsx(L,{name:\"mermaid\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:(ue=o.toolbarTips)==null?void 0:ue.mermaid})]},\"bar-mermaid-trigger\")},\"bar-mermaid\")},[m,$.mermaid,V,Q,o.mermaid,o.toolbarTips,e.showToolbarName,b]),O=f.useMemo(()=>{var I,R,N,D;return u.jsx(he,{relative:`#${m}`,visible:$.katex,onChange:ee,overlay:u.jsxs(\"ul\",{className:`${a.prefix}-menu`,onClick:te,role:\"menu\",children:[u.jsx(\"li\",{className:`${a.prefix}-menu-item ${a.prefix}-menu-item-katex`,onClick:()=>{b(\"katexInline\")},role:\"menuitem\",tabIndex:0,children:(I=o.katex)==null?void 0:I.inline}),u.jsx(\"li\",{className:`${a.prefix}-menu-item ${a.prefix}-menu-item-katex`,onClick:()=>{b(\"katexBlock\")},role:\"menuitem\",tabIndex:0,children:(R=o.katex)==null?void 0:R.block})]},\"bar-katex-overlay\"),children:u.jsxs(\"div\",{className:`${a.prefix}-toolbar-item`,title:(N=o.toolbarTips)==null?void 0:N.katex,children:[u.jsx(L,{name:\"formula\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:(D=o.toolbarTips)==null?void 0:D.katex})]},\"bar-katex-trigger\")},\"bar-katex\")},[m,$.katex,ee,te,o.katex,o.toolbarTips,e.showToolbarName,b]),U=f.useCallback(I=>{var R,N,D,H,P,q,Y,X,ue,me,Fe,Ve,We,Ge,Be,qe,ze,Ue,Xe,Ke,Ye,Ze,Qe,Je,et,tt,rt,nt,at,ot,it,st,lt,ct,ut,dt,ft,mt,gt,ht,pt,bt,xt,vt,Ct,kt,wt,yt,Et,$t;if(a.allToolbar.includes(I))switch(I){case\"-\":return u.jsx(Hr,{},`bar-${Kr++}`);case\"bold\":return u.jsxs(\"div\",{className:`${a.prefix}-toolbar-item`,title:(R=o.toolbarTips)==null?void 0:R.bold,onClick:()=>{b(\"bold\")},children:[u.jsx(L,{name:\"bold\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:(N=o.toolbarTips)==null?void 0:N.bold})]},\"bar-bold\");case\"underline\":return u.jsxs(\"div\",{className:`${a.prefix}-toolbar-item`,title:(D=o.toolbarTips)==null?void 0:D.underline,onClick:()=>{b(\"underline\")},children:[u.jsx(L,{name:\"underline\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:(H=o.toolbarTips)==null?void 0:H.underline})]},\"bar-underline\");case\"italic\":return u.jsxs(\"div\",{className:`${a.prefix}-toolbar-item`,title:(P=o.toolbarTips)==null?void 0:P.italic,onClick:()=>{b(\"italic\")},children:[u.jsx(L,{name:\"italic\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:(q=o.toolbarTips)==null?void 0:q.italic})]},\"bar-italic\");case\"strikeThrough\":return u.jsxs(\"div\",{className:`${a.prefix}-toolbar-item`,title:(Y=o.toolbarTips)==null?void 0:Y.strikeThrough,onClick:()=>{b(\"strikeThrough\")},children:[u.jsx(L,{name:\"strike-through\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:(X=o.toolbarTips)==null?void 0:X.strikeThrough})]},\"bar-strikeThrough\");case\"title\":return re;case\"sub\":return u.jsxs(\"div\",{className:`${a.prefix}-toolbar-item`,title:(ue=o.toolbarTips)==null?void 0:ue.sub,onClick:()=>{b(\"sub\")},children:[u.jsx(L,{name:\"sub\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:(me=o.toolbarTips)==null?void 0:me.sub})]},\"bar-sub\");case\"sup\":return u.jsxs(\"div\",{className:`${a.prefix}-toolbar-item`,title:(Fe=o.toolbarTips)==null?void 0:Fe.sup,onClick:()=>{b(\"sup\")},children:[u.jsx(L,{name:\"sup\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:(Ve=o.toolbarTips)==null?void 0:Ve.sup})]},\"bar-sup\");case\"quote\":return u.jsxs(\"div\",{className:`${a.prefix}-toolbar-item`,title:(We=o.toolbarTips)==null?void 0:We.quote,onClick:()=>{b(\"quote\")},children:[u.jsx(L,{name:\"quote\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:(Ge=o.toolbarTips)==null?void 0:Ge.quote})]},\"bar-quote\");case\"unorderedList\":return u.jsxs(\"div\",{className:`${a.prefix}-toolbar-item`,title:(Be=o.toolbarTips)==null?void 0:Be.unorderedList,onClick:()=>{b(\"unorderedList\")},children:[u.jsx(L,{name:\"unordered-list\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:(qe=o.toolbarTips)==null?void 0:qe.unorderedList})]},\"bar-unorderedList\");case\"orderedList\":return u.jsxs(\"div\",{className:`${a.prefix}-toolbar-item`,title:(ze=o.toolbarTips)==null?void 0:ze.orderedList,onClick:()=>{b(\"orderedList\")},children:[u.jsx(L,{name:\"ordered-list\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:(Ue=o.toolbarTips)==null?void 0:Ue.orderedList})]},\"bar-orderedList\");case\"task\":return u.jsxs(\"div\",{className:`${a.prefix}-toolbar-item`,title:(Xe=o.toolbarTips)==null?void 0:Xe.task,onClick:()=>{b(\"task\")},children:[u.jsx(L,{name:\"task\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:(Ke=o.toolbarTips)==null?void 0:Ke.task})]},\"bar-task\");case\"codeRow\":return u.jsxs(\"div\",{className:`${a.prefix}-toolbar-item`,title:(Ye=o.toolbarTips)==null?void 0:Ye.codeRow,onClick:()=>{b(\"codeRow\")},children:[u.jsx(L,{name:\"code-row\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:(Ze=o.toolbarTips)==null?void 0:Ze.codeRow})]},\"bar-codeRow\");case\"code\":return u.jsxs(\"div\",{className:`${a.prefix}-toolbar-item`,title:(Qe=o.toolbarTips)==null?void 0:Qe.code,onClick:()=>{b(\"code\")},children:[u.jsx(L,{name:\"code\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:(Je=o.toolbarTips)==null?void 0:Je.code})]},\"bar-code\");case\"link\":return u.jsxs(\"div\",{className:`${a.prefix}-toolbar-item`,title:(et=o.toolbarTips)==null?void 0:et.link,onClick:()=>{C({...v,type:\"link\",linkVisible:!0})},children:[u.jsx(L,{name:\"link\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:(tt=o.toolbarTips)==null?void 0:tt.link})]},\"bar-link\");case\"image\":return e.noUploadImg?u.jsxs(\"div\",{className:`${a.prefix}-toolbar-item`,title:(rt=o.toolbarTips)==null?void 0:rt.image,onClick:()=>{C(se=>({...se,type:\"image\",linkVisible:!0}))},children:[u.jsx(L,{name:\"image\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:(nt=o.toolbarTips)==null?void 0:nt.image})]},\"bar-image-no-upload\"):J;case\"table\":return G;case\"revoke\":return u.jsxs(\"div\",{className:`${a.prefix}-toolbar-item`,title:(at=o.toolbarTips)==null?void 0:at.revoke,onClick:()=>{g.bus.emit(i,g.CTRL_Z)},children:[u.jsx(L,{name:\"revoke\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:(ot=o.toolbarTips)==null?void 0:ot.revoke})]},\"bar-revoke\");case\"next\":return u.jsxs(\"div\",{className:`${a.prefix}-toolbar-item`,title:(it=o.toolbarTips)==null?void 0:it.next,onClick:()=>{g.bus.emit(i,g.CTRL_SHIFT_Z)},children:[u.jsx(L,{name:\"next\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:(st=o.toolbarTips)==null?void 0:st.next})]},\"bar-next\");case\"save\":return u.jsxs(\"div\",{className:`${a.prefix}-toolbar-item`,title:(lt=o.toolbarTips)==null?void 0:lt.save,onClick:()=>{g.bus.emit(i,g.ON_SAVE)},children:[u.jsx(L,{name:\"baocun\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:(ct=o.toolbarTips)==null?void 0:ct.save})]},\"bar-save\");case\"prettier\":return e.noPrettier?\"\":u.jsxs(\"div\",{className:`${a.prefix}-toolbar-item`,title:(ut=o.toolbarTips)==null?void 0:ut.prettier,onClick:()=>{b(\"prettier\")},children:[u.jsx(L,{name:\"prettier\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:(dt=o.toolbarTips)==null?void 0:dt.prettier})]},\"bar-prettier\");case\"pageFullscreen\":return!e.setting.fullscreen&&u.jsxs(\"div\",{className:g.classnames([`${a.prefix}-toolbar-item`,e.setting.pageFullscreen&&`${a.prefix}-toolbar-active`]),title:(ft=o.toolbarTips)==null?void 0:ft.pageFullscreen,onClick:()=>{n(\"pageFullscreen\")},children:[u.jsx(L,{name:e.setting.pageFullscreen?\"suoxiao\":\"fangda\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:(mt=o.toolbarTips)==null?void 0:mt.pageFullscreen})]},\"bar-pageFullscreen\");case\"fullscreen\":return u.jsxs(\"div\",{className:g.classnames([`${a.prefix}-toolbar-item`,e.setting.fullscreen&&`${a.prefix}-toolbar-active`]),title:(gt=o.toolbarTips)==null?void 0:gt.fullscreen,onClick:()=>{k()},children:[u.jsx(L,{name:e.setting.fullscreen?\"fullscreen-exit\":\"fullscreen\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:(ht=o.toolbarTips)==null?void 0:ht.fullscreen})]},\"bar-fullscreen\");case\"catalog\":return u.jsxs(\"div\",{className:g.classnames([`${a.prefix}-toolbar-item`,e.catalogVisible&&`${a.prefix}-toolbar-active`]),title:(pt=o.toolbarTips)==null?void 0:pt.catalog,onClick:()=>{g.bus.emit(i,g.CHANGE_CATALOG_VISIBLE)},children:[u.jsx(L,{name:\"catalog\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:(bt=o.toolbarTips)==null?void 0:bt.catalog})]},\"bar-catalog\");case\"preview\":return u.jsxs(\"div\",{className:g.classnames([`${a.prefix}-toolbar-item`,e.setting.preview&&`${a.prefix}-toolbar-active`]),title:(xt=o.toolbarTips)==null?void 0:xt.preview,onClick:()=>{n(\"preview\")},children:[u.jsx(L,{name:\"preview\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:(vt=o.toolbarTips)==null?void 0:vt.preview})]},\"bar-preview\");case\"previewOnly\":return u.jsxs(\"div\",{className:g.classnames([`${a.prefix}-toolbar-item`,e.setting.previewOnly&&`${a.prefix}-toolbar-active`]),title:(Ct=o.toolbarTips)==null?void 0:Ct.previewOnly,onClick:()=>{e.updateSetting(\"previewOnly\")},children:[u.jsx(L,{name:\"preview-only\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:(kt=o.toolbarTips)==null?void 0:kt.previewOnly})]},\"bar-preview-only\");case\"htmlPreview\":return u.jsxs(\"div\",{className:g.classnames([`${a.prefix}-toolbar-item`,e.setting.htmlPreview&&`${a.prefix}-toolbar-active`]),title:(wt=o.toolbarTips)==null?void 0:wt.htmlPreview,onClick:()=>{n(\"htmlPreview\")},children:[u.jsx(L,{name:\"coding\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:(yt=o.toolbarTips)==null?void 0:yt.htmlPreview})]},\"bar-htmlPreview\");case\"github\":return u.jsxs(\"div\",{className:`${a.prefix}-toolbar-item`,title:(Et=o.toolbarTips)==null?void 0:Et.github,onClick:()=>ke.linkTo(\"https://github.com/imzbf/md-editor-rt\"),children:[u.jsx(L,{name:\"github\"}),e.showToolbarName&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-item-name`,children:($t=o.toolbarTips)==null?void 0:$t.github})]},\"bar-github\");case\"mermaid\":return B;case\"katex\":return O}else if(e.defToolbars){const se=e.defToolbars[I];return se?f.cloneElement(se,{theme:se.props.theme||c,codeTheme:se.props.codeTheme||s,previewTheme:se.props.previewTheme||d,language:se.props.language||p,insert(gr){g.bus.emit(i,g.REPLACE,\"universal\",{generate:gr})}}):\"\"}else return\"\"},[e,o.toolbarTips,b,re,C,v,J,G,i,n,k,B,O,c,p,d]),ne=f.useMemo(()=>{const I=r.filter(H=>!t.includes(H)),R=I.indexOf(\"=\"),N=R===-1?I:I.slice(0,R+1),D=R===-1?[]:I.slice(R,Number.MAX_SAFE_INTEGER);return[N.map(H=>U(H)),D.map(H=>U(H))]},[r,t,U]);return f.useEffect(()=>{let I=()=>{};return h.current&&(I=ke.draggingScroll(h.current)),()=>{I()}},[r]),u.jsxs(u.Fragment,{children:[r.length>0&&u.jsx(\"div\",{className:`${a.prefix}-toolbar-wrapper`,ref:h,id:m,children:u.jsxs(\"div\",{className:g.classnames([`${a.prefix}-toolbar`,e.showToolbarName&&`${a.prefix}-stn`]),children:[u.jsx(\"div\",{className:`${a.prefix}-toolbar-left`,children:ne[0]}),u.jsx(\"div\",{className:`${a.prefix}-toolbar-right`,children:ne[1]})]})}),u.jsx(\"label\",{htmlFor:`${m}_label`,style:{display:\"none\"},\"aria-label\":(ae=o.imgTitleItem)==null?void 0:ae.upload}),u.jsx(\"input\",{id:`${m}_label`,ref:x,accept:\"image/*\",type:\"file\",multiple:!0,style:{display:\"none\"}}),u.jsx(Br,{linkVisible:v.linkVisible,clipVisible:v.clipVisible,type:v.type,onCancel:w,onOk:E})]})},Zr=f.memo(Yr),Qr=(e,r,t)=>{const{editorId:n}=f.useContext(F),[s,i]=f.useState({clear(){},init(){}});f.useEffect(()=>{var o;const l=(o=t.current)==null?void 0:o.view.contentDOM.getRootNode(),c=l.querySelector(`#${n} .cm-scroller`),d=l.querySelector(`[id=\"${n}-preview-wrapper\"]`),p=l.querySelector(`[id=\"${n}-html-wrapper\"]`);if(d||p){const m=d?g.scrollAuto:g.scrollAutoWithScale,h=d||p,[x,b]=m(c,h,t.current);i({init:x,clear:b})}},[r,e.setting.fullscreen,e.setting.pageFullscreen,e.setting.preview,e.setting.htmlPreview,n,t]),f.useEffect(()=>(e.scrollAuto&&!e.setting.previewOnly&&(e.setting.preview||e.setting.htmlPreview)?s.init():s.clear(),()=>{s.clear()}),[s,e.scrollAuto,e.setting.preview,e.setting.htmlPreview,e.setting.previewOnly])},je=async(e,r,t)=>{var o;let n=\"\",s=0,i=0,l=!0,c=!1;const d=r.getSelectedText(),p=a.configOption.editorConfig.mermaidTemplate;if(/^h[1-6]{1}$/.test(e)){const m=e.replace(/^h(\\d)/,(h,x)=>new Array(Number(x)).fill(\"#\",0,x).join(\"\"));n=`${m} ${d}`,s=m.length+1}else if(e===\"prettier\"){const m=window.prettier||a.configOption.editorExtensions.prettier.prettierInstance,h=[((o=window.prettierPlugins)==null?void 0:o.markdown)||a.configOption.editorExtensions.prettier.parserMarkdownInstance];!m||h[0]===void 0?(g.bus.emit(t.editorId,g.ERROR_CATCHER,{name:\"prettier\",message:\"prettier is undefined\"}),n=r.getValue()):n=await m.format(r.getValue(),{parser:\"markdown\",plugins:h}),l=!1,c=!0}else switch(e){case\"bold\":{n=`**${d}**`,s=2,i=-2;break}case\"underline\":{n=`<u>${d}</u>`,s=3,i=-4;break}case\"italic\":{n=`*${d}*`,s=1,i=-1;break}case\"strikeThrough\":{n=`~~${d}~~`,s=2,i=-2;break}case\"sub\":{n=`~${d}~`,s=1,i=-1;break}case\"sup\":{n=`^${d}^`,s=1,i=-1;break}case\"codeRow\":{n=\"`\"+d+\"`\",s=1,i=-1;break}case\"quote\":{n=`> ${d}`,s=2;break}case\"orderedList\":{n=`1. ${d}`,s=3;break}case\"unorderedList\":{n=`- ${d}`,s=2;break}case\"task\":{n=`- [ ] ${d}`,s=6;break}case\"code\":{const m=t.text||d||\"\",h=t.mode||\"language\";n=`\\`\\`\\`${h}\n${m}\n\\`\\`\\`\n`,s=3,i=3+h.length-n.length;break}case\"table\":{n=\"|\";const{selectedShape:m={x:1,y:1}}=t,{x:h,y:x}=m;for(let b=0;b<=x;b++)n+=\" col |\";n+=`\n|`;for(let b=0;b<=x;b++)n+=\" - |\";for(let b=0;b<=h;b++){n+=`\n|`;for(let k=0;k<=x;k++)n+=\" content |\"}s=2,i=5-n.length;break}case\"link\":{const{desc:m,url:h}=t;n=`[${m}](${h})`,l=!1;break}case\"image\":{const{desc:m,url:h,urls:x}=t;x instanceof Array?n=x.reduce((b,k)=>{const{url:v=\"\",alt:C=\"\",title:w=\"\"}=typeof k==\"object\"?k:{url:k};return b+`![${C}](${v}${w?\" '\"+w+\"'\":\"\"})\n`},\"\"):n=`![${m}](${h})\n`,l=!1;break}case\"flow\":{n=`\\`\\`\\`mermaid\n${(p==null?void 0:p.flow)||`flowchart TD \n  Start --> Stop`}\n\\`\\`\\`\n`,s=11,i=-5;break}case\"sequence\":{n=`\\`\\`\\`mermaid\n${(p==null?void 0:p.sequence)||`sequenceDiagram\n  A->>B: hello!\n  B-->>A: hi!\n  A-)B: bye!`}\n\\`\\`\\`\n`,s=11,i=-5;break}case\"gantt\":{n=`\\`\\`\\`mermaid\n${(p==null?void 0:p.gantt)||`gantt\ntitle A Gantt Diagram\ndateFormat  YYYY-MM-DD\nsection Section\nA task  :a1, 2014-01-01, 30d\nAnother task  :after a1, 20d`}\n\\`\\`\\`\n`,s=11,i=-5;break}case\"class\":{n=`\\`\\`\\`mermaid\n${(p==null?void 0:p.class)||`classDiagram\n  class Animal\n  Vehicle <|-- Car`}\n\\`\\`\\`\n`,s=11,i=-5;break}case\"state\":{n=`\\`\\`\\`mermaid\n${(p==null?void 0:p.state)||`stateDiagram-v2\n  s1 --> s2`}\n\\`\\`\\`\n`,s=11,i=-5;break}case\"pie\":{n=`\\`\\`\\`mermaid\n${(p==null?void 0:p.pie)||`pie title Pets adopted by volunteers\n  \"Dogs\" : 386\n  \"Cats\" : 85\n  \"Rats\" : 15`}\n\\`\\`\\`\n`,s=11,i=-5;break}case\"relationship\":{n=`\\`\\`\\`mermaid\n${(p==null?void 0:p.relationship)||`erDiagram\n  CAR ||--o{ NAMED-DRIVER : allows\n  PERSON ||--o{ NAMED-DRIVER : is`}\n\\`\\`\\`\n`,s=11,i=-5;break}case\"journey\":{n=`\\`\\`\\`mermaid\n${(p==null?void 0:p.journey)||`journey\n  title My working day\n  section Go to work\n    Make tea: 5: Me\n    Go upstairs: 3: Me\n    Do work: 1: Me, Cat\n  section Go home\n    Go downstairs: 5: Me\n    Sit down: 5: Me`}\n\\`\\`\\`\n`,s=11,i=-5;break}case\"katexInline\":{n=\"$$\",s=1,i=-1;break}case\"katexBlock\":{n=`$$\n\n$$\n`,s=3,i=-4;break}case\"universal\":{const{generate:m}=t,h=m(d);n=h.targetValue,l=h.select??!0,s=h.deviationStart||0,i=h.deviationEnd||0}}return{text:n,options:{select:l,deviationStart:s,deviationEnd:i,replaceAll:c}}},ge=e=>{const r=new z.Compartment;return n=>(r.get(e.state)?e.dispatch({effects:r.reconfigure(n)}):e.dispatch({effects:z.StateEffect.appendConfig.of(r.of(n))}),!0)};class Jr{constructor(r){oe(this,\"view\");oe(this,\"maxLength\",Number.MAX_SAFE_INTEGER);oe(this,\"toggleTabSize\");oe(this,\"togglePlaceholder\");oe(this,\"setExtensions\");oe(this,\"toggleDisabled\");oe(this,\"toggleReadOnly\");oe(this,\"toggleMaxlength\");this.view=r,this.toggleTabSize=ge(this.view),this.togglePlaceholder=ge(this.view),this.setExtensions=ge(this.view),this.toggleDisabled=ge(this.view),this.toggleReadOnly=ge(this.view),this.toggleMaxlength=ge(this.view)}getValue(){return this.view.state.doc.toString()}setValue(r,t=0,n=this.view.state.doc.length){this.view.dispatch({changes:{from:t,to:n,insert:r}})}getSelectedText(){const{from:r,to:t}=this.view.state.selection.main;return this.view.state.sliceDoc(r,t)}replaceSelectedText(r,t={select:!0,deviationStart:0,deviationEnd:0,replaceAll:!1},n){try{if(t.replaceAll){if(this.setValue(r),r.length>this.maxLength)throw new Error(\"The input text is too long\");return}if(this.view.state.doc.length-this.getSelectedText().length+r.length>this.maxLength)throw new Error(\"The input text is too long\");const{from:s}=this.view.state.selection.main;if(this.view.dispatch(this.view.state.replaceSelection(r)),t.select){const i=s+r.length+t.deviationEnd;this.view.dispatch({selection:{anchor:s+t.deviationStart,head:i}})}this.view.focus()}catch(s){if(s.message===\"The input text is too long\")g.bus.emit(n,g.ERROR_CATCHER,{name:\"overlength\",message:s.message,data:r});else throw s}}setTabSize(r){this.toggleTabSize([z.EditorState.tabSize.of(r),we.indentUnit.of(\" \".repeat(r))])}setPlaceholder(r){this.togglePlaceholder(pe.placeholder(r))}focus(r){if(this.view.focus(),!r)return;let t=0,n=0,s=0;switch(r){case\"start\":break;case\"end\":{t=n=s=this.getValue().length;break}default:t=r.rangeAnchor||r.cursorPos,n=r.rangeHead||r.cursorPos,s=r.cursorPos}this.view.dispatch({scrollIntoView:!0,selection:z.EditorSelection.create([z.EditorSelection.range(t,n),z.EditorSelection.cursor(s)],1)})}setDisabled(r){this.toggleDisabled([pe.EditorView.editable.of(!r)])}setReadOnly(r){this.toggleReadOnly([z.EditorState.readOnly.of(r)])}setMaxLength(r){this.maxLength=r,this.toggleMaxlength([z.EditorState.changeFilter.of(t=>t.newDoc.length<=r)])}}const en=\"#e5c07b\",Nt=\"var(--md-color)\",tn=\"#56b6c2\",rn=\"#ffffff\",xe=\"var(--md-color)\",It=\"#e5c07b\",nn=\"#e5c07b\",an=\"var(--md-color)\",Lt=\"#d19a66\",on=\"#c678dd\",sn=\"#21252b\",ln=\"#2c313a\",jt=\"var(--md-bk-color)\",Re=\"var(--md-bk-color)\",cn=\"#ceedfa33\",Rt=\"#528bff\",un=pe.EditorView.theme({\"&\":{color:xe,backgroundColor:jt},\".cm-content\":{caretColor:Rt},\".cm-cursor, .cm-dropCursor\":{borderLeftColor:Rt},\"&.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection\":{backgroundColor:cn},\".cm-panels\":{backgroundColor:sn,color:xe},\".cm-panels.cm-panels-top\":{borderBottom:\"1px solid var(--md-border-color)\"},\".cm-panels.cm-panels-bottom\":{borderTop:\"1px solid var(--md-border-color)\"},\".cm-searchMatch\":{backgroundColor:\"#72a1ff59\",outline:\"1px solid #457dff\"},\".cm-searchMatch.cm-searchMatch-selected\":{backgroundColor:\"#6199ff2f\"},\".cm-activeLine\":{backgroundColor:\"#ceedfa33\"},\".cm-selectionMatch\":{backgroundColor:\"#aafe661a\"},\"&.cm-focused .cm-matchingBracket, &.cm-focused .cm-nonmatchingBracket\":{backgroundColor:\"#bad0f847\"},\".cm-gutters\":{backgroundColor:jt,color:xe,borderRight:\"1px solid\",borderColor:\"var(--md-border-color)\"},\".cm-activeLineGutter\":{backgroundColor:ln},\".cm-foldPlaceholder\":{backgroundColor:\"transparent\",border:\"none\",color:\"#ddd\"},\".cm-tooltip\":{border:\"1px solid var(--md-border-color)\",backgroundColor:Re},\".cm-tooltip .cm-tooltip-arrow:before\":{borderTopColor:\"transparent\",borderBottomColor:\"transparent\"},\".cm-tooltip .cm-tooltip-arrow:after\":{borderTopColor:Re,borderBottomColor:Re},\".cm-tooltip-autocomplete\":{\"& > ul > li[aria-selected]\":{color:xe}}},{dark:!0}),dn=we.HighlightStyle.define([{tag:y.tags.keyword,color:on},{tag:[y.tags.name,y.tags.deleted,y.tags.character,y.tags.propertyName,y.tags.macroName],color:Nt},{tag:[y.tags.function(y.tags.variableName),y.tags.labelName],color:nn},{tag:[y.tags.color,y.tags.constant(y.tags.name),y.tags.standard(y.tags.name)],color:Lt},{tag:[y.tags.definition(y.tags.name),y.tags.separator],color:xe},{tag:[y.tags.typeName,y.tags.className,y.tags.number,y.tags.changed,y.tags.annotation,y.tags.modifier,y.tags.self,y.tags.namespace],color:en},{tag:[y.tags.operator,y.tags.operatorKeyword,y.tags.url,y.tags.escape,y.tags.regexp,y.tags.link,y.tags.special(y.tags.string)],color:tn},{tag:[y.tags.meta,y.tags.comment],color:It},{tag:y.tags.strong,fontWeight:\"bold\"},{tag:y.tags.emphasis,fontStyle:\"italic\"},{tag:y.tags.strikethrough,textDecoration:\"line-through\"},{tag:y.tags.link,color:It,textDecoration:\"underline\"},{tag:y.tags.heading,fontWeight:\"bold\",color:Nt},{tag:[y.tags.atom,y.tags.bool,y.tags.special(y.tags.variableName)],color:Lt},{tag:[y.tags.processingInstruction,y.tags.string,y.tags.inserted],color:an},{tag:y.tags.invalid,color:rn}]),Pt=[un,we.syntaxHighlighting(dn)],fn=\"#e5c07b\",_t=\"#3f4a54\",mn=\"#56b6c2\",gn=\"#fff\",ve=\"#3f4a54\",Ot=\"#2d8cf0\",hn=\"#2d8cf0\",pn=\"#3f4a54\",Mt=\"#d19a66\",bn=\"#c678dd\",xn=\"#f6f6f6\",vn=\"#ceedfa33\",Dt=\"var(--md-bk-color)\",Pe=\"var(--md-bk-color)\",Cn=\"#bad5fa\",Ht=\"#3f4a54\",kn=pe.EditorView.theme({\"&\":{color:ve,backgroundColor:Dt},\".cm-content\":{caretColor:Ht},\".cm-cursor, .cm-dropCursor\":{borderLeftColor:Ht},\"&.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection\":{backgroundColor:Cn},\".cm-panels\":{backgroundColor:xn,color:ve},\".cm-panels.cm-panels-top\":{borderBottom:\"1px solid var(--md-border-color)\"},\".cm-panels.cm-panels-bottom\":{borderTop:\"1px solid var(--md-border-color)\"},\".cm-searchMatch\":{backgroundColor:\"#72a1ff59\",outline:\"1px solid #457dff\"},\".cm-searchMatch.cm-searchMatch-selected\":{backgroundColor:\"#6199ff2f\"},\".cm-activeLine\":{backgroundColor:\"#ceedfa33\"},\".cm-selectionMatch\":{backgroundColor:\"#aafe661a\"},\"&.cm-focused .cm-matchingBracket, &.cm-focused .cm-nonmatchingBracket\":{backgroundColor:\"#bad0f847\"},\".cm-gutters\":{backgroundColor:Dt,color:ve,borderRight:\"1px solid\",borderColor:\"var(--md-border-color)\"},\".cm-activeLineGutter\":{backgroundColor:vn},\".cm-foldPlaceholder\":{backgroundColor:\"transparent\",border:\"none\",color:\"#ddd\"},\".cm-tooltip\":{border:\"1px solid var(--md-border-color)\",backgroundColor:Pe},\".cm-tooltip .cm-tooltip-arrow:before\":{borderTopColor:\"transparent\",borderBottomColor:\"transparent\"},\".cm-tooltip .cm-tooltip-arrow:after\":{borderTopColor:Pe,borderBottomColor:Pe},\".cm-tooltip-autocomplete\":{\"& > ul > li[aria-selected]\":{color:ve}}}),wn=we.HighlightStyle.define([{tag:y.tags.keyword,color:bn},{tag:[y.tags.name,y.tags.deleted,y.tags.character,y.tags.propertyName,y.tags.macroName],color:_t},{tag:[y.tags.function(y.tags.variableName),y.tags.labelName],color:hn},{tag:[y.tags.color,y.tags.constant(y.tags.name),y.tags.standard(y.tags.name)],color:Mt},{tag:[y.tags.definition(y.tags.name),y.tags.separator],color:ve},{tag:[y.tags.typeName,y.tags.className,y.tags.number,y.tags.changed,y.tags.annotation,y.tags.modifier,y.tags.self,y.tags.namespace],color:fn},{tag:[y.tags.operator,y.tags.operatorKeyword,y.tags.url,y.tags.escape,y.tags.regexp,y.tags.link,y.tags.special(y.tags.string)],color:mn},{tag:[y.tags.meta,y.tags.comment],color:Ot},{tag:y.tags.strong,fontWeight:\"bold\"},{tag:y.tags.emphasis,fontStyle:\"italic\"},{tag:y.tags.strikethrough,textDecoration:\"line-through\"},{tag:y.tags.link,color:Ot,textDecoration:\"underline\"},{tag:y.tags.heading,fontWeight:\"bold\",color:_t},{tag:[y.tags.atom,y.tags.bool,y.tags.special(y.tags.variableName)],color:Mt},{tag:[y.tags.processingInstruction,y.tags.string,y.tags.inserted],color:pn},{tag:y.tags.invalid,color:gn}]),Ft=[kn,we.syntaxHighlighting(wn)],ye=(e,r,t,n,s)=>(i,l,c,d)=>{const p=`${e}${r}`.slice(d-c);i.dispatch(i.state.replaceSelection(`${p}${t}${n}`));const o=c+l.label.length+(s===\"title\"?t.length:0);i.dispatch({selection:z.EditorSelection.create([z.EditorSelection.range(c+l.label.length+(s===\"title\"?1:-r.length),o),z.EditorSelection.cursor(o)],1)}),i.focus()},Vt=e=>(r,t,n,s)=>{const i=e.slice(s-n);r.dispatch(r.state.replaceSelection(`${i} `))},Wt=e=>{const r=t=>{const n=t.matchBefore(/^#+|^-\\s*\\[*\\s*\\]*|`+|\\[|!\\[*|^\\|\\s?\\|?|\\$\\$?|!+\\s*\\w*/);return n===null||n.from==n.to&&t.explicit?null:{from:n.from,options:[...[\"h2\",\"h3\",\"h4\",\"h5\",\"h6\"].map((s,i)=>{const l=new Array(i+2).fill(\"#\").join(\"\");return{label:l,type:\"text\",apply:Vt(l)}}),...[\"unchecked\",\"checked\"].map(s=>{const i=s===\"checked\"?\"- [x]\":\"- [ ]\";return{label:i,type:\"text\",apply:Vt(i)}}),...[[\"`\",\"\"],[\"```\",\"language\"],[\"```mermaid\\n\",\"\"]].map(s=>({label:`${s[0]}${s[1]}`,type:\"text\",apply:ye(s[0],s[1],\"\",s[0]===\"`\"?\"`\":\"\\n```\",\"type\")})),{label:\"[]()\",type:\"text\"},{label:\"![]()\",type:\"text\"},{label:\"| |\",type:\"text\",detail:\"table\",apply:`| col | col | col |\n| - | - | - |\n| content | content | content |\n| content | content | content |`},{label:\"$\",type:\"text\",apply:ye(\"$\",\"\",\"\",\"$\",\"type\")},{label:\"$$\",type:\"text\",apply:ye(\"$$\",\"\",`\n`,`\n$$`,\"title\")},...[\"note\",\"abstract\",\"info\",\"tip\",\"success\",\"question\",\"warning\",\"failure\",\"danger\",\"bug\",\"example\",\"quote\",\"hint\",\"caution\",\"error\",\"attention\"].map(s=>({label:`!!! ${s}`,type:\"text\",apply:ye(\"!!!\",` ${s}`,\" Title\",`\n\n!!!`,\"title\")}))]}};return vr.autocompletion({override:e?[r,...e]:[r]})},yn=(e,r)=>{const t={key:\"Ctrl-b\",mac:\"Cmd-b\",run:()=>(g.bus.emit(e,g.REPLACE,\"bold\"),!0)},n={key:\"Ctrl-s\",mac:\"Cmd-s\",run:$=>(g.bus.emit(e,g.ON_SAVE,$.state.doc.toString()),!0),shift:()=>(g.bus.emit(e,g.REPLACE,\"strikeThrough\"),!0)},s={key:\"Ctrl-u\",mac:\"Cmd-u\",preventDefault:!0,run:()=>(g.bus.emit(e,g.REPLACE,\"underline\"),!0),shift:()=>(g.bus.emit(e,g.REPLACE,\"unorderedList\"),!0)},i={key:\"Ctrl-i\",mac:\"Cmd-i\",preventDefault:!0,run:()=>(g.bus.emit(e,g.REPLACE,\"italic\"),!0),shift:()=>(g.bus.emit(e,g.OPEN_MODALS,\"image\"),!0)},l={key:\"Ctrl-1\",mac:\"Cmd-1\",run:()=>(g.bus.emit(e,g.REPLACE,\"h1\"),!0)},c={key:\"Ctrl-2\",mac:\"Cmd-2\",run:()=>(g.bus.emit(e,g.REPLACE,\"h2\"),!0)},d={key:\"Ctrl-3\",mac:\"Cmd-3\",run:()=>(g.bus.emit(e,g.REPLACE,\"h3\"),!0)},p={key:\"Ctrl-4\",mac:\"Cmd-4\",run:()=>(g.bus.emit(e,g.REPLACE,\"h4\"),!0)},o={key:\"Ctrl-5\",mac:\"Cmd-5\",run:()=>(g.bus.emit(e,g.REPLACE,\"h5\"),!0)},m={key:\"Ctrl-6\",mac:\"Cmd-6\",run:()=>(g.bus.emit(e,g.REPLACE,\"h6\"),!0)},h={key:\"Ctrl-ArrowUp\",mac:\"Cmd-ArrowUp\",run:()=>(g.bus.emit(e,g.REPLACE,\"sup\"),!0)},x={key:\"Ctrl-ArrowDown\",mac:\"Cmd-ArrowDown\",run:()=>(g.bus.emit(e,g.REPLACE,\"sub\"),!0)},b={key:\"Ctrl-o\",mac:\"Cmd-o\",run:()=>(g.bus.emit(e,g.REPLACE,\"orderedList\"),!0)},k={key:\"Ctrl-c\",mac:\"Cmd-c\",shift:()=>(g.bus.emit(e,g.REPLACE,\"code\"),!0),any($,T){return(T.ctrlKey||T.metaKey)&&T.altKey&&T.code===\"KeyC\"?(g.bus.emit(e,g.REPLACE,\"codeRow\"),!0):!1}},v={key:\"Ctrl-l\",mac:\"Cmd-l\",run:()=>(g.bus.emit(e,g.OPEN_MODALS,\"link\"),!0)},C={key:\"Ctrl-f\",mac:\"Cmd-f\",shift:()=>r.noPrettier?!1:(g.bus.emit(e,g.REPLACE,\"prettier\"),!0)},w={any:($,T)=>(T.ctrlKey||T.metaKey)&&T.altKey&&T.shiftKey&&T.code===\"KeyT\"?(g.bus.emit(e,g.REPLACE,\"table\"),!0):!1},E={key:\"Ctrl-d\",mac:\"Cmd-d\",run:le.deleteLine,preventDefault:!0};return[t,E,n,s,i,l,c,d,p,o,m,h,x,b,k,v,C,w,...Cr.searchKeymap]},En=(e,r)=>{const{editorId:t}=f.useContext(F),n=f.useCallback(i=>{i instanceof Promise?i.then(l=>{g.bus.emit(t,g.REPLACE,\"universal\",{generate(){return{targetValue:l}}})}).catch(l=>{console.error(l)}):g.bus.emit(t,g.REPLACE,\"universal\",{generate(){return{targetValue:i}}})},[t]);return f.useCallback(i=>{var h,x,b;if(!i.clipboardData)return;if(i.clipboardData.files.length>0){const{files:k}=i.clipboardData;g.bus.emit(t,g.UPLOAD_IMAGE,Array.from(k).filter(v=>/image\\/.*/.test(v.type))),i.preventDefault();return}const l=i.clipboardData.getData(\"text/plain\"),c=((h=r.current)==null?void 0:h.view.state.selection.main.to)||0,d=((x=r.current)==null?void 0:x.view.state.doc.lineAt(c).from)||0,p=((b=r.current)==null?void 0:b.view.state.doc.sliceString(d,c))||\"\",o=/!\\[.*\\]\\(\\s*$/.test(p),m=/!\\[.*\\]\\((.*)\\s?.*\\)/.test(l);if(o){const k=e.transformImgUrl(l);n(k),i.preventDefault();return}else if(m){const k=l.match(new RegExp(`(?<=!\\\\[.*\\\\]\\\\()([^)\\\\s]+)(?=\\\\s?[\"']?.*[\"']?\\\\))`,\"g\"));k?Promise.all(k.map(v=>e.transformImgUrl(v))).then(v=>{n(v.reduce((C,w,E)=>C.replace(k[E],w),l))}):n(l),i.preventDefault();return}if(e.autoDetectCode&&i.clipboardData.types.includes(\"vscode-editor-data\")){const k=JSON.parse(i.clipboardData.getData(\"vscode-editor-data\"));g.bus.emit(t,g.REPLACE,\"code\",{mode:k.mode,text:i.clipboardData.getData(\"text/plain\")}),i.preventDefault();return}e.maxLength&&l.length+e.modelValue.length>e.maxLength&&g.bus.emit(t,g.ERROR_CATCHER,{name:\"overlength\",message:\"The input text is too long\",data:l})},[r,t,n,e])};de.EditorView.EDIT_CONTEXT=!1;const $n=e=>{const{tabWidth:r,editorId:t,theme:n}=f.useContext(F),s=f.useRef(null),i=f.useRef(),l=f.useRef(!0),[c]=f.useState(()=>({language:new z.Compartment,theme:new z.Compartment,autocompletion:new z.Compartment,update:new z.Compartment,domEvent:new z.Compartment,history:new z.Compartment})),[d]=f.useState(()=>yn(t,e)),p=f.useCallback(()=>[...d,...le.defaultKeymap,...le.historyKeymap,le.indentWithTab],[d]),o=En(e,i),[m,h]=f.useState({}),x=f.useMemo(()=>{const C={paste:o,blur:e.onBlur,focus:e.onFocus,drop:e.onDrop,input:$=>{e.onInput&&e.onInput($);const{data:T}=$;e.maxLength&&e.modelValue.length+T.length>e.maxLength&&g.bus.emit(t,g.ERROR_CATCHER,{name:\"overlength\",message:\"The input text is too long\",data:T})}},w={...C},E=Object.keys(C);for(const $ in m){const T=$;E.includes(T)?w[T]=(A,S)=>{m[T](A,S),A.defaultPrevented||C[T](A,S)}:w[T]=m[T]}return w},[m,t,o,e]),[b]=f.useState(()=>[pe.keymap.of(p()),c.history.of(le.history()),c.language.of(xr.markdown({codeLanguages:br.languages})),de.EditorView.lineWrapping,c.update.of(de.EditorView.updateListener.of(C=>{C.docChanged&&e.onChange(C.state.doc.toString())})),c.domEvent.of(de.EditorView.domEventHandlers(x)),pe.drawSelection()]),[k]=f.useState(()=>a.configOption.codeMirrorExtensions(n,[...b,c.theme.of(n===\"light\"?Ft:Pt),c.autocompletion.of(Wt(e.completions))],p(),{editorId:t})),v=f.useCallback(()=>{var C,w;(C=i.current)==null||C.view.dispatch({effects:c.history.reconfigure([])}),(w=i.current)==null||w.view.dispatch({effects:c.history.reconfigure(le.history())})},[c.history]);return f.useEffect(()=>{const C=new de.EditorView({doc:e.modelValue,parent:s.current,extensions:k}),w=new Jr(C);i.current=w,setTimeout(()=>{w.setTabSize(r),w.setDisabled(e.disabled),w.setReadOnly(e.readOnly),e.placeholder&&w.setPlaceholder(e.placeholder),typeof e.maxLength==\"number\"&&w.setMaxLength(e.maxLength),e.autoFocus&&C.focus(),l.current=!1},0);const E=()=>le.undo(C),$=()=>le.redo(C),T=S=>{h(S)},A=(S,j)=>{const _=C.state.doc.line(S);C.dispatch(C.state.update({changes:{from:_.from,to:_.to,insert:j}}))};return g.bus.on(t,{name:g.CTRL_Z,callback:E}),g.bus.on(t,{name:g.CTRL_SHIFT_Z,callback:$}),g.bus.on(t,{name:g.EVENT_LISTENER,callback:T}),g.bus.on(t,{name:g.TASK_STATE_CHANGED,callback:A}),()=>{C.destroy(),g.bus.remove(t,g.CTRL_Z,E),g.bus.remove(t,g.CTRL_SHIFT_Z,$),g.bus.remove(t,g.EVENT_LISTENER,T),g.bus.remove(t,g.TASK_STATE_CHANGED,A),l.current=!0}},[]),f.useEffect(()=>{const C=async(w,E={})=>{var $,T;if(w===\"image\"&&E.transform){const A=e.transformImgUrl(E.url);if(A instanceof Promise)A.then(async S=>{var W;const{text:j,options:_}=await je(w,i.current,{...E,url:S});(W=i.current)==null||W.replaceSelectedText(j,_,t)}).catch(S=>{console.error(S)});else{const{text:S,options:j}=await je(w,i.current,{...E,url:A});($=i.current)==null||$.replaceSelectedText(S,j,t)}}else{const{text:A,options:S}=await je(w,i.current,E);(T=i.current)==null||T.replaceSelectedText(A,S,t)}};return g.bus.on(t,{name:g.REPLACE,callback:C}),()=>{g.bus.remove(t,g.REPLACE,C)}},[t,e]),f.useEffect(()=>{setTimeout(()=>{var C;(C=i.current)==null||C.view.dispatch({effects:c.theme.reconfigure(n===\"light\"?Ft:Pt)})},0)},[c.theme,n]),f.useEffect(()=>{setTimeout(()=>{var C;(C=i.current)==null||C.view.dispatch({effects:[c.update.reconfigure(de.EditorView.updateListener.of(w=>{w.docChanged&&e.onChange(w.state.doc.toString())})),c.domEvent.reconfigure(de.EditorView.domEventHandlers(x)),c.autocompletion.reconfigure(Wt(e.completions))]})},0)},[c.autocompletion,c.domEvent,c.update,x,e]),f.useEffect(()=>{var C,w;((C=i.current)==null?void 0:C.getValue())!==e.modelValue&&((w=i.current)==null||w.setValue(e.modelValue))},[e.modelValue]),f.useEffect(()=>{var C;l.current||(C=i.current)==null||C.setTabSize(r)},[r]),f.useEffect(()=>{var C;l.current||(C=i.current)==null||C.setPlaceholder(e.placeholder)},[e.placeholder]),f.useEffect(()=>{var C;l.current||(C=i.current)==null||C.setDisabled(e.disabled)},[e.disabled]),f.useEffect(()=>{var C;l.current||(C=i.current)==null||C.setDisabled(e.readOnly)},[e.readOnly]),f.useEffect(()=>{var C;l.current||typeof e.maxLength==\"number\"&&((C=i.current)==null||C.setMaxLength(e.maxLength))},[e.maxLength]),{inputWrapperRef:s,codeMirrorUt:i,resetHistory:v}},Tn=(e,r)=>{const{editorId:t}=f.useContext(F);f.useEffect(()=>e.noImgZoomIn?void 0:(()=>{const s=document.querySelectorAll(`#${t}-preview img:not(.not-zoom):not(.medium-zoom-image)`),i=kr(s,{background:\"#00000073\"});return()=>{i.detach()}})(),[t,r,e.noImgZoomIn,e.setting])},Sn=(e,r,t)=>{const{editorId:n,usedLanguageText:s,customIcon:i,rootRef:l}=f.useContext(F),{formatCopiedText:c=d=>d}=e;f.useEffect(()=>{var d;e.setting.preview&&((d=l.current)==null||d.querySelectorAll(`#${n} .${a.prefix}-preview .${a.prefix}-code`).forEach(p=>{let o=-1;const m=p.querySelector(`.${a.prefix}-copy-button`);m&&(m.onclick=h=>{h.preventDefault(),clearTimeout(o);const b=(p.querySelector(\"input:checked + pre code\")||p.querySelector(\"pre code\")).textContent,k=wr(c(b)),{text:v,successTips:C,failTips:w}=s.copyCode,E=k?C:w;m.dataset.isIcon?m.dataset.tips=E:m.innerHTML=E,o=window.setTimeout(()=>{m.dataset.isIcon?m.dataset.tips=v:m.innerHTML=v},1500)})}))},[i,n,c,r,t,e.setting.preview,l,s.copyCode])},An=e=>{const{highlight:r}=f.useContext(F),t=f.useRef(a.configOption.editorExtensions.highlight.instance),[n,s]=f.useState(!!t.current);return f.useEffect(()=>{e.noHighlight||a.configOption.editorExtensions.highlight.instance||Lr(\"link\",{...r.css,rel:\"stylesheet\",id:`${a.prefix}-hlCss`})},[r.css,e.noHighlight]),f.useEffect(()=>{e.noHighlight||t.current||K(\"script\",{...r.js,id:`${a.prefix}-hljs`,onload(){t.current=window.hljs,s(!0)}},\"hljs\")},[]),{hljsRef:t,hljsInited:n}},Se=new Sr.LRUCache({max:1e3,ttl:6e5}),Nn=e=>{const{theme:r,rootRef:t}=f.useContext(F),{noMermaid:n,sanitizeMermaid:s}=e,i=f.useRef(a.configOption.editorExtensions.mermaid.instance),[l,c]=f.useState(-1),d=f.useCallback(()=>{Se.clear();const o=i.current;!n&&o&&(o.initialize(a.configOption.mermaidConfig({startOnLoad:!1,theme:r===\"dark\"?\"dark\":\"default\"})),c(m=>m+1))},[n,r]);f.useEffect(d,[d]),f.useEffect(()=>{var x,b;const{editorExtensions:o,editorExtensionsAttrs:m}=a.configOption;if(n||i.current)return;const h=o.mermaid.js;/\\.mjs/.test(h)?(K(\"link\",{...(x=m.mermaid)==null?void 0:x.js,rel:\"modulepreload\",href:h,id:`${a.prefix}-mermaid-m`}),__webpack_require__(\"(ssr)/./node_modules/md-editor-rt/lib/cjs/chunks lazy recursive\")(h).then(k=>{i.current=k.default,d()})):K(\"script\",{...(b=m.mermaid)==null?void 0:b.js,src:h,id:`${a.prefix}-mermaid`,onload(){i.current=window.mermaid,d()}},\"mermaid\")},[d,n]);const p=f.useCallback(async()=>{var o;if(!n&&i.current){const m=((o=t.current)==null?void 0:o.querySelectorAll(`div.${a.prefix}-mermaid`))||[],h=document.createElement(\"div\"),x=document.body.offsetWidth>1366?document.body.offsetWidth:1366,b=document.body.offsetHeight>768?document.body.offsetHeight:768;h.style.width=x+\"px\",h.style.height=b+\"px\",h.style.position=\"fixed\",h.style.zIndex=\"-10000\",h.style.top=\"-10000\";let k=m.length;k>0&&document.body.appendChild(h),await Promise.allSettled(Array.from(m).map(v=>(async w=>{var $;let E=Se.get(w.innerText);if(!E){const T=ke.randomId();let A={svg:\"\"};try{A=await i.current.render(T,w.innerText,h),E=await s(A.svg);const S=document.createElement(\"p\");S.className=`${a.prefix}-mermaid`,S.setAttribute(\"data-processed\",\"\"),S.innerHTML=E,($=S.children[0])==null||$.removeAttribute(\"height\"),Se.set(w.innerText,S.innerHTML),w.dataset.line!==void 0&&(S.dataset.line=w.dataset.line),w.replaceWith(S)}catch{}--k===0&&h.remove()}})(v)))}},[n,t,s]);return{mermaidRef:i,reRender:l,replaceMermaid:p}},In=e=>{const r=f.useRef(a.configOption.editorExtensions.katex.instance),[t,n]=f.useState(!!r.current);return f.useEffect(()=>{if(e.noKatex||r.current)return;const{editorExtensions:s}=a.configOption;K(\"script\",{src:s.katex.js,id:`${a.prefix}-katex`,onload(){r.current=window.katex,n(!0)}},\"katex\"),K(\"link\",{rel:\"stylesheet\",href:s.katex.css,id:`${a.prefix}-katexCss`})},[e.noKatex]),{katexRef:r,katexInited:t}},Ln=(e,r)=>{const t=e.renderer.rules.fence.bind(e.renderer.rules);e.renderer.rules.fence=(n,s,i,l,c)=>{const d=n[s],p=d.content.trim();if(d.info===\"mermaid\"){let o;n[s].map&&n[s].level===0&&(o=n[s].map[0],n[s].attrSet(\"data-line\",String(o)));const m=Se.get(p);return m?`<p class=\"${a.prefix}-mermaid\" ${o!==void 0?\"data-line=\"+o:\"\"} data-processed>${m}</p>`:`<div class=\"${a.prefix}-mermaid\" ${o!==void 0?\"data-line=\"+o:\"\"} data-mermaid-theme=${r.themeRef.current}>${p}</div>`}return t(n,s,i,l,c)}},Ne=(e,r)=>{const t=e.attrs?e.attrs.slice():[];return r.forEach(n=>{const s=e.attrIndex(n[0]);s<0?t.push(n):(t[s]=t[s].slice(),t[s][1]+=` ${n[1]}`)}),t},jn=(e,r)=>{const t=[{open:\"$\",close:\"$\"},{open:\"\\\\(\",close:\"\\\\)\"}];let n,s,i;for(const l of t)if(e.src.startsWith(l.open,e.pos)){const c=e.pos+l.open.length;for(n=c;(n=e.src.indexOf(l.close,n))!==-1;){for(i=n-1;e.src[i]===\"\\\\\";)i-=1;if((n-i)%2==1)break;n+=l.close.length}return n===-1?(r||(e.pending+=l.open),e.pos=c,!0):n-c===0?(r||(e.pending+=l.open+l.close),e.pos=c+l.close.length,!0):(r||(s=e.push(\"math_inline\",\"math\",0),s.markup=l.open,s.content=e.src.slice(c,n)),e.pos=n+l.close.length,!0)}return!1},Rn=(e,r,t,n)=>{const s=[{open:\"$$\",close:\"$$\"},{open:\"\\\\[\",close:\"\\\\]\"}];let i,l,c,d,p=!1,o=e.bMarks[r]+e.tShift[r],m=e.eMarks[r];for(const h of s){if(o+h.open.length>m||e.src.slice(o,o+h.open.length)!==h.open)continue;if(o+=h.open.length,i=e.src.slice(o,m),n)return!0;for(i.trim().slice(-h.close.length)===h.close&&(i=i.trim().slice(0,-h.close.length),p=!0),c=r;!p&&(c++,!(c>=t||(o=e.bMarks[c]+e.tShift[c],m=e.eMarks[c],o<m&&e.tShift[c]<e.blkIndent)));)e.src.slice(o,m).trim().slice(-h.close.length)===h.close&&(d=e.src.slice(0,m).lastIndexOf(h.close),l=e.src.slice(o,d),p=!0);e.line=c+1;const x=e.push(\"math_block\",\"math\",0);return x.block=!0,x.content=(i&&i.trim()?i+`\n`:\"\")+e.getLines(r+1,c,e.tShift[r],!0)+(l&&l.trim()?l:\"\"),x.map=[r,e.line],x.markup=h.open,!0}return!1},Pn=(e,{katexRef:r})=>{const t=(s,i,l,c,d)=>{const p=s[i],o={attrs:Ne(p,[[\"class\",`${a.prefix}-katex-inline`]])};if(r.current){const m=r.current.renderToString(p.content,a.configOption.katexConfig({throwOnError:!1}));return`<span ${d.renderAttrs(o)} data-processed>${m}</span>`}else return`<span ${d.renderAttrs(o)}>${p.content}</span>`},n=(s,i,l,c,d)=>{const p=s[i],o={attrs:Ne(p,[[\"class\",`${a.prefix}-katex-block`]])};if(r.current){const m=r.current.renderToString(p.content,a.configOption.katexConfig({throwOnError:!1,displayMode:!0}));return`<p ${d.renderAttrs(o)} data-processed>${m}</p>`}else return`<p ${d.renderAttrs(o)}>${p.content}</p>`};e.inline.ruler.before(\"escape\",\"math_inline\",jn),e.block.ruler.after(\"blockquote\",\"math_block\",Rn,{alt:[\"paragraph\",\"reference\",\"blockquote\",\"list\"]}),e.renderer.rules.math_inline=t,e.renderer.rules.math_block=n},_n=(e,r)=>{r=r||{};const t=3,n=r.marker||\"!\",s=n.charCodeAt(0),i=n.length;let l=\"\",c=\"\";const d=(o,m,h,x,b)=>{const k=o[m];return k.type===\"admonition_open\"?o[m].attrPush([\"class\",`${a.prefix}-admonition ${a.prefix}-admonition-${k.info}`]):k.type===\"admonition_title_open\"&&o[m].attrPush([\"class\",`${a.prefix}-admonition-title`]),b.renderToken(o,m,h)},p=o=>{const m=o.trim().split(\" \",2);c=\"\",l=m[0],m.length>1&&(c=o.substring(l.length+2))};e.block.ruler.before(\"code\",\"admonition\",(o,m,h,x)=>{let b,k,v,C=!1,w=o.bMarks[m]+o.tShift[m],E=o.eMarks[m];if(s!==o.src.charCodeAt(w))return!1;for(b=w+1;b<=E&&n[(b-w)%i]===o.src[b];b++);const $=Math.floor((b-w)/i);if($!==t)return!1;b-=(b-w)%i;const T=o.src.slice(w,b),A=o.src.slice(b,E);if(p(A),x)return!0;for(k=m;k++,!(k>=h||(w=o.bMarks[k]+o.tShift[k],E=o.eMarks[k],w<E&&o.sCount[k]<o.blkIndent));)if(s===o.src.charCodeAt(w)&&!(o.sCount[k]-o.blkIndent>=4)){for(b=w+1;b<=E&&n[(b-w)%i]===o.src[b];b++);if(!(Math.floor((b-w)/i)<$)&&(b-=(b-w)%i,b=o.skipSpaces(b),!(b<E))){C=!0;break}}const S=o.parentType,j=o.lineMax;return o.parentType=\"root\",o.lineMax=k,v=o.push(\"admonition_open\",\"div\",1),v.markup=T,v.block=!0,v.info=l,v.map=[m,k],c&&(v=o.push(\"admonition_title_open\",\"p\",1),v.markup=T+\" \"+l,v.map=[m,k],v=o.push(\"inline\",\"\",0),v.content=c,v.map=[m,o.line-1],v.children=[],v=o.push(\"admonition_title_close\",\"p\",-1),v.markup=T+\" \"+l),o.md.block.tokenize(o,m+1,k),v=o.push(\"admonition_close\",\"div\",-1),v.markup=o.src.slice(w,b),v.block=!0,o.parentType=S,o.lineMax=j,o.line=k+(C?1:0),!0},{alt:[\"paragraph\",\"reference\",\"blockquote\",\"list\"]}),e.renderer.rules.admonition_open=d,e.renderer.rules.admonition_title_open=d,e.renderer.rules.admonition_title_close=d,e.renderer.rules.admonition_close=d},On=(e,r)=>{e.renderer.rules.heading_open=(t,n)=>{var c;const s=t[n],i=((c=t[n+1].children)==null?void 0:c.reduce((d,p)=>d+([\"text\",\"code_inline\",\"math_inline\"].includes(p.type)&&p.content||\"\"),\"\"))||\"\",l=s.markup.length;return r.headsRef.current.push({text:i,level:l}),s.map&&s.level===0&&s.attrSet(\"id\",r.mdHeadingId(i,l,r.headsRef.current.length)),e.renderer.renderToken(t,n,r)},e.renderer.rules.heading_close=(t,n,s,i,l)=>l.renderToken(t,n,s)},Mn=(e,r)=>{if(typeof r[e]==\"string\")return r[e];const t=`<i class=\"${a.prefix}-iconfont ${a.prefix}-icon-${e}\"></i>`;switch(a.configOption.iconfontType){case\"svg\":return`<svg class=\"${a.prefix}-icon\" aria-hidden=\"true\"><use xlink:href=\"#${a.prefix}-icon-${e}\"></use></svg>`;default:return t}},Qt=Mn,Dn=(e,r)=>{const t=e.renderer.rules.fence,n=e.utils.unescapeAll,s=/\\[(\\w*)(?::([\\w ]*))?\\]/,i=/::(open|close)/,l=m=>m.info?n(m.info).trim():\"\",c=m=>{const h=l(m),[x=null,b=\"\"]=(s.exec(h)||[]).slice(1);return[x,b]},d=m=>{const h=l(m);return h?h.split(/(\\s+)/g)[0]:\"\"},p=m=>{const h=m.info.match(i)||[],x=h[1]===\"open\"||h[1]!==\"close\"&&r.codeFoldable&&m.content.trim().split(`\n`).length<r.autoFoldThreshold,b=h[1]||r.codeFoldable?\"details\":\"div\",k=h[1]||r.codeFoldable?\"summary\":\"div\";return{open:x,tagContainer:b,tagHeader:k}},o=(m,h,x,b,k)=>{if(m[h].hidden)return\"\";const v=r.usedLanguageTextRef.current.copyCode.text,C=r.customIconRef.current.copy||v,w=!!r.customIconRef.current.copy,E=`<span class=\"${a.prefix}-collapse-tips\">${Qt(\"collapse-tips\",r.customIconRef.current)}</span>`,[$]=c(m[h]);if($===null){const{open:G,tagContainer:B,tagHeader:O}=p(m[h]),U=[[\"class\",`${a.prefix}-code`]];G&&U.push([\"open\",\"\"]);const ne={attrs:Ne(m[h],U)};m[h].info=m[h].info.replace(i,\"\");const ae=t(m,h,x,b,k);return`\n        <${B} ${k.renderAttrs(ne)}>\n          <${O} class=\"${a.prefix}-code-head\">\n            <div class=\"${a.prefix}-code-flag\"><span></span><span></span><span></span></div>\n            <div class=\"${a.prefix}-code-action\">\n              <span class=\"${a.prefix}-code-lang\">${m[h].info.trim()}</span>\n              <span class=\"${a.prefix}-copy-button\" data-tips=\"${v}\"${w?\" data-is-icon=true\":\"\"}>${C}</span>\n              ${B===\"details\"?E:\"\"}\n            </div>\n          </${O}>\n          ${ae}\n        </${B}>\n      `}let T,A,S,j,_=\"\",W=\"\",V=\"\";const{open:Q,tagContainer:ee,tagHeader:te}=p(m[h]),re=[[\"class\",`${a.prefix}-code`]];Q&&re.push([\"open\",\"\"]);const J={attrs:Ne(m[h],re)};for(let G=h;G<m.length&&(T=m[G],[A,S]=c(T),A===$);G++){T.info=T.info.replace(s,\"\").replace(i,\"\"),T.hidden=!0;const B=`${a.prefix}-codetab-${r.editorId}-${h}-${G-h}`;j=G-h>0?\"\":\"checked\",_+=`\n        <li>\n          <input\n            type=\"radio\"\n            id=\"label-${a.prefix}-codetab-label-1-${r.editorId}-${h}-${G-h}\"\n            name=\"${a.prefix}-codetab-label-${r.editorId}-${h}\"\n            class=\"${B}\"\n            ${j}\n          >\n          <label\n            for=\"label-${a.prefix}-codetab-label-1-${r.editorId}-${h}-${G-h}\"\n            onclick=\"this.getRootNode().querySelectorAll('.${B}').forEach(e => e.click())\"\n          >\n            ${S||d(T)}\n          </label>\n        </li>`,W+=`\n        <div role=\"tabpanel\">\n          <input\n            type=\"radio\"\n            name=\"${a.prefix}-codetab-pre-${r.editorId}-${h}\"\n            class=\"${B}\"\n            ${j}\n            role=\"presentation\">\n          ${t(m,G,x,b,k)}\n        </div>`,V+=`\n        <input\n          type=\"radio\"\n          name=\"${a.prefix}-codetab-lang-${r.editorId}-${h}\"\n          class=\"${B}\"\n          ${j}\n          role=\"presentation\">\n        <span class=${a.prefix}-code-lang role=\"note\">${d(T)}</span>`}return`\n      <${ee} ${k.renderAttrs(J)}>\n        <${te} class=\"${a.prefix}-code-head\">\n          <div class=\"${a.prefix}-code-flag\">\n            <ul class=\"${a.prefix}-codetab-label\" role=\"tablist\">${_}</ul>\n          </div>\n          <div class=\"${a.prefix}-code-action\">\n            <span class=\"${a.prefix}-codetab-lang\">${V}</span>\n            <span class=\"${a.prefix}-copy-button\" data-tips=\"${v}\"${w?\" data-is-icon=true\":\"\"}>${C}</span>\n            ${ee===\"details\"?E:\"\"}\n          </div>\n        </${te}>\n        ${W}\n      </${ee}>\n    `};e.renderer.rules.fence=o,e.renderer.rules.code_block=o};function Hn(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\"default\")?e.default:e}var _e={exports:{}},M={},Oe={exports:{}},fe={};function Jt(){var e={};return e[\"align-content\"]=!1,e[\"align-items\"]=!1,e[\"align-self\"]=!1,e[\"alignment-adjust\"]=!1,e[\"alignment-baseline\"]=!1,e.all=!1,e[\"anchor-point\"]=!1,e.animation=!1,e[\"animation-delay\"]=!1,e[\"animation-direction\"]=!1,e[\"animation-duration\"]=!1,e[\"animation-fill-mode\"]=!1,e[\"animation-iteration-count\"]=!1,e[\"animation-name\"]=!1,e[\"animation-play-state\"]=!1,e[\"animation-timing-function\"]=!1,e.azimuth=!1,e[\"backface-visibility\"]=!1,e.background=!0,e[\"background-attachment\"]=!0,e[\"background-clip\"]=!0,e[\"background-color\"]=!0,e[\"background-image\"]=!0,e[\"background-origin\"]=!0,e[\"background-position\"]=!0,e[\"background-repeat\"]=!0,e[\"background-size\"]=!0,e[\"baseline-shift\"]=!1,e.binding=!1,e.bleed=!1,e[\"bookmark-label\"]=!1,e[\"bookmark-level\"]=!1,e[\"bookmark-state\"]=!1,e.border=!0,e[\"border-bottom\"]=!0,e[\"border-bottom-color\"]=!0,e[\"border-bottom-left-radius\"]=!0,e[\"border-bottom-right-radius\"]=!0,e[\"border-bottom-style\"]=!0,e[\"border-bottom-width\"]=!0,e[\"border-collapse\"]=!0,e[\"border-color\"]=!0,e[\"border-image\"]=!0,e[\"border-image-outset\"]=!0,e[\"border-image-repeat\"]=!0,e[\"border-image-slice\"]=!0,e[\"border-image-source\"]=!0,e[\"border-image-width\"]=!0,e[\"border-left\"]=!0,e[\"border-left-color\"]=!0,e[\"border-left-style\"]=!0,e[\"border-left-width\"]=!0,e[\"border-radius\"]=!0,e[\"border-right\"]=!0,e[\"border-right-color\"]=!0,e[\"border-right-style\"]=!0,e[\"border-right-width\"]=!0,e[\"border-spacing\"]=!0,e[\"border-style\"]=!0,e[\"border-top\"]=!0,e[\"border-top-color\"]=!0,e[\"border-top-left-radius\"]=!0,e[\"border-top-right-radius\"]=!0,e[\"border-top-style\"]=!0,e[\"border-top-width\"]=!0,e[\"border-width\"]=!0,e.bottom=!1,e[\"box-decoration-break\"]=!0,e[\"box-shadow\"]=!0,e[\"box-sizing\"]=!0,e[\"box-snap\"]=!0,e[\"box-suppress\"]=!0,e[\"break-after\"]=!0,e[\"break-before\"]=!0,e[\"break-inside\"]=!0,e[\"caption-side\"]=!1,e.chains=!1,e.clear=!0,e.clip=!1,e[\"clip-path\"]=!1,e[\"clip-rule\"]=!1,e.color=!0,e[\"color-interpolation-filters\"]=!0,e[\"column-count\"]=!1,e[\"column-fill\"]=!1,e[\"column-gap\"]=!1,e[\"column-rule\"]=!1,e[\"column-rule-color\"]=!1,e[\"column-rule-style\"]=!1,e[\"column-rule-width\"]=!1,e[\"column-span\"]=!1,e[\"column-width\"]=!1,e.columns=!1,e.contain=!1,e.content=!1,e[\"counter-increment\"]=!1,e[\"counter-reset\"]=!1,e[\"counter-set\"]=!1,e.crop=!1,e.cue=!1,e[\"cue-after\"]=!1,e[\"cue-before\"]=!1,e.cursor=!1,e.direction=!1,e.display=!0,e[\"display-inside\"]=!0,e[\"display-list\"]=!0,e[\"display-outside\"]=!0,e[\"dominant-baseline\"]=!1,e.elevation=!1,e[\"empty-cells\"]=!1,e.filter=!1,e.flex=!1,e[\"flex-basis\"]=!1,e[\"flex-direction\"]=!1,e[\"flex-flow\"]=!1,e[\"flex-grow\"]=!1,e[\"flex-shrink\"]=!1,e[\"flex-wrap\"]=!1,e.float=!1,e[\"float-offset\"]=!1,e[\"flood-color\"]=!1,e[\"flood-opacity\"]=!1,e[\"flow-from\"]=!1,e[\"flow-into\"]=!1,e.font=!0,e[\"font-family\"]=!0,e[\"font-feature-settings\"]=!0,e[\"font-kerning\"]=!0,e[\"font-language-override\"]=!0,e[\"font-size\"]=!0,e[\"font-size-adjust\"]=!0,e[\"font-stretch\"]=!0,e[\"font-style\"]=!0,e[\"font-synthesis\"]=!0,e[\"font-variant\"]=!0,e[\"font-variant-alternates\"]=!0,e[\"font-variant-caps\"]=!0,e[\"font-variant-east-asian\"]=!0,e[\"font-variant-ligatures\"]=!0,e[\"font-variant-numeric\"]=!0,e[\"font-variant-position\"]=!0,e[\"font-weight\"]=!0,e.grid=!1,e[\"grid-area\"]=!1,e[\"grid-auto-columns\"]=!1,e[\"grid-auto-flow\"]=!1,e[\"grid-auto-rows\"]=!1,e[\"grid-column\"]=!1,e[\"grid-column-end\"]=!1,e[\"grid-column-start\"]=!1,e[\"grid-row\"]=!1,e[\"grid-row-end\"]=!1,e[\"grid-row-start\"]=!1,e[\"grid-template\"]=!1,e[\"grid-template-areas\"]=!1,e[\"grid-template-columns\"]=!1,e[\"grid-template-rows\"]=!1,e[\"hanging-punctuation\"]=!1,e.height=!0,e.hyphens=!1,e.icon=!1,e[\"image-orientation\"]=!1,e[\"image-resolution\"]=!1,e[\"ime-mode\"]=!1,e[\"initial-letters\"]=!1,e[\"inline-box-align\"]=!1,e[\"justify-content\"]=!1,e[\"justify-items\"]=!1,e[\"justify-self\"]=!1,e.left=!1,e[\"letter-spacing\"]=!0,e[\"lighting-color\"]=!0,e[\"line-box-contain\"]=!1,e[\"line-break\"]=!1,e[\"line-grid\"]=!1,e[\"line-height\"]=!1,e[\"line-snap\"]=!1,e[\"line-stacking\"]=!1,e[\"line-stacking-ruby\"]=!1,e[\"line-stacking-shift\"]=!1,e[\"line-stacking-strategy\"]=!1,e[\"list-style\"]=!0,e[\"list-style-image\"]=!0,e[\"list-style-position\"]=!0,e[\"list-style-type\"]=!0,e.margin=!0,e[\"margin-bottom\"]=!0,e[\"margin-left\"]=!0,e[\"margin-right\"]=!0,e[\"margin-top\"]=!0,e[\"marker-offset\"]=!1,e[\"marker-side\"]=!1,e.marks=!1,e.mask=!1,e[\"mask-box\"]=!1,e[\"mask-box-outset\"]=!1,e[\"mask-box-repeat\"]=!1,e[\"mask-box-slice\"]=!1,e[\"mask-box-source\"]=!1,e[\"mask-box-width\"]=!1,e[\"mask-clip\"]=!1,e[\"mask-image\"]=!1,e[\"mask-origin\"]=!1,e[\"mask-position\"]=!1,e[\"mask-repeat\"]=!1,e[\"mask-size\"]=!1,e[\"mask-source-type\"]=!1,e[\"mask-type\"]=!1,e[\"max-height\"]=!0,e[\"max-lines\"]=!1,e[\"max-width\"]=!0,e[\"min-height\"]=!0,e[\"min-width\"]=!0,e[\"move-to\"]=!1,e[\"nav-down\"]=!1,e[\"nav-index\"]=!1,e[\"nav-left\"]=!1,e[\"nav-right\"]=!1,e[\"nav-up\"]=!1,e[\"object-fit\"]=!1,e[\"object-position\"]=!1,e.opacity=!1,e.order=!1,e.orphans=!1,e.outline=!1,e[\"outline-color\"]=!1,e[\"outline-offset\"]=!1,e[\"outline-style\"]=!1,e[\"outline-width\"]=!1,e.overflow=!1,e[\"overflow-wrap\"]=!1,e[\"overflow-x\"]=!1,e[\"overflow-y\"]=!1,e.padding=!0,e[\"padding-bottom\"]=!0,e[\"padding-left\"]=!0,e[\"padding-right\"]=!0,e[\"padding-top\"]=!0,e.page=!1,e[\"page-break-after\"]=!1,e[\"page-break-before\"]=!1,e[\"page-break-inside\"]=!1,e[\"page-policy\"]=!1,e.pause=!1,e[\"pause-after\"]=!1,e[\"pause-before\"]=!1,e.perspective=!1,e[\"perspective-origin\"]=!1,e.pitch=!1,e[\"pitch-range\"]=!1,e[\"play-during\"]=!1,e.position=!1,e[\"presentation-level\"]=!1,e.quotes=!1,e[\"region-fragment\"]=!1,e.resize=!1,e.rest=!1,e[\"rest-after\"]=!1,e[\"rest-before\"]=!1,e.richness=!1,e.right=!1,e.rotation=!1,e[\"rotation-point\"]=!1,e[\"ruby-align\"]=!1,e[\"ruby-merge\"]=!1,e[\"ruby-position\"]=!1,e[\"shape-image-threshold\"]=!1,e[\"shape-outside\"]=!1,e[\"shape-margin\"]=!1,e.size=!1,e.speak=!1,e[\"speak-as\"]=!1,e[\"speak-header\"]=!1,e[\"speak-numeral\"]=!1,e[\"speak-punctuation\"]=!1,e[\"speech-rate\"]=!1,e.stress=!1,e[\"string-set\"]=!1,e[\"tab-size\"]=!1,e[\"table-layout\"]=!1,e[\"text-align\"]=!0,e[\"text-align-last\"]=!0,e[\"text-combine-upright\"]=!0,e[\"text-decoration\"]=!0,e[\"text-decoration-color\"]=!0,e[\"text-decoration-line\"]=!0,e[\"text-decoration-skip\"]=!0,e[\"text-decoration-style\"]=!0,e[\"text-emphasis\"]=!0,e[\"text-emphasis-color\"]=!0,e[\"text-emphasis-position\"]=!0,e[\"text-emphasis-style\"]=!0,e[\"text-height\"]=!0,e[\"text-indent\"]=!0,e[\"text-justify\"]=!0,e[\"text-orientation\"]=!0,e[\"text-overflow\"]=!0,e[\"text-shadow\"]=!0,e[\"text-space-collapse\"]=!0,e[\"text-transform\"]=!0,e[\"text-underline-position\"]=!0,e[\"text-wrap\"]=!0,e.top=!1,e.transform=!1,e[\"transform-origin\"]=!1,e[\"transform-style\"]=!1,e.transition=!1,e[\"transition-delay\"]=!1,e[\"transition-duration\"]=!1,e[\"transition-property\"]=!1,e[\"transition-timing-function\"]=!1,e[\"unicode-bidi\"]=!1,e[\"vertical-align\"]=!1,e.visibility=!1,e[\"voice-balance\"]=!1,e[\"voice-duration\"]=!1,e[\"voice-family\"]=!1,e[\"voice-pitch\"]=!1,e[\"voice-range\"]=!1,e[\"voice-rate\"]=!1,e[\"voice-stress\"]=!1,e[\"voice-volume\"]=!1,e.volume=!1,e[\"white-space\"]=!1,e.widows=!1,e.width=!0,e[\"will-change\"]=!1,e[\"word-break\"]=!0,e[\"word-spacing\"]=!0,e[\"word-wrap\"]=!0,e[\"wrap-flow\"]=!1,e[\"wrap-through\"]=!1,e[\"writing-mode\"]=!1,e[\"z-index\"]=!1,e}function Fn(e,r,t){}function Vn(e,r,t){}var Wn=/javascript\\s*\\:/img;function Gn(e,r){return Wn.test(r)?\"\":r}fe.whiteList=Jt();fe.getDefaultWhiteList=Jt;fe.onAttr=Fn;fe.onIgnoreAttr=Vn;fe.safeAttrValue=Gn;var Bn={indexOf:function(e,r){var t,n;if(Array.prototype.indexOf)return e.indexOf(r);for(t=0,n=e.length;t<n;t++)if(e[t]===r)return t;return-1},forEach:function(e,r,t){var n,s;if(Array.prototype.forEach)return e.forEach(r,t);for(n=0,s=e.length;n<s;n++)r.call(t,e[n],n,e)},trim:function(e){return String.prototype.trim?e.trim():e.replace(/(^\\s*)|(\\s*$)/g,\"\")},trimRight:function(e){return String.prototype.trimRight?e.trimRight():e.replace(/(\\s*$)/g,\"\")}},be=Bn;function qn(e,r){e=be.trimRight(e),e[e.length-1]!==\";\"&&(e+=\";\");var t=e.length,n=!1,s=0,i=0,l=\"\";function c(){if(!n){var o=be.trim(e.slice(s,i)),m=o.indexOf(\":\");if(m!==-1){var h=be.trim(o.slice(0,m)),x=be.trim(o.slice(m+1));if(h){var b=r(s,l.length,h,x,o);b&&(l+=b+\"; \")}}}s=i+1}for(;i<t;i++){var d=e[i];if(d===\"/\"&&e[i+1]===\"*\"){var p=e.indexOf(\"*/\",i+2);if(p===-1)break;i=p+1,s=i+1,n=!1}else d===\"(\"?n=!0:d===\")\"?n=!1:d===\";\"?n||c():d===`\n`&&c()}return be.trim(l)}var zn=qn,Ee=fe,Un=zn;function Gt(e){return e==null}function Xn(e){var r={};for(var t in e)r[t]=e[t];return r}function er(e){e=Xn(e||{}),e.whiteList=e.whiteList||Ee.whiteList,e.onAttr=e.onAttr||Ee.onAttr,e.onIgnoreAttr=e.onIgnoreAttr||Ee.onIgnoreAttr,e.safeAttrValue=e.safeAttrValue||Ee.safeAttrValue,this.options=e}er.prototype.process=function(e){if(e=e||\"\",e=e.toString(),!e)return\"\";var r=this,t=r.options,n=t.whiteList,s=t.onAttr,i=t.onIgnoreAttr,l=t.safeAttrValue,c=Un(e,function(d,p,o,m,h){var x=n[o],b=!1;if(x===!0?b=x:typeof x==\"function\"?b=x(m):x instanceof RegExp&&(b=x.test(m)),b!==!0&&(b=!1),m=l(o,m),!!m){var k={position:p,sourcePosition:d,source:h,isWhite:b};if(b){var v=s(o,m,k);return Gt(v)?o+\":\"+m:v}else{var v=i(o,m,k);if(!Gt(v))return v}}});return c};var Kn=er;(function(e,r){var t=fe,n=Kn;function s(l,c){var d=new n(c);return d.process(l)}r=e.exports=s,r.FilterCSS=n;for(var i in t)r[i]=t[i];typeof window<\"u\"&&(window.filterCSS=e.exports)})(Oe,Oe.exports);var De=Oe.exports,He={indexOf:function(e,r){var t,n;if(Array.prototype.indexOf)return e.indexOf(r);for(t=0,n=e.length;t<n;t++)if(e[t]===r)return t;return-1},forEach:function(e,r,t){var n,s;if(Array.prototype.forEach)return e.forEach(r,t);for(n=0,s=e.length;n<s;n++)r.call(t,e[n],n,e)},trim:function(e){return String.prototype.trim?e.trim():e.replace(/(^\\s*)|(\\s*$)/g,\"\")},spaceIndex:function(e){var r=/\\s|\\n|\\t/,t=r.exec(e);return t?t.index:-1}},Yn=De.FilterCSS,Zn=De.getDefaultWhiteList,Ie=He;function tr(){return{a:[\"target\",\"href\",\"title\"],abbr:[\"title\"],address:[],area:[\"shape\",\"coords\",\"href\",\"alt\"],article:[],aside:[],audio:[\"autoplay\",\"controls\",\"crossorigin\",\"loop\",\"muted\",\"preload\",\"src\"],b:[],bdi:[\"dir\"],bdo:[\"dir\"],big:[],blockquote:[\"cite\"],br:[],caption:[],center:[],cite:[],code:[],col:[\"align\",\"valign\",\"span\",\"width\"],colgroup:[\"align\",\"valign\",\"span\",\"width\"],dd:[],del:[\"datetime\"],details:[\"open\"],div:[],dl:[],dt:[],em:[],figcaption:[],figure:[],font:[\"color\",\"size\",\"face\"],footer:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],header:[],hr:[],i:[],img:[\"src\",\"alt\",\"title\",\"width\",\"height\",\"loading\"],ins:[\"datetime\"],kbd:[],li:[],mark:[],nav:[],ol:[],p:[],pre:[],s:[],section:[],small:[],span:[],sub:[],summary:[],sup:[],strong:[],strike:[],table:[\"width\",\"border\",\"align\",\"valign\"],tbody:[\"align\",\"valign\"],td:[\"width\",\"rowspan\",\"colspan\",\"align\",\"valign\"],tfoot:[\"align\",\"valign\"],th:[\"width\",\"rowspan\",\"colspan\",\"align\",\"valign\"],thead:[\"align\",\"valign\"],tr:[\"rowspan\",\"align\",\"valign\"],tt:[],u:[],ul:[],video:[\"autoplay\",\"controls\",\"crossorigin\",\"loop\",\"muted\",\"playsinline\",\"poster\",\"preload\",\"src\",\"height\",\"width\"]}}var rr=new Yn;function Qn(e,r,t){}function Jn(e,r,t){}function ea(e,r,t){}function ta(e,r,t){}function nr(e){return e.replace(na,\"&lt;\").replace(aa,\"&gt;\")}function ra(e,r,t,n){if(t=cr(t),r===\"href\"||r===\"src\"){if(t=Ie.trim(t),t===\"#\")return\"#\";if(!(t.substr(0,7)===\"http://\"||t.substr(0,8)===\"https://\"||t.substr(0,7)===\"mailto:\"||t.substr(0,4)===\"tel:\"||t.substr(0,11)===\"data:image/\"||t.substr(0,6)===\"ftp://\"||t.substr(0,2)===\"./\"||t.substr(0,3)===\"../\"||t[0]===\"#\"||t[0]===\"/\"))return\"\"}else if(r===\"background\"){if($e.lastIndex=0,$e.test(t))return\"\"}else if(r===\"style\"){if(Bt.lastIndex=0,Bt.test(t)||(qt.lastIndex=0,qt.test(t)&&($e.lastIndex=0,$e.test(t))))return\"\";n!==!1&&(n=n||rr,t=n.process(t))}return t=ur(t),t}var na=/</g,aa=/>/g,oa=/\"/g,ia=/&quot;/g,sa=/&#([a-zA-Z0-9]*);?/gim,la=/&colon;?/gim,ca=/&newline;?/gim,$e=/((j\\s*a\\s*v\\s*a|v\\s*b|l\\s*i\\s*v\\s*e)\\s*s\\s*c\\s*r\\s*i\\s*p\\s*t\\s*|m\\s*o\\s*c\\s*h\\s*a):/gi,Bt=/e\\s*x\\s*p\\s*r\\s*e\\s*s\\s*s\\s*i\\s*o\\s*n\\s*\\(.*/gi,qt=/u\\s*r\\s*l\\s*\\(.*/gi;function ar(e){return e.replace(oa,\"&quot;\")}function or(e){return e.replace(ia,'\"')}function ir(e){return e.replace(sa,function(t,n){return n[0]===\"x\"||n[0]===\"X\"?String.fromCharCode(parseInt(n.substr(1),16)):String.fromCharCode(parseInt(n,10))})}function sr(e){return e.replace(la,\":\").replace(ca,\" \")}function lr(e){for(var r=\"\",t=0,n=e.length;t<n;t++)r+=e.charCodeAt(t)<32?\" \":e.charAt(t);return Ie.trim(r)}function cr(e){return e=or(e),e=ir(e),e=sr(e),e=lr(e),e}function ur(e){return e=ar(e),e=nr(e),e}function ua(){return\"\"}function da(e,r){typeof r!=\"function\"&&(r=function(){});var t=!Array.isArray(e);function n(l){return t?!0:Ie.indexOf(e,l)!==-1}var s=[],i=!1;return{onIgnoreTag:function(l,c,d){if(n(l))if(d.isClosing){var p=\"[/removed]\",o=d.position+p.length;return s.push([i!==!1?i:d.position,o]),i=!1,p}else return i||(i=d.position),\"[removed]\";else return r(l,c,d)},remove:function(l){var c=\"\",d=0;return Ie.forEach(s,function(p){c+=l.slice(d,p[0]),d=p[1]}),c+=l.slice(d),c}}}function fa(e){for(var r=\"\",t=0;t<e.length;){var n=e.indexOf(\"<!--\",t);if(n===-1){r+=e.slice(t);break}r+=e.slice(t,n);var s=e.indexOf(\"-->\",n);if(s===-1)break;t=s+3}return r}function ma(e){var r=e.split(\"\");return r=r.filter(function(t){var n=t.charCodeAt(0);return n===127?!1:n<=31?n===10||n===13:!0}),r.join(\"\")}M.whiteList=tr();M.getDefaultWhiteList=tr;M.onTag=Qn;M.onIgnoreTag=Jn;M.onTagAttr=ea;M.onIgnoreTagAttr=ta;M.safeAttrValue=ra;M.escapeHtml=nr;M.escapeQuote=ar;M.unescapeQuote=or;M.escapeHtmlEntities=ir;M.escapeDangerHtml5Entities=sr;M.clearNonPrintableCharacter=lr;M.friendlyAttrValue=cr;M.escapeAttrValue=ur;M.onIgnoreTagStripAll=ua;M.StripTagBody=da;M.stripCommentTag=fa;M.stripBlankChar=ma;M.attributeWrapSign='\"';M.cssFilter=rr;M.getDefaultCSSWhiteList=Zn;var Le={},ce=He;function ga(e){var r=ce.spaceIndex(e),t;return r===-1?t=e.slice(1,-1):t=e.slice(1,r+1),t=ce.trim(t).toLowerCase(),t.slice(0,1)===\"/\"&&(t=t.slice(1)),t.slice(-1)===\"/\"&&(t=t.slice(0,-1)),t}function ha(e){return e.slice(0,2)===\"</\"}function pa(e,r,t){var n=\"\",s=0,i=!1,l=!1,c=0,d=e.length,p=\"\",o=\"\";e:for(c=0;c<d;c++){var m=e.charAt(c);if(i===!1){if(m===\"<\"){i=c;continue}}else if(l===!1){if(m===\"<\"){n+=t(e.slice(s,c)),i=c,s=c;continue}if(m===\">\"||c===d-1){n+=t(e.slice(s,i)),o=e.slice(i,c+1),p=ga(o),n+=r(i,n.length,p,o,ha(o)),s=c+1,i=!1;continue}if(m==='\"'||m===\"'\")for(var h=1,x=e.charAt(c-h);x.trim()===\"\"||x===\"=\";){if(x===\"=\"){l=m;continue e}x=e.charAt(c-++h)}}else if(m===l){l=!1;continue}}return s<d&&(n+=t(e.substr(s))),n}var ba=/[^a-zA-Z0-9\\\\_:.-]/gim;function xa(e,r){var t=0,n=0,s=[],i=!1,l=e.length;function c(h,x){if(h=ce.trim(h),h=h.replace(ba,\"\").toLowerCase(),!(h.length<1)){var b=r(h,x||\"\");b&&s.push(b)}}for(var d=0;d<l;d++){var p=e.charAt(d),o,m;if(i===!1&&p===\"=\"){i=e.slice(t,d),t=d+1,n=e.charAt(t)==='\"'||e.charAt(t)===\"'\"?t:Ca(e,d+1);continue}if(i!==!1&&d===n){if(m=e.indexOf(p,d+1),m===-1)break;o=ce.trim(e.slice(n+1,m)),c(i,o),i=!1,d=m,t=d+1;continue}if(/\\s|\\n|\\t/.test(p))if(e=e.replace(/\\s|\\n|\\t/g,\" \"),i===!1)if(m=va(e,d),m===-1){o=ce.trim(e.slice(t,d)),c(o),i=!1,t=d+1;continue}else{d=m-1;continue}else if(m=ka(e,d-1),m===-1){o=ce.trim(e.slice(t,d)),o=zt(o),c(i,o),i=!1,t=d+1;continue}else continue}return t<e.length&&(i===!1?c(e.slice(t)):c(i,zt(ce.trim(e.slice(t))))),ce.trim(s.join(\" \"))}function va(e,r){for(;r<e.length;r++){var t=e[r];if(t!==\" \")return t===\"=\"?r:-1}}function Ca(e,r){for(;r<e.length;r++){var t=e[r];if(t!==\" \")return t===\"'\"||t==='\"'?r:-1}}function ka(e,r){for(;r>0;r--){var t=e[r];if(t!==\" \")return t===\"=\"?r:-1}}function wa(e){return e[0]==='\"'&&e[e.length-1]==='\"'||e[0]===\"'\"&&e[e.length-1]===\"'\"}function zt(e){return wa(e)?e.substr(1,e.length-2):e}Le.parseTag=pa;Le.parseAttr=xa;var ya=De.FilterCSS,Z=M,dr=Le,Ea=dr.parseTag,$a=dr.parseAttr,Ae=He;function Te(e){return e==null}function Ta(e){var r=Ae.spaceIndex(e);if(r===-1)return{html:\"\",closing:e[e.length-2]===\"/\"};e=Ae.trim(e.slice(r+1,-1));var t=e[e.length-1]===\"/\";return t&&(e=Ae.trim(e.slice(0,-1))),{html:e,closing:t}}function Sa(e){var r={};for(var t in e)r[t]=e[t];return r}function Aa(e){var r={};for(var t in e)Array.isArray(e[t])?r[t.toLowerCase()]=e[t].map(function(n){return n.toLowerCase()}):r[t.toLowerCase()]=e[t];return r}function fr(e){e=Sa(e||{}),e.stripIgnoreTag&&(e.onIgnoreTag&&console.error('Notes: cannot use these two options \"stripIgnoreTag\" and \"onIgnoreTag\" at the same time'),e.onIgnoreTag=Z.onIgnoreTagStripAll),e.whiteList||e.allowList?e.whiteList=Aa(e.whiteList||e.allowList):e.whiteList=Z.whiteList,this.attributeWrapSign=e.singleQuotedAttributeValue===!0?\"'\":Z.attributeWrapSign,e.onTag=e.onTag||Z.onTag,e.onTagAttr=e.onTagAttr||Z.onTagAttr,e.onIgnoreTag=e.onIgnoreTag||Z.onIgnoreTag,e.onIgnoreTagAttr=e.onIgnoreTagAttr||Z.onIgnoreTagAttr,e.safeAttrValue=e.safeAttrValue||Z.safeAttrValue,e.escapeHtml=e.escapeHtml||Z.escapeHtml,this.options=e,e.css===!1?this.cssFilter=!1:(e.css=e.css||{},this.cssFilter=new ya(e.css))}fr.prototype.process=function(e){if(e=e||\"\",e=e.toString(),!e)return\"\";var r=this,t=r.options,n=t.whiteList,s=t.onTag,i=t.onIgnoreTag,l=t.onTagAttr,c=t.onIgnoreTagAttr,d=t.safeAttrValue,p=t.escapeHtml,o=r.attributeWrapSign,m=r.cssFilter;t.stripBlankChar&&(e=Z.stripBlankChar(e)),t.allowCommentTag||(e=Z.stripCommentTag(e));var h=!1;t.stripIgnoreTagBody&&(h=Z.StripTagBody(t.stripIgnoreTagBody,i),i=h.onIgnoreTag);var x=Ea(e,function(b,k,v,C,w){var E={sourcePosition:b,position:k,isClosing:w,isWhite:Object.prototype.hasOwnProperty.call(n,v)},$=s(v,C,E);if(!Te($))return $;if(E.isWhite){if(E.isClosing)return\"</\"+v+\">\";var T=Ta(C),A=n[v],S=$a(T.html,function(j,_){var W=Ae.indexOf(A,j)!==-1,V=l(v,j,_,W);return Te(V)?W?(_=d(v,j,_,m),_?j+\"=\"+o+_+o:j):(V=c(v,j,_,W),Te(V)?void 0:V):V});return C=\"<\"+v,S&&(C+=\" \"+S),T.closing&&(C+=\" /\"),C+=\">\",C}else return $=i(v,C,E),Te($)?p(C):$},p);return h&&(x=h.remove(x)),x};var Na=fr;(function(e,r){var t=M,n=Le,s=Na;function i(c,d){var p=new s(d);return p.process(c)}r=e.exports=i,r.filterXSS=i,r.FilterXSS=s,function(){for(var c in t)r[c]=t[c];for(var d in n)r[d]=n[d]}(),typeof window<\"u\"&&(window.filterXSS=e.exports);function l(){return typeof self<\"u\"&&typeof DedicatedWorkerGlobalScope<\"u\"&&self instanceof DedicatedWorkerGlobalScope}l()&&(self.filterXSS=e.exports)})(_e,_e.exports);var Ce=_e.exports;const Ia=Hn(Ce),La=Nr({__proto__:null,default:Ia},[Ce]),Ut={img:[\"class\"],input:[\"class\",\"disabled\",\"type\",\"checked\"],iframe:[\"class\",\"width\",\"height\",\"src\",\"title\",\"border\",\"frameborder\",\"framespacing\",\"allow\",\"allowfullscreen\"]},ja=(e,r)=>{const{extendedWhiteList:t={},xss:n={}}=r;let s;if(typeof n==\"function\")s=new Ce.FilterXSS(n(La));else{const i=Ce.getDefaultWhiteList();[...Object.keys(t),...Object.keys(Ut)].forEach(c=>{const d=i[c]||[],p=Ut[c]||[],o=t[c]||[];i[c]=[...new Set([...d,...p,...o])]}),s=new Ce.FilterXSS({whiteList:i,...n})}e.core.ruler.after(\"linkify\",\"xss\",i=>{for(let l=0;l<i.tokens.length;l++){const c=i.tokens[l];switch(c.type){case\"html_block\":{c.content=s.process(c.content);break}case\"inline\":{(c.children||[]).forEach(p=>{p.type===\"html_inline\"&&(p.content=s.process(p.content))});break}}}})},Xt=(e,r,t)=>{const n=e.attrIndex(r),s=[r,t];n<0?e.attrPush(s):(e.attrs=e.attrs||[],e.attrs[n]=s)},Ra=e=>e.type===\"inline\",Pa=e=>e.type===\"paragraph_open\",_a=e=>e.type===\"list_item_open\",Oa=e=>e.content.indexOf(\"[ ] \")===0||e.content.indexOf(\"[x] \")===0||e.content.indexOf(\"[X] \")===0,Ma=(e,r)=>Ra(e[r])&&Pa(e[r-1])&&_a(e[r-2])&&Oa(e[r]),Da=(e,r)=>{const t=e[r].level-1;for(let n=r-1;n>=0;n--)if(e[n].level===t)return n;return-1},Ha=e=>{const r=new e(\"html_inline\",\"\",0);return r.content=\"<label>\",r},Fa=e=>{const r=new e(\"html_inline\",\"\",0);return r.content=\"</label>\",r},Va=(e,r,t)=>{const n=new t(\"html_inline\",\"\",0);return n.content='<label class=\"task-list-item-label\" for=\"'+r+'\">'+e+\"</label>\",n.attrs=[{for:r}],n},Wa=(e,r,t)=>{const n=new r(\"html_inline\",\"\",0),s=t.enabled?\" \":' disabled=\"\" ';return e.content.indexOf(\"[ ] \")===0?n.content='<input class=\"task-list-item-checkbox\"'+s+'type=\"checkbox\">':(e.content.indexOf(\"[x] \")===0||e.content.indexOf(\"[X] \")===0)&&(n.content='<input class=\"task-list-item-checkbox\" checked=\"\"'+s+'type=\"checkbox\">'),n},Ga=(e,r,t)=>{if(e.children=e.children||[],e.children.unshift(Wa(e,r,t)),e.children[1].content=e.children[1].content.slice(3),e.content=e.content.slice(3),t.label)if(t.labelAfter){e.children.pop();const n=\"task-item-\"+Math.ceil(Math.random()*(1e4*1e3)-1e3);e.children[0].content=e.children[0].content.slice(0,-1)+' id=\"'+n+'\">',e.children.push(Va(e.content,n,r))}else e.children.unshift(Ha(r)),e.children.push(Fa(r))},Ba=(e,r={})=>{e.core.ruler.after(\"inline\",\"github-task-lists\",t=>{const n=t.tokens;for(let s=2;s<n.length;s++)Ma(n,s)&&(Ga(n[s],t.Token,r),Xt(n[s-2],\"class\",\"task-list-item\"+(r.enabled?\" enabled\":\" \")),Xt(n[Da(n,s-2)],\"class\",\"contains-task-list\"))})},qa=e=>{e.core.ruler.push(\"init-line-number\",r=>(r.tokens.forEach(t=>{t.map&&(t.attrs||(t.attrs=[]),t.attrs.push([\"data-line\",t.map[0].toString()]))}),!0))},za=(e,r)=>{const{modelValue:t,sanitize:n,mdHeadingId:s,codeFoldable:i,autoFoldThreshold:l,noKatex:c,noMermaid:d,noHighlight:p,setting:o,onHtmlChanged:m,onGetCatalog:h}=e,{editorConfig:x,markdownItConfig:b,markdownItPlugins:k}=a.configOption,{editorId:v,language:C,showCodeRowNumber:w,theme:E,usedLanguageText:$,customIcon:T,rootRef:A}=f.useContext(F),S=f.useRef([]),j=f.useRef(E);f.useEffect(()=>{j.current=E},[E]);const _=f.useRef($);f.useEffect(()=>{_.current=$},[$]);const W=f.useRef(T);f.useEffect(()=>{W.current=T},[T]);const{hljsRef:V,hljsInited:Q}=An(e),{katexRef:ee,katexInited:te}=In(e),{reRender:re,replaceMermaid:J}=Nn(e),[G]=f.useState(()=>{const N=yr({html:!0,breaks:!0,linkify:!0});b(N,{editorId:v});const D=[{type:\"image\",plugin:Er,options:{figcaption:!0,classes:\"md-zoom\"}},{type:\"admonition\",plugin:_n,options:{}},{type:\"taskList\",plugin:Ba,options:{}},{type:\"heading\",plugin:On,options:{mdHeadingId:s,headsRef:S}},{type:\"code\",plugin:Dn,options:{editorId:v,usedLanguageTextRef:_,codeFoldable:i,autoFoldThreshold:l,customIconRef:W}},{type:\"xss\",plugin:ja,options:{}},{type:\"sub\",plugin:$r,options:{}},{type:\"sup\",plugin:Tr,options:{}}];c||D.push({type:\"katex\",plugin:Pn,options:{katexRef:ee}}),d||D.push({type:\"mermaid\",plugin:Ln,options:{themeRef:j}}),k(D,{editorId:v}).forEach(P=>{N.use(P.plugin,P.options)});const H=N.options.highlight;return N.set({highlight:(P,q,Y)=>{if(H){const me=H(P,q,Y);if(me)return me}let X;!p&&V.current?V.current.getLanguage(q)?X=V.current.highlight(P,{language:q,ignoreIllegals:!0}).value:X=V.current.highlightAuto(P).value:X=G.utils.escapeHtml(P);const ue=w?g.generateCodeRowNumber(X.replace(/^\\n+|\\n+$/g,\"\"),P.replace(/^\\n+|\\n+$/g,\"\")):`<span class=\"${a.prefix}-code-block\">${X.replace(/^\\n+|\\n+$/g,\"\")}</span>`;return`<pre><code class=\"language-${q}\" language=${q}>${ue}</code></pre>`}}),qa(N),N}),[B,O]=f.useState(`_article-key_${ke.randomId()}`),[U,ne]=f.useState(()=>(S.current=[],n(G.render(t)))),ae=f.useMemo(()=>(p||Q)&&(c||te),[Q,te,p,c]),I=f.useRef(!0),R=f.useCallback(()=>{S.current=[];const N=n(G.render(t));ne(N)},[G,t,n]);return f.useEffect(()=>{g.bus.emit(v,g.BUILD_FINISHED,U),m==null||m(U),h==null||h(S.current),g.bus.emit(v,g.CATALOG_CHANGED,S.current)},[v,U,B,h,m]),f.useEffect(()=>{o.preview&&(J().then(()=>{Tt(A==null?void 0:A.current.querySelectorAll(`#${v} .${a.prefix}-mermaid`))}),g.bus.emit(v,g.CATALOG_CHANGED,S.current))},[v,J,A,o.preview]),f.useEffect(()=>{if(I.current){I.current=!1;return}const N=setTimeout(()=>{R()},r?0:x.renderDelay);return()=>{clearTimeout(N)}},[ae,E,R,C,r,x.renderDelay]),f.useEffect(()=>{J().then(()=>{Tt(A==null?void 0:A.current.querySelectorAll(`#${v} .${a.prefix}-mermaid`))})},[v,U,B,re,J,A]),f.useEffect(()=>{const N=()=>{g.bus.emit(v,g.CATALOG_CHANGED,S.current)};return g.bus.on(v,{name:g.PUSH_CATALOG,callback:N}),()=>{g.bus.remove(v,g.PUSH_CATALOG,N)}},[v]),f.useEffect(()=>{const N=()=>{O(`_article-key_${ke.randomId()}`),R()};return g.bus.on(v,{name:g.RERENDER,callback:N}),()=>{g.bus.remove(v,g.RERENDER,N)}},[v,R]),{html:U,key:B}},Ua=(e,r,t)=>{const[n,s]=f.useState({width:e.inputBoxWitdh}),[i,l]=f.useState({left:e.inputBoxWitdh}),[c,d]=f.useState(e.setting.preview||e.setting.htmlPreview),p=f.useRef(e.inputBoxWitdh);return f.useEffect(()=>{var k,v,C,w;const o=((k=r.current)==null?void 0:k.offsetWidth)||0,m=((v=r.current)==null?void 0:v.getBoundingClientRect().x)||0,h=E=>{var A;let $=E.x-m;$<a.MinInputBoxWidth?$=a.MinInputBoxWidth:$>o-a.MinInputBoxWidth&&($=o-a.MinInputBoxWidth);const T=`${$}px`;s(S=>({...S,width:T})),l(S=>({...S,left:T})),p.current=T,(A=e.onInputBoxWitdhChange)==null||A.call(e,T)},x=()=>{l(E=>({...E})),document.addEventListener(\"mousemove\",h)},b=()=>{l(E=>({...E})),document.removeEventListener(\"mousemove\",h)};return(C=t.current)==null||C.addEventListener(\"mousedown\",x),(w=t.current)==null||w.addEventListener(\"mouseup\",b),()=>{var E,$;(E=t.current)==null||E.removeEventListener(\"mousedown\",x),($=t.current)==null||$.removeEventListener(\"mouseup\",b)}},[r,e,t]),f.useEffect(()=>{e.inputBoxWitdh&&(p.current=e.inputBoxWitdh,s(o=>({...o,width:e.inputBoxWitdh})),l(o=>({...o,left:e.inputBoxWitdh})))},[e.inputBoxWitdh]),f.useEffect(()=>{const o=e.setting.previewOnly;let m=\"\",h=\"\",x=!1;o?(m=\"0%\",h=\"none\",x=!0):!e.setting.htmlPreview&&!e.setting.preview?(m=\"100%\",h=\"none\",x=!1):(m=p.current,h=\"initial\",x=!0),d(x),s(b=>({...b,width:m})),l(b=>({...b,display:h}))},[e.setting.htmlPreview,e.setting.preview,e.setting.previewOnly]),{inputWrapperStyle:n,resizeOperateStyle:i,showPreviewWrapper:c}},Kt={checked:{regexp:/- \\[x\\]/,value:\"- [ ]\"},unChecked:{regexp:/- \\[\\s\\]/,value:\"- [x]\"}},Xa=(e,r)=>{const{editorId:t,rootRef:n}=f.useContext(F);f.useEffect(()=>{var l;const s=((l=n.current)==null?void 0:l.querySelectorAll(\".task-list-item.enabled\"))||[],i=c=>{var x;c.preventDefault();const d=c.target.checked?\"unChecked\":\"checked\",p=(x=c.target.parentElement)==null?void 0:x.dataset.line;if(!p)return;const o=Number(p),m=e.modelValue.split(`\n`),h=m[Number(o)].replace(Kt[d].regexp,Kt[d].value);e.previewOnly?(m[Number(o)]=h,e.onChange(m.join(`\n`))):g.bus.emit(t,g.TASK_STATE_CHANGED,o+1,h)};return s.forEach(c=>{c.addEventListener(\"click\",i)}),()=>{s.forEach(c=>{c.removeEventListener(\"click\",i)})}},[t,r,e,n])},mr=e=>{const{previewOnly:r=!1}=e,{editorId:t,previewTheme:n,showCodeRowNumber:s}=f.useContext(F),{html:i,key:l}=za(e,!!r);Sn(e,i,l),Tn(e,i),Xa(e,i);const c=f.useMemo(()=>u.jsx(\"div\",{id:`${t}-preview`,className:g.classnames([`${a.prefix}-preview`,`${n}-theme`,s&&`${a.prefix}-scrn`]),dangerouslySetInnerHTML:{__html:i}},l),[t,i,l,n,s]);return u.jsxs(u.Fragment,{children:[e.setting.preview&&u.jsx(\"div\",{id:`${t}-preview-wrapper`,className:`${a.prefix}-preview-wrapper`,children:c},\"content-preview-wrapper\"),!r&&e.setting.htmlPreview&&u.jsx(\"div\",{id:`${t}-html-wrapper`,className:`${a.prefix}-preview-wrapper`,children:u.jsx(\"div\",{className:`${a.prefix}-html`,children:i})},\"html-preview-wrapper\")]})},Ka=f.forwardRef((e,r)=>{const{onHtmlChanged:t}=e,{editorId:n}=f.useContext(F),[s,i]=f.useState(\"\"),l=f.useRef(null),c=f.useRef(null),d=f.useCallback(k=>{i(k),t==null||t(k)},[t]),{inputWrapperRef:p,codeMirrorUt:o,resetHistory:m}=$n(e),{inputWrapperStyle:h,resizeOperateStyle:x,showPreviewWrapper:b}=Ua(e,l,c);return Qr(e,s,o),f.useImperativeHandle(r,()=>({getSelectedText(){var k;return(k=o.current)==null?void 0:k.getSelectedText()},focus(k){var v;(v=o.current)==null||v.focus(k)},resetHistory:m,getEditorView(){var k;return(k=o.current)==null?void 0:k.view}}),[o,m]),u.jsxs(\"div\",{className:`${a.prefix}-content${b?\" has-preview\":\"\"}`,ref:l,children:[u.jsx(\"div\",{className:`${a.prefix}-input-wrapper`,style:h,ref:p}),(e.setting.htmlPreview||e.setting.preview)&&u.jsx(\"div\",{className:`${a.prefix}-resize-operate`,style:x,ref:c}),b&&u.jsx(mr,{modelValue:e.modelValue,onChange:e.onChange,setting:e.setting,onHtmlChanged:d,onGetCatalog:e.onGetCatalog,mdHeadingId:e.mdHeadingId,noMermaid:e.noMermaid,sanitize:e.sanitize,noKatex:e.noKatex,formatCopiedText:e.formatCopiedText,noHighlight:e.noHighlight,noImgZoomIn:e.noImgZoomIn,sanitizeMermaid:e.sanitizeMermaid,codeFoldable:e.codeFoldable,autoFoldThreshold:e.autoFoldThreshold},\"display-editor\"),e.catalogVisible&&u.jsx(g.MdCatalog,{theme:e.theme,className:`${a.prefix}-catalog-editor`,editorId:n,mdHeadingId:e.mdHeadingId,scrollElementOffsetTop:2},\"internal-catalog\")]})}),Ya=f.memo(Ka),Za=({modelValue:e})=>{const{usedLanguageText:r}=f.useContext(F);return f.useMemo(()=>{var t;return u.jsxs(\"div\",{className:`${a.prefix}-footer-item`,children:[u.jsx(\"label\",{className:`${a.prefix}-footer-label`,children:`${(t=r.footer)==null?void 0:t.markdownTotal}:`}),u.jsx(\"span\",{children:e.length||0})]})},[r,e])},Qa=e=>u.jsx(\"div\",{className:g.classnames([`${a.prefix}-checkbox`,e.checked&&`${a.prefix}-checkbox-checked`]),onClick:()=>{e.onChange(!e.checked)}}),Ja=e=>{var t;const{usedLanguageText:r}=f.useContext(F);return f.useMemo(()=>{var n;return u.jsxs(\"div\",{className:`${a.prefix}-footer-item`,children:[u.jsx(\"label\",{className:`${a.prefix}-footer-label`,onClick:()=>{e.onScrollAutoChange(!e.scrollAuto)},children:(n=r.footer)==null?void 0:n.scrollAuto}),u.jsx(Qa,{checked:e.scrollAuto,onChange:e.onScrollAutoChange})]})},[(t=r.footer)==null?void 0:t.scrollAuto,e])},eo=e=>{const r=f.useCallback(s=>{if(a.allFooter.includes(s))switch(s){case\"markdownTotal\":return u.jsx(Za,{modelValue:e.modelValue},\"markdown-total\");case\"scrollSwitch\":return!e.noScrollAuto&&u.jsx(Ja,{scrollAuto:e.scrollAuto,onScrollAutoChange:e.onScrollAutoChange},\"scroll-auto\")}else return e.defFooters[s]||\"\"},[e.modelValue,e.noScrollAuto,e.scrollAuto,e.onScrollAutoChange,e.defFooters]),[t,n]=f.useMemo(()=>{const s=e.footers.indexOf(\"=\"),i=s===-1?e.footers:e.footers.slice(0,s),l=s===-1?[]:e.footers.slice(s,Number.MAX_SAFE_INTEGER);return[i.map(c=>r(c)),l.map(c=>r(c))]},[e.footers,r]);return u.jsxs(\"div\",{className:`${a.prefix}-footer`,children:[u.jsx(\"div\",{className:`${a.prefix}-footer-left`,children:t}),u.jsx(\"div\",{className:`${a.prefix}-footer-right`,children:n})]})},to=f.memo(eo),F=f.createContext({editorId:\"\",tabWidth:2,theme:\"light\",language:\"zh-CN\",highlight:{css:\"\",js:\"\"},showCodeRowNumber:!1,usedLanguageText:a.staticTextDefault[\"zh-CN\"],previewTheme:\"default\",customIcon:{},rootRef:null}),ro=f.forwardRef((e,r)=>{const{modelValue:t=a.defaultProps.modelValue,theme:n=a.defaultProps.theme,codeTheme:s=a.defaultProps.codeTheme,className:i=a.defaultProps.className,toolbars:l=a.defaultProps.toolbars,toolbarsExclude:c=a.defaultProps.toolbarsExclude,defToolbars:d=a.defaultProps.defToolbars,tabWidth:p=a.defaultProps.tabWidth,showCodeRowNumber:o=a.defaultProps.showCodeRowNumber,previewTheme:m=a.defaultProps.previewTheme,noPrettier:h=a.defaultProps.noPrettier,tableShape:x=a.defaultProps.tableShape,noMermaid:b=a.defaultProps.noMermaid,noKatex:k=a.defaultProps.noKatex,placeholder:v=a.defaultProps.placeholder,onChange:C=a.defaultProps.onChange,onHtmlChanged:w=a.defaultProps.onHtmlChanged,onGetCatalog:E=a.defaultProps.onGetCatalog,sanitize:$=a.defaultProps.sanitize,onError:T=a.defaultProps.onError,mdHeadingId:A=a.defaultProps.mdHeadingId,footers:S=a.defaultProps.footers,defFooters:j=a.defaultProps.defFooters,noIconfont:_=a.defaultProps.noIconfont,noUploadImg:W=a.defaultProps.noUploadImg,noHighlight:V=a.defaultProps.noHighlight,noImgZoomIn:Q=a.defaultProps.noImgZoomIn,language:ee=a.defaultProps.language,inputBoxWitdh:te=a.defaultProps.inputBoxWitdh,sanitizeMermaid:re=a.defaultProps.sanitizeMermaid,transformImgUrl:J=a.defaultProps.transformImgUrl,codeFoldable:G=a.defaultProps.codeFoldable,autoFoldThreshold:B=a.defaultProps.autoFoldThreshold}=e,[O]=f.useState(()=>({editorId:e.editorId||g.getNextId(a.defaultEditorId+\"_\"),noKatex:k,noMermaid:b,noPrettier:h,noUploadImg:W,noIconfont:_,noHighlight:V})),[U,ne]=f.useState(()=>({scrollAuto:e.scrollAuto===void 0?!0:e.scrollAuto})),ae=f.useRef(null),I=f.useRef(),R=f.useCallback(Y=>{ne(X=>({...X,scrollAuto:Y}))},[ne]);Rr(e,O),Pr(O),Or(e,O),_r(O.editorId,T);const N=Mr(e,O),[D,H,P,q]=Zt(e);return Dr(r,O,N,P,q,I),f.useEffect(()=>()=>{g.bus.clear(O.editorId)},[O.editorId]),u.jsx(F.Provider,{value:{editorId:O.editorId,tabWidth:p,theme:n,language:ee,highlight:D,showCodeRowNumber:o,usedLanguageText:H,previewTheme:m,customIcon:e.customIcon||{},rootRef:ae},children:u.jsxs(\"div\",{id:O.editorId,className:g.classnames([a.prefix,!!i&&i,n===\"dark\"&&`${a.prefix}-dark`,(P.fullscreen||P.pageFullscreen)&&`${a.prefix}-fullscreen`]),style:e.style,ref:ae,children:[l.length>0&&u.jsx(Zr,{noPrettier:O.noPrettier,toolbars:l,toolbarsExclude:c,setting:P,updateSetting:q,tableShape:x,defToolbars:d,noUploadImg:O.noUploadImg,showToolbarName:e.showToolbarName,catalogVisible:N,codeTheme:s}),u.jsx(Ya,{ref:I,modelValue:t,onChange:C,setting:P,mdHeadingId:A,onHtmlChanged:w,onGetCatalog:E,sanitize:$,noMermaid:O.noMermaid,noPrettier:O.noPrettier,noHighlight:O.noHighlight,placeholder:v,noKatex:O.noKatex,scrollAuto:U.scrollAuto,formatCopiedText:e.formatCopiedText,autoFocus:e.autoFocus,disabled:e.disabled,readOnly:e.readOnly,maxLength:e.maxLength,autoDetectCode:e.autoDetectCode,onBlur:e.onBlur,onFocus:e.onFocus,onInput:e.onInput,completions:e.completions,catalogVisible:N,theme:e.theme,noImgZoomIn:Q,onDrop:e.onDrop,inputBoxWitdh:te,onInputBoxWitdhChange:e.onInputBoxWitdhChange,sanitizeMermaid:re,transformImgUrl:J,codeFoldable:G,autoFoldThreshold:B}),S.length>0&&u.jsx(to,{modelValue:t,footers:S,defFooters:j,noScrollAuto:!P.preview&&!P.htmlPreview||P.previewOnly,scrollAuto:U.scrollAuto,onScrollAutoChange:R})]})})});exports.ContentPreview=mr;exports.DropDown=he;exports.Editor=ro;exports.EditorContext=F;exports.Modal=Me;exports.StrIcon=Qt;exports.useConfig=Zt;exports.useExpansionPreview=Yt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/md-editor-rt/lib/cjs/chunks/Editor.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/md-editor-rt/lib/cjs/chunks/config.cjs":
/*!*************************************************************!*\
  !*** ./node_modules/md-editor-rt/lib/cjs/chunks/config.cjs ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const d=__webpack_require__(/*! @vavt/util */ \"(ssr)/./node_modules/@vavt/util/lib/cjs/index.cjs\"),g=\"md-editor\",h=\"md-editor-rt\",o=\"https://at.alicdn.com/t/c/font_2605852_cmafimm6hot.js\",n=\"https://at.alicdn.com/t/c/font_2605852_cmafimm6hot.css\",e=\"https://unpkg.com\",m=`${e}/@highlightjs/cdn-assets@11.10.0/highlight.min.js`,i={main:`${e}/prettier@3.3.3/standalone.js`,markdown:`${e}/prettier@3.3.3/plugins/markdown.js`},u={css:`${e}/cropperjs@1.6.2/dist/cropper.min.css`,js:`${e}/cropperjs@1.6.2/dist/cropper.min.js`},p=`${e}/screenfull@5.2.0/dist/screenfull.js`,y=`${e}/mermaid@11.3.0/dist/mermaid.min.js`,k={js:`${e}/katex@0.16.11/dist/katex.min.js`,css:`${e}/katex@0.16.11/dist/katex.min.css`},r={a11y:{light:`${e}/@highlightjs/cdn-assets@11.10.0/styles/a11y-light.min.css`,dark:`${e}/@highlightjs/cdn-assets@11.10.0/styles/a11y-dark.min.css`},atom:{light:`${e}/@highlightjs/cdn-assets@11.10.0/styles/atom-one-light.min.css`,dark:`${e}/@highlightjs/cdn-assets@11.10.0/styles/atom-one-dark.min.css`},github:{light:`${e}/@highlightjs/cdn-assets@11.10.0/styles/github.min.css`,dark:`${e}/@highlightjs/cdn-assets@11.10.0/styles/github-dark.min.css`},gradient:{light:`${e}/@highlightjs/cdn-assets@11.10.0/styles/gradient-light.min.css`,dark:`${e}/@highlightjs/cdn-assets@11.10.0/styles/gradient-dark.min.css`},kimbie:{light:`${e}/@highlightjs/cdn-assets@11.10.0/styles/kimbie-light.min.css`,dark:`${e}/@highlightjs/cdn-assets@11.10.0/styles/kimbie-dark.min.css`},paraiso:{light:`${e}/@highlightjs/cdn-assets@11.10.0/styles/paraiso-light.min.css`,dark:`${e}/@highlightjs/cdn-assets@11.10.0/styles/paraiso-dark.min.css`},qtcreator:{light:`${e}/@highlightjs/cdn-assets@11.10.0/styles/qtcreator-light.min.css`,dark:`${e}/@highlightjs/cdn-assets@11.10.0/styles/qtcreator-dark.min.css`},stackoverflow:{light:`${e}/@highlightjs/cdn-assets@11.10.0/styles/stackoverflow-light.min.css`,dark:`${e}/@highlightjs/cdn-assets@11.10.0/styles/stackoverflow-dark.min.css`}},f={highlight:{js:{integrity:\"sha384-GdEWAbCjn+ghjX0gLx7/N1hyTVmPAjdC2OvoAA0RyNcAOhqwtT8qnbCxWle2+uJX\",crossOrigin:\"anonymous\"},css:{a11y:{light:{integrity:\"sha384-qdZDAN3jffvh670RHw1wxLekabidEFaNRninYgIzBvMbL6WlHdXeHS/Bt+vx33lN\",crossOrigin:\"anonymous\"},dark:{integrity:\"sha384-2QAAjX8pqaM5azX68KWI2wExF6Q13kY4kEiQFY4b/1zPe6rpgmTByNpDEllH3sb+\",crossOrigin:\"anonymous\"}},atom:{light:{integrity:\"sha384-w6Ujm1VWa9HYFqGc89oAPn/DWDi2gUamjNrq9DRvEYm2X3ClItg9Y9xs1ViVo5b5\",crossOrigin:\"anonymous\"},dark:{integrity:\"sha384-oaMLBGEzBOJx3UHwac0cVndtX5fxGQIfnAeFZ35RTgqPcYlbprH9o9PUV/F8Le07\",crossOrigin:\"anonymous\"}},github:{light:{integrity:\"sha384-eFTL69TLRZTkNfYZOLM+G04821K1qZao/4QLJbet1pP4tcF+fdXq/9CdqAbWRl/L\",crossOrigin:\"anonymous\"},dark:{integrity:\"sha384-wH75j6z1lH97ZOpMOInqhgKzFkAInZPPSPlZpYKYTOqsaizPvhQZmAtLcPKXpLyH\",crossOrigin:\"anonymous\"}},gradient:{light:{integrity:\"sha384-yErHBR8aEZPxRl3XmR8dGSRAclMlnSRRw8sXQLcmPWzWUvb56BzQmBw3EWHl7QGI\",crossOrigin:\"anonymous\"},dark:{integrity:\"sha384-lUCvtSOdvDbp5hLWKgwz/taFu1HxlpqES2OVP5UG2JMTfnU481gXcBhGF9lAGoSr\",crossOrigin:\"anonymous\"}},kimbie:{light:{integrity:\"sha384-tloeSLUPczAvoZ48TUz+OxRie0oYLCRwlkadUXovGzzJEIbNQB2TkfUuvJ6SW5Mi\",crossOrigin:\"anonymous\"},dark:{integrity:\"sha384-o5F1vUaMNOmou1sQrsWiFo4/QUGSV0svqNZW+EesmKxWC8MpFJcveBhAyfvTHbGb\",crossOrigin:\"anonymous\"}},paraiso:{light:{integrity:\"sha384-5j6QHU2Hwg1ehtlIQNDebhETDB8bga3/88hzBFsMRaGmgQHCftqIN7GZNDNw0vTL\",crossOrigin:\"anonymous\"},dark:{integrity:\"sha384-I5vnnMQu0LWDQnHpT61xyoMwKarAB8jpZkB2ioFOlmzUFnIFaV4QbUwlBBOMKhTH\",crossOrigin:\"anonymous\"}},qtcreator:{light:{integrity:\"sha384-iEBgHrwi8Hv4dSZBz+MOGvS05rF7I7fGKM2fASQyE9jn2Istg9Qd5dSoK18WyRTB\",crossOrigin:\"anonymous\"},dark:{integrity:\"sha384-D6LXJGWNR4QV7gnpuP3ccbvOYoR02td3cU0y7lESABPg/tzCSC4m+y+M2TtrmpHc\",crossOrigin:\"anonymous\"}},stackoverflow:{light:{integrity:\"sha384-FMwt7cTGo4aLxZnno5k0xTj0W4gmi48Kwept+y/oQmE6cFk36Kr+QJZOKNOQwORe\",crossOrigin:\"anonymous\"},dark:{integrity:\"sha384-iL+x+BroCyHm/p2c6sMA9umXhdCWp2cKe4QUjPeMzHgwXAk+ZxHyIGP3NZTZensU\",crossOrigin:\"anonymous\"}}}},prettier:{standaloneJs:{integrity:\"sha384-92h6ALm8/lHpNGn6MfGlgZ+I8c/4yn/nSN8dV9ZmDxqbP9L93gk/Jj2i0LtV+AVd\",crossOrigin:\"anonymous\"},parserMarkdownJs:{integrity:\"sha384-5ufuUgoSsr/2oihBZ5d+c+yt0qaUmzLtUz41VZNJ4txtyJ6mBve3ZwuKoq/IygYX\",crossOrigin:\"anonymous\"}},cropper:{js:{integrity:\"sha384-jrOgQzBlDeUNdmQn3rUt/PZD+pdcRBdWd/HWRqRo+n2OR2QtGyjSaJC0GiCeH+ir\",crossOrigin:\"anonymous\"},css:{integrity:\"sha384-6LFfkTKLRlzFtgx8xsWyBdKGpcMMQTkv+dB7rAbugeJAu1Ym2q1Aji1cjHBG12Xh\",crossOrigin:\"anonymous\"}},screenfull:{js:{integrity:\"sha384-Qfbv8upMDu/ikv42M0Jnym2hahbDQ77Nm8PGU0G+iA6UIwt1+scE6P1qKXA0anWU\",crossOrigin:\"anonymous\"}},mermaid:{js:{integrity:\"sha384-B2tp/GqmE6VfDRB3JPTsesr0+SXypThjLSvQEQH7iv3f3/PYKCm5Q4+SGPcitStz\",crossOrigin:\"anonymous\"}},katex:{js:{integrity:\"sha384-7zkQWkzuo3B5mTepMUcHkMB5jZaolc2xDwL6VFqjFALcbeS9Ggm/Yr2r3Dy4lfFg\",crossOrigin:\"anonymous\"},css:{integrity:\"sha384-nB0miv6/jRmo5UMMR1wu3Gz6NLsoTkbqJghGIsx//Rlm+ZU03BU6SQNC66uf4l5+\",crossOrigin:\"anonymous\"}}},a=[\"bold\",\"underline\",\"italic\",\"strikeThrough\",\"-\",\"title\",\"sub\",\"sup\",\"quote\",\"unorderedList\",\"orderedList\",\"task\",\"-\",\"codeRow\",\"code\",\"link\",\"image\",\"table\",\"mermaid\",\"katex\",\"-\",\"revoke\",\"next\",\"save\",\"=\",\"prettier\",\"pageFullscreen\",\"fullscreen\",\"preview\",\"previewOnly\",\"htmlPreview\",\"catalog\",\"github\"],l=[\"markdownTotal\",\"=\",\"scrollSwitch\"],b={\"zh-CN\":{toolbarTips:{bold:\"加粗\",underline:\"下划线\",italic:\"斜体\",strikeThrough:\"删除线\",title:\"标题\",sub:\"下标\",sup:\"上标\",quote:\"引用\",unorderedList:\"无序列表\",orderedList:\"有序列表\",task:\"任务列表\",codeRow:\"行内代码\",code:\"块级代码\",link:\"链接\",image:\"图片\",table:\"表格\",mermaid:\"mermaid图\",katex:\"katex公式\",revoke:\"后退\",next:\"前进\",save:\"保存\",prettier:\"美化\",pageFullscreen:\"浏览器全屏\",fullscreen:\"屏幕全屏\",preview:\"预览\",previewOnly:\"仅预览\",htmlPreview:\"html代码预览\",catalog:\"目录\",github:\"源码地址\"},titleItem:{h1:\"一级标题\",h2:\"二级标题\",h3:\"三级标题\",h4:\"四级标题\",h5:\"五级标题\",h6:\"六级标题\"},imgTitleItem:{link:\"添加链接\",upload:\"上传图片\",clip2upload:\"裁剪上传\"},linkModalTips:{linkTitle:\"添加链接\",imageTitle:\"添加图片\",descLabel:\"链接描述：\",descLabelPlaceHolder:\"请输入描述...\",urlLabel:\"链接地址：\",urlLabelPlaceHolder:\"请输入链接...\",buttonOK:\"确定\"},clipModalTips:{title:\"裁剪图片上传\",buttonUpload:\"上传\"},copyCode:{text:\"复制代码\",successTips:\"已复制！\",failTips:\"复制失败！\"},mermaid:{flow:\"流程图\",sequence:\"时序图\",gantt:\"甘特图\",class:\"类图\",state:\"状态图\",pie:\"饼图\",relationship:\"关系图\",journey:\"旅程图\"},katex:{inline:\"行内公式\",block:\"块级公式\"},footer:{markdownTotal:\"字数\",scrollAuto:\"同步滚动\"}},\"en-US\":{toolbarTips:{bold:\"bold\",underline:\"underline\",italic:\"italic\",strikeThrough:\"strikeThrough\",title:\"title\",sub:\"subscript\",sup:\"superscript\",quote:\"quote\",unorderedList:\"unordered list\",orderedList:\"ordered list\",task:\"task list\",codeRow:\"inline code\",code:\"block-level code\",link:\"link\",image:\"image\",table:\"table\",mermaid:\"mermaid\",katex:\"formula\",revoke:\"revoke\",next:\"undo revoke\",save:\"save\",prettier:\"prettier\",pageFullscreen:\"fullscreen in page\",fullscreen:\"fullscreen\",preview:\"preview\",previewOnly:\"preview only\",htmlPreview:\"html preview\",catalog:\"catalog\",github:\"source code\"},titleItem:{h1:\"Lv1 Heading\",h2:\"Lv2 Heading\",h3:\"Lv3 Heading\",h4:\"Lv4 Heading\",h5:\"Lv5 Heading\",h6:\"Lv6 Heading\"},imgTitleItem:{link:\"Add Image Link\",upload:\"Upload Images\",clip2upload:\"Clip Upload\"},linkModalTips:{linkTitle:\"Add Link\",imageTitle:\"Add Image\",descLabel:\"Desc:\",descLabelPlaceHolder:\"Enter a description...\",urlLabel:\"Link:\",urlLabelPlaceHolder:\"Enter a link...\",buttonOK:\"OK\"},clipModalTips:{title:\"Crop Image\",buttonUpload:\"Upload\"},copyCode:{text:\"Copy\",successTips:\"Copied!\",failTips:\"Copy failed!\"},mermaid:{flow:\"flow\",sequence:\"sequence\",gantt:\"gantt\",class:\"class\",state:\"state\",pie:\"pie\",relationship:\"relationship\",journey:\"journey\"},katex:{inline:\"inline\",block:\"block\"},footer:{markdownTotal:\"Character Count\",scrollAuto:\"Scroll Auto\"}}},v={modelValue:\"\",theme:\"light\",className:\"\",onChange:()=>{},onSave:()=>{},pageFullscreen:!1,preview:!0,htmlPreview:!1,language:\"zh-CN\",toolbars:a,toolbarsExclude:[],noPrettier:!1,onHtmlChanged:()=>{},onGetCatalog:()=>{},tabWidth:2,showCodeRowNumber:!0,previewTheme:\"default\",mdHeadingId:s=>s,style:{},tableShape:[6,4],noMermaid:!1,sanitize:s=>s,placeholder:\"\",noKatex:!1,defToolbars:[],onError:()=>{},codeTheme:\"atom\",footers:l,scrollAuto:!0,defFooters:[],noIconfont:!1,formatCopiedText:s=>s,noUploadImg:!1,codeStyleReverse:!0,codeStyleReverseList:[\"default\",\"mk-cute\"],autoFocus:!1,disabled:!1,readOnly:!1,autoDetectCode:!1,noHighlight:!1,noImgZoomIn:!1,inputBoxWitdh:\"50%\",sanitizeMermaid:s=>Promise.resolve(s),transformImgUrl:s=>s,codeFoldable:!0,autoFoldThreshold:30},c={editorExtensions:{highlight:{js:m,css:r},prettier:{standaloneJs:i.main,parserMarkdownJs:i.markdown},cropper:{...u},iconfont:o,iconfontClass:n,screenfull:{js:p},mermaid:{js:y},katex:{...k}},editorExtensionsAttrs:{},editorConfig:{languageUserDefined:{},mermaidTemplate:{},renderDelay:500,zIndex:2e4},codeMirrorExtensions:(s,t)=>t,markdownItConfig:()=>{},markdownItPlugins:s=>s,iconfontType:\"svg\",mermaidConfig:s=>s,katexConfig:s=>s},j=s=>d.deepMerge(c,s,{excludeKeys(t){return/[iI]{1}nstance/.test(t)}}),w=170;exports.MinInputBoxWidth=w;exports.allFooter=l;exports.allToolbar=a;exports.codeCss=r;exports.config=j;exports.configOption=c;exports.defaultEditorId=h;exports.defaultProps=v;exports.editorExtensionsAttrs=f;exports.iconfontClassUrl=n;exports.iconfontSvgUrl=o;exports.prefix=g;exports.staticTextDefault=b;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/md-editor-rt/lib/cjs/chunks/config.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/md-editor-rt/lib/cjs/chunks/index.cjs":
/*!************************************************************!*\
  !*** ./node_modules/md-editor-rt/lib/cjs/chunks/index.cjs ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var X=Object.defineProperty;var ee=(t,e,o)=>e in t?X(t,e,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[e]=o;var Y=(t,e,o)=>ee(t,typeof e!=\"symbol\"?e+\"\":e,o);const P=__webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\"),L=__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"),O=__webpack_require__(/*! ./config.cjs */ \"(ssr)/./node_modules/md-editor-rt/lib/cjs/chunks/config.cjs\"),z=__webpack_require__(/*! @vavt/util */ \"(ssr)/./node_modules/@vavt/util/lib/cjs/index.cjs\");class te{constructor(){Y(this,\"pools\",{})}remove(e,o,n){const d=this.pools[e]&&this.pools[e][o];d&&(this.pools[e][o]=d.filter(u=>u!==n))}clear(e){this.pools[e]={}}on(e,o){return this.pools[e]||(this.pools[e]={}),this.pools[e][o.name]||(this.pools[e][o.name]=[]),this.pools[e][o.name].push(o.callback),this.pools[e][o.name].includes(o.callback)}emit(e,o,...n){this.pools[e]||(this.pools[e]={});const d=this.pools[e][o];d&&d.forEach(u=>{try{u(...n)}catch(h){console.error(`${o} monitor event exception！`,h)}})}}const j=new te,oe=\"onSave\",ne=\"changeCatalogVisible\",le=\"changeFullscreen\",se=\"pageFullscreenChanged\",re=\"fullscreenChanged\",ce=\"previewChanged\",ie=\"previewOnlyChanged\",ae=\"htmlPreviewChanged\",fe=\"catalogVisibleChanged\",de=\"buildFinished\",ue=\"errorCatcher\",he=\"replace\",ge=\"uploadImage\",Ee=\"openModals\",me=\"ctrlZ\",pe=\"ctrlShiftZ\",W=\"catalogChanged\",J=\"pushCatalog\",Ce=\"rerender\",Te=\"eventListener\",Le=\"taskStateChanged\",He=(t,e=\"image.png\")=>{const o=t.split(\",\"),n=o[0].match(/:(.*?);/);if(n){const H=n[1],d=atob(o[1]);let u=d.length;const h=new Uint8Array(u);for(;u--;)h[u]=d.charCodeAt(u);return new File([h],e,{type:H})}return null},Ae=(t,e)=>{if(!t)return t;const o=e.split(`\n`),n=['<span rn-wrapper aria-hidden=\"true\">'];return o.forEach(()=>{n.push(\"<span></span>\")}),n.push(\"</span>\"),`<span class=\"${O.prefix}-code-block\">${t}</span>${n.join(\"\")}`},Z=t=>t.filter(e=>e!==!1).join(\" \"),ve=(t,e)=>{if(!t||!e)return 0;const o=t==null?void 0:t.getBoundingClientRect();if(e===document.documentElement)return o.top-e.clientTop;const n=e==null?void 0:e.getBoundingClientRect();return o.top-n.top},Se=(()=>{let t=0;return e=>e+ ++t})(),Ne=(()=>{let t=0;return()=>++t})(),Re=`.${O.prefix}-preview > [data-line]`,F=(t,e)=>+getComputedStyle(t).getPropertyValue(e).replace(\"px\",\"\"),_e=(t,e)=>{const o=z.debounce(()=>{t.removeEventListener(\"scroll\",n),t.addEventListener(\"scroll\",n),e.removeEventListener(\"scroll\",n),e.addEventListener(\"scroll\",n)},50),n=H=>{const d=t.clientHeight,u=e.clientHeight,h=t.scrollHeight,f=e.scrollHeight,g=(h-d)/(f-u);H.target===t?(e.removeEventListener(\"scroll\",n),e.scrollTo({top:t.scrollTop/g}),o()):(t.removeEventListener(\"scroll\",n),t.scrollTo({top:e.scrollTop*g}),o())};return[()=>{o().finally(()=>{t.dispatchEvent(new Event(\"scroll\"))})},()=>{t.removeEventListener(\"scroll\",n),e.removeEventListener(\"scroll\",n)}]},xe=(t,e,o)=>{const{view:n}=o,H=z.createSmoothScroll(),d=l=>n.lineBlockAt(n.state.doc.line(l+1).from).top,u=l=>n.lineBlockAt(n.state.doc.line(l+1).from).bottom;let h=[],f=[],g=[];const T=()=>{h=[],f=Array.from(e.querySelectorAll(Re)),g=f.map(s=>Number(s.dataset.line));const l=[...g],{lines:a}=n.state.doc;let E=l.shift()||0,c=l.shift()||a;for(let s=0;s<a;s++)s===c&&(E=s,c=l.shift()||a),h.push({start:E,end:c-1})},I=(l,a)=>{let E=1;for(let c=f.length-1;c-1>=0;c--){const s=f[c],r=f[c-1];if(s.offsetTop+s.offsetHeight>a&&r.offsetTop<a){E=Number(r.dataset.line);break}}for(let c=h.length-1;c>=0;c--){const s=u(h[c].end),r=d(h[c].start);if(s>l&&r<=l){E=E<h[c].start?E:h[c].start;break}}return E};let N=0,R=0;const q=()=>{var w,y,$;if(R!==0)return!1;N++;const{scrollDOM:l,contentHeight:a}=n;let E=F(e,\"padding-top\");const c=n.lineBlockAtHeight(l.scrollTop),{number:s}=n.state.doc.lineAt(c.from),r=h[s-1];if(!r)return!1;let i=1;const m=e.querySelector(`[data-line=\"${r.start}\"]`)||((w=e.firstElementChild)==null?void 0:w.firstElementChild),p=e.querySelector(`[data-line=\"${r.end+1}\"]`)||((y=e.lastElementChild)==null?void 0:y.lastElementChild),S=l.scrollHeight-l.clientHeight,G=e.scrollHeight-e.clientHeight;let A=d(r.start),D=u(r.end),_=m.offsetTop,x=p.offsetTop-_;A===0&&(_=0,m===p?(E=0,D=a-l.offsetHeight,x=G):x=p.offsetTop),i=(l.scrollTop-A)/(D-A);const V=p==(($=e.lastElementChild)==null?void 0:$.lastElementChild)?p.offsetTop+p.clientHeight:p.offsetTop;if(D>=S||V>G){const B=I(S,G);A=d(B),i=(l.scrollTop-A)/(S-A);const b=e.querySelector(`[data-line=\"${B}\"]`);A>0&&b&&(_=b.offsetTop),x=G-_+F(e,\"padding-top\")}const U=_-E+x*i;H(e,U,()=>{N--})},k=()=>{var V,U,w,y,$,B;if(N!==0)return;R++;const{scrollDOM:l}=n,a=e.scrollTop,E=e.scrollHeight,c=l.scrollHeight-l.clientHeight,s=e.scrollHeight-e.clientHeight;let r=(V=e.firstElementChild)==null?void 0:V.firstElementChild,i=(U=e.firstElementChild)==null?void 0:U.lastElementChild;if(g.length>0){let b=Math.ceil(g[g.length-1]*(a/E)),C=g.findLastIndex(v=>v<=b);C=C===-1?0:C,b=g[C];for(let v=C;v>=0&&v<g.length;)if(f[v].offsetTop>a){if(v-1>=0){v--;continue}b=-1,C=v;break}else{if(v+1<g.length&&f[v+1].offsetTop<a){v++;continue}b=g[v],C=v;break}switch(C){case-1:{r=(w=e.firstElementChild)==null?void 0:w.firstElementChild,i=f[C];break}case g.length-1:{r=f[C],i=(y=e.firstElementChild)==null?void 0:y.lastElementChild;break}default:r=f[C],i=f[C+1===f.length?C:C+1]}}let m=r===(($=e.firstElementChild)==null?void 0:$.firstElementChild)?0:r.offsetTop-F(r,\"margin-top\"),p=i.offsetTop,S=0;const{start:G,end:A}=h[Number(r.dataset.line||0)];let D=d(G);const _=d(A+1===n.state.doc.lines?A:A+1);let x=0;if(_>c||i.offsetTop+i.offsetHeight>s){const b=I(c,s),C=e.querySelector(`[data-line=\"${b}\"]`);m=C?C.offsetTop-F(C,\"margin-top\"):m,D=d(b),S=(a-m)/(s-m),x=c-D}else r===((B=e.firstElementChild)==null?void 0:B.firstElementChild)?(r===i&&(p=i.offsetTop+i.offsetHeight+ +getComputedStyle(i).marginBottom.replace(\"px\",\"\")),x=_,S=Math.max(a/p,0)):(S=Math.max((a-m)/(p-m),0),x=_-D);H(t,D+x*S,()=>{R--})},M=l=>{var s;const{scrollDOM:a,contentHeight:E}=n,c=a.clientHeight;if(E<=c||e.firstElementChild.clientHeight<=e.clientHeight||n.state.doc.lines<=((s=h[h.length-1])==null?void 0:s.end))return!1;l.target===t?q():k()};return[()=>{T(),t.addEventListener(\"scroll\",M),e.addEventListener(\"scroll\",M),t.dispatchEvent(new Event(\"scroll\"))},()=>{t.removeEventListener(\"scroll\",M),e.removeEventListener(\"scroll\",M)}]},Q=({tocItem:t,mdHeadingId:e,onClick:o,scrollElementOffsetTop:n=0})=>{const{scrollElementRef:H,rootNodeRef:d}=L.useContext(K);return P.jsxs(\"div\",{className:Z([`${O.prefix}-catalog-link`,t.active&&`${O.prefix}-catalog-active`]),onClick:u=>{o&&o(u,t),u.stopPropagation();const h=e(t.text,t.level,t.index),f=d==null?void 0:d.current.getElementById(h),g=H==null?void 0:H.current;if(f&&g){let T=f.offsetParent,I=f.offsetTop;if(g.contains(T))for(;T&&g!=T;)I+=T==null?void 0:T.offsetTop,T=T==null?void 0:T.offsetParent;const N=f.previousElementSibling;let R=0;N||(R=F(f,\"margin-top\")),g==null||g.scrollTo({top:I-n-R,behavior:\"smooth\"})}},children:[P.jsx(\"span\",{title:t.text,children:t.text}),P.jsx(\"div\",{className:`${O.prefix}-catalog-wrapper`,children:t.children&&t.children.map(u=>P.jsx(Q,{mdHeadingId:e,tocItem:u,onClick:o,scrollElementOffsetTop:n},`${u.text}-${u.index}`))})]})},K=L.createContext({scrollElementRef:void 0,rootNodeRef:void 0}),be=t=>{const{editorId:e,mdHeadingId:o=O.defaultProps.mdHeadingId,theme:n=\"light\",offsetTop:H=20}=t,d=L.useMemo(()=>`#${e}-preview-wrapper`,[e]),[u,h]=L.useState([]),[f,g]=L.useState(),T=L.useRef(null),I=L.useRef(),N=L.useRef(),R=L.useRef(),q=L.useMemo(()=>{const l=[];return u.forEach((a,E)=>{const{text:c,level:s}=a,r={level:s,text:c,index:E+1,active:f===a};if(l.length===0)l.push(r);else{let i=l[l.length-1];if(r.level>i.level)for(let m=i.level+1;m<=6;m++){const{children:p}=i;if(!p){i.children=[r];break}if(i=p[p.length-1],r.level<=i.level){p.push(r);break}}else l.push(r)}}),l},[f,u]),[k]=L.useState(()=>t.scrollElement||`#${e}-preview-wrapper`),M=L.useCallback(()=>{var a;if(k instanceof HTMLElement)return k;let l=document;return(k===d||t.isScrollElementInShadow)&&(l=(a=T.current)==null?void 0:a.getRootNode()),l.querySelector(k)},[d,t.isScrollElementInShadow,k]);return L.useEffect(()=>{R.current=T.current.getRootNode()},[]),L.useEffect(()=>{let l=[];const a=s=>{if(s.length===0)return h([]),!1;const{activeHead:r}=s.reduce((i,m,p)=>{var G;const S=(G=R.current)==null?void 0:G.getElementById(o(m.text,m.level,p+1));if(S instanceof HTMLElement){const A=ve(S,I.current);if(A<H&&A>i.minTop)return{activeHead:m,minTop:A}}return i},{activeHead:s[0],minTop:Number.MIN_SAFE_INTEGER});g(r),h(s),l=s},E=()=>{a(l)},c=s=>{var i,m;const r=M();I.current=r,N.current=r===document.documentElement?document:r,(i=N.current)==null||i.removeEventListener(\"scroll\",E),a(s),(m=N.current)==null||m.addEventListener(\"scroll\",E)};return j.on(e,{name:W,callback:c}),j.emit(e,J),()=>{var s;j.remove(e,W,c),(s=N.current)==null||s.removeEventListener(\"scroll\",E)}},[H,o,M,e]),L.useEffect(()=>{t.onActive&&t.onActive(f)},[f,t]),P.jsx(K.Provider,{value:{scrollElementRef:I,rootNodeRef:R},children:P.jsx(\"div\",{className:Z([`${O.prefix}-catalog`,n===\"dark\"&&`${O.prefix}-catalog-dark`,t.className||\"\"]),style:t.style,ref:T,children:q.map(l=>P.jsx(Q,{mdHeadingId:o,tocItem:l,onClick:t.onClick,scrollElementOffsetTop:t.scrollElementOffsetTop},`${l.text}-${l.index}`))})})},Ie=L.memo(be);exports.BUILD_FINISHED=de;exports.CATALOG_CHANGED=W;exports.CATALOG_VISIBLE_CHANGED=fe;exports.CHANGE_CATALOG_VISIBLE=ne;exports.CHANGE_FULL_SCREEN=le;exports.CTRL_SHIFT_Z=pe;exports.CTRL_Z=me;exports.CatalogContext=K;exports.ERROR_CATCHER=ue;exports.EVENT_LISTENER=Te;exports.FULL_SCREEN_CHANGED=re;exports.HTML_PREVIEW_CHANGED=ae;exports.MdCatalog=Ie;exports.ON_SAVE=oe;exports.OPEN_MODALS=Ee;exports.PAGE_FULL_SCREEN_CHANGED=se;exports.PREVIEW_CHANGED=ce;exports.PREVIEW_ONLY_CHANGED=ie;exports.PUSH_CATALOG=J;exports.REPLACE=he;exports.RERENDER=Ce;exports.TASK_STATE_CHANGED=Le;exports.UPLOAD_IMAGE=ge;exports.base642File=He;exports.bus=j;exports.classnames=Z;exports.generateCodeRowNumber=Ae;exports.getNextId=Se;exports.getZIndexIncrement=Ne;exports.scrollAuto=xe;exports.scrollAutoWithScale=_e;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/md-editor-rt/lib/cjs/chunks/index.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/md-editor-rt/lib/cjs/config.cjs":
/*!******************************************************!*\
  !*** ./node_modules/md-editor-rt/lib/cjs/config.cjs ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports,Symbol.toStringTag,{value:\"Module\"});const t=__webpack_require__(/*! ./chunks/config.cjs */ \"(ssr)/./node_modules/md-editor-rt/lib/cjs/chunks/config.cjs\"),o=t.staticTextDefault[\"zh-CN\"],n=t.staticTextDefault[\"en-US\"];exports.allFooter=t.allFooter;exports.allToolbar=t.allToolbar;exports.config=t.config;exports.editorExtensionsAttrs=t.editorExtensionsAttrs;exports.iconfontClassUrl=t.iconfontClassUrl;exports.iconfontSvgUrl=t.iconfontSvgUrl;exports.en_US=n;exports.zh_CN=o;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWQtZWRpdG9yLXJ0L2xpYi9janMvY29uZmlnLmNqcyIsIm1hcHBpbmdzIjoiQUFBYSxrREFBa0QsZUFBZSxFQUFFLFFBQVEsbUJBQU8sQ0FBQyx3RkFBcUIsZ0VBQWdFLGlCQUFpQixhQUFhLGtCQUFrQixjQUFjLGNBQWMsVUFBVSw2QkFBNkIseUJBQXlCLHdCQUF3QixvQkFBb0Isc0JBQXNCLGtCQUFrQixhQUFhLEdBQUcsYUFBYSIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzL21kLWVkaXRvci1ydC9saWIvY2pzL2NvbmZpZy5janM/YWFlMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxTeW1ib2wudG9TdHJpbmdUYWcse3ZhbHVlOlwiTW9kdWxlXCJ9KTtjb25zdCB0PXJlcXVpcmUoXCIuL2NodW5rcy9jb25maWcuY2pzXCIpLG89dC5zdGF0aWNUZXh0RGVmYXVsdFtcInpoLUNOXCJdLG49dC5zdGF0aWNUZXh0RGVmYXVsdFtcImVuLVVTXCJdO2V4cG9ydHMuYWxsRm9vdGVyPXQuYWxsRm9vdGVyO2V4cG9ydHMuYWxsVG9vbGJhcj10LmFsbFRvb2xiYXI7ZXhwb3J0cy5jb25maWc9dC5jb25maWc7ZXhwb3J0cy5lZGl0b3JFeHRlbnNpb25zQXR0cnM9dC5lZGl0b3JFeHRlbnNpb25zQXR0cnM7ZXhwb3J0cy5pY29uZm9udENsYXNzVXJsPXQuaWNvbmZvbnRDbGFzc1VybDtleHBvcnRzLmljb25mb250U3ZnVXJsPXQuaWNvbmZvbnRTdmdVcmw7ZXhwb3J0cy5lbl9VUz1uO2V4cG9ydHMuemhfQ049bztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/md-editor-rt/lib/cjs/config.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/md-editor-rt/lib/cjs/index.cjs":
/*!*****************************************************!*\
  !*** ./node_modules/md-editor-rt/lib/cjs/index.cjs ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports,Symbol.toStringTag,{value:\"Module\"});const r=__webpack_require__(/*! ./chunks/Editor.cjs */ \"(ssr)/./node_modules/md-editor-rt/lib/cjs/chunks/Editor.cjs\"),t=__webpack_require__(/*! ./MdPreview.cjs */ \"(ssr)/./node_modules/md-editor-rt/lib/cjs/MdPreview.cjs\"),n=__webpack_require__(/*! ./NormalToolbar.cjs */ \"(ssr)/./node_modules/md-editor-rt/lib/cjs/NormalToolbar.cjs\"),a=__webpack_require__(/*! ./DropdownToolbar.cjs */ \"(ssr)/./node_modules/md-editor-rt/lib/cjs/DropdownToolbar.cjs\"),i=__webpack_require__(/*! ./ModalToolbar.cjs */ \"(ssr)/./node_modules/md-editor-rt/lib/cjs/ModalToolbar.cjs\"),c=__webpack_require__(/*! ./chunks/index.cjs */ \"(ssr)/./node_modules/md-editor-rt/lib/cjs/chunks/index.cjs\"),s=__webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\"),o=__webpack_require__(/*! ./chunks/config.cjs */ \"(ssr)/./node_modules/md-editor-rt/lib/cjs/chunks/config.cjs\"),l=__webpack_require__(/*! ./config.cjs */ \"(ssr)/./node_modules/md-editor-rt/lib/cjs/config.cjs\"),d=e=>s.jsx(\"div\",{className:`${o.prefix}-footer-item`,onClick:e.onClick,children:e.children}),u=d;exports.MdEditor=r.Editor;exports.MdModal=r.Modal;exports.StrIcon=r.StrIcon;exports.MdPreview=t;exports.NormalToolbar=n;exports.DropdownToolbar=a;exports.ModalToolbar=i;exports.MdCatalog=c.MdCatalog;exports.allFooter=o.allFooter;exports.allToolbar=o.allToolbar;exports.config=o.config;exports.editorExtensionsAttrs=o.editorExtensionsAttrs;exports.iconfontClassUrl=o.iconfontClassUrl;exports.iconfontSvgUrl=o.iconfontSvgUrl;exports.en_US=l.en_US;exports.zh_CN=l.zh_CN;exports.NormalFooterToolbar=u;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWQtZWRpdG9yLXJ0L2xpYi9janMvaW5kZXguY2pzIiwibWFwcGluZ3MiOiJBQUFhLGtEQUFrRCxlQUFlLEVBQUUsUUFBUSxtQkFBTyxDQUFDLHdGQUFxQixJQUFJLG1CQUFPLENBQUMsZ0ZBQWlCLElBQUksbUJBQU8sQ0FBQyx3RkFBcUIsSUFBSSxtQkFBTyxDQUFDLDRGQUF1QixJQUFJLG1CQUFPLENBQUMsc0ZBQW9CLElBQUksbUJBQU8sQ0FBQyxzRkFBb0IsSUFBSSxtQkFBTyxDQUFDLGdJQUFtQixJQUFJLG1CQUFPLENBQUMsd0ZBQXFCLElBQUksbUJBQU8sQ0FBQywwRUFBYyxvQkFBb0IsYUFBYSxTQUFTLG9EQUFvRCxNQUFNLGdCQUFnQixVQUFVLGVBQWUsU0FBUyxlQUFlLFdBQVcsaUJBQWlCLEdBQUcscUJBQXFCLEdBQUcsdUJBQXVCLEdBQUcsb0JBQW9CLEdBQUcsaUJBQWlCLGFBQWEsaUJBQWlCLGFBQWEsa0JBQWtCLGNBQWMsY0FBYyxVQUFVLDZCQUE2Qix5QkFBeUIsd0JBQXdCLG9CQUFvQixzQkFBc0Isa0JBQWtCLGFBQWEsU0FBUyxhQUFhLFNBQVMsMkJBQTJCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvbWQtZWRpdG9yLXJ0L2xpYi9janMvaW5kZXguY2pzPzQ3OWEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsU3ltYm9sLnRvU3RyaW5nVGFnLHt2YWx1ZTpcIk1vZHVsZVwifSk7Y29uc3Qgcj1yZXF1aXJlKFwiLi9jaHVua3MvRWRpdG9yLmNqc1wiKSx0PXJlcXVpcmUoXCIuL01kUHJldmlldy5janNcIiksbj1yZXF1aXJlKFwiLi9Ob3JtYWxUb29sYmFyLmNqc1wiKSxhPXJlcXVpcmUoXCIuL0Ryb3Bkb3duVG9vbGJhci5janNcIiksaT1yZXF1aXJlKFwiLi9Nb2RhbFRvb2xiYXIuY2pzXCIpLGM9cmVxdWlyZShcIi4vY2h1bmtzL2luZGV4LmNqc1wiKSxzPXJlcXVpcmUoXCJyZWFjdC9qc3gtcnVudGltZVwiKSxvPXJlcXVpcmUoXCIuL2NodW5rcy9jb25maWcuY2pzXCIpLGw9cmVxdWlyZShcIi4vY29uZmlnLmNqc1wiKSxkPWU9PnMuanN4KFwiZGl2XCIse2NsYXNzTmFtZTpgJHtvLnByZWZpeH0tZm9vdGVyLWl0ZW1gLG9uQ2xpY2s6ZS5vbkNsaWNrLGNoaWxkcmVuOmUuY2hpbGRyZW59KSx1PWQ7ZXhwb3J0cy5NZEVkaXRvcj1yLkVkaXRvcjtleHBvcnRzLk1kTW9kYWw9ci5Nb2RhbDtleHBvcnRzLlN0ckljb249ci5TdHJJY29uO2V4cG9ydHMuTWRQcmV2aWV3PXQ7ZXhwb3J0cy5Ob3JtYWxUb29sYmFyPW47ZXhwb3J0cy5Ecm9wZG93blRvb2xiYXI9YTtleHBvcnRzLk1vZGFsVG9vbGJhcj1pO2V4cG9ydHMuTWRDYXRhbG9nPWMuTWRDYXRhbG9nO2V4cG9ydHMuYWxsRm9vdGVyPW8uYWxsRm9vdGVyO2V4cG9ydHMuYWxsVG9vbGJhcj1vLmFsbFRvb2xiYXI7ZXhwb3J0cy5jb25maWc9by5jb25maWc7ZXhwb3J0cy5lZGl0b3JFeHRlbnNpb25zQXR0cnM9by5lZGl0b3JFeHRlbnNpb25zQXR0cnM7ZXhwb3J0cy5pY29uZm9udENsYXNzVXJsPW8uaWNvbmZvbnRDbGFzc1VybDtleHBvcnRzLmljb25mb250U3ZnVXJsPW8uaWNvbmZvbnRTdmdVcmw7ZXhwb3J0cy5lbl9VUz1sLmVuX1VTO2V4cG9ydHMuemhfQ049bC56aF9DTjtleHBvcnRzLk5vcm1hbEZvb3RlclRvb2xiYXI9dTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/md-editor-rt/lib/cjs/index.cjs\n");

/***/ })

};
;