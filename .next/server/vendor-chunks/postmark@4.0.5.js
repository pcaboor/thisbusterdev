"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/postmark@4.0.5";
exports.ids = ["vendor-chunks/postmark@4.0.5"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/AccountClient.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/AccountClient.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar BaseClient_1 = __webpack_require__(/*! ./BaseClient */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/BaseClient.js\");\nvar models_1 = __webpack_require__(/*! ./models */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/index.js\");\nvar models_2 = __webpack_require__(/*! ./models */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/index.js\");\nvar AccountClient = /** @class */ function(_super) {\n    __extends(AccountClient, _super);\n    /**\n     * Create a new AccountClient\n     * @param accountToken The account token that should be used with requests.\n     * @param configOptions Various options to customize client behavior.\n     */ function AccountClient(accountToken, configOptions) {\n        return _super.call(this, accountToken, models_1.ClientOptions.AuthHeaderNames.ACCOUNT_TOKEN, configOptions) || this;\n    }\n    /**\n     * Retrieve a list of Servers.\n     *\n     * @param filter - An optional filter for which data is retrieved.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.getServers = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new models_2.ServerFilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.GET, \"/servers\", filter, callback);\n    };\n    /**\n     * Retrieve a single server by ID.\n     *\n     * @param id - The ID of the Server for which you wish to retrieve details.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.getServer = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.GET, \"/servers/\".concat(id), {}, callback);\n    };\n    /**\n     * Create a new Server.\n     *\n     * @param options - The options to be used to create new Server.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.createServer = function(options, callback) {\n        return this.processRequestWithBody(models_1.ClientOptions.HttpMethod.POST, \"/servers\", options, callback);\n    };\n    /**\n     * Modify the Server associated with this Client.\n     *\n     * @param id - The ID of the Server you wish to update.\n     * @param options - The options to be used to create new Server.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.editServer = function(id, options, callback) {\n        return this.processRequestWithBody(models_1.ClientOptions.HttpMethod.PUT, \"/servers/\".concat(id), options, callback);\n    };\n    /**\n     * Modify the Server associated with this Client.\n     *\n     * @param id - The ID of the Domain you wish to delete.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.deleteServer = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.DELETE, \"/servers/\".concat(id), {}, callback);\n    };\n    /**\n     * Retrieve a batch of Domains.\n     *\n     * @param filter - An optional filter for which data is retrieved.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.getDomains = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new models_1.FilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.GET, \"/domains\", filter, callback);\n    };\n    /**\n     * Retrieve a single Domain by ID.\n     *\n     * @param id - The ID of the Domain for which you wish to retrieve details.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.getDomain = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.GET, \"/domains/\".concat(id), {}, callback);\n    };\n    /**\n     * Create a new Domain.\n     *\n     * @param options - The options to be used to create new Domain.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.createDomain = function(options, callback) {\n        return this.processRequestWithBody(models_1.ClientOptions.HttpMethod.POST, \"/domains/\", options, callback);\n    };\n    /**\n     * Update a Domain.\n     *\n     * @param id - The ID of the Domain you wish to update.\n     * @param domain - The values on the Domain you wish to update.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.editDomain = function(id, options, callback) {\n        return this.processRequestWithBody(models_1.ClientOptions.HttpMethod.PUT, \"/domains/\".concat(id), options, callback);\n    };\n    /**\n     * Delete a Domain.\n     *\n     * @param id - The ID of the Domain you wish to delete.\n     * @param options - The options to be used in create Domain.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.deleteDomain = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.DELETE, \"/domains/\".concat(id), {}, callback);\n    };\n    /**\n     * Trigger Domain DKIM key verification.\n     *\n     * @param id - The ID of the Domain you wish to trigger DKIM verification for.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.verifyDomainDKIM = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.PUT, \"/domains/\".concat(id, \"/verifyDKIM\"), {}, callback);\n    };\n    /**\n     * Trigger Domain DKIM key verification.\n     *\n     * @param id - The ID of the Domain you wish to trigger DKIM verification for.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.verifyDomainReturnPath = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.PUT, \"/domains/\".concat(id, \"/verifyReturnPath\"), {}, callback);\n    };\n    /**\n     * Trigger Domain DKIM key verification.\n     *\n     * @param id - The ID of the Domain you wish to trigger DKIM verification for.\n     * @param callback If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.verifyDomainSPF = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.POST, \"/domains/\".concat(id, \"/verifySPF\"), {}, callback);\n    };\n    /**\n     * Trigger Domain DKIM key verification.\n     *\n     * @param id - The ID of the Domain you wish to trigger DKIM verification for.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.rotateDomainDKIM = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.POST, \"/domains/\".concat(id, \"/rotateDKIM\"), {}, callback);\n    };\n    /**\n     * Retrieve a single Sender Signature by ID.\n     *\n     * @param id - The ID of the Sender Signature for which you wish to retrieve details.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.getSenderSignature = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.GET, \"/senders/\".concat(id), {}, callback);\n    };\n    /**\n     * Retrieve a batch of Sender Signatures.\n     *\n     * @param filter - An optional filter for which data is retrieved.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.getSenderSignatures = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new models_1.FilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.GET, \"/senders\", filter, callback);\n    };\n    /**\n     * Create a new Sender Signature.\n     *\n     * @param options - The options to be used to create new Sender Signature.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.createSenderSignature = function(options, callback) {\n        return this.processRequestWithBody(models_1.ClientOptions.HttpMethod.POST, \"/senders/\", options, callback);\n    };\n    /**\n     * Update a Sender Signature.\n     *\n     * @param id - The ID of the Sender Signature for which you wish to update.\n     * @param options - The values on the Sender Signature you wish to update.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.editSenderSignature = function(id, options, callback) {\n        return this.processRequestWithBody(models_1.ClientOptions.HttpMethod.PUT, \"/senders/\".concat(id), options, callback);\n    };\n    /**\n     * Delete a Domain.\n     *\n     * @param id - The ID of the Domain you wish to delete.\n     * @param options - The options to be used in create Domain.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.deleteSenderSignature = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.DELETE, \"/senders/\".concat(id), {}, callback);\n    };\n    /**\n     * Request a new confirmation email to be sent to the email address associated with a Sender Signature.\n     *\n     * @param id - The ID of the Sender Signature.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.resendSenderSignatureConfirmation = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.POST, \"/senders/\".concat(id, \"/resend\"), {}, callback);\n    };\n    /**\n     * Request that the SPF records for Sender Signature be verified.\n     *\n     * @param id - The ID of the Sender Signature.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.verifySenderSignatureSPF = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.POST, \"/senders/\".concat(id, \"/verifySpf\"), {}, callback);\n    };\n    /**\n     * Request that the SPF records for Sender Signature be verified.\n     *\n     * @param id - The ID of the Sender Signature.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.requestNewDKIMForSenderSignature = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.POST, \"/senders/\".concat(id, \"/requestNewDkim\"), {}, callback);\n    };\n    /**\n     * Request a push of templates from one server to another.\n     *\n     * @param options - details for pushing templates from one place to another.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.pushTemplates = function(options, callback) {\n        return this.processRequestWithBody(models_1.ClientOptions.HttpMethod.PUT, \"/templates/push\", options, callback);\n    };\n    /**\n     * Request a data removal.\n     *\n     * @param options - details for creating data removal request\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.requestDataRemoval = function(options, callback) {\n        return this.processRequestWithBody(models_1.ClientOptions.HttpMethod.POST, \"/data-removals\", options, callback);\n    };\n    /**\n     * Retrieve a single data removal status by ID.\n     *\n     * @param id - The ID of the DataRemoval for which you wish to retrieve details.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.getDataRemovalStatus = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.GET, \"/data-removals/\".concat(id), {}, callback);\n    };\n    return AccountClient;\n}(BaseClient_1.default);\nexports[\"default\"] = AccountClient; //# sourceMappingURL=AccountClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L0FjY291bnRDbGllbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxZQUFZLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsU0FBUyxJQUFLO0lBQ3hDLElBQUlDLGdCQUFnQixTQUFVQyxDQUFDLEVBQUVDLENBQUM7UUFDOUJGLGdCQUFnQkcsT0FBT0MsY0FBYyxJQUNoQztZQUFFQyxXQUFXLEVBQUU7UUFBQyxjQUFhQyxTQUFTLFNBQVVMLENBQUMsRUFBRUMsQ0FBQztZQUFJRCxFQUFFSSxTQUFTLEdBQUdIO1FBQUcsS0FDMUUsU0FBVUQsQ0FBQyxFQUFFQyxDQUFDO1lBQUksSUFBSyxJQUFJSyxLQUFLTCxFQUFHLElBQUlDLE9BQU9LLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNSLEdBQUdLLElBQUlOLENBQUMsQ0FBQ00sRUFBRSxHQUFHTCxDQUFDLENBQUNLLEVBQUU7UUFBRTtRQUNwRyxPQUFPUCxjQUFjQyxHQUFHQztJQUM1QjtJQUNBLE9BQU8sU0FBVUQsQ0FBQyxFQUFFQyxDQUFDO1FBQ2pCLElBQUksT0FBT0EsTUFBTSxjQUFjQSxNQUFNLE1BQ2pDLE1BQU0sSUFBSVMsVUFBVSx5QkFBeUJDLE9BQU9WLEtBQUs7UUFDN0RGLGNBQWNDLEdBQUdDO1FBQ2pCLFNBQVNXO1lBQU8sSUFBSSxDQUFDQyxXQUFXLEdBQUdiO1FBQUc7UUFDdENBLEVBQUVPLFNBQVMsR0FBR04sTUFBTSxPQUFPQyxPQUFPWSxNQUFNLENBQUNiLEtBQU1XLENBQUFBLEdBQUdMLFNBQVMsR0FBR04sRUFBRU0sU0FBUyxFQUFFLElBQUlLLElBQUc7SUFDdEY7QUFDSjtBQUNBViw4Q0FBNkM7SUFBRWUsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxJQUFJQyxlQUFlQyxtQkFBT0EsQ0FBQywrR0FBYztBQUN6QyxJQUFJQyxXQUFXRCxtQkFBT0EsQ0FBQyw2R0FBVTtBQUNqQyxJQUFJRSxXQUFXRixtQkFBT0EsQ0FBQyw2R0FBVTtBQUNqQyxJQUFJRyxnQkFBZ0IsV0FBVyxHQUFJLFNBQVVDLE1BQU07SUFDL0N6QixVQUFVd0IsZUFBZUM7SUFDekI7Ozs7S0FJQyxHQUNELFNBQVNELGNBQWNFLFlBQVksRUFBRUMsYUFBYTtRQUM5QyxPQUFPRixPQUFPZCxJQUFJLENBQUMsSUFBSSxFQUFFZSxjQUFjSixTQUFTTSxhQUFhLENBQUNDLGVBQWUsQ0FBQ0MsYUFBYSxFQUFFSCxrQkFBa0IsSUFBSTtJQUN2SDtJQUNBOzs7Ozs7S0FNQyxHQUNESCxjQUFjZixTQUFTLENBQUNzQixVQUFVLEdBQUcsU0FBVUMsTUFBTSxFQUFFQyxRQUFRO1FBQzNELElBQUlELFdBQVcsS0FBSyxHQUFHO1lBQUVBLFNBQVMsSUFBSVQsU0FBU1cseUJBQXlCO1FBQUk7UUFDNUUsSUFBSSxDQUFDQywwQkFBMEIsQ0FBQ0g7UUFDaEMsT0FBTyxJQUFJLENBQUNJLHlCQUF5QixDQUFDZCxTQUFTTSxhQUFhLENBQUNTLFVBQVUsQ0FBQ0MsR0FBRyxFQUFFLFlBQVlOLFFBQVFDO0lBQ3JHO0lBQ0E7Ozs7OztLQU1DLEdBQ0RULGNBQWNmLFNBQVMsQ0FBQzhCLFNBQVMsR0FBRyxTQUFVQyxFQUFFLEVBQUVQLFFBQVE7UUFDdEQsT0FBTyxJQUFJLENBQUNHLHlCQUF5QixDQUFDZCxTQUFTTSxhQUFhLENBQUNTLFVBQVUsQ0FBQ0MsR0FBRyxFQUFFLFlBQVlHLE1BQU0sQ0FBQ0QsS0FBSyxDQUFDLEdBQUdQO0lBQzdHO0lBQ0E7Ozs7OztLQU1DLEdBQ0RULGNBQWNmLFNBQVMsQ0FBQ2lDLFlBQVksR0FBRyxTQUFVQyxPQUFPLEVBQUVWLFFBQVE7UUFDOUQsT0FBTyxJQUFJLENBQUNXLHNCQUFzQixDQUFDdEIsU0FBU00sYUFBYSxDQUFDUyxVQUFVLENBQUNRLElBQUksRUFBRSxZQUFZRixTQUFTVjtJQUNwRztJQUNBOzs7Ozs7O0tBT0MsR0FDRFQsY0FBY2YsU0FBUyxDQUFDcUMsVUFBVSxHQUFHLFNBQVVOLEVBQUUsRUFBRUcsT0FBTyxFQUFFVixRQUFRO1FBQ2hFLE9BQU8sSUFBSSxDQUFDVyxzQkFBc0IsQ0FBQ3RCLFNBQVNNLGFBQWEsQ0FBQ1MsVUFBVSxDQUFDVSxHQUFHLEVBQUUsWUFBWU4sTUFBTSxDQUFDRCxLQUFLRyxTQUFTVjtJQUMvRztJQUNBOzs7Ozs7S0FNQyxHQUNEVCxjQUFjZixTQUFTLENBQUN1QyxZQUFZLEdBQUcsU0FBVVIsRUFBRSxFQUFFUCxRQUFRO1FBQ3pELE9BQU8sSUFBSSxDQUFDRyx5QkFBeUIsQ0FBQ2QsU0FBU00sYUFBYSxDQUFDUyxVQUFVLENBQUNZLE1BQU0sRUFBRSxZQUFZUixNQUFNLENBQUNELEtBQUssQ0FBQyxHQUFHUDtJQUNoSDtJQUNBOzs7Ozs7S0FNQyxHQUNEVCxjQUFjZixTQUFTLENBQUN5QyxVQUFVLEdBQUcsU0FBVWxCLE1BQU0sRUFBRUMsUUFBUTtRQUMzRCxJQUFJRCxXQUFXLEtBQUssR0FBRztZQUFFQSxTQUFTLElBQUlWLFNBQVM2QixtQkFBbUI7UUFBSTtRQUN0RSxJQUFJLENBQUNoQiwwQkFBMEIsQ0FBQ0g7UUFDaEMsT0FBTyxJQUFJLENBQUNJLHlCQUF5QixDQUFDZCxTQUFTTSxhQUFhLENBQUNTLFVBQVUsQ0FBQ0MsR0FBRyxFQUFFLFlBQVlOLFFBQVFDO0lBQ3JHO0lBQ0E7Ozs7OztLQU1DLEdBQ0RULGNBQWNmLFNBQVMsQ0FBQzJDLFNBQVMsR0FBRyxTQUFVWixFQUFFLEVBQUVQLFFBQVE7UUFDdEQsT0FBTyxJQUFJLENBQUNHLHlCQUF5QixDQUFDZCxTQUFTTSxhQUFhLENBQUNTLFVBQVUsQ0FBQ0MsR0FBRyxFQUFFLFlBQVlHLE1BQU0sQ0FBQ0QsS0FBSyxDQUFDLEdBQUdQO0lBQzdHO0lBQ0E7Ozs7OztLQU1DLEdBQ0RULGNBQWNmLFNBQVMsQ0FBQzRDLFlBQVksR0FBRyxTQUFVVixPQUFPLEVBQUVWLFFBQVE7UUFDOUQsT0FBTyxJQUFJLENBQUNXLHNCQUFzQixDQUFDdEIsU0FBU00sYUFBYSxDQUFDUyxVQUFVLENBQUNRLElBQUksRUFBRSxhQUFhRixTQUFTVjtJQUNyRztJQUNBOzs7Ozs7O0tBT0MsR0FDRFQsY0FBY2YsU0FBUyxDQUFDNkMsVUFBVSxHQUFHLFNBQVVkLEVBQUUsRUFBRUcsT0FBTyxFQUFFVixRQUFRO1FBQ2hFLE9BQU8sSUFBSSxDQUFDVyxzQkFBc0IsQ0FBQ3RCLFNBQVNNLGFBQWEsQ0FBQ1MsVUFBVSxDQUFDVSxHQUFHLEVBQUUsWUFBWU4sTUFBTSxDQUFDRCxLQUFLRyxTQUFTVjtJQUMvRztJQUNBOzs7Ozs7O0tBT0MsR0FDRFQsY0FBY2YsU0FBUyxDQUFDOEMsWUFBWSxHQUFHLFNBQVVmLEVBQUUsRUFBRVAsUUFBUTtRQUN6RCxPQUFPLElBQUksQ0FBQ0cseUJBQXlCLENBQUNkLFNBQVNNLGFBQWEsQ0FBQ1MsVUFBVSxDQUFDWSxNQUFNLEVBQUUsWUFBWVIsTUFBTSxDQUFDRCxLQUFLLENBQUMsR0FBR1A7SUFDaEg7SUFDQTs7Ozs7O0tBTUMsR0FDRFQsY0FBY2YsU0FBUyxDQUFDK0MsZ0JBQWdCLEdBQUcsU0FBVWhCLEVBQUUsRUFBRVAsUUFBUTtRQUM3RCxPQUFPLElBQUksQ0FBQ0cseUJBQXlCLENBQUNkLFNBQVNNLGFBQWEsQ0FBQ1MsVUFBVSxDQUFDVSxHQUFHLEVBQUUsWUFBWU4sTUFBTSxDQUFDRCxJQUFJLGdCQUFnQixDQUFDLEdBQUdQO0lBQzVIO0lBQ0E7Ozs7OztLQU1DLEdBQ0RULGNBQWNmLFNBQVMsQ0FBQ2dELHNCQUFzQixHQUFHLFNBQVVqQixFQUFFLEVBQUVQLFFBQVE7UUFDbkUsT0FBTyxJQUFJLENBQUNHLHlCQUF5QixDQUFDZCxTQUFTTSxhQUFhLENBQUNTLFVBQVUsQ0FBQ1UsR0FBRyxFQUFFLFlBQVlOLE1BQU0sQ0FBQ0QsSUFBSSxzQkFBc0IsQ0FBQyxHQUFHUDtJQUNsSTtJQUNBOzs7Ozs7S0FNQyxHQUNEVCxjQUFjZixTQUFTLENBQUNpRCxlQUFlLEdBQUcsU0FBVWxCLEVBQUUsRUFBRVAsUUFBUTtRQUM1RCxPQUFPLElBQUksQ0FBQ0cseUJBQXlCLENBQUNkLFNBQVNNLGFBQWEsQ0FBQ1MsVUFBVSxDQUFDUSxJQUFJLEVBQUUsWUFBWUosTUFBTSxDQUFDRCxJQUFJLGVBQWUsQ0FBQyxHQUFHUDtJQUM1SDtJQUNBOzs7Ozs7S0FNQyxHQUNEVCxjQUFjZixTQUFTLENBQUNrRCxnQkFBZ0IsR0FBRyxTQUFVbkIsRUFBRSxFQUFFUCxRQUFRO1FBQzdELE9BQU8sSUFBSSxDQUFDRyx5QkFBeUIsQ0FBQ2QsU0FBU00sYUFBYSxDQUFDUyxVQUFVLENBQUNRLElBQUksRUFBRSxZQUFZSixNQUFNLENBQUNELElBQUksZ0JBQWdCLENBQUMsR0FBR1A7SUFDN0g7SUFDQTs7Ozs7O0tBTUMsR0FDRFQsY0FBY2YsU0FBUyxDQUFDbUQsa0JBQWtCLEdBQUcsU0FBVXBCLEVBQUUsRUFBRVAsUUFBUTtRQUMvRCxPQUFPLElBQUksQ0FBQ0cseUJBQXlCLENBQUNkLFNBQVNNLGFBQWEsQ0FBQ1MsVUFBVSxDQUFDQyxHQUFHLEVBQUUsWUFBWUcsTUFBTSxDQUFDRCxLQUFLLENBQUMsR0FBR1A7SUFDN0c7SUFDQTs7Ozs7O0tBTUMsR0FDRFQsY0FBY2YsU0FBUyxDQUFDb0QsbUJBQW1CLEdBQUcsU0FBVTdCLE1BQU0sRUFBRUMsUUFBUTtRQUNwRSxJQUFJRCxXQUFXLEtBQUssR0FBRztZQUFFQSxTQUFTLElBQUlWLFNBQVM2QixtQkFBbUI7UUFBSTtRQUN0RSxJQUFJLENBQUNoQiwwQkFBMEIsQ0FBQ0g7UUFDaEMsT0FBTyxJQUFJLENBQUNJLHlCQUF5QixDQUFDZCxTQUFTTSxhQUFhLENBQUNTLFVBQVUsQ0FBQ0MsR0FBRyxFQUFFLFlBQVlOLFFBQVFDO0lBQ3JHO0lBQ0E7Ozs7OztLQU1DLEdBQ0RULGNBQWNmLFNBQVMsQ0FBQ3FELHFCQUFxQixHQUFHLFNBQVVuQixPQUFPLEVBQUVWLFFBQVE7UUFDdkUsT0FBTyxJQUFJLENBQUNXLHNCQUFzQixDQUFDdEIsU0FBU00sYUFBYSxDQUFDUyxVQUFVLENBQUNRLElBQUksRUFBRSxhQUFhRixTQUFTVjtJQUNyRztJQUNBOzs7Ozs7O0tBT0MsR0FDRFQsY0FBY2YsU0FBUyxDQUFDc0QsbUJBQW1CLEdBQUcsU0FBVXZCLEVBQUUsRUFBRUcsT0FBTyxFQUFFVixRQUFRO1FBQ3pFLE9BQU8sSUFBSSxDQUFDVyxzQkFBc0IsQ0FBQ3RCLFNBQVNNLGFBQWEsQ0FBQ1MsVUFBVSxDQUFDVSxHQUFHLEVBQUUsWUFBWU4sTUFBTSxDQUFDRCxLQUFLRyxTQUFTVjtJQUMvRztJQUNBOzs7Ozs7O0tBT0MsR0FDRFQsY0FBY2YsU0FBUyxDQUFDdUQscUJBQXFCLEdBQUcsU0FBVXhCLEVBQUUsRUFBRVAsUUFBUTtRQUNsRSxPQUFPLElBQUksQ0FBQ0cseUJBQXlCLENBQUNkLFNBQVNNLGFBQWEsQ0FBQ1MsVUFBVSxDQUFDWSxNQUFNLEVBQUUsWUFBWVIsTUFBTSxDQUFDRCxLQUFLLENBQUMsR0FBR1A7SUFDaEg7SUFDQTs7Ozs7O0tBTUMsR0FDRFQsY0FBY2YsU0FBUyxDQUFDd0QsaUNBQWlDLEdBQUcsU0FBVXpCLEVBQUUsRUFBRVAsUUFBUTtRQUM5RSxPQUFPLElBQUksQ0FBQ0cseUJBQXlCLENBQUNkLFNBQVNNLGFBQWEsQ0FBQ1MsVUFBVSxDQUFDUSxJQUFJLEVBQUUsWUFBWUosTUFBTSxDQUFDRCxJQUFJLFlBQVksQ0FBQyxHQUFHUDtJQUN6SDtJQUNBOzs7Ozs7S0FNQyxHQUNEVCxjQUFjZixTQUFTLENBQUN5RCx3QkFBd0IsR0FBRyxTQUFVMUIsRUFBRSxFQUFFUCxRQUFRO1FBQ3JFLE9BQU8sSUFBSSxDQUFDRyx5QkFBeUIsQ0FBQ2QsU0FBU00sYUFBYSxDQUFDUyxVQUFVLENBQUNRLElBQUksRUFBRSxZQUFZSixNQUFNLENBQUNELElBQUksZUFBZSxDQUFDLEdBQUdQO0lBQzVIO0lBQ0E7Ozs7OztLQU1DLEdBQ0RULGNBQWNmLFNBQVMsQ0FBQzBELGdDQUFnQyxHQUFHLFNBQVUzQixFQUFFLEVBQUVQLFFBQVE7UUFDN0UsT0FBTyxJQUFJLENBQUNHLHlCQUF5QixDQUFDZCxTQUFTTSxhQUFhLENBQUNTLFVBQVUsQ0FBQ1EsSUFBSSxFQUFFLFlBQVlKLE1BQU0sQ0FBQ0QsSUFBSSxvQkFBb0IsQ0FBQyxHQUFHUDtJQUNqSTtJQUNBOzs7Ozs7S0FNQyxHQUNEVCxjQUFjZixTQUFTLENBQUMyRCxhQUFhLEdBQUcsU0FBVXpCLE9BQU8sRUFBRVYsUUFBUTtRQUMvRCxPQUFPLElBQUksQ0FBQ1csc0JBQXNCLENBQUN0QixTQUFTTSxhQUFhLENBQUNTLFVBQVUsQ0FBQ1UsR0FBRyxFQUFFLG1CQUFtQkosU0FBU1Y7SUFDMUc7SUFDQTs7Ozs7O0tBTUMsR0FDRFQsY0FBY2YsU0FBUyxDQUFDNEQsa0JBQWtCLEdBQUcsU0FBVTFCLE9BQU8sRUFBRVYsUUFBUTtRQUNwRSxPQUFPLElBQUksQ0FBQ1csc0JBQXNCLENBQUN0QixTQUFTTSxhQUFhLENBQUNTLFVBQVUsQ0FBQ1EsSUFBSSxFQUFFLGtCQUFrQkYsU0FBU1Y7SUFDMUc7SUFDQTs7Ozs7O0tBTUMsR0FDRFQsY0FBY2YsU0FBUyxDQUFDNkQsb0JBQW9CLEdBQUcsU0FBVTlCLEVBQUUsRUFBRVAsUUFBUTtRQUNqRSxPQUFPLElBQUksQ0FBQ0cseUJBQXlCLENBQUNkLFNBQVNNLGFBQWEsQ0FBQ1MsVUFBVSxDQUFDQyxHQUFHLEVBQUUsa0JBQWtCRyxNQUFNLENBQUNELEtBQUssQ0FBQyxHQUFHUDtJQUNuSDtJQUNBLE9BQU9UO0FBQ1gsRUFBRUosYUFBYW1ELE9BQU87QUFDdEJyRCxrQkFBZSxHQUFHTSxlQUNsQix5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy8ucG5wbS9wb3N0bWFya0A0LjAuNS9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvQWNjb3VudENsaWVudC5qcz84MzliIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBiICE9PSBcImZ1bmN0aW9uXCIgJiYgYiAhPT0gbnVsbClcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBCYXNlQ2xpZW50XzEgPSByZXF1aXJlKFwiLi9CYXNlQ2xpZW50XCIpO1xudmFyIG1vZGVsc18xID0gcmVxdWlyZShcIi4vbW9kZWxzXCIpO1xudmFyIG1vZGVsc18yID0gcmVxdWlyZShcIi4vbW9kZWxzXCIpO1xudmFyIEFjY291bnRDbGllbnQgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKEFjY291bnRDbGllbnQsIF9zdXBlcik7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbmV3IEFjY291bnRDbGllbnRcbiAgICAgKiBAcGFyYW0gYWNjb3VudFRva2VuIFRoZSBhY2NvdW50IHRva2VuIHRoYXQgc2hvdWxkIGJlIHVzZWQgd2l0aCByZXF1ZXN0cy5cbiAgICAgKiBAcGFyYW0gY29uZmlnT3B0aW9ucyBWYXJpb3VzIG9wdGlvbnMgdG8gY3VzdG9taXplIGNsaWVudCBiZWhhdmlvci5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBBY2NvdW50Q2xpZW50KGFjY291bnRUb2tlbiwgY29uZmlnT3B0aW9ucykge1xuICAgICAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgYWNjb3VudFRva2VuLCBtb2RlbHNfMS5DbGllbnRPcHRpb25zLkF1dGhIZWFkZXJOYW1lcy5BQ0NPVU5UX1RPS0VOLCBjb25maWdPcHRpb25zKSB8fCB0aGlzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXRyaWV2ZSBhIGxpc3Qgb2YgU2VydmVycy5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBmaWx0ZXIgLSBBbiBvcHRpb25hbCBmaWx0ZXIgZm9yIHdoaWNoIGRhdGEgaXMgcmV0cmlldmVkLlxuICAgICAqIEBwYXJhbSBjYWxsYmFjayAtIElmIHRoZSBjYWxsYmFjayBpcyBwcm92aWRlZCwgaXQgd2lsbCBiZSBwYXNzZWQgdG8gdGhlIHJlc3VsdGluZyBwcm9taXNlIGFzIGEgY29udGludWF0aW9uLlxuICAgICAqIEByZXR1cm5zIEEgcHJvbWlzZSB0aGF0IHdpbGwgY29tcGxldGUgd2hlbiB0aGUgQVBJIHJlc3BvbmRzIChvciBhbiBlcnJvciBvY2N1cnMpLlxuICAgICAqL1xuICAgIEFjY291bnRDbGllbnQucHJvdG90eXBlLmdldFNlcnZlcnMgPSBmdW5jdGlvbiAoZmlsdGVyLCBjYWxsYmFjaykge1xuICAgICAgICBpZiAoZmlsdGVyID09PSB2b2lkIDApIHsgZmlsdGVyID0gbmV3IG1vZGVsc18yLlNlcnZlckZpbHRlcmluZ1BhcmFtZXRlcnMoKTsgfVxuICAgICAgICB0aGlzLnNldERlZmF1bHRQYWdpbmF0aW9uVmFsdWVzKGZpbHRlcik7XG4gICAgICAgIHJldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0V2l0aG91dEJvZHkobW9kZWxzXzEuQ2xpZW50T3B0aW9ucy5IdHRwTWV0aG9kLkdFVCwgXCIvc2VydmVyc1wiLCBmaWx0ZXIsIGNhbGxiYWNrKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFJldHJpZXZlIGEgc2luZ2xlIHNlcnZlciBieSBJRC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBpZCAtIFRoZSBJRCBvZiB0aGUgU2VydmVyIGZvciB3aGljaCB5b3Ugd2lzaCB0byByZXRyaWV2ZSBkZXRhaWxzLlxuICAgICAqIEBwYXJhbSBjYWxsYmFjayAtIElmIHRoZSBjYWxsYmFjayBpcyBwcm92aWRlZCwgaXQgd2lsbCBiZSBwYXNzZWQgdG8gdGhlIHJlc3VsdGluZyBwcm9taXNlIGFzIGEgY29udGludWF0aW9uLlxuICAgICAqIEByZXR1cm5zIEEgcHJvbWlzZSB0aGF0IHdpbGwgY29tcGxldGUgd2hlbiB0aGUgQVBJIHJlc3BvbmRzIChvciBhbiBlcnJvciBvY2N1cnMpLlxuICAgICAqL1xuICAgIEFjY291bnRDbGllbnQucHJvdG90eXBlLmdldFNlcnZlciA9IGZ1bmN0aW9uIChpZCwgY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3RXaXRob3V0Qm9keShtb2RlbHNfMS5DbGllbnRPcHRpb25zLkh0dHBNZXRob2QuR0VULCBcIi9zZXJ2ZXJzL1wiLmNvbmNhdChpZCksIHt9LCBjYWxsYmFjayk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBuZXcgU2VydmVyLlxuICAgICAqXG4gICAgICogQHBhcmFtIG9wdGlvbnMgLSBUaGUgb3B0aW9ucyB0byBiZSB1c2VkIHRvIGNyZWF0ZSBuZXcgU2VydmVyLlxuICAgICAqIEBwYXJhbSBjYWxsYmFjayAtIElmIHRoZSBjYWxsYmFjayBpcyBwcm92aWRlZCwgaXQgd2lsbCBiZSBwYXNzZWQgdG8gdGhlIHJlc3VsdGluZyBwcm9taXNlIGFzIGEgY29udGludWF0aW9uLlxuICAgICAqIEByZXR1cm5zIEEgcHJvbWlzZSB0aGF0IHdpbGwgY29tcGxldGUgd2hlbiB0aGUgQVBJIHJlc3BvbmRzIChvciBhbiBlcnJvciBvY2N1cnMpLlxuICAgICAqL1xuICAgIEFjY291bnRDbGllbnQucHJvdG90eXBlLmNyZWF0ZVNlcnZlciA9IGZ1bmN0aW9uIChvcHRpb25zLCBjYWxsYmFjaykge1xuICAgICAgICByZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdFdpdGhCb2R5KG1vZGVsc18xLkNsaWVudE9wdGlvbnMuSHR0cE1ldGhvZC5QT1NULCBcIi9zZXJ2ZXJzXCIsIG9wdGlvbnMsIGNhbGxiYWNrKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIE1vZGlmeSB0aGUgU2VydmVyIGFzc29jaWF0ZWQgd2l0aCB0aGlzIENsaWVudC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBpZCAtIFRoZSBJRCBvZiB0aGUgU2VydmVyIHlvdSB3aXNoIHRvIHVwZGF0ZS5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucyAtIFRoZSBvcHRpb25zIHRvIGJlIHVzZWQgdG8gY3JlYXRlIG5ldyBTZXJ2ZXIuXG4gICAgICogQHBhcmFtIGNhbGxiYWNrIC0gSWYgdGhlIGNhbGxiYWNrIGlzIHByb3ZpZGVkLCBpdCB3aWxsIGJlIHBhc3NlZCB0byB0aGUgcmVzdWx0aW5nIHByb21pc2UgYXMgYSBjb250aW51YXRpb24uXG4gICAgICogQHJldHVybnMgQSBwcm9taXNlIHRoYXQgd2lsbCBjb21wbGV0ZSB3aGVuIHRoZSBBUEkgcmVzcG9uZHMgKG9yIGFuIGVycm9yIG9jY3VycykuXG4gICAgICovXG4gICAgQWNjb3VudENsaWVudC5wcm90b3R5cGUuZWRpdFNlcnZlciA9IGZ1bmN0aW9uIChpZCwgb3B0aW9ucywgY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3RXaXRoQm9keShtb2RlbHNfMS5DbGllbnRPcHRpb25zLkh0dHBNZXRob2QuUFVULCBcIi9zZXJ2ZXJzL1wiLmNvbmNhdChpZCksIG9wdGlvbnMsIGNhbGxiYWNrKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIE1vZGlmeSB0aGUgU2VydmVyIGFzc29jaWF0ZWQgd2l0aCB0aGlzIENsaWVudC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBpZCAtIFRoZSBJRCBvZiB0aGUgRG9tYWluIHlvdSB3aXNoIHRvIGRlbGV0ZS5cbiAgICAgKiBAcGFyYW0gY2FsbGJhY2sgLSBJZiB0aGUgY2FsbGJhY2sgaXMgcHJvdmlkZWQsIGl0IHdpbGwgYmUgcGFzc2VkIHRvIHRoZSByZXN1bHRpbmcgcHJvbWlzZSBhcyBhIGNvbnRpbnVhdGlvbi5cbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCB3aWxsIGNvbXBsZXRlIHdoZW4gdGhlIEFQSSByZXNwb25kcyAob3IgYW4gZXJyb3Igb2NjdXJzKS5cbiAgICAgKi9cbiAgICBBY2NvdW50Q2xpZW50LnByb3RvdHlwZS5kZWxldGVTZXJ2ZXIgPSBmdW5jdGlvbiAoaWQsIGNhbGxiYWNrKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0V2l0aG91dEJvZHkobW9kZWxzXzEuQ2xpZW50T3B0aW9ucy5IdHRwTWV0aG9kLkRFTEVURSwgXCIvc2VydmVycy9cIi5jb25jYXQoaWQpLCB7fSwgY2FsbGJhY2spO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogUmV0cmlldmUgYSBiYXRjaCBvZiBEb21haW5zLlxuICAgICAqXG4gICAgICogQHBhcmFtIGZpbHRlciAtIEFuIG9wdGlvbmFsIGZpbHRlciBmb3Igd2hpY2ggZGF0YSBpcyByZXRyaWV2ZWQuXG4gICAgICogQHBhcmFtIGNhbGxiYWNrIC0gSWYgdGhlIGNhbGxiYWNrIGlzIHByb3ZpZGVkLCBpdCB3aWxsIGJlIHBhc3NlZCB0byB0aGUgcmVzdWx0aW5nIHByb21pc2UgYXMgYSBjb250aW51YXRpb24uXG4gICAgICogQHJldHVybnMgQSBwcm9taXNlIHRoYXQgd2lsbCBjb21wbGV0ZSB3aGVuIHRoZSBBUEkgcmVzcG9uZHMgKG9yIGFuIGVycm9yIG9jY3VycykuXG4gICAgICovXG4gICAgQWNjb3VudENsaWVudC5wcm90b3R5cGUuZ2V0RG9tYWlucyA9IGZ1bmN0aW9uIChmaWx0ZXIsIGNhbGxiYWNrKSB7XG4gICAgICAgIGlmIChmaWx0ZXIgPT09IHZvaWQgMCkgeyBmaWx0ZXIgPSBuZXcgbW9kZWxzXzEuRmlsdGVyaW5nUGFyYW1ldGVycygpOyB9XG4gICAgICAgIHRoaXMuc2V0RGVmYXVsdFBhZ2luYXRpb25WYWx1ZXMoZmlsdGVyKTtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3RXaXRob3V0Qm9keShtb2RlbHNfMS5DbGllbnRPcHRpb25zLkh0dHBNZXRob2QuR0VULCBcIi9kb21haW5zXCIsIGZpbHRlciwgY2FsbGJhY2spO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogUmV0cmlldmUgYSBzaW5nbGUgRG9tYWluIGJ5IElELlxuICAgICAqXG4gICAgICogQHBhcmFtIGlkIC0gVGhlIElEIG9mIHRoZSBEb21haW4gZm9yIHdoaWNoIHlvdSB3aXNoIHRvIHJldHJpZXZlIGRldGFpbHMuXG4gICAgICogQHBhcmFtIGNhbGxiYWNrIC0gSWYgdGhlIGNhbGxiYWNrIGlzIHByb3ZpZGVkLCBpdCB3aWxsIGJlIHBhc3NlZCB0byB0aGUgcmVzdWx0aW5nIHByb21pc2UgYXMgYSBjb250aW51YXRpb24uXG4gICAgICogQHJldHVybnMgQSBwcm9taXNlIHRoYXQgd2lsbCBjb21wbGV0ZSB3aGVuIHRoZSBBUEkgcmVzcG9uZHMgKG9yIGFuIGVycm9yIG9jY3VycykuXG4gICAgICovXG4gICAgQWNjb3VudENsaWVudC5wcm90b3R5cGUuZ2V0RG9tYWluID0gZnVuY3Rpb24gKGlkLCBjYWxsYmFjaykge1xuICAgICAgICByZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdFdpdGhvdXRCb2R5KG1vZGVsc18xLkNsaWVudE9wdGlvbnMuSHR0cE1ldGhvZC5HRVQsIFwiL2RvbWFpbnMvXCIuY29uY2F0KGlkKSwge30sIGNhbGxiYWNrKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIG5ldyBEb21haW4uXG4gICAgICpcbiAgICAgKiBAcGFyYW0gb3B0aW9ucyAtIFRoZSBvcHRpb25zIHRvIGJlIHVzZWQgdG8gY3JlYXRlIG5ldyBEb21haW4uXG4gICAgICogQHBhcmFtIGNhbGxiYWNrIC0gSWYgdGhlIGNhbGxiYWNrIGlzIHByb3ZpZGVkLCBpdCB3aWxsIGJlIHBhc3NlZCB0byB0aGUgcmVzdWx0aW5nIHByb21pc2UgYXMgYSBjb250aW51YXRpb24uXG4gICAgICogQHJldHVybnMgQSBwcm9taXNlIHRoYXQgd2lsbCBjb21wbGV0ZSB3aGVuIHRoZSBBUEkgcmVzcG9uZHMgKG9yIGFuIGVycm9yIG9jY3VycykuXG4gICAgICovXG4gICAgQWNjb3VudENsaWVudC5wcm90b3R5cGUuY3JlYXRlRG9tYWluID0gZnVuY3Rpb24gKG9wdGlvbnMsIGNhbGxiYWNrKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0V2l0aEJvZHkobW9kZWxzXzEuQ2xpZW50T3B0aW9ucy5IdHRwTWV0aG9kLlBPU1QsIFwiL2RvbWFpbnMvXCIsIG9wdGlvbnMsIGNhbGxiYWNrKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFVwZGF0ZSBhIERvbWFpbi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBpZCAtIFRoZSBJRCBvZiB0aGUgRG9tYWluIHlvdSB3aXNoIHRvIHVwZGF0ZS5cbiAgICAgKiBAcGFyYW0gZG9tYWluIC0gVGhlIHZhbHVlcyBvbiB0aGUgRG9tYWluIHlvdSB3aXNoIHRvIHVwZGF0ZS5cbiAgICAgKiBAcGFyYW0gY2FsbGJhY2sgLSBJZiB0aGUgY2FsbGJhY2sgaXMgcHJvdmlkZWQsIGl0IHdpbGwgYmUgcGFzc2VkIHRvIHRoZSByZXN1bHRpbmcgcHJvbWlzZSBhcyBhIGNvbnRpbnVhdGlvbi5cbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCB3aWxsIGNvbXBsZXRlIHdoZW4gdGhlIEFQSSByZXNwb25kcyAob3IgYW4gZXJyb3Igb2NjdXJzKS5cbiAgICAgKi9cbiAgICBBY2NvdW50Q2xpZW50LnByb3RvdHlwZS5lZGl0RG9tYWluID0gZnVuY3Rpb24gKGlkLCBvcHRpb25zLCBjYWxsYmFjaykge1xuICAgICAgICByZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdFdpdGhCb2R5KG1vZGVsc18xLkNsaWVudE9wdGlvbnMuSHR0cE1ldGhvZC5QVVQsIFwiL2RvbWFpbnMvXCIuY29uY2F0KGlkKSwgb3B0aW9ucywgY2FsbGJhY2spO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogRGVsZXRlIGEgRG9tYWluLlxuICAgICAqXG4gICAgICogQHBhcmFtIGlkIC0gVGhlIElEIG9mIHRoZSBEb21haW4geW91IHdpc2ggdG8gZGVsZXRlLlxuICAgICAqIEBwYXJhbSBvcHRpb25zIC0gVGhlIG9wdGlvbnMgdG8gYmUgdXNlZCBpbiBjcmVhdGUgRG9tYWluLlxuICAgICAqIEBwYXJhbSBjYWxsYmFjayAtIElmIHRoZSBjYWxsYmFjayBpcyBwcm92aWRlZCwgaXQgd2lsbCBiZSBwYXNzZWQgdG8gdGhlIHJlc3VsdGluZyBwcm9taXNlIGFzIGEgY29udGludWF0aW9uLlxuICAgICAqIEByZXR1cm5zIEEgcHJvbWlzZSB0aGF0IHdpbGwgY29tcGxldGUgd2hlbiB0aGUgQVBJIHJlc3BvbmRzIChvciBhbiBlcnJvciBvY2N1cnMpLlxuICAgICAqL1xuICAgIEFjY291bnRDbGllbnQucHJvdG90eXBlLmRlbGV0ZURvbWFpbiA9IGZ1bmN0aW9uIChpZCwgY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3RXaXRob3V0Qm9keShtb2RlbHNfMS5DbGllbnRPcHRpb25zLkh0dHBNZXRob2QuREVMRVRFLCBcIi9kb21haW5zL1wiLmNvbmNhdChpZCksIHt9LCBjYWxsYmFjayk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBUcmlnZ2VyIERvbWFpbiBES0lNIGtleSB2ZXJpZmljYXRpb24uXG4gICAgICpcbiAgICAgKiBAcGFyYW0gaWQgLSBUaGUgSUQgb2YgdGhlIERvbWFpbiB5b3Ugd2lzaCB0byB0cmlnZ2VyIERLSU0gdmVyaWZpY2F0aW9uIGZvci5cbiAgICAgKiBAcGFyYW0gY2FsbGJhY2sgLSBJZiB0aGUgY2FsbGJhY2sgaXMgcHJvdmlkZWQsIGl0IHdpbGwgYmUgcGFzc2VkIHRvIHRoZSByZXN1bHRpbmcgcHJvbWlzZSBhcyBhIGNvbnRpbnVhdGlvbi5cbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCB3aWxsIGNvbXBsZXRlIHdoZW4gdGhlIEFQSSByZXNwb25kcyAob3IgYW4gZXJyb3Igb2NjdXJzKS5cbiAgICAgKi9cbiAgICBBY2NvdW50Q2xpZW50LnByb3RvdHlwZS52ZXJpZnlEb21haW5ES0lNID0gZnVuY3Rpb24gKGlkLCBjYWxsYmFjaykge1xuICAgICAgICByZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdFdpdGhvdXRCb2R5KG1vZGVsc18xLkNsaWVudE9wdGlvbnMuSHR0cE1ldGhvZC5QVVQsIFwiL2RvbWFpbnMvXCIuY29uY2F0KGlkLCBcIi92ZXJpZnlES0lNXCIpLCB7fSwgY2FsbGJhY2spO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogVHJpZ2dlciBEb21haW4gREtJTSBrZXkgdmVyaWZpY2F0aW9uLlxuICAgICAqXG4gICAgICogQHBhcmFtIGlkIC0gVGhlIElEIG9mIHRoZSBEb21haW4geW91IHdpc2ggdG8gdHJpZ2dlciBES0lNIHZlcmlmaWNhdGlvbiBmb3IuXG4gICAgICogQHBhcmFtIGNhbGxiYWNrIC0gSWYgdGhlIGNhbGxiYWNrIGlzIHByb3ZpZGVkLCBpdCB3aWxsIGJlIHBhc3NlZCB0byB0aGUgcmVzdWx0aW5nIHByb21pc2UgYXMgYSBjb250aW51YXRpb24uXG4gICAgICogQHJldHVybnMgQSBwcm9taXNlIHRoYXQgd2lsbCBjb21wbGV0ZSB3aGVuIHRoZSBBUEkgcmVzcG9uZHMgKG9yIGFuIGVycm9yIG9jY3VycykuXG4gICAgICovXG4gICAgQWNjb3VudENsaWVudC5wcm90b3R5cGUudmVyaWZ5RG9tYWluUmV0dXJuUGF0aCA9IGZ1bmN0aW9uIChpZCwgY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3RXaXRob3V0Qm9keShtb2RlbHNfMS5DbGllbnRPcHRpb25zLkh0dHBNZXRob2QuUFVULCBcIi9kb21haW5zL1wiLmNvbmNhdChpZCwgXCIvdmVyaWZ5UmV0dXJuUGF0aFwiKSwge30sIGNhbGxiYWNrKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFRyaWdnZXIgRG9tYWluIERLSU0ga2V5IHZlcmlmaWNhdGlvbi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBpZCAtIFRoZSBJRCBvZiB0aGUgRG9tYWluIHlvdSB3aXNoIHRvIHRyaWdnZXIgREtJTSB2ZXJpZmljYXRpb24gZm9yLlxuICAgICAqIEBwYXJhbSBjYWxsYmFjayBJZiB0aGUgY2FsbGJhY2sgaXMgcHJvdmlkZWQsIGl0IHdpbGwgYmUgcGFzc2VkIHRvIHRoZSByZXN1bHRpbmcgcHJvbWlzZSBhcyBhIGNvbnRpbnVhdGlvbi5cbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCB3aWxsIGNvbXBsZXRlIHdoZW4gdGhlIEFQSSByZXNwb25kcyAob3IgYW4gZXJyb3Igb2NjdXJzKS5cbiAgICAgKi9cbiAgICBBY2NvdW50Q2xpZW50LnByb3RvdHlwZS52ZXJpZnlEb21haW5TUEYgPSBmdW5jdGlvbiAoaWQsIGNhbGxiYWNrKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0V2l0aG91dEJvZHkobW9kZWxzXzEuQ2xpZW50T3B0aW9ucy5IdHRwTWV0aG9kLlBPU1QsIFwiL2RvbWFpbnMvXCIuY29uY2F0KGlkLCBcIi92ZXJpZnlTUEZcIiksIHt9LCBjYWxsYmFjayk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBUcmlnZ2VyIERvbWFpbiBES0lNIGtleSB2ZXJpZmljYXRpb24uXG4gICAgICpcbiAgICAgKiBAcGFyYW0gaWQgLSBUaGUgSUQgb2YgdGhlIERvbWFpbiB5b3Ugd2lzaCB0byB0cmlnZ2VyIERLSU0gdmVyaWZpY2F0aW9uIGZvci5cbiAgICAgKiBAcGFyYW0gY2FsbGJhY2sgLSBJZiB0aGUgY2FsbGJhY2sgaXMgcHJvdmlkZWQsIGl0IHdpbGwgYmUgcGFzc2VkIHRvIHRoZSByZXN1bHRpbmcgcHJvbWlzZSBhcyBhIGNvbnRpbnVhdGlvbi5cbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCB3aWxsIGNvbXBsZXRlIHdoZW4gdGhlIEFQSSByZXNwb25kcyAob3IgYW4gZXJyb3Igb2NjdXJzKS5cbiAgICAgKi9cbiAgICBBY2NvdW50Q2xpZW50LnByb3RvdHlwZS5yb3RhdGVEb21haW5ES0lNID0gZnVuY3Rpb24gKGlkLCBjYWxsYmFjaykge1xuICAgICAgICByZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdFdpdGhvdXRCb2R5KG1vZGVsc18xLkNsaWVudE9wdGlvbnMuSHR0cE1ldGhvZC5QT1NULCBcIi9kb21haW5zL1wiLmNvbmNhdChpZCwgXCIvcm90YXRlREtJTVwiKSwge30sIGNhbGxiYWNrKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFJldHJpZXZlIGEgc2luZ2xlIFNlbmRlciBTaWduYXR1cmUgYnkgSUQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gaWQgLSBUaGUgSUQgb2YgdGhlIFNlbmRlciBTaWduYXR1cmUgZm9yIHdoaWNoIHlvdSB3aXNoIHRvIHJldHJpZXZlIGRldGFpbHMuXG4gICAgICogQHBhcmFtIGNhbGxiYWNrIC0gSWYgdGhlIGNhbGxiYWNrIGlzIHByb3ZpZGVkLCBpdCB3aWxsIGJlIHBhc3NlZCB0byB0aGUgcmVzdWx0aW5nIHByb21pc2UgYXMgYSBjb250aW51YXRpb24uXG4gICAgICogQHJldHVybnMgQSBwcm9taXNlIHRoYXQgd2lsbCBjb21wbGV0ZSB3aGVuIHRoZSBBUEkgcmVzcG9uZHMgKG9yIGFuIGVycm9yIG9jY3VycykuXG4gICAgICovXG4gICAgQWNjb3VudENsaWVudC5wcm90b3R5cGUuZ2V0U2VuZGVyU2lnbmF0dXJlID0gZnVuY3Rpb24gKGlkLCBjYWxsYmFjaykge1xuICAgICAgICByZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdFdpdGhvdXRCb2R5KG1vZGVsc18xLkNsaWVudE9wdGlvbnMuSHR0cE1ldGhvZC5HRVQsIFwiL3NlbmRlcnMvXCIuY29uY2F0KGlkKSwge30sIGNhbGxiYWNrKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFJldHJpZXZlIGEgYmF0Y2ggb2YgU2VuZGVyIFNpZ25hdHVyZXMuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZmlsdGVyIC0gQW4gb3B0aW9uYWwgZmlsdGVyIGZvciB3aGljaCBkYXRhIGlzIHJldHJpZXZlZC5cbiAgICAgKiBAcGFyYW0gY2FsbGJhY2sgLSBJZiB0aGUgY2FsbGJhY2sgaXMgcHJvdmlkZWQsIGl0IHdpbGwgYmUgcGFzc2VkIHRvIHRoZSByZXN1bHRpbmcgcHJvbWlzZSBhcyBhIGNvbnRpbnVhdGlvbi5cbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCB3aWxsIGNvbXBsZXRlIHdoZW4gdGhlIEFQSSByZXNwb25kcyAob3IgYW4gZXJyb3Igb2NjdXJzKS5cbiAgICAgKi9cbiAgICBBY2NvdW50Q2xpZW50LnByb3RvdHlwZS5nZXRTZW5kZXJTaWduYXR1cmVzID0gZnVuY3Rpb24gKGZpbHRlciwgY2FsbGJhY2spIHtcbiAgICAgICAgaWYgKGZpbHRlciA9PT0gdm9pZCAwKSB7IGZpbHRlciA9IG5ldyBtb2RlbHNfMS5GaWx0ZXJpbmdQYXJhbWV0ZXJzKCk7IH1cbiAgICAgICAgdGhpcy5zZXREZWZhdWx0UGFnaW5hdGlvblZhbHVlcyhmaWx0ZXIpO1xuICAgICAgICByZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdFdpdGhvdXRCb2R5KG1vZGVsc18xLkNsaWVudE9wdGlvbnMuSHR0cE1ldGhvZC5HRVQsIFwiL3NlbmRlcnNcIiwgZmlsdGVyLCBjYWxsYmFjayk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBuZXcgU2VuZGVyIFNpZ25hdHVyZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBvcHRpb25zIC0gVGhlIG9wdGlvbnMgdG8gYmUgdXNlZCB0byBjcmVhdGUgbmV3IFNlbmRlciBTaWduYXR1cmUuXG4gICAgICogQHBhcmFtIGNhbGxiYWNrIC0gSWYgdGhlIGNhbGxiYWNrIGlzIHByb3ZpZGVkLCBpdCB3aWxsIGJlIHBhc3NlZCB0byB0aGUgcmVzdWx0aW5nIHByb21pc2UgYXMgYSBjb250aW51YXRpb24uXG4gICAgICogQHJldHVybnMgQSBwcm9taXNlIHRoYXQgd2lsbCBjb21wbGV0ZSB3aGVuIHRoZSBBUEkgcmVzcG9uZHMgKG9yIGFuIGVycm9yIG9jY3VycykuXG4gICAgICovXG4gICAgQWNjb3VudENsaWVudC5wcm90b3R5cGUuY3JlYXRlU2VuZGVyU2lnbmF0dXJlID0gZnVuY3Rpb24gKG9wdGlvbnMsIGNhbGxiYWNrKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0V2l0aEJvZHkobW9kZWxzXzEuQ2xpZW50T3B0aW9ucy5IdHRwTWV0aG9kLlBPU1QsIFwiL3NlbmRlcnMvXCIsIG9wdGlvbnMsIGNhbGxiYWNrKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFVwZGF0ZSBhIFNlbmRlciBTaWduYXR1cmUuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gaWQgLSBUaGUgSUQgb2YgdGhlIFNlbmRlciBTaWduYXR1cmUgZm9yIHdoaWNoIHlvdSB3aXNoIHRvIHVwZGF0ZS5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucyAtIFRoZSB2YWx1ZXMgb24gdGhlIFNlbmRlciBTaWduYXR1cmUgeW91IHdpc2ggdG8gdXBkYXRlLlxuICAgICAqIEBwYXJhbSBjYWxsYmFjayAtIElmIHRoZSBjYWxsYmFjayBpcyBwcm92aWRlZCwgaXQgd2lsbCBiZSBwYXNzZWQgdG8gdGhlIHJlc3VsdGluZyBwcm9taXNlIGFzIGEgY29udGludWF0aW9uLlxuICAgICAqIEByZXR1cm5zIEEgcHJvbWlzZSB0aGF0IHdpbGwgY29tcGxldGUgd2hlbiB0aGUgQVBJIHJlc3BvbmRzIChvciBhbiBlcnJvciBvY2N1cnMpLlxuICAgICAqL1xuICAgIEFjY291bnRDbGllbnQucHJvdG90eXBlLmVkaXRTZW5kZXJTaWduYXR1cmUgPSBmdW5jdGlvbiAoaWQsIG9wdGlvbnMsIGNhbGxiYWNrKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0V2l0aEJvZHkobW9kZWxzXzEuQ2xpZW50T3B0aW9ucy5IdHRwTWV0aG9kLlBVVCwgXCIvc2VuZGVycy9cIi5jb25jYXQoaWQpLCBvcHRpb25zLCBjYWxsYmFjayk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBEZWxldGUgYSBEb21haW4uXG4gICAgICpcbiAgICAgKiBAcGFyYW0gaWQgLSBUaGUgSUQgb2YgdGhlIERvbWFpbiB5b3Ugd2lzaCB0byBkZWxldGUuXG4gICAgICogQHBhcmFtIG9wdGlvbnMgLSBUaGUgb3B0aW9ucyB0byBiZSB1c2VkIGluIGNyZWF0ZSBEb21haW4uXG4gICAgICogQHBhcmFtIGNhbGxiYWNrIC0gSWYgdGhlIGNhbGxiYWNrIGlzIHByb3ZpZGVkLCBpdCB3aWxsIGJlIHBhc3NlZCB0byB0aGUgcmVzdWx0aW5nIHByb21pc2UgYXMgYSBjb250aW51YXRpb24uXG4gICAgICogQHJldHVybnMgQSBwcm9taXNlIHRoYXQgd2lsbCBjb21wbGV0ZSB3aGVuIHRoZSBBUEkgcmVzcG9uZHMgKG9yIGFuIGVycm9yIG9jY3VycykuXG4gICAgICovXG4gICAgQWNjb3VudENsaWVudC5wcm90b3R5cGUuZGVsZXRlU2VuZGVyU2lnbmF0dXJlID0gZnVuY3Rpb24gKGlkLCBjYWxsYmFjaykge1xuICAgICAgICByZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdFdpdGhvdXRCb2R5KG1vZGVsc18xLkNsaWVudE9wdGlvbnMuSHR0cE1ldGhvZC5ERUxFVEUsIFwiL3NlbmRlcnMvXCIuY29uY2F0KGlkKSwge30sIGNhbGxiYWNrKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFJlcXVlc3QgYSBuZXcgY29uZmlybWF0aW9uIGVtYWlsIHRvIGJlIHNlbnQgdG8gdGhlIGVtYWlsIGFkZHJlc3MgYXNzb2NpYXRlZCB3aXRoIGEgU2VuZGVyIFNpZ25hdHVyZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBpZCAtIFRoZSBJRCBvZiB0aGUgU2VuZGVyIFNpZ25hdHVyZS5cbiAgICAgKiBAcGFyYW0gY2FsbGJhY2sgLSBJZiB0aGUgY2FsbGJhY2sgaXMgcHJvdmlkZWQsIGl0IHdpbGwgYmUgcGFzc2VkIHRvIHRoZSByZXN1bHRpbmcgcHJvbWlzZSBhcyBhIGNvbnRpbnVhdGlvbi5cbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCB3aWxsIGNvbXBsZXRlIHdoZW4gdGhlIEFQSSByZXNwb25kcyAob3IgYW4gZXJyb3Igb2NjdXJzKS5cbiAgICAgKi9cbiAgICBBY2NvdW50Q2xpZW50LnByb3RvdHlwZS5yZXNlbmRTZW5kZXJTaWduYXR1cmVDb25maXJtYXRpb24gPSBmdW5jdGlvbiAoaWQsIGNhbGxiYWNrKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0V2l0aG91dEJvZHkobW9kZWxzXzEuQ2xpZW50T3B0aW9ucy5IdHRwTWV0aG9kLlBPU1QsIFwiL3NlbmRlcnMvXCIuY29uY2F0KGlkLCBcIi9yZXNlbmRcIiksIHt9LCBjYWxsYmFjayk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXF1ZXN0IHRoYXQgdGhlIFNQRiByZWNvcmRzIGZvciBTZW5kZXIgU2lnbmF0dXJlIGJlIHZlcmlmaWVkLlxuICAgICAqXG4gICAgICogQHBhcmFtIGlkIC0gVGhlIElEIG9mIHRoZSBTZW5kZXIgU2lnbmF0dXJlLlxuICAgICAqIEBwYXJhbSBjYWxsYmFjayAtIElmIHRoZSBjYWxsYmFjayBpcyBwcm92aWRlZCwgaXQgd2lsbCBiZSBwYXNzZWQgdG8gdGhlIHJlc3VsdGluZyBwcm9taXNlIGFzIGEgY29udGludWF0aW9uLlxuICAgICAqIEByZXR1cm5zIEEgcHJvbWlzZSB0aGF0IHdpbGwgY29tcGxldGUgd2hlbiB0aGUgQVBJIHJlc3BvbmRzIChvciBhbiBlcnJvciBvY2N1cnMpLlxuICAgICAqL1xuICAgIEFjY291bnRDbGllbnQucHJvdG90eXBlLnZlcmlmeVNlbmRlclNpZ25hdHVyZVNQRiA9IGZ1bmN0aW9uIChpZCwgY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3RXaXRob3V0Qm9keShtb2RlbHNfMS5DbGllbnRPcHRpb25zLkh0dHBNZXRob2QuUE9TVCwgXCIvc2VuZGVycy9cIi5jb25jYXQoaWQsIFwiL3ZlcmlmeVNwZlwiKSwge30sIGNhbGxiYWNrKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFJlcXVlc3QgdGhhdCB0aGUgU1BGIHJlY29yZHMgZm9yIFNlbmRlciBTaWduYXR1cmUgYmUgdmVyaWZpZWQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gaWQgLSBUaGUgSUQgb2YgdGhlIFNlbmRlciBTaWduYXR1cmUuXG4gICAgICogQHBhcmFtIGNhbGxiYWNrIC0gSWYgdGhlIGNhbGxiYWNrIGlzIHByb3ZpZGVkLCBpdCB3aWxsIGJlIHBhc3NlZCB0byB0aGUgcmVzdWx0aW5nIHByb21pc2UgYXMgYSBjb250aW51YXRpb24uXG4gICAgICogQHJldHVybnMgQSBwcm9taXNlIHRoYXQgd2lsbCBjb21wbGV0ZSB3aGVuIHRoZSBBUEkgcmVzcG9uZHMgKG9yIGFuIGVycm9yIG9jY3VycykuXG4gICAgICovXG4gICAgQWNjb3VudENsaWVudC5wcm90b3R5cGUucmVxdWVzdE5ld0RLSU1Gb3JTZW5kZXJTaWduYXR1cmUgPSBmdW5jdGlvbiAoaWQsIGNhbGxiYWNrKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0V2l0aG91dEJvZHkobW9kZWxzXzEuQ2xpZW50T3B0aW9ucy5IdHRwTWV0aG9kLlBPU1QsIFwiL3NlbmRlcnMvXCIuY29uY2F0KGlkLCBcIi9yZXF1ZXN0TmV3RGtpbVwiKSwge30sIGNhbGxiYWNrKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFJlcXVlc3QgYSBwdXNoIG9mIHRlbXBsYXRlcyBmcm9tIG9uZSBzZXJ2ZXIgdG8gYW5vdGhlci5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBvcHRpb25zIC0gZGV0YWlscyBmb3IgcHVzaGluZyB0ZW1wbGF0ZXMgZnJvbSBvbmUgcGxhY2UgdG8gYW5vdGhlci5cbiAgICAgKiBAcGFyYW0gY2FsbGJhY2sgLSBJZiB0aGUgY2FsbGJhY2sgaXMgcHJvdmlkZWQsIGl0IHdpbGwgYmUgcGFzc2VkIHRvIHRoZSByZXN1bHRpbmcgcHJvbWlzZSBhcyBhIGNvbnRpbnVhdGlvbi5cbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCB3aWxsIGNvbXBsZXRlIHdoZW4gdGhlIEFQSSByZXNwb25kcyAob3IgYW4gZXJyb3Igb2NjdXJzKS5cbiAgICAgKi9cbiAgICBBY2NvdW50Q2xpZW50LnByb3RvdHlwZS5wdXNoVGVtcGxhdGVzID0gZnVuY3Rpb24gKG9wdGlvbnMsIGNhbGxiYWNrKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0V2l0aEJvZHkobW9kZWxzXzEuQ2xpZW50T3B0aW9ucy5IdHRwTWV0aG9kLlBVVCwgXCIvdGVtcGxhdGVzL3B1c2hcIiwgb3B0aW9ucywgY2FsbGJhY2spO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogUmVxdWVzdCBhIGRhdGEgcmVtb3ZhbC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBvcHRpb25zIC0gZGV0YWlscyBmb3IgY3JlYXRpbmcgZGF0YSByZW1vdmFsIHJlcXVlc3RcbiAgICAgKiBAcGFyYW0gY2FsbGJhY2sgLSBJZiB0aGUgY2FsbGJhY2sgaXMgcHJvdmlkZWQsIGl0IHdpbGwgYmUgcGFzc2VkIHRvIHRoZSByZXN1bHRpbmcgcHJvbWlzZSBhcyBhIGNvbnRpbnVhdGlvbi5cbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCB3aWxsIGNvbXBsZXRlIHdoZW4gdGhlIEFQSSByZXNwb25kcyAob3IgYW4gZXJyb3Igb2NjdXJzKS5cbiAgICAgKi9cbiAgICBBY2NvdW50Q2xpZW50LnByb3RvdHlwZS5yZXF1ZXN0RGF0YVJlbW92YWwgPSBmdW5jdGlvbiAob3B0aW9ucywgY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3RXaXRoQm9keShtb2RlbHNfMS5DbGllbnRPcHRpb25zLkh0dHBNZXRob2QuUE9TVCwgXCIvZGF0YS1yZW1vdmFsc1wiLCBvcHRpb25zLCBjYWxsYmFjayk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXRyaWV2ZSBhIHNpbmdsZSBkYXRhIHJlbW92YWwgc3RhdHVzIGJ5IElELlxuICAgICAqXG4gICAgICogQHBhcmFtIGlkIC0gVGhlIElEIG9mIHRoZSBEYXRhUmVtb3ZhbCBmb3Igd2hpY2ggeW91IHdpc2ggdG8gcmV0cmlldmUgZGV0YWlscy5cbiAgICAgKiBAcGFyYW0gY2FsbGJhY2sgLSBJZiB0aGUgY2FsbGJhY2sgaXMgcHJvdmlkZWQsIGl0IHdpbGwgYmUgcGFzc2VkIHRvIHRoZSByZXN1bHRpbmcgcHJvbWlzZSBhcyBhIGNvbnRpbnVhdGlvbi5cbiAgICAgKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCB3aWxsIGNvbXBsZXRlIHdoZW4gdGhlIEFQSSByZXNwb25kcyAob3IgYW4gZXJyb3Igb2NjdXJzKS5cbiAgICAgKi9cbiAgICBBY2NvdW50Q2xpZW50LnByb3RvdHlwZS5nZXREYXRhUmVtb3ZhbFN0YXR1cyA9IGZ1bmN0aW9uIChpZCwgY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3RXaXRob3V0Qm9keShtb2RlbHNfMS5DbGllbnRPcHRpb25zLkh0dHBNZXRob2QuR0VULCBcIi9kYXRhLXJlbW92YWxzL1wiLmNvbmNhdChpZCksIHt9LCBjYWxsYmFjayk7XG4gICAgfTtcbiAgICByZXR1cm4gQWNjb3VudENsaWVudDtcbn0oQmFzZUNsaWVudF8xLmRlZmF1bHQpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IEFjY291bnRDbGllbnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BY2NvdW50Q2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6WyJfX2V4dGVuZHMiLCJleHRlbmRTdGF0aWNzIiwiZCIsImIiLCJPYmplY3QiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIkFycmF5IiwicCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIlR5cGVFcnJvciIsIlN0cmluZyIsIl9fIiwiY29uc3RydWN0b3IiLCJjcmVhdGUiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkJhc2VDbGllbnRfMSIsInJlcXVpcmUiLCJtb2RlbHNfMSIsIm1vZGVsc18yIiwiQWNjb3VudENsaWVudCIsIl9zdXBlciIsImFjY291bnRUb2tlbiIsImNvbmZpZ09wdGlvbnMiLCJDbGllbnRPcHRpb25zIiwiQXV0aEhlYWRlck5hbWVzIiwiQUNDT1VOVF9UT0tFTiIsImdldFNlcnZlcnMiLCJmaWx0ZXIiLCJjYWxsYmFjayIsIlNlcnZlckZpbHRlcmluZ1BhcmFtZXRlcnMiLCJzZXREZWZhdWx0UGFnaW5hdGlvblZhbHVlcyIsInByb2Nlc3NSZXF1ZXN0V2l0aG91dEJvZHkiLCJIdHRwTWV0aG9kIiwiR0VUIiwiZ2V0U2VydmVyIiwiaWQiLCJjb25jYXQiLCJjcmVhdGVTZXJ2ZXIiLCJvcHRpb25zIiwicHJvY2Vzc1JlcXVlc3RXaXRoQm9keSIsIlBPU1QiLCJlZGl0U2VydmVyIiwiUFVUIiwiZGVsZXRlU2VydmVyIiwiREVMRVRFIiwiZ2V0RG9tYWlucyIsIkZpbHRlcmluZ1BhcmFtZXRlcnMiLCJnZXREb21haW4iLCJjcmVhdGVEb21haW4iLCJlZGl0RG9tYWluIiwiZGVsZXRlRG9tYWluIiwidmVyaWZ5RG9tYWluREtJTSIsInZlcmlmeURvbWFpblJldHVyblBhdGgiLCJ2ZXJpZnlEb21haW5TUEYiLCJyb3RhdGVEb21haW5ES0lNIiwiZ2V0U2VuZGVyU2lnbmF0dXJlIiwiZ2V0U2VuZGVyU2lnbmF0dXJlcyIsImNyZWF0ZVNlbmRlclNpZ25hdHVyZSIsImVkaXRTZW5kZXJTaWduYXR1cmUiLCJkZWxldGVTZW5kZXJTaWduYXR1cmUiLCJyZXNlbmRTZW5kZXJTaWduYXR1cmVDb25maXJtYXRpb24iLCJ2ZXJpZnlTZW5kZXJTaWduYXR1cmVTUEYiLCJyZXF1ZXN0TmV3REtJTUZvclNlbmRlclNpZ25hdHVyZSIsInB1c2hUZW1wbGF0ZXMiLCJyZXF1ZXN0RGF0YVJlbW92YWwiLCJnZXREYXRhUmVtb3ZhbFN0YXR1cyIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/AccountClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/BaseClient.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/BaseClient.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar ErrorHandler_1 = __webpack_require__(/*! ./errors/ErrorHandler */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/errors/ErrorHandler.js\");\nvar HttpClient_1 = __webpack_require__(/*! ./HttpClient */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/HttpClient.js\");\nvar packageJson = __webpack_require__(/*! ../../package.json */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/package.json\");\nvar CLIENT_VERSION = packageJson.version;\n/**\n * Base client class from which client classes can be implemented, in our case, AccountClient and ServerClient classes.\n * This class is NOT intended to be instantiated directly.\n */ var BaseClient = /** @class */ function() {\n    function BaseClient(token, authHeader, configOptions) {\n        this.errorHandler = new ErrorHandler_1.ErrorHandler();\n        this.verifyToken(token);\n        this.token = token.trim();\n        this.authHeader = authHeader;\n        this.clientVersion = CLIENT_VERSION;\n        this.httpClient = new HttpClient_1.AxiosHttpClient(configOptions);\n    }\n    BaseClient.prototype.setClientOptions = function(configOptions) {\n        this.httpClient.initHttpClient(configOptions);\n    };\n    BaseClient.prototype.getClientOptions = function() {\n        return this.httpClient.clientOptions;\n    };\n    /**\n     * Process http request with sending body - data.\n     *\n     * @see processRequest for more details.\n     */ BaseClient.prototype.processRequestWithBody = function(method, path, body, callback) {\n        return this.processRequest(method, path, {}, body, callback);\n    };\n    /**\n     * Process http request without sending body - data.\n     *\n     * @see processRequest for more details.\n     */ BaseClient.prototype.processRequestWithoutBody = function(method, path, queryParameters, callback) {\n        if (queryParameters === void 0) {\n            queryParameters = {};\n        }\n        return this.processRequest(method, path, queryParameters, null, callback);\n    };\n    /**\n     * Process request for Postmark ClientOptions.\n     *\n     * @param method - see processHttpRequest for details\n     * @param path - see processHttpRequest for details\n     * @param queryParameters - see processHttpRequest for details\n     * @param body - see processHttpRequest for details\n     * @param callback - callback function to be executed.\n     *\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ BaseClient.prototype.processRequest = function(method, path, queryParameters, body, callback) {\n        var httpRequest = this.processHttpRequest(method, path, queryParameters, body);\n        this.processCallbackRequest(httpRequest, callback);\n        return httpRequest;\n    };\n    /**\n     * Process HTTP request.\n     *\n     * @param method - Which type of http request will be executed.\n     * @param path - API URL endpoint.\n     * @param queryParameters - Querystring parameters used for http request.\n     * @param body - Data sent with http request.\n     *\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ BaseClient.prototype.processHttpRequest = function(method, path, queryParameters, body) {\n        return this.httpClient.httpRequest(method, path, queryParameters, body, this.getComposedHttpRequestHeaders()).then(function(response) {\n            return response;\n        }).catch(function(error) {\n            return Promise.reject(error);\n        });\n    };\n    /**\n     * Process callback function for HTTP request.\n     *\n     * @param httpRequest - HTTP request for which callback will be executed\n     * @param callback - callback function to be executed.\n     */ BaseClient.prototype.processCallbackRequest = function(httpRequest, callback) {\n        if (callback) {\n            httpRequest.then(function(response) {\n                return callback(null, response);\n            }).catch(function(error) {\n                return callback(error, null);\n            });\n        }\n    };\n    /**\n     * JSON object with default headers sent by HTTP request.\n     */ BaseClient.prototype.getComposedHttpRequestHeaders = function() {\n        var _a;\n        return _a = {}, _a[this.authHeader] = this.token, _a[\"Accept\"] = \"application/json\", _a[\"Content-Type\"] = \"application/json\", _a[\"User-Agent\"] = \"Postmark.JS - \".concat(this.clientVersion), _a;\n    };\n    /**\n     * Token can't be empty.\n     *\n     * @param {string} token - HTTP request token\n     */ BaseClient.prototype.verifyToken = function(token) {\n        if (!token || token.trim() === \"\") {\n            throw this.errorHandler.buildError(\"A valid API token must be provided.\");\n        }\n    };\n    /**\n     * Set default values for count and offset when doing filtering with API requests if they are not specified by filter.\n     */ BaseClient.prototype.setDefaultPaginationValues = function(filter) {\n        filter.count = filter.count || 100;\n        filter.offset = filter.offset || 0;\n    };\n    return BaseClient;\n}();\nexports[\"default\"] = BaseClient; //# sourceMappingURL=BaseClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/BaseClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/HttpClient.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/HttpClient.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.AxiosHttpClient = void 0;\nvar axios_1 = __webpack_require__(/*! axios */ \"(rsc)/./node_modules/.pnpm/axios@1.7.7/node_modules/axios/dist/node/axios.cjs\");\nvar models_1 = __webpack_require__(/*! ./models */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/index.js\");\nvar index_1 = __webpack_require__(/*! ./errors/index */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/errors/index.js\");\nvar AxiosHttpClient = /** @class */ function(_super) {\n    __extends(AxiosHttpClient, _super);\n    function AxiosHttpClient(configOptions) {\n        var _this = _super.call(this, configOptions) || this;\n        _this.errorHandler = new index_1.ErrorHandler();\n        return _this;\n    }\n    /**\n     * Create http client instance with default settings.\n     *\n     * @return {AxiosInstance}\n     */ AxiosHttpClient.prototype.initHttpClient = function(configOptions) {\n        this.clientOptions = __assign(__assign({}, models_1.HttpClient.DefaultOptions), configOptions);\n        var httpClient = axios_1.default.create({\n            baseURL: this.getBaseHttpRequestURL(),\n            timeout: this.getRequestTimeoutInMilliseconds(),\n            responseType: \"json\",\n            maxContentLength: Infinity,\n            maxBodyLength: Infinity,\n            validateStatus: function(status) {\n                return status >= 200 && status < 300;\n            }\n        });\n        httpClient.interceptors.response.use(function(response) {\n            return response.data;\n        });\n        this.client = httpClient;\n    };\n    /**\n     * Process http request.\n     *\n     * @param method - Which type of http request will be executed.\n     * @param path - API URL endpoint.\n     * @param queryParameters - Querystring parameters used for http request.\n     * @param body - Data sent with http request.\n     */ AxiosHttpClient.prototype.httpRequest = function(method, path, queryParameters, body, requestHeaders) {\n        var _this = this;\n        return this.client.request({\n            method: method,\n            url: path,\n            data: body,\n            headers: requestHeaders,\n            params: queryParameters\n        }).catch(function(errorThrown) {\n            return Promise.reject(_this.transformError(errorThrown));\n        });\n    };\n    /**\n     * Process callback function for HTTP request.\n     *\n     * @param error - request error that needs to be transformed to proper Postmark error.\n     *\n     * @return {PostmarkError} - formatted Postmark error\n     */ AxiosHttpClient.prototype.transformError = function(errorThrown) {\n        var response = errorThrown.response;\n        if (response !== undefined) {\n            var status_1 = this.adjustValue(0, response.status);\n            var errorCode = this.adjustValue(0, response.data.ErrorCode);\n            var message = this.adjustValue(errorThrown.message, response.data.Message);\n            return this.errorHandler.buildError(message, errorCode, status_1);\n        } else if (errorThrown.message !== undefined) {\n            return this.errorHandler.buildError(errorThrown.message);\n        } else {\n            return this.errorHandler.buildError(JSON.stringify(errorThrown, Object.getOwnPropertyNames(errorThrown)));\n        }\n    };\n    /**\n     * Timeout in seconds is adjusted to Axios format.\n     *\n     * @private\n     */ AxiosHttpClient.prototype.getRequestTimeoutInMilliseconds = function() {\n        return (this.clientOptions.timeout || 60) * 1000;\n    };\n    AxiosHttpClient.prototype.adjustValue = function(defaultValue, data) {\n        return data === undefined ? defaultValue : data;\n    };\n    return AxiosHttpClient;\n}(models_1.HttpClient);\nexports.AxiosHttpClient = AxiosHttpClient; //# sourceMappingURL=HttpClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/HttpClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/ServerClient.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/ServerClient.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar BaseClient_1 = __webpack_require__(/*! ./BaseClient */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/BaseClient.js\");\nvar index_1 = __webpack_require__(/*! ./models/index */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/index.js\");\nvar index_2 = __webpack_require__(/*! ./models/index */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/index.js\");\n/**\n * Server client class that can be used to interact with an individual Postmark Server.\n */ var ServerClient = /** @class */ function(_super) {\n    __extends(ServerClient, _super);\n    /**\n     * Create a client.\n     *\n     * @param serverToken - The token for the server that you wish to interact with.\n     * @param configOptions - Options to customize the behavior of the this client.\n     */ function ServerClient(serverToken, configOptions) {\n        return _super.call(this, serverToken, index_1.ClientOptions.AuthHeaderNames.SERVER_TOKEN, configOptions) || this;\n    }\n    /** Send a single email message.\n     *\n     * @param email - Email message to send.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.sendEmail = function(email, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/email\", email, callback);\n    };\n    /**\n     * Send a batch of email messages.\n     *\n     * @param emails - An array of messages to send.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.sendEmailBatch = function(emails, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/email/batch\", emails, callback);\n    };\n    /**\n     * Send a message using a template.\n     *\n     * @param template - Message you wish to send.\n     * @param callback If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.sendEmailWithTemplate = function(template, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/email/withTemplate\", template, callback);\n    };\n    /**\n     * Send a batch of template email messages.\n     *\n     * @param templates - An array of templated messages you wish to send using this Client.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.sendEmailBatchWithTemplates = function(templates, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/email/batchWithTemplates\", {\n            Messages: templates\n        }, callback);\n    };\n    /**\n     * Get bounce statistic information for the associated Server.\n     *\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getDeliveryStatistics = function(callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/deliveryStats\", {}, callback);\n    };\n    /**\n     * Get a batch of bounces.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getBounces = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.BounceFilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/bounces\", filter, callback);\n    };\n    /**\n     * Get details for a specific Bounce.\n     *\n     * @param id - The ID of the Bounce you wish to retrieve.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getBounce = function(id, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/bounces/\".concat(id), {}, callback);\n    };\n    /**\n     * Get a Bounce Dump for a specific Bounce.\n     *\n     * @param id - The ID of the Bounce for which you wish to retrieve Bounce Dump.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getBounceDump = function(id, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/bounces/\".concat(id, \"/dump\"), {}, callback);\n    };\n    /**\n     * Activate email address that was deactivated due to a Bounce.\n     *\n     * @param id - The ID of the Bounce for which you wish to activate the associated email.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.activateBounce = function(id, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.PUT, \"/bounces/\".concat(id, \"/activate\"), {}, callback);\n    };\n    /**\n     * Get the list of templates associated with this server.\n     *\n     * @param filter - Optional filtering options.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getTemplates = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.TemplateFilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/templates\", filter, callback);\n    };\n    /**\n     * Get the a specific template associated with this server.\n     *\n     * @param idOrAlias - ID or alias for the template you wish to retrieve.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getTemplate = function(idOrAlias, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/templates/\".concat(idOrAlias), {}, callback);\n    };\n    /**\n     * Delete a template associated with this server.\n     *\n     * @param idOrAlias - ID or template alias you wish to delete.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.deleteTemplate = function(idOrAlias, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.DELETE, \"/templates/\".concat(idOrAlias), {}, callback);\n    };\n    /**\n     * Create a new template on the associated server.\n     *\n     * @param options - Configuration options to be used to create the Template.\n     * @param callback If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.createTemplate = function(options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/templates/\", options, callback);\n    };\n    /**\n     * Update a template on the associated server.\n     *\n     * @param idOrAlias - Id or alias of the template you wish to update.\n     * @param options - Template options you wish to update.\n     * @param callback If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.editTemplate = function(idOrAlias, options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.PUT, \"/templates/\".concat(idOrAlias), options, callback);\n    };\n    /**\n     * Validate template markup to verify that it will be parsed. Also provides a recommended template\n     * model to be used when sending using the specified template content.\n     *\n     * @param options - The template content you wish to validate.\n     * @param callback If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.validateTemplate = function(options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/templates/validate\", options, callback);\n    };\n    /**\n     * Get the information for the Server associated with this Client.\n     *\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getServer = function(callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/server\", {}, callback);\n    };\n    /**\n     * Modify the Server associated with this Client.\n     *\n     * @param options - The options you wish to modify.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.editServer = function(options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.PUT, \"/server\", options, callback);\n    };\n    /**\n     * Get a batch of Outbound Messages.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getOutboundMessages = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.OutboundMessagesFilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/messages/outbound\", filter, callback);\n    };\n    /**\n     * Get details for a specific Outbound Message.\n     *\n     * @param messageId - The ID of the OutboundMessage you wish to retrieve.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getOutboundMessageDetails = function(messageId, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/messages/outbound/\".concat(messageId), {}, callback);\n    };\n    /**\n     * Get details for a specific Outbound Message.\n     *\n     * @param messageId - The ID of the OutboundMessage you wish to retrieve.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getOutboundMessageDump = function(messageId, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/messages/outbound/\".concat(messageId, \"/dump\"), {}, callback);\n    };\n    /**\n     * Get a batch of Inbound Messages.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getInboundMessages = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.InboundMessagesFilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/messages/inbound\", filter, callback);\n    };\n    /**\n     * Get details for a specific Inbound Message.\n     *\n     * @param messageId - The ID of the Inbound Message you wish to retrieve.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getInboundMessageDetails = function(messageId, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/messages/inbound/\".concat(messageId, \"/details\"), {}, callback);\n    };\n    /**\n     * Cause an Inbound Message to bypass filtering rules defined on this Client's associated Server.\n     *\n     * @param messageId - The ID of the Inbound Message for which you wish to bypass the filtering rules.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.bypassBlockedInboundMessage = function(messageId, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.PUT, \"/messages/inbound/\".concat(messageId, \"/bypass\"), {}, callback);\n    };\n    /**\n     * Request that Postmark retry POSTing to the Inbound Hook for the specified message.\n     *\n     * @param messageId - The ID of the Inbound Message for which you wish to retry the inbound hook.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.retryInboundHookForMessage = function(messageId, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.PUT, \"/messages/inbound/\".concat(messageId, \"/retry\"), {}, callback);\n    };\n    /**\n     * Get the Opens for Outbound Messages.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getMessageOpens = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.OutboundMessageOpensFilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/messages/outbound/opens\", filter, callback);\n    };\n    /**\n     * Get details of Opens for specific Outbound Message.\n     *\n     * @param messageId - Message ID of the message for which you wish to retrieve Opens.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getMessageOpensForSingleMessage = function(messageId, filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.OutboundMessageOpensFilteringParameters(50, 0);\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/messages/outbound/opens/\".concat(messageId), filter, callback);\n    };\n    /**\n     * Get the Clicks for Outbound Messages.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getMessageClicks = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.OutboundMessageClicksFilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/messages/outbound/clicks\", filter, callback);\n    };\n    /**\n     * Get Click information for a single Outbound Message.\n     *\n     * @param messageId - The MessageID for which clicks should be retrieved.\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getMessageClicksForSingleMessage = function(messageId, filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.OutboundMessageClicksFilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/messages/outbound/clicks/\".concat(messageId), filter, callback);\n    };\n    /**\n     * Get overview statistics on Outbound Messages sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getOutboundOverview = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound\", filter, callback);\n    };\n    /**\n     * Get statistics on email sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getSentCounts = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/sends\", filter, callback);\n    };\n    /**\n     * Get statistiscs on emails that bounced after being sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getBounceCounts = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/bounces\", filter, callback);\n    };\n    /**\n     * Get SPAM complaint statistics for email sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getSpamComplaintsCounts = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/spam\", filter, callback);\n    };\n    /**\n     * Get email tracking statistics for messages sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getTrackedEmailCounts = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/tracked\", filter, callback);\n    };\n    /**\n     * Get Open statistics for messages sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getEmailOpenCounts = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/opens\", filter, callback);\n    };\n    /**\n     * Get Email Client Platform statistics for messages sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getEmailOpenPlatformUsage = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/opens/platforms\", filter, callback);\n    };\n    /**\n     * Get statistics on which Email Clients were used to open messages sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getEmailOpenClientUsage = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/opens/emailClients\", filter, callback);\n    };\n    /**\n     * Get Read Time statistics for messages sent from the Server associated with this Client.\n     * @param filter Optional filtering parameters.\n     * @param callback If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getEmailOpenReadTimes = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/opens/readTimes\", filter, callback);\n    };\n    /**\n     * Get total clicks statistics for tracked links for messages sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getClickCounts = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/clicks\", filter, callback);\n    };\n    /**\n     * Get browser family statistics for tracked links for messages sent from the Server associated with this Client.\n     * @param filter Optional filtering parameters.\n     * @param callback If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getClickBrowserUsage = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/clicks/browserFamilies\", filter, callback);\n    };\n    /**\n     * Get browser platform statistics for tracked links for messages sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getClickPlatformUsage = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/clicks/platforms\", filter, callback);\n    };\n    /**\n     * Get click location (in HTML or Text body of the email) statistics for tracked links for messages sent\n     * from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getClickLocation = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/clicks/location\", filter, callback);\n    };\n    /**\n     * Create an Inbound Rule Trigger.\n     *\n     * @param options - Configuration options to be used when creating this Trigger.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.createInboundRuleTrigger = function(options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/triggers/inboundRules\", options, callback);\n    };\n    /**\n     * Delete an Inbound Rule Trigger.\n     *\n     * @param id - The ID of the Inbound Rule Trigger you wish to delete.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.deleteInboundRuleTrigger = function(id, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.DELETE, \"/triggers/inboundRules/\".concat(id), {}, callback);\n    };\n    /**\n     * Get a list of Inbound Rule Triggers.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getInboundRuleTriggers = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_1.FilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/triggers/inboundRules\", filter, callback);\n    };\n    /**\n     * Get the list of Webhooks for specific server.\n     *\n     * @param filter - Optional filtering parameters\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getWebhooks = function(filter, callback) {\n        if (filter === void 0) {\n            filter = {};\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/webhooks\", filter, callback);\n    };\n    /**\n     * Get details for a specific Webhook.\n     *\n     * @param id - The ID of the Webhook you wish to retrieve.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getWebhook = function(id, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/webhooks/\".concat(id), {}, callback);\n    };\n    /**\n     * Create a Webhook on the associated server.\n     *\n     * @param options - Configuration options to be used when creating Webhook trigger.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.createWebhook = function(options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/webhooks\", options, callback);\n    };\n    /**\n     * Update Webhook on the associated server.\n     *\n     * @param id - Id of the webhook you wish to update.\n     * @param options - Webhook options you wish to update.\n     * @param callback If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.editWebhook = function(id, options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.PUT, \"/webhooks/\".concat(id), options, callback);\n    };\n    /**\n     * Delete an existing Webhook.\n     *\n     * @param id - The ID of the Webhook you wish to delete.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.deleteWebhook = function(id, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.DELETE, \"/webhooks/\".concat(id), {}, callback);\n    };\n    /**\n     * Get the list of message streams on a server.\n     *\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getMessageStreams = function(filter, callback) {\n        if (filter === void 0) {\n            filter = {};\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/message-streams\", filter, callback);\n    };\n    /**\n     * Get details for a specific message stream on a server.\n     *\n     * @param id - The ID of the message stream you wish to retrieve.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getMessageStream = function(id, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/message-streams/\".concat(id), {}, callback);\n    };\n    /**\n     * Update message stream on the associated server.\n     *\n     * @param id - Id of the webhook you wish to update.\n     * @param options - Webhook options you wish to update.\n     * @param callback If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.editMessageStream = function(id, options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.PATCH, \"/message-streams/\".concat(id), options, callback);\n    };\n    /**\n     * Create a message stream on the associated server.\n     *\n     * @param options - Configuration options to be used when creating message stream on the server.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.createMessageStream = function(options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/message-streams\", options, callback);\n    };\n    /**\n     * Archive a message stream on the associated server.\n     *\n     * @param options - Configuration options to be used when creating message stream on the server.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.archiveMessageStream = function(id, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/message-streams/\".concat(id, \"/archive\"), {}, callback);\n    };\n    /**\n     * Unarchive a message stream on the associated server.\n     *\n     * @param options - Configuration options to be used when creating message stream on the server.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.unarchiveMessageStream = function(id, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/message-streams/\".concat(id, \"/unarchive\"), {}, callback);\n    };\n    /**\n     * Get the list of suppressions for a message stream on a server.\n     *\n     * @param messageStream - Select message stream\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getSuppressions = function(messageStream, filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.SuppressionFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/message-streams/\".concat(messageStream, \"/suppressions/dump\"), filter, callback);\n    };\n    /**\n     * Add email addresses to a suppressions list on a message stream on a server.\n     *\n     * @param messageStream - Select message stream\n     * @param options - Suppressions you wish to add.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.createSuppressions = function(messageStream, options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/message-streams/\".concat(messageStream, \"/suppressions\"), options, callback);\n    };\n    /**\n     * Delete email addresses from a suppressions list on a message stream on a server.\n     *\n     * @param messageStream - Select message stream\n     * @param options - Suppressions you wish to delete.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.deleteSuppressions = function(messageStream, options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/message-streams/\".concat(messageStream, \"/suppressions/delete\"), options, callback);\n    };\n    return ServerClient;\n}(BaseClient_1.default);\nexports[\"default\"] = ServerClient; //# sourceMappingURL=ServerClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/ServerClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/errors/ErrorHandler.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/errors/ErrorHandler.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ErrorHandler = void 0;\nvar Errors = __webpack_require__(/*! ./Errors */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/errors/Errors.js\");\n/**\n * Handles general errors and all client request errors.\n * Client response errors are classified so that proper response error is generated.\n */ var ErrorHandler = /** @class */ function() {\n    function ErrorHandler() {}\n    /**\n     * Build general Postmark error.\n     *\n     * @param errorMessage - error message that needs to be identified and transformed to proper Postmark error.\n     *\n     * @returns properly formatted Postmark error.\n     */ ErrorHandler.prototype.buildError = function(errorMessage, code, statusCode) {\n        if (code === void 0) {\n            code = 0;\n        }\n        if (statusCode === void 0) {\n            statusCode = 0;\n        }\n        if (statusCode === 0 && code === 0) {\n            return new Errors.PostmarkError(errorMessage);\n        } else {\n            return this.buildErrorByHttpStatusCode(errorMessage, code, statusCode);\n        }\n    };\n    /**\n     * Build Postmark error based on HTTP request status.\n     *\n     * @param error - http request library error, that will be transformed to Postmark error.\n     *\n     * @returns properly formatted Postmark error.\n     */ ErrorHandler.prototype.buildErrorByHttpStatusCode = function(errorMessage, errorCode, errorStatusCode) {\n        switch(errorStatusCode){\n            case 401:\n                return new Errors.InvalidAPIKeyError(errorMessage, errorCode, errorStatusCode);\n            case 404:\n                return new Errors.PostmarkError(errorMessage, errorCode, errorStatusCode);\n            case 422:\n                return Errors.ApiInputError.buildSpecificError(errorMessage, errorCode, errorStatusCode);\n            case 429:\n                return new Errors.RateLimitExceededError(errorMessage, errorCode, errorStatusCode);\n            case 500:\n                return new Errors.InternalServerError(errorMessage, errorCode, errorStatusCode);\n            case 503:\n                return new Errors.ServiceUnavailablerError(errorMessage, errorCode, errorStatusCode);\n            default:\n                return new Errors.UnknownError(errorMessage, errorCode, errorStatusCode);\n        }\n    };\n    return ErrorHandler;\n}();\nexports.ErrorHandler = ErrorHandler; //# sourceMappingURL=ErrorHandler.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L2Vycm9ycy9FcnJvckhhbmRsZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELG9CQUFvQixHQUFHLEtBQUs7QUFDNUIsSUFBSUcsU0FBU0MsbUJBQU9BLENBQUMsOEdBQVU7QUFDL0I7OztDQUdDLEdBQ0QsSUFBSUYsZUFBZSxXQUFXLEdBQUk7SUFDOUIsU0FBU0EsZ0JBQ1Q7SUFDQTs7Ozs7O0tBTUMsR0FDREEsYUFBYUcsU0FBUyxDQUFDQyxVQUFVLEdBQUcsU0FBVUMsWUFBWSxFQUFFQyxJQUFJLEVBQUVDLFVBQVU7UUFDeEUsSUFBSUQsU0FBUyxLQUFLLEdBQUc7WUFBRUEsT0FBTztRQUFHO1FBQ2pDLElBQUlDLGVBQWUsS0FBSyxHQUFHO1lBQUVBLGFBQWE7UUFBRztRQUM3QyxJQUFJQSxlQUFlLEtBQUtELFNBQVMsR0FBRztZQUNoQyxPQUFPLElBQUlMLE9BQU9PLGFBQWEsQ0FBQ0g7UUFDcEMsT0FDSztZQUNELE9BQU8sSUFBSSxDQUFDSSwwQkFBMEIsQ0FBQ0osY0FBY0MsTUFBTUM7UUFDL0Q7SUFDSjtJQUNBOzs7Ozs7S0FNQyxHQUNEUCxhQUFhRyxTQUFTLENBQUNNLDBCQUEwQixHQUFHLFNBQVVKLFlBQVksRUFBRUssU0FBUyxFQUFFQyxlQUFlO1FBQ2xHLE9BQVFBO1lBQ0osS0FBSztnQkFDRCxPQUFPLElBQUlWLE9BQU9XLGtCQUFrQixDQUFDUCxjQUFjSyxXQUFXQztZQUNsRSxLQUFLO2dCQUNELE9BQU8sSUFBSVYsT0FBT08sYUFBYSxDQUFDSCxjQUFjSyxXQUFXQztZQUM3RCxLQUFLO2dCQUNELE9BQU9WLE9BQU9ZLGFBQWEsQ0FBQ0Msa0JBQWtCLENBQUNULGNBQWNLLFdBQVdDO1lBQzVFLEtBQUs7Z0JBQ0QsT0FBTyxJQUFJVixPQUFPYyxzQkFBc0IsQ0FBQ1YsY0FBY0ssV0FBV0M7WUFDdEUsS0FBSztnQkFDRCxPQUFPLElBQUlWLE9BQU9lLG1CQUFtQixDQUFDWCxjQUFjSyxXQUFXQztZQUNuRSxLQUFLO2dCQUNELE9BQU8sSUFBSVYsT0FBT2dCLHdCQUF3QixDQUFDWixjQUFjSyxXQUFXQztZQUN4RTtnQkFDSSxPQUFPLElBQUlWLE9BQU9pQixZQUFZLENBQUNiLGNBQWNLLFdBQVdDO1FBQ2hFO0lBQ0o7SUFDQSxPQUFPWDtBQUNYO0FBQ0FGLG9CQUFvQixHQUFHRSxjQUN2Qix3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy8ucG5wbS9wb3N0bWFya0A0LjAuNS9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvZXJyb3JzL0Vycm9ySGFuZGxlci5qcz8zZTE1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5FcnJvckhhbmRsZXIgPSB2b2lkIDA7XG52YXIgRXJyb3JzID0gcmVxdWlyZShcIi4vRXJyb3JzXCIpO1xuLyoqXG4gKiBIYW5kbGVzIGdlbmVyYWwgZXJyb3JzIGFuZCBhbGwgY2xpZW50IHJlcXVlc3QgZXJyb3JzLlxuICogQ2xpZW50IHJlc3BvbnNlIGVycm9ycyBhcmUgY2xhc3NpZmllZCBzbyB0aGF0IHByb3BlciByZXNwb25zZSBlcnJvciBpcyBnZW5lcmF0ZWQuXG4gKi9cbnZhciBFcnJvckhhbmRsZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gRXJyb3JIYW5kbGVyKCkge1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBCdWlsZCBnZW5lcmFsIFBvc3RtYXJrIGVycm9yLlxuICAgICAqXG4gICAgICogQHBhcmFtIGVycm9yTWVzc2FnZSAtIGVycm9yIG1lc3NhZ2UgdGhhdCBuZWVkcyB0byBiZSBpZGVudGlmaWVkIGFuZCB0cmFuc2Zvcm1lZCB0byBwcm9wZXIgUG9zdG1hcmsgZXJyb3IuXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBwcm9wZXJseSBmb3JtYXR0ZWQgUG9zdG1hcmsgZXJyb3IuXG4gICAgICovXG4gICAgRXJyb3JIYW5kbGVyLnByb3RvdHlwZS5idWlsZEVycm9yID0gZnVuY3Rpb24gKGVycm9yTWVzc2FnZSwgY29kZSwgc3RhdHVzQ29kZSkge1xuICAgICAgICBpZiAoY29kZSA9PT0gdm9pZCAwKSB7IGNvZGUgPSAwOyB9XG4gICAgICAgIGlmIChzdGF0dXNDb2RlID09PSB2b2lkIDApIHsgc3RhdHVzQ29kZSA9IDA7IH1cbiAgICAgICAgaWYgKHN0YXR1c0NvZGUgPT09IDAgJiYgY29kZSA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBFcnJvcnMuUG9zdG1hcmtFcnJvcihlcnJvck1lc3NhZ2UpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYnVpbGRFcnJvckJ5SHR0cFN0YXR1c0NvZGUoZXJyb3JNZXNzYWdlLCBjb2RlLCBzdGF0dXNDb2RlKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgLyoqXG4gICAgICogQnVpbGQgUG9zdG1hcmsgZXJyb3IgYmFzZWQgb24gSFRUUCByZXF1ZXN0IHN0YXR1cy5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBlcnJvciAtIGh0dHAgcmVxdWVzdCBsaWJyYXJ5IGVycm9yLCB0aGF0IHdpbGwgYmUgdHJhbnNmb3JtZWQgdG8gUG9zdG1hcmsgZXJyb3IuXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBwcm9wZXJseSBmb3JtYXR0ZWQgUG9zdG1hcmsgZXJyb3IuXG4gICAgICovXG4gICAgRXJyb3JIYW5kbGVyLnByb3RvdHlwZS5idWlsZEVycm9yQnlIdHRwU3RhdHVzQ29kZSA9IGZ1bmN0aW9uIChlcnJvck1lc3NhZ2UsIGVycm9yQ29kZSwgZXJyb3JTdGF0dXNDb2RlKSB7XG4gICAgICAgIHN3aXRjaCAoZXJyb3JTdGF0dXNDb2RlKSB7XG4gICAgICAgICAgICBjYXNlIDQwMTpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IEVycm9ycy5JbnZhbGlkQVBJS2V5RXJyb3IoZXJyb3JNZXNzYWdlLCBlcnJvckNvZGUsIGVycm9yU3RhdHVzQ29kZSk7XG4gICAgICAgICAgICBjYXNlIDQwNDpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IEVycm9ycy5Qb3N0bWFya0Vycm9yKGVycm9yTWVzc2FnZSwgZXJyb3JDb2RlLCBlcnJvclN0YXR1c0NvZGUpO1xuICAgICAgICAgICAgY2FzZSA0MjI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIEVycm9ycy5BcGlJbnB1dEVycm9yLmJ1aWxkU3BlY2lmaWNFcnJvcihlcnJvck1lc3NhZ2UsIGVycm9yQ29kZSwgZXJyb3JTdGF0dXNDb2RlKTtcbiAgICAgICAgICAgIGNhc2UgNDI5OlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgRXJyb3JzLlJhdGVMaW1pdEV4Y2VlZGVkRXJyb3IoZXJyb3JNZXNzYWdlLCBlcnJvckNvZGUsIGVycm9yU3RhdHVzQ29kZSk7XG4gICAgICAgICAgICBjYXNlIDUwMDpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IEVycm9ycy5JbnRlcm5hbFNlcnZlckVycm9yKGVycm9yTWVzc2FnZSwgZXJyb3JDb2RlLCBlcnJvclN0YXR1c0NvZGUpO1xuICAgICAgICAgICAgY2FzZSA1MDM6XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBFcnJvcnMuU2VydmljZVVuYXZhaWxhYmxlckVycm9yKGVycm9yTWVzc2FnZSwgZXJyb3JDb2RlLCBlcnJvclN0YXR1c0NvZGUpO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IEVycm9ycy5Vbmtub3duRXJyb3IoZXJyb3JNZXNzYWdlLCBlcnJvckNvZGUsIGVycm9yU3RhdHVzQ29kZSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBFcnJvckhhbmRsZXI7XG59KCkpO1xuZXhwb3J0cy5FcnJvckhhbmRsZXIgPSBFcnJvckhhbmRsZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1FcnJvckhhbmRsZXIuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiRXJyb3JIYW5kbGVyIiwiRXJyb3JzIiwicmVxdWlyZSIsInByb3RvdHlwZSIsImJ1aWxkRXJyb3IiLCJlcnJvck1lc3NhZ2UiLCJjb2RlIiwic3RhdHVzQ29kZSIsIlBvc3RtYXJrRXJyb3IiLCJidWlsZEVycm9yQnlIdHRwU3RhdHVzQ29kZSIsImVycm9yQ29kZSIsImVycm9yU3RhdHVzQ29kZSIsIkludmFsaWRBUElLZXlFcnJvciIsIkFwaUlucHV0RXJyb3IiLCJidWlsZFNwZWNpZmljRXJyb3IiLCJSYXRlTGltaXRFeGNlZWRlZEVycm9yIiwiSW50ZXJuYWxTZXJ2ZXJFcnJvciIsIlNlcnZpY2VVbmF2YWlsYWJsZXJFcnJvciIsIlVua25vd25FcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/errors/ErrorHandler.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/errors/Errors.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/errors/Errors.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.InvalidEmailRequestError = exports.InactiveRecipientsError = exports.ApiInputError = exports.UnknownError = exports.RateLimitExceededError = exports.ServiceUnavailablerError = exports.InternalServerError = exports.InvalidAPIKeyError = exports.HttpError = exports.PostmarkError = void 0;\n/**\n * Standard Postmark error on which all sub-errors are based.\n */ var PostmarkError = /** @class */ function(_super) {\n    __extends(PostmarkError, _super);\n    function PostmarkError(message, code, statusCode) {\n        if (code === void 0) {\n            code = 0;\n        }\n        if (statusCode === void 0) {\n            statusCode = 0;\n        }\n        var _this = _super.call(this, message) || this;\n        _this.statusCode = statusCode;\n        _this.code = code;\n        // this is mandatory due:\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(_this, PostmarkError.prototype);\n        _this.setUpStackTrace();\n        return _this;\n    }\n    PostmarkError.prototype.setUpStackTrace = function() {\n        this.name = this.constructor.name;\n        Error.captureStackTrace(this, this.constructor);\n    };\n    return PostmarkError;\n}(Error);\nexports.PostmarkError = PostmarkError;\nvar HttpError = /** @class */ function(_super) {\n    __extends(HttpError, _super);\n    function HttpError(message, code, statusCode) {\n        var _this = _super.call(this, message, code, statusCode) || this;\n        Object.setPrototypeOf(_this, HttpError.prototype);\n        _this.setUpStackTrace();\n        return _this;\n    }\n    return HttpError;\n}(PostmarkError);\nexports.HttpError = HttpError;\nvar InvalidAPIKeyError = /** @class */ function(_super) {\n    __extends(InvalidAPIKeyError, _super);\n    function InvalidAPIKeyError(message, code, statusCode) {\n        var _this = _super.call(this, message, code, statusCode) || this;\n        Object.setPrototypeOf(_this, InvalidAPIKeyError.prototype);\n        _this.setUpStackTrace();\n        return _this;\n    }\n    return InvalidAPIKeyError;\n}(HttpError);\nexports.InvalidAPIKeyError = InvalidAPIKeyError;\nvar InternalServerError = /** @class */ function(_super) {\n    __extends(InternalServerError, _super);\n    function InternalServerError(message, code, statusCode) {\n        var _this = _super.call(this, message, code, statusCode) || this;\n        Object.setPrototypeOf(_this, InternalServerError.prototype);\n        _this.setUpStackTrace();\n        return _this;\n    }\n    return InternalServerError;\n}(HttpError);\nexports.InternalServerError = InternalServerError;\nvar ServiceUnavailablerError = /** @class */ function(_super) {\n    __extends(ServiceUnavailablerError, _super);\n    function ServiceUnavailablerError(message, code, statusCode) {\n        var _this = _super.call(this, message, code, statusCode) || this;\n        Object.setPrototypeOf(_this, ServiceUnavailablerError.prototype);\n        _this.setUpStackTrace();\n        return _this;\n    }\n    return ServiceUnavailablerError;\n}(HttpError);\nexports.ServiceUnavailablerError = ServiceUnavailablerError;\nvar RateLimitExceededError = /** @class */ function(_super) {\n    __extends(RateLimitExceededError, _super);\n    function RateLimitExceededError(message, code, statusCode) {\n        var _this = _super.call(this, message, code, statusCode) || this;\n        Object.setPrototypeOf(_this, RateLimitExceededError.prototype);\n        _this.setUpStackTrace();\n        return _this;\n    }\n    return RateLimitExceededError;\n}(HttpError);\nexports.RateLimitExceededError = RateLimitExceededError;\nvar UnknownError = /** @class */ function(_super) {\n    __extends(UnknownError, _super);\n    function UnknownError(message, code, statusCode) {\n        var _this = _super.call(this, message, code, statusCode) || this;\n        Object.setPrototypeOf(_this, UnknownError.prototype);\n        _this.setUpStackTrace();\n        return _this;\n    }\n    return UnknownError;\n}(HttpError);\nexports.UnknownError = UnknownError;\nvar ApiInputError = /** @class */ function(_super) {\n    __extends(ApiInputError, _super);\n    function ApiInputError(message, code, statusCode) {\n        var _this = _super.call(this, message, code, statusCode) || this;\n        Object.setPrototypeOf(_this, ApiInputError.prototype);\n        _this.setUpStackTrace();\n        return _this;\n    }\n    ApiInputError.buildSpecificError = function(message, code, statusCode) {\n        switch(code){\n            case this.ERROR_CODES.inactiveRecipient:\n                return new InactiveRecipientsError(message, code, statusCode);\n            case this.ERROR_CODES.invalidEmailRequest:\n                return new InvalidEmailRequestError(message, code, statusCode);\n            default:\n                return new ApiInputError(message, code, statusCode);\n        }\n    };\n    ApiInputError.ERROR_CODES = {\n        inactiveRecipient: 406,\n        invalidEmailRequest: 300\n    };\n    return ApiInputError;\n}(HttpError);\nexports.ApiInputError = ApiInputError;\nvar InactiveRecipientsError = /** @class */ function(_super) {\n    __extends(InactiveRecipientsError, _super);\n    function InactiveRecipientsError(message, code, statusCode) {\n        var _this = _super.call(this, message, code, statusCode) || this;\n        Object.setPrototypeOf(_this, InactiveRecipientsError.prototype);\n        _this.setUpStackTrace();\n        _this.recipients = InactiveRecipientsError.parseInactiveRecipients(message);\n        return _this;\n    }\n    InactiveRecipientsError.parseInactiveRecipients = function(message) {\n        var result = [];\n        this.inactiveRecipientsPatterns.some(function(pattern) {\n            var regexResult = message.match(pattern);\n            if (regexResult !== null) {\n                result = regexResult[1].split(\",\").map(function(element) {\n                    return element.trim();\n                });\n                return result;\n            } else {\n                result = [];\n            }\n        });\n        return result;\n    };\n    InactiveRecipientsError.inactiveRecipientsPatterns = [\n        /Found inactive addresses: (.+?)\\.? Inactive/,\n        /these inactive addresses: (.+?)\\.?$/\n    ];\n    return InactiveRecipientsError;\n}(ApiInputError);\nexports.InactiveRecipientsError = InactiveRecipientsError;\nvar InvalidEmailRequestError = /** @class */ function(_super) {\n    __extends(InvalidEmailRequestError, _super);\n    function InvalidEmailRequestError(message, code, statusCode) {\n        var _this = _super.call(this, message, code, statusCode) || this;\n        Object.setPrototypeOf(_this, InvalidEmailRequestError.prototype);\n        _this.setUpStackTrace();\n        return _this;\n    }\n    return InvalidEmailRequestError;\n}(ApiInputError);\nexports.InvalidEmailRequestError = InvalidEmailRequestError; //# sourceMappingURL=Errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/errors/Errors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/errors/index.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/errors/index.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./ErrorHandler */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/errors/ErrorHandler.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Errors */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/errors/Errors.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L2Vycm9ycy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLGtCQUFrQixDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLGVBQWUsSUFBTUMsQ0FBQUEsT0FBT0MsTUFBTSxHQUFJLFNBQVNDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDMUYsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0IsSUFBSUcsT0FBT1AsT0FBT1Esd0JBQXdCLENBQUNMLEdBQUdDO0lBQzlDLElBQUksQ0FBQ0csUUFBUyxVQUFTQSxPQUFPLENBQUNKLEVBQUVNLFVBQVUsR0FBR0YsS0FBS0csUUFBUSxJQUFJSCxLQUFLSSxZQUFZLEdBQUc7UUFDakZKLE9BQU87WUFBRUssWUFBWTtZQUFNQyxLQUFLO2dCQUFhLE9BQU9WLENBQUMsQ0FBQ0MsRUFBRTtZQUFFO1FBQUU7SUFDOUQ7SUFDQUosT0FBT2MsY0FBYyxDQUFDWixHQUFHRyxJQUFJRTtBQUNqQyxJQUFNLFNBQVNMLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDdEIsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JGLENBQUMsQ0FBQ0csR0FBRyxHQUFHRixDQUFDLENBQUNDLEVBQUU7QUFDaEIsQ0FBQztBQUNELElBQUlXLGVBQWUsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxZQUFZLElBQUssU0FBU1osQ0FBQyxFQUFFYSxRQUFPO0lBQ2pFLElBQUssSUFBSUMsS0FBS2QsRUFBRyxJQUFJYyxNQUFNLGFBQWEsQ0FBQ2pCLE9BQU9rQixTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDSixVQUFTQyxJQUFJbEIsZ0JBQWdCaUIsVUFBU2IsR0FBR2M7QUFDM0g7QUFDQWpCLDhDQUE2QztJQUFFcUIsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RE4sYUFBYU8sbUJBQU9BLENBQUMsMEhBQWdCLEdBQUdOO0FBQ3hDRCxhQUFhTyxtQkFBT0EsQ0FBQyw4R0FBVSxHQUFHTixVQUNsQyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy8ucG5wbS9wb3N0bWFya0A0LjAuNS9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvZXJyb3JzL2luZGV4LmpzPzU2ZWEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9FcnJvckhhbmRsZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0Vycm9yc1wiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiX19jcmVhdGVCaW5kaW5nIiwiT2JqZWN0IiwiY3JlYXRlIiwibyIsIm0iLCJrIiwiazIiLCJ1bmRlZmluZWQiLCJkZXNjIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX19lc01vZHVsZSIsIndyaXRhYmxlIiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldCIsImRlZmluZVByb3BlcnR5IiwiX19leHBvcnRTdGFyIiwiZXhwb3J0cyIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJ2YWx1ZSIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/errors/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/bounces/Bounce.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/bounces/Bounce.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.BounceTypeCode = exports.BounceType = void 0;\nvar BounceType;\n(function(BounceType) {\n    BounceType[\"HardBounce\"] = \"HardBounce\";\n    BounceType[\"Transient\"] = \"Transient\";\n    BounceType[\"Unsubscribe\"] = \"Unsubscribe\";\n    BounceType[\"Subscribe\"] = \"Subscribe\";\n    BounceType[\"AutoResponder\"] = \"AutoResponder\";\n    BounceType[\"AddressChange\"] = \"AddressChange\";\n    BounceType[\"DnsError\"] = \"DnsError\";\n    BounceType[\"SpamNotification\"] = \"SpamNotification\";\n    BounceType[\"OpenRelayTest\"] = \"OpenRelayTest\";\n    BounceType[\"Unknown\"] = \"Unknown\";\n    BounceType[\"SoftBounce\"] = \"SoftBounce\";\n    BounceType[\"VirusNotification\"] = \"VirusNotification\";\n    BounceType[\"ChallengeVerification\"] = \"ChallengeVerification\";\n    BounceType[\"BadEmailAddress\"] = \"BadEmailAddress\";\n    BounceType[\"SpamComplaint\"] = \"SpamComplaint\";\n    BounceType[\"ManuallyDeactivated\"] = \"ManuallyDeactivated\";\n    BounceType[\"Unconfirmed\"] = \"Unconfirmed\";\n    BounceType[\"Blocked\"] = \"Blocked\";\n    BounceType[\"SMTPApiError\"] = \"SMTPApiError\";\n    BounceType[\"InboundError\"] = \"InboundError\";\n    BounceType[\"DMARCPolicy\"] = \"DMARCPolicy\";\n    BounceType[\"TemplateRenderingFailed\"] = \"TemplateRenderingFailed\";\n})(BounceType = exports.BounceType || (exports.BounceType = {}));\nvar BounceTypeCode;\n(function(BounceTypeCode) {\n    BounceTypeCode[BounceTypeCode[\"HardBounce\"] = 1] = \"HardBounce\";\n    BounceTypeCode[BounceTypeCode[\"Transient\"] = 2] = \"Transient\";\n    BounceTypeCode[BounceTypeCode[\"Unsubscribe\"] = 16] = \"Unsubscribe\";\n    BounceTypeCode[BounceTypeCode[\"Subscribe\"] = 32] = \"Subscribe\";\n    BounceTypeCode[BounceTypeCode[\"AutoResponder\"] = 64] = \"AutoResponder\";\n    BounceTypeCode[BounceTypeCode[\"AddressChange\"] = 128] = \"AddressChange\";\n    BounceTypeCode[BounceTypeCode[\"DnsError\"] = 256] = \"DnsError\";\n    BounceTypeCode[BounceTypeCode[\"SpamNotification\"] = 512] = \"SpamNotification\";\n    BounceTypeCode[BounceTypeCode[\"OpenRelayTest\"] = 1024] = \"OpenRelayTest\";\n    BounceTypeCode[BounceTypeCode[\"Unknown\"] = 2048] = \"Unknown\";\n    BounceTypeCode[BounceTypeCode[\"SoftBounce\"] = 4096] = \"SoftBounce\";\n    BounceTypeCode[BounceTypeCode[\"VirusNotification\"] = 8192] = \"VirusNotification\";\n    BounceTypeCode[BounceTypeCode[\"ChallengeVerification\"] = 16384] = \"ChallengeVerification\";\n    BounceTypeCode[BounceTypeCode[\"BadEmailAddress\"] = 100000] = \"BadEmailAddress\";\n    BounceTypeCode[BounceTypeCode[\"SpamComplaint\"] = 100001] = \"SpamComplaint\";\n    BounceTypeCode[BounceTypeCode[\"ManuallyDeactivated\"] = 100002] = \"ManuallyDeactivated\";\n    BounceTypeCode[BounceTypeCode[\"Unconfirmed\"] = 100003] = \"Unconfirmed\";\n    BounceTypeCode[BounceTypeCode[\"Blocked\"] = 100006] = \"Blocked\";\n    BounceTypeCode[BounceTypeCode[\"SMTPApiError\"] = 100007] = \"SMTPApiError\";\n    BounceTypeCode[BounceTypeCode[\"InboundError\"] = 100008] = \"InboundError\";\n    BounceTypeCode[BounceTypeCode[\"DMARCPolicy\"] = 100009] = \"DMARCPolicy\";\n    BounceTypeCode[BounceTypeCode[\"TemplateRenderingFailed\"] = 100010] = \"TemplateRenderingFailed\";\n})(BounceTypeCode = exports.BounceTypeCode || (exports.BounceTypeCode = {})); //# sourceMappingURL=Bounce.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9ib3VuY2VzL0JvdW5jZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsc0JBQXNCLEdBQUdBLGtCQUFrQixHQUFHLEtBQUs7QUFDbkQsSUFBSUc7QUFDSCxVQUFVQSxVQUFVO0lBQ2pCQSxVQUFVLENBQUMsYUFBYSxHQUFHO0lBQzNCQSxVQUFVLENBQUMsWUFBWSxHQUFHO0lBQzFCQSxVQUFVLENBQUMsY0FBYyxHQUFHO0lBQzVCQSxVQUFVLENBQUMsWUFBWSxHQUFHO0lBQzFCQSxVQUFVLENBQUMsZ0JBQWdCLEdBQUc7SUFDOUJBLFVBQVUsQ0FBQyxnQkFBZ0IsR0FBRztJQUM5QkEsVUFBVSxDQUFDLFdBQVcsR0FBRztJQUN6QkEsVUFBVSxDQUFDLG1CQUFtQixHQUFHO0lBQ2pDQSxVQUFVLENBQUMsZ0JBQWdCLEdBQUc7SUFDOUJBLFVBQVUsQ0FBQyxVQUFVLEdBQUc7SUFDeEJBLFVBQVUsQ0FBQyxhQUFhLEdBQUc7SUFDM0JBLFVBQVUsQ0FBQyxvQkFBb0IsR0FBRztJQUNsQ0EsVUFBVSxDQUFDLHdCQUF3QixHQUFHO0lBQ3RDQSxVQUFVLENBQUMsa0JBQWtCLEdBQUc7SUFDaENBLFVBQVUsQ0FBQyxnQkFBZ0IsR0FBRztJQUM5QkEsVUFBVSxDQUFDLHNCQUFzQixHQUFHO0lBQ3BDQSxVQUFVLENBQUMsY0FBYyxHQUFHO0lBQzVCQSxVQUFVLENBQUMsVUFBVSxHQUFHO0lBQ3hCQSxVQUFVLENBQUMsZUFBZSxHQUFHO0lBQzdCQSxVQUFVLENBQUMsZUFBZSxHQUFHO0lBQzdCQSxVQUFVLENBQUMsY0FBYyxHQUFHO0lBQzVCQSxVQUFVLENBQUMsMEJBQTBCLEdBQUc7QUFDNUMsR0FBR0EsYUFBYUgsUUFBUUcsVUFBVSxJQUFLSCxDQUFBQSxrQkFBa0IsR0FBRyxDQUFDO0FBQzdELElBQUlFO0FBQ0gsVUFBVUEsY0FBYztJQUNyQkEsY0FBYyxDQUFDQSxjQUFjLENBQUMsYUFBYSxHQUFHLEVBQUUsR0FBRztJQUNuREEsY0FBYyxDQUFDQSxjQUFjLENBQUMsWUFBWSxHQUFHLEVBQUUsR0FBRztJQUNsREEsY0FBYyxDQUFDQSxjQUFjLENBQUMsY0FBYyxHQUFHLEdBQUcsR0FBRztJQUNyREEsY0FBYyxDQUFDQSxjQUFjLENBQUMsWUFBWSxHQUFHLEdBQUcsR0FBRztJQUNuREEsY0FBYyxDQUFDQSxjQUFjLENBQUMsZ0JBQWdCLEdBQUcsR0FBRyxHQUFHO0lBQ3ZEQSxjQUFjLENBQUNBLGNBQWMsQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLEdBQUc7SUFDeERBLGNBQWMsQ0FBQ0EsY0FBYyxDQUFDLFdBQVcsR0FBRyxJQUFJLEdBQUc7SUFDbkRBLGNBQWMsQ0FBQ0EsY0FBYyxDQUFDLG1CQUFtQixHQUFHLElBQUksR0FBRztJQUMzREEsY0FBYyxDQUFDQSxjQUFjLENBQUMsZ0JBQWdCLEdBQUcsS0FBSyxHQUFHO0lBQ3pEQSxjQUFjLENBQUNBLGNBQWMsQ0FBQyxVQUFVLEdBQUcsS0FBSyxHQUFHO0lBQ25EQSxjQUFjLENBQUNBLGNBQWMsQ0FBQyxhQUFhLEdBQUcsS0FBSyxHQUFHO0lBQ3REQSxjQUFjLENBQUNBLGNBQWMsQ0FBQyxvQkFBb0IsR0FBRyxLQUFLLEdBQUc7SUFDN0RBLGNBQWMsQ0FBQ0EsY0FBYyxDQUFDLHdCQUF3QixHQUFHLE1BQU0sR0FBRztJQUNsRUEsY0FBYyxDQUFDQSxjQUFjLENBQUMsa0JBQWtCLEdBQUcsT0FBTyxHQUFHO0lBQzdEQSxjQUFjLENBQUNBLGNBQWMsQ0FBQyxnQkFBZ0IsR0FBRyxPQUFPLEdBQUc7SUFDM0RBLGNBQWMsQ0FBQ0EsY0FBYyxDQUFDLHNCQUFzQixHQUFHLE9BQU8sR0FBRztJQUNqRUEsY0FBYyxDQUFDQSxjQUFjLENBQUMsY0FBYyxHQUFHLE9BQU8sR0FBRztJQUN6REEsY0FBYyxDQUFDQSxjQUFjLENBQUMsVUFBVSxHQUFHLE9BQU8sR0FBRztJQUNyREEsY0FBYyxDQUFDQSxjQUFjLENBQUMsZUFBZSxHQUFHLE9BQU8sR0FBRztJQUMxREEsY0FBYyxDQUFDQSxjQUFjLENBQUMsZUFBZSxHQUFHLE9BQU8sR0FBRztJQUMxREEsY0FBYyxDQUFDQSxjQUFjLENBQUMsY0FBYyxHQUFHLE9BQU8sR0FBRztJQUN6REEsY0FBYyxDQUFDQSxjQUFjLENBQUMsMEJBQTBCLEdBQUcsT0FBTyxHQUFHO0FBQ3pFLEdBQUdBLGlCQUFpQkYsUUFBUUUsY0FBYyxJQUFLRixDQUFBQSxzQkFBc0IsR0FBRyxDQUFDLEtBQ3pFLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL3Bvc3RtYXJrQDQuMC41L25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvYm91bmNlcy9Cb3VuY2UuanM/OTdlOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQm91bmNlVHlwZUNvZGUgPSBleHBvcnRzLkJvdW5jZVR5cGUgPSB2b2lkIDA7XG52YXIgQm91bmNlVHlwZTtcbihmdW5jdGlvbiAoQm91bmNlVHlwZSkge1xuICAgIEJvdW5jZVR5cGVbXCJIYXJkQm91bmNlXCJdID0gXCJIYXJkQm91bmNlXCI7XG4gICAgQm91bmNlVHlwZVtcIlRyYW5zaWVudFwiXSA9IFwiVHJhbnNpZW50XCI7XG4gICAgQm91bmNlVHlwZVtcIlVuc3Vic2NyaWJlXCJdID0gXCJVbnN1YnNjcmliZVwiO1xuICAgIEJvdW5jZVR5cGVbXCJTdWJzY3JpYmVcIl0gPSBcIlN1YnNjcmliZVwiO1xuICAgIEJvdW5jZVR5cGVbXCJBdXRvUmVzcG9uZGVyXCJdID0gXCJBdXRvUmVzcG9uZGVyXCI7XG4gICAgQm91bmNlVHlwZVtcIkFkZHJlc3NDaGFuZ2VcIl0gPSBcIkFkZHJlc3NDaGFuZ2VcIjtcbiAgICBCb3VuY2VUeXBlW1wiRG5zRXJyb3JcIl0gPSBcIkRuc0Vycm9yXCI7XG4gICAgQm91bmNlVHlwZVtcIlNwYW1Ob3RpZmljYXRpb25cIl0gPSBcIlNwYW1Ob3RpZmljYXRpb25cIjtcbiAgICBCb3VuY2VUeXBlW1wiT3BlblJlbGF5VGVzdFwiXSA9IFwiT3BlblJlbGF5VGVzdFwiO1xuICAgIEJvdW5jZVR5cGVbXCJVbmtub3duXCJdID0gXCJVbmtub3duXCI7XG4gICAgQm91bmNlVHlwZVtcIlNvZnRCb3VuY2VcIl0gPSBcIlNvZnRCb3VuY2VcIjtcbiAgICBCb3VuY2VUeXBlW1wiVmlydXNOb3RpZmljYXRpb25cIl0gPSBcIlZpcnVzTm90aWZpY2F0aW9uXCI7XG4gICAgQm91bmNlVHlwZVtcIkNoYWxsZW5nZVZlcmlmaWNhdGlvblwiXSA9IFwiQ2hhbGxlbmdlVmVyaWZpY2F0aW9uXCI7XG4gICAgQm91bmNlVHlwZVtcIkJhZEVtYWlsQWRkcmVzc1wiXSA9IFwiQmFkRW1haWxBZGRyZXNzXCI7XG4gICAgQm91bmNlVHlwZVtcIlNwYW1Db21wbGFpbnRcIl0gPSBcIlNwYW1Db21wbGFpbnRcIjtcbiAgICBCb3VuY2VUeXBlW1wiTWFudWFsbHlEZWFjdGl2YXRlZFwiXSA9IFwiTWFudWFsbHlEZWFjdGl2YXRlZFwiO1xuICAgIEJvdW5jZVR5cGVbXCJVbmNvbmZpcm1lZFwiXSA9IFwiVW5jb25maXJtZWRcIjtcbiAgICBCb3VuY2VUeXBlW1wiQmxvY2tlZFwiXSA9IFwiQmxvY2tlZFwiO1xuICAgIEJvdW5jZVR5cGVbXCJTTVRQQXBpRXJyb3JcIl0gPSBcIlNNVFBBcGlFcnJvclwiO1xuICAgIEJvdW5jZVR5cGVbXCJJbmJvdW5kRXJyb3JcIl0gPSBcIkluYm91bmRFcnJvclwiO1xuICAgIEJvdW5jZVR5cGVbXCJETUFSQ1BvbGljeVwiXSA9IFwiRE1BUkNQb2xpY3lcIjtcbiAgICBCb3VuY2VUeXBlW1wiVGVtcGxhdGVSZW5kZXJpbmdGYWlsZWRcIl0gPSBcIlRlbXBsYXRlUmVuZGVyaW5nRmFpbGVkXCI7XG59KShCb3VuY2VUeXBlID0gZXhwb3J0cy5Cb3VuY2VUeXBlIHx8IChleHBvcnRzLkJvdW5jZVR5cGUgPSB7fSkpO1xudmFyIEJvdW5jZVR5cGVDb2RlO1xuKGZ1bmN0aW9uIChCb3VuY2VUeXBlQ29kZSkge1xuICAgIEJvdW5jZVR5cGVDb2RlW0JvdW5jZVR5cGVDb2RlW1wiSGFyZEJvdW5jZVwiXSA9IDFdID0gXCJIYXJkQm91bmNlXCI7XG4gICAgQm91bmNlVHlwZUNvZGVbQm91bmNlVHlwZUNvZGVbXCJUcmFuc2llbnRcIl0gPSAyXSA9IFwiVHJhbnNpZW50XCI7XG4gICAgQm91bmNlVHlwZUNvZGVbQm91bmNlVHlwZUNvZGVbXCJVbnN1YnNjcmliZVwiXSA9IDE2XSA9IFwiVW5zdWJzY3JpYmVcIjtcbiAgICBCb3VuY2VUeXBlQ29kZVtCb3VuY2VUeXBlQ29kZVtcIlN1YnNjcmliZVwiXSA9IDMyXSA9IFwiU3Vic2NyaWJlXCI7XG4gICAgQm91bmNlVHlwZUNvZGVbQm91bmNlVHlwZUNvZGVbXCJBdXRvUmVzcG9uZGVyXCJdID0gNjRdID0gXCJBdXRvUmVzcG9uZGVyXCI7XG4gICAgQm91bmNlVHlwZUNvZGVbQm91bmNlVHlwZUNvZGVbXCJBZGRyZXNzQ2hhbmdlXCJdID0gMTI4XSA9IFwiQWRkcmVzc0NoYW5nZVwiO1xuICAgIEJvdW5jZVR5cGVDb2RlW0JvdW5jZVR5cGVDb2RlW1wiRG5zRXJyb3JcIl0gPSAyNTZdID0gXCJEbnNFcnJvclwiO1xuICAgIEJvdW5jZVR5cGVDb2RlW0JvdW5jZVR5cGVDb2RlW1wiU3BhbU5vdGlmaWNhdGlvblwiXSA9IDUxMl0gPSBcIlNwYW1Ob3RpZmljYXRpb25cIjtcbiAgICBCb3VuY2VUeXBlQ29kZVtCb3VuY2VUeXBlQ29kZVtcIk9wZW5SZWxheVRlc3RcIl0gPSAxMDI0XSA9IFwiT3BlblJlbGF5VGVzdFwiO1xuICAgIEJvdW5jZVR5cGVDb2RlW0JvdW5jZVR5cGVDb2RlW1wiVW5rbm93blwiXSA9IDIwNDhdID0gXCJVbmtub3duXCI7XG4gICAgQm91bmNlVHlwZUNvZGVbQm91bmNlVHlwZUNvZGVbXCJTb2Z0Qm91bmNlXCJdID0gNDA5Nl0gPSBcIlNvZnRCb3VuY2VcIjtcbiAgICBCb3VuY2VUeXBlQ29kZVtCb3VuY2VUeXBlQ29kZVtcIlZpcnVzTm90aWZpY2F0aW9uXCJdID0gODE5Ml0gPSBcIlZpcnVzTm90aWZpY2F0aW9uXCI7XG4gICAgQm91bmNlVHlwZUNvZGVbQm91bmNlVHlwZUNvZGVbXCJDaGFsbGVuZ2VWZXJpZmljYXRpb25cIl0gPSAxNjM4NF0gPSBcIkNoYWxsZW5nZVZlcmlmaWNhdGlvblwiO1xuICAgIEJvdW5jZVR5cGVDb2RlW0JvdW5jZVR5cGVDb2RlW1wiQmFkRW1haWxBZGRyZXNzXCJdID0gMTAwMDAwXSA9IFwiQmFkRW1haWxBZGRyZXNzXCI7XG4gICAgQm91bmNlVHlwZUNvZGVbQm91bmNlVHlwZUNvZGVbXCJTcGFtQ29tcGxhaW50XCJdID0gMTAwMDAxXSA9IFwiU3BhbUNvbXBsYWludFwiO1xuICAgIEJvdW5jZVR5cGVDb2RlW0JvdW5jZVR5cGVDb2RlW1wiTWFudWFsbHlEZWFjdGl2YXRlZFwiXSA9IDEwMDAwMl0gPSBcIk1hbnVhbGx5RGVhY3RpdmF0ZWRcIjtcbiAgICBCb3VuY2VUeXBlQ29kZVtCb3VuY2VUeXBlQ29kZVtcIlVuY29uZmlybWVkXCJdID0gMTAwMDAzXSA9IFwiVW5jb25maXJtZWRcIjtcbiAgICBCb3VuY2VUeXBlQ29kZVtCb3VuY2VUeXBlQ29kZVtcIkJsb2NrZWRcIl0gPSAxMDAwMDZdID0gXCJCbG9ja2VkXCI7XG4gICAgQm91bmNlVHlwZUNvZGVbQm91bmNlVHlwZUNvZGVbXCJTTVRQQXBpRXJyb3JcIl0gPSAxMDAwMDddID0gXCJTTVRQQXBpRXJyb3JcIjtcbiAgICBCb3VuY2VUeXBlQ29kZVtCb3VuY2VUeXBlQ29kZVtcIkluYm91bmRFcnJvclwiXSA9IDEwMDAwOF0gPSBcIkluYm91bmRFcnJvclwiO1xuICAgIEJvdW5jZVR5cGVDb2RlW0JvdW5jZVR5cGVDb2RlW1wiRE1BUkNQb2xpY3lcIl0gPSAxMDAwMDldID0gXCJETUFSQ1BvbGljeVwiO1xuICAgIEJvdW5jZVR5cGVDb2RlW0JvdW5jZVR5cGVDb2RlW1wiVGVtcGxhdGVSZW5kZXJpbmdGYWlsZWRcIl0gPSAxMDAwMTBdID0gXCJUZW1wbGF0ZVJlbmRlcmluZ0ZhaWxlZFwiO1xufSkoQm91bmNlVHlwZUNvZGUgPSBleHBvcnRzLkJvdW5jZVR5cGVDb2RlIHx8IChleHBvcnRzLkJvdW5jZVR5cGVDb2RlID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJvdW5jZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJCb3VuY2VUeXBlQ29kZSIsIkJvdW5jZVR5cGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/bounces/Bounce.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/bounces/BounceFilteringParameters.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/bounces/BounceFilteringParameters.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.BounceFilteringParameters = void 0;\nvar FilteringParameters_1 = __webpack_require__(/*! ../client/FilteringParameters */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/client/FilteringParameters.js\");\n/**\n * Describes filtering parameters that can be used when retrieving bounces.\n * When pagination parameters are not specified, default values are set.\n */ var BounceFilteringParameters = /** @class */ function(_super) {\n    __extends(BounceFilteringParameters, _super);\n    function BounceFilteringParameters(count, offset, type, inactive, emailFilter, tag, messageID, fromDate, toDate, messageStream) {\n        if (count === void 0) {\n            count = 100;\n        }\n        if (offset === void 0) {\n            offset = 0;\n        }\n        var _this = _super.call(this, count, offset) || this;\n        _this.type = type;\n        _this.inactive = inactive;\n        _this.emailFilter = emailFilter;\n        _this.tag = tag;\n        _this.messageID = messageID;\n        _this.fromDate = fromDate;\n        _this.toDate = toDate;\n        _this.messageStream = messageStream;\n        return _this;\n    }\n    return BounceFilteringParameters;\n}(FilteringParameters_1.FilteringParameters);\nexports.BounceFilteringParameters = BounceFilteringParameters; //# sourceMappingURL=BounceFilteringParameters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9ib3VuY2VzL0JvdW5jZUZpbHRlcmluZ1BhcmFtZXRlcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxZQUFZLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsU0FBUyxJQUFLO0lBQ3hDLElBQUlDLGdCQUFnQixTQUFVQyxDQUFDLEVBQUVDLENBQUM7UUFDOUJGLGdCQUFnQkcsT0FBT0MsY0FBYyxJQUNoQztZQUFFQyxXQUFXLEVBQUU7UUFBQyxjQUFhQyxTQUFTLFNBQVVMLENBQUMsRUFBRUMsQ0FBQztZQUFJRCxFQUFFSSxTQUFTLEdBQUdIO1FBQUcsS0FDMUUsU0FBVUQsQ0FBQyxFQUFFQyxDQUFDO1lBQUksSUFBSyxJQUFJSyxLQUFLTCxFQUFHLElBQUlDLE9BQU9LLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNSLEdBQUdLLElBQUlOLENBQUMsQ0FBQ00sRUFBRSxHQUFHTCxDQUFDLENBQUNLLEVBQUU7UUFBRTtRQUNwRyxPQUFPUCxjQUFjQyxHQUFHQztJQUM1QjtJQUNBLE9BQU8sU0FBVUQsQ0FBQyxFQUFFQyxDQUFDO1FBQ2pCLElBQUksT0FBT0EsTUFBTSxjQUFjQSxNQUFNLE1BQ2pDLE1BQU0sSUFBSVMsVUFBVSx5QkFBeUJDLE9BQU9WLEtBQUs7UUFDN0RGLGNBQWNDLEdBQUdDO1FBQ2pCLFNBQVNXO1lBQU8sSUFBSSxDQUFDQyxXQUFXLEdBQUdiO1FBQUc7UUFDdENBLEVBQUVPLFNBQVMsR0FBR04sTUFBTSxPQUFPQyxPQUFPWSxNQUFNLENBQUNiLEtBQU1XLENBQUFBLEdBQUdMLFNBQVMsR0FBR04sRUFBRU0sU0FBUyxFQUFFLElBQUlLLElBQUc7SUFDdEY7QUFDSjtBQUNBViw4Q0FBNkM7SUFBRWUsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsaUNBQWlDLEdBQUcsS0FBSztBQUN6QyxJQUFJRyx3QkFBd0JDLG1CQUFPQSxDQUFDLHVKQUErQjtBQUNuRTs7O0NBR0MsR0FDRCxJQUFJRiw0QkFBNEIsV0FBVyxHQUFJLFNBQVVHLE1BQU07SUFDM0R2QixVQUFVb0IsMkJBQTJCRztJQUNyQyxTQUFTSCwwQkFBMEJJLEtBQUssRUFBRUMsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLFFBQVEsRUFBRUMsV0FBVyxFQUFFQyxHQUFHLEVBQUVDLFNBQVMsRUFBRUMsUUFBUSxFQUFFQyxNQUFNLEVBQUVDLGFBQWE7UUFDMUgsSUFBSVQsVUFBVSxLQUFLLEdBQUc7WUFBRUEsUUFBUTtRQUFLO1FBQ3JDLElBQUlDLFdBQVcsS0FBSyxHQUFHO1lBQUVBLFNBQVM7UUFBRztRQUNyQyxJQUFJUyxRQUFRWCxPQUFPWixJQUFJLENBQUMsSUFBSSxFQUFFYSxPQUFPQyxXQUFXLElBQUk7UUFDcERTLE1BQU1SLElBQUksR0FBR0E7UUFDYlEsTUFBTVAsUUFBUSxHQUFHQTtRQUNqQk8sTUFBTU4sV0FBVyxHQUFHQTtRQUNwQk0sTUFBTUwsR0FBRyxHQUFHQTtRQUNaSyxNQUFNSixTQUFTLEdBQUdBO1FBQ2xCSSxNQUFNSCxRQUFRLEdBQUdBO1FBQ2pCRyxNQUFNRixNQUFNLEdBQUdBO1FBQ2ZFLE1BQU1ELGFBQWEsR0FBR0E7UUFDdEIsT0FBT0M7SUFDWDtJQUNBLE9BQU9kO0FBQ1gsRUFBRUMsc0JBQXNCYyxtQkFBbUI7QUFDM0NqQixpQ0FBaUMsR0FBR0UsMkJBQ3BDLHFEQUFxRCIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL3Bvc3RtYXJrQDQuMC41L25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvYm91bmNlcy9Cb3VuY2VGaWx0ZXJpbmdQYXJhbWV0ZXJzLmpzPzU5ODIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwgcCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIgKyBTdHJpbmcoYikgKyBcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Cb3VuY2VGaWx0ZXJpbmdQYXJhbWV0ZXJzID0gdm9pZCAwO1xudmFyIEZpbHRlcmluZ1BhcmFtZXRlcnNfMSA9IHJlcXVpcmUoXCIuLi9jbGllbnQvRmlsdGVyaW5nUGFyYW1ldGVyc1wiKTtcbi8qKlxuICogRGVzY3JpYmVzIGZpbHRlcmluZyBwYXJhbWV0ZXJzIHRoYXQgY2FuIGJlIHVzZWQgd2hlbiByZXRyaWV2aW5nIGJvdW5jZXMuXG4gKiBXaGVuIHBhZ2luYXRpb24gcGFyYW1ldGVycyBhcmUgbm90IHNwZWNpZmllZCwgZGVmYXVsdCB2YWx1ZXMgYXJlIHNldC5cbiAqL1xudmFyIEJvdW5jZUZpbHRlcmluZ1BhcmFtZXRlcnMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKEJvdW5jZUZpbHRlcmluZ1BhcmFtZXRlcnMsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gQm91bmNlRmlsdGVyaW5nUGFyYW1ldGVycyhjb3VudCwgb2Zmc2V0LCB0eXBlLCBpbmFjdGl2ZSwgZW1haWxGaWx0ZXIsIHRhZywgbWVzc2FnZUlELCBmcm9tRGF0ZSwgdG9EYXRlLCBtZXNzYWdlU3RyZWFtKSB7XG4gICAgICAgIGlmIChjb3VudCA9PT0gdm9pZCAwKSB7IGNvdW50ID0gMTAwOyB9XG4gICAgICAgIGlmIChvZmZzZXQgPT09IHZvaWQgMCkgeyBvZmZzZXQgPSAwOyB9XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIGNvdW50LCBvZmZzZXQpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLnR5cGUgPSB0eXBlO1xuICAgICAgICBfdGhpcy5pbmFjdGl2ZSA9IGluYWN0aXZlO1xuICAgICAgICBfdGhpcy5lbWFpbEZpbHRlciA9IGVtYWlsRmlsdGVyO1xuICAgICAgICBfdGhpcy50YWcgPSB0YWc7XG4gICAgICAgIF90aGlzLm1lc3NhZ2VJRCA9IG1lc3NhZ2VJRDtcbiAgICAgICAgX3RoaXMuZnJvbURhdGUgPSBmcm9tRGF0ZTtcbiAgICAgICAgX3RoaXMudG9EYXRlID0gdG9EYXRlO1xuICAgICAgICBfdGhpcy5tZXNzYWdlU3RyZWFtID0gbWVzc2FnZVN0cmVhbTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICByZXR1cm4gQm91bmNlRmlsdGVyaW5nUGFyYW1ldGVycztcbn0oRmlsdGVyaW5nUGFyYW1ldGVyc18xLkZpbHRlcmluZ1BhcmFtZXRlcnMpKTtcbmV4cG9ydHMuQm91bmNlRmlsdGVyaW5nUGFyYW1ldGVycyA9IEJvdW5jZUZpbHRlcmluZ1BhcmFtZXRlcnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Cb3VuY2VGaWx0ZXJpbmdQYXJhbWV0ZXJzLmpzLm1hcCJdLCJuYW1lcyI6WyJfX2V4dGVuZHMiLCJleHRlbmRTdGF0aWNzIiwiZCIsImIiLCJPYmplY3QiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIkFycmF5IiwicCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIlR5cGVFcnJvciIsIlN0cmluZyIsIl9fIiwiY29uc3RydWN0b3IiLCJjcmVhdGUiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkJvdW5jZUZpbHRlcmluZ1BhcmFtZXRlcnMiLCJGaWx0ZXJpbmdQYXJhbWV0ZXJzXzEiLCJyZXF1aXJlIiwiX3N1cGVyIiwiY291bnQiLCJvZmZzZXQiLCJ0eXBlIiwiaW5hY3RpdmUiLCJlbWFpbEZpbHRlciIsInRhZyIsIm1lc3NhZ2VJRCIsImZyb21EYXRlIiwidG9EYXRlIiwibWVzc2FnZVN0cmVhbSIsIl90aGlzIiwiRmlsdGVyaW5nUGFyYW1ldGVycyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/bounces/BounceFilteringParameters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/client/Callback.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/client/Callback.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=Callback.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9jbGllbnQvQ2FsbGJhY2suanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUMsRUFDN0Qsb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9jbGllbnQvQ2FsbGJhY2suanM/ZjRmMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNhbGxiYWNrLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/client/Callback.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/client/ClientOptions.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/client/ClientOptions.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ClientOptions = void 0;\nvar ClientOptions;\n(function(ClientOptions) {\n    var Configuration = /** @class */ function() {\n        function Configuration(useHttps, requestHost, timeout) {\n            this.useHttps = useHttps;\n            this.requestHost = requestHost;\n            this.timeout = timeout;\n        }\n        return Configuration;\n    }();\n    ClientOptions.Configuration = Configuration;\n    var HttpMethod;\n    (function(HttpMethod) {\n        HttpMethod[\"GET\"] = \"GET\";\n        HttpMethod[\"POST\"] = \"POST\";\n        HttpMethod[\"DELETE\"] = \"DELETE\";\n        HttpMethod[\"PUT\"] = \"PUT\";\n        HttpMethod[\"OPTIONS\"] = \"OPTIONS\";\n        HttpMethod[\"HEAD\"] = \"HEAD\";\n        HttpMethod[\"PATCH\"] = \"PATCH\";\n    })(HttpMethod = ClientOptions.HttpMethod || (ClientOptions.HttpMethod = {}));\n    var AuthHeaderNames;\n    (function(AuthHeaderNames) {\n        AuthHeaderNames[\"SERVER_TOKEN\"] = \"X-Postmark-Server-Token\";\n        AuthHeaderNames[\"ACCOUNT_TOKEN\"] = \"X-Postmark-Account-Token\";\n    })(AuthHeaderNames = ClientOptions.AuthHeaderNames || (ClientOptions.AuthHeaderNames = {}));\n})(ClientOptions = exports.ClientOptions || (exports.ClientOptions = {})); //# sourceMappingURL=ClientOptions.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9jbGllbnQvQ2xpZW50T3B0aW9ucy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQscUJBQXFCLEdBQUcsS0FBSztBQUM3QixJQUFJRTtBQUNILFVBQVVBLGFBQWE7SUFDcEIsSUFBSUMsZ0JBQWdCLFdBQVcsR0FBSTtRQUMvQixTQUFTQSxjQUFjQyxRQUFRLEVBQUVDLFdBQVcsRUFBRUMsT0FBTztZQUNqRCxJQUFJLENBQUNGLFFBQVEsR0FBR0E7WUFDaEIsSUFBSSxDQUFDQyxXQUFXLEdBQUdBO1lBQ25CLElBQUksQ0FBQ0MsT0FBTyxHQUFHQTtRQUNuQjtRQUNBLE9BQU9IO0lBQ1g7SUFDQUQsY0FBY0MsYUFBYSxHQUFHQTtJQUM5QixJQUFJSTtJQUNILFVBQVVBLFVBQVU7UUFDakJBLFVBQVUsQ0FBQyxNQUFNLEdBQUc7UUFDcEJBLFVBQVUsQ0FBQyxPQUFPLEdBQUc7UUFDckJBLFVBQVUsQ0FBQyxTQUFTLEdBQUc7UUFDdkJBLFVBQVUsQ0FBQyxNQUFNLEdBQUc7UUFDcEJBLFVBQVUsQ0FBQyxVQUFVLEdBQUc7UUFDeEJBLFVBQVUsQ0FBQyxPQUFPLEdBQUc7UUFDckJBLFVBQVUsQ0FBQyxRQUFRLEdBQUc7SUFDMUIsR0FBR0EsYUFBYUwsY0FBY0ssVUFBVSxJQUFLTCxDQUFBQSxjQUFjSyxVQUFVLEdBQUcsQ0FBQztJQUN6RSxJQUFJQztJQUNILFVBQVVBLGVBQWU7UUFDdEJBLGVBQWUsQ0FBQyxlQUFlLEdBQUc7UUFDbENBLGVBQWUsQ0FBQyxnQkFBZ0IsR0FBRztJQUN2QyxHQUFHQSxrQkFBa0JOLGNBQWNNLGVBQWUsSUFBS04sQ0FBQUEsY0FBY00sZUFBZSxHQUFHLENBQUM7QUFDNUYsR0FBR04sZ0JBQWdCRixRQUFRRSxhQUFhLElBQUtGLENBQUFBLHFCQUFxQixHQUFHLENBQUMsS0FDdEUseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9jbGllbnQvQ2xpZW50T3B0aW9ucy5qcz9hOWY1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5DbGllbnRPcHRpb25zID0gdm9pZCAwO1xudmFyIENsaWVudE9wdGlvbnM7XG4oZnVuY3Rpb24gKENsaWVudE9wdGlvbnMpIHtcbiAgICB2YXIgQ29uZmlndXJhdGlvbiA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZnVuY3Rpb24gQ29uZmlndXJhdGlvbih1c2VIdHRwcywgcmVxdWVzdEhvc3QsIHRpbWVvdXQpIHtcbiAgICAgICAgICAgIHRoaXMudXNlSHR0cHMgPSB1c2VIdHRwcztcbiAgICAgICAgICAgIHRoaXMucmVxdWVzdEhvc3QgPSByZXF1ZXN0SG9zdDtcbiAgICAgICAgICAgIHRoaXMudGltZW91dCA9IHRpbWVvdXQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIENvbmZpZ3VyYXRpb247XG4gICAgfSgpKTtcbiAgICBDbGllbnRPcHRpb25zLkNvbmZpZ3VyYXRpb24gPSBDb25maWd1cmF0aW9uO1xuICAgIHZhciBIdHRwTWV0aG9kO1xuICAgIChmdW5jdGlvbiAoSHR0cE1ldGhvZCkge1xuICAgICAgICBIdHRwTWV0aG9kW1wiR0VUXCJdID0gXCJHRVRcIjtcbiAgICAgICAgSHR0cE1ldGhvZFtcIlBPU1RcIl0gPSBcIlBPU1RcIjtcbiAgICAgICAgSHR0cE1ldGhvZFtcIkRFTEVURVwiXSA9IFwiREVMRVRFXCI7XG4gICAgICAgIEh0dHBNZXRob2RbXCJQVVRcIl0gPSBcIlBVVFwiO1xuICAgICAgICBIdHRwTWV0aG9kW1wiT1BUSU9OU1wiXSA9IFwiT1BUSU9OU1wiO1xuICAgICAgICBIdHRwTWV0aG9kW1wiSEVBRFwiXSA9IFwiSEVBRFwiO1xuICAgICAgICBIdHRwTWV0aG9kW1wiUEFUQ0hcIl0gPSBcIlBBVENIXCI7XG4gICAgfSkoSHR0cE1ldGhvZCA9IENsaWVudE9wdGlvbnMuSHR0cE1ldGhvZCB8fCAoQ2xpZW50T3B0aW9ucy5IdHRwTWV0aG9kID0ge30pKTtcbiAgICB2YXIgQXV0aEhlYWRlck5hbWVzO1xuICAgIChmdW5jdGlvbiAoQXV0aEhlYWRlck5hbWVzKSB7XG4gICAgICAgIEF1dGhIZWFkZXJOYW1lc1tcIlNFUlZFUl9UT0tFTlwiXSA9IFwiWC1Qb3N0bWFyay1TZXJ2ZXItVG9rZW5cIjtcbiAgICAgICAgQXV0aEhlYWRlck5hbWVzW1wiQUNDT1VOVF9UT0tFTlwiXSA9IFwiWC1Qb3N0bWFyay1BY2NvdW50LVRva2VuXCI7XG4gICAgfSkoQXV0aEhlYWRlck5hbWVzID0gQ2xpZW50T3B0aW9ucy5BdXRoSGVhZGVyTmFtZXMgfHwgKENsaWVudE9wdGlvbnMuQXV0aEhlYWRlck5hbWVzID0ge30pKTtcbn0pKENsaWVudE9wdGlvbnMgPSBleHBvcnRzLkNsaWVudE9wdGlvbnMgfHwgKGV4cG9ydHMuQ2xpZW50T3B0aW9ucyA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DbGllbnRPcHRpb25zLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkNsaWVudE9wdGlvbnMiLCJDb25maWd1cmF0aW9uIiwidXNlSHR0cHMiLCJyZXF1ZXN0SG9zdCIsInRpbWVvdXQiLCJIdHRwTWV0aG9kIiwiQXV0aEhlYWRlck5hbWVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/client/ClientOptions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/client/DefaultResponse.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/client/DefaultResponse.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=DefaultResponse.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9jbGllbnQvRGVmYXVsdFJlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDLEVBQzdELDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL3Bvc3RtYXJrQDQuMC41L25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvY2xpZW50L0RlZmF1bHRSZXNwb25zZS5qcz9kYmI4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RGVmYXVsdFJlc3BvbnNlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/client/DefaultResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/client/FilteringParameters.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/client/FilteringParameters.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.FilteringParameters = void 0;\n/**\n * Describes default filtering parameters that can be used.\n * When pagination parameters are not specified, default values are set.\n */ var FilteringParameters = /** @class */ function() {\n    function FilteringParameters(count, offset) {\n        if (count === void 0) {\n            count = 100;\n        }\n        if (offset === void 0) {\n            offset = 0;\n        }\n        this.count = count;\n        this.offset = offset;\n    }\n    return FilteringParameters;\n}();\nexports.FilteringParameters = FilteringParameters; //# sourceMappingURL=FilteringParameters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9jbGllbnQvRmlsdGVyaW5nUGFyYW1ldGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsMkJBQTJCLEdBQUcsS0FBSztBQUNuQzs7O0NBR0MsR0FDRCxJQUFJRSxzQkFBc0IsV0FBVyxHQUFJO0lBQ3JDLFNBQVNBLG9CQUFvQkMsS0FBSyxFQUFFQyxNQUFNO1FBQ3RDLElBQUlELFVBQVUsS0FBSyxHQUFHO1lBQUVBLFFBQVE7UUFBSztRQUNyQyxJQUFJQyxXQUFXLEtBQUssR0FBRztZQUFFQSxTQUFTO1FBQUc7UUFDckMsSUFBSSxDQUFDRCxLQUFLLEdBQUdBO1FBQ2IsSUFBSSxDQUFDQyxNQUFNLEdBQUdBO0lBQ2xCO0lBQ0EsT0FBT0Y7QUFDWDtBQUNBRiwyQkFBMkIsR0FBR0UscUJBQzlCLCtDQUErQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL3Bvc3RtYXJrQDQuMC41L25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvY2xpZW50L0ZpbHRlcmluZ1BhcmFtZXRlcnMuanM/ZjU1OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRmlsdGVyaW5nUGFyYW1ldGVycyA9IHZvaWQgMDtcbi8qKlxuICogRGVzY3JpYmVzIGRlZmF1bHQgZmlsdGVyaW5nIHBhcmFtZXRlcnMgdGhhdCBjYW4gYmUgdXNlZC5cbiAqIFdoZW4gcGFnaW5hdGlvbiBwYXJhbWV0ZXJzIGFyZSBub3Qgc3BlY2lmaWVkLCBkZWZhdWx0IHZhbHVlcyBhcmUgc2V0LlxuICovXG52YXIgRmlsdGVyaW5nUGFyYW1ldGVycyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBGaWx0ZXJpbmdQYXJhbWV0ZXJzKGNvdW50LCBvZmZzZXQpIHtcbiAgICAgICAgaWYgKGNvdW50ID09PSB2b2lkIDApIHsgY291bnQgPSAxMDA7IH1cbiAgICAgICAgaWYgKG9mZnNldCA9PT0gdm9pZCAwKSB7IG9mZnNldCA9IDA7IH1cbiAgICAgICAgdGhpcy5jb3VudCA9IGNvdW50O1xuICAgICAgICB0aGlzLm9mZnNldCA9IG9mZnNldDtcbiAgICB9XG4gICAgcmV0dXJuIEZpbHRlcmluZ1BhcmFtZXRlcnM7XG59KCkpO1xuZXhwb3J0cy5GaWx0ZXJpbmdQYXJhbWV0ZXJzID0gRmlsdGVyaW5nUGFyYW1ldGVycztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUZpbHRlcmluZ1BhcmFtZXRlcnMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiRmlsdGVyaW5nUGFyYW1ldGVycyIsImNvdW50Iiwib2Zmc2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/client/FilteringParameters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/client/HttpClient.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/client/HttpClient.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.HttpClient = void 0;\nvar HttpClient = /** @class */ function() {\n    function HttpClient(configOptions) {\n        this.clientOptions = __assign(__assign({}, HttpClient.DefaultOptions), configOptions);\n        this.initHttpClient(this.clientOptions);\n    }\n    HttpClient.prototype.getBaseHttpRequestURL = function() {\n        var scheme = this.clientOptions.useHttps ? \"https\" : \"http\";\n        return \"\".concat(scheme, \"://\").concat(this.clientOptions.requestHost);\n    };\n    /**\n     * Http Client connection configuration options.\n     * You may modify these values and new clients will use them.\n     * Any values provided to a Client constructor will override default options.\n     */ HttpClient.DefaultOptions = {\n        useHttps: true,\n        requestHost: \"api.postmarkapp.com\",\n        timeout: 180\n    };\n    return HttpClient;\n}();\nexports.HttpClient = HttpClient; //# sourceMappingURL=HttpClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9jbGllbnQvSHR0cENsaWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLFdBQVcsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxRQUFRLElBQUs7SUFDdENBLFdBQVdDLE9BQU9DLE1BQU0sSUFBSSxTQUFTQyxDQUFDO1FBQ2xDLElBQUssSUFBSUMsR0FBR0MsSUFBSSxHQUFHQyxJQUFJQyxVQUFVQyxNQUFNLEVBQUVILElBQUlDLEdBQUdELElBQUs7WUFDakRELElBQUlHLFNBQVMsQ0FBQ0YsRUFBRTtZQUNoQixJQUFLLElBQUlJLEtBQUtMLEVBQUcsSUFBSUgsT0FBT1MsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ1IsR0FBR0ssSUFDekROLENBQUMsQ0FBQ00sRUFBRSxHQUFHTCxDQUFDLENBQUNLLEVBQUU7UUFDbkI7UUFDQSxPQUFPTjtJQUNYO0lBQ0EsT0FBT0gsU0FBU2EsS0FBSyxDQUFDLElBQUksRUFBRU47QUFDaEM7QUFDQU4sOENBQTZDO0lBQUVlLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGtCQUFrQixHQUFHLEtBQUs7QUFDMUIsSUFBSUUsYUFBYSxXQUFXLEdBQUk7SUFDNUIsU0FBU0EsV0FBV0MsYUFBYTtRQUM3QixJQUFJLENBQUNDLGFBQWEsR0FBR25CLFNBQVNBLFNBQVMsQ0FBQyxHQUFHaUIsV0FBV0csY0FBYyxHQUFHRjtRQUN2RSxJQUFJLENBQUNHLGNBQWMsQ0FBQyxJQUFJLENBQUNGLGFBQWE7SUFDMUM7SUFDQUYsV0FBV1AsU0FBUyxDQUFDWSxxQkFBcUIsR0FBRztRQUN6QyxJQUFJQyxTQUFTLElBQUksQ0FBQ0osYUFBYSxDQUFDSyxRQUFRLEdBQUcsVUFBVTtRQUNyRCxPQUFPLEdBQUdDLE1BQU0sQ0FBQ0YsUUFBUSxPQUFPRSxNQUFNLENBQUMsSUFBSSxDQUFDTixhQUFhLENBQUNPLFdBQVc7SUFDekU7SUFDQTs7OztLQUlDLEdBQ0RULFdBQVdHLGNBQWMsR0FBRztRQUN4QkksVUFBVTtRQUNWRSxhQUFhO1FBQ2JDLFNBQVM7SUFDYjtJQUNBLE9BQU9WO0FBQ1g7QUFDQUYsa0JBQWtCLEdBQUdFLFlBQ3JCLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL3Bvc3RtYXJrQDQuMC41L25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvY2xpZW50L0h0dHBDbGllbnQuanM/ZWU5ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkh0dHBDbGllbnQgPSB2b2lkIDA7XG52YXIgSHR0cENsaWVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBIdHRwQ2xpZW50KGNvbmZpZ09wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5jbGllbnRPcHRpb25zID0gX19hc3NpZ24oX19hc3NpZ24oe30sIEh0dHBDbGllbnQuRGVmYXVsdE9wdGlvbnMpLCBjb25maWdPcHRpb25zKTtcbiAgICAgICAgdGhpcy5pbml0SHR0cENsaWVudCh0aGlzLmNsaWVudE9wdGlvbnMpO1xuICAgIH1cbiAgICBIdHRwQ2xpZW50LnByb3RvdHlwZS5nZXRCYXNlSHR0cFJlcXVlc3RVUkwgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBzY2hlbWUgPSB0aGlzLmNsaWVudE9wdGlvbnMudXNlSHR0cHMgPyBcImh0dHBzXCIgOiBcImh0dHBcIjtcbiAgICAgICAgcmV0dXJuIFwiXCIuY29uY2F0KHNjaGVtZSwgXCI6Ly9cIikuY29uY2F0KHRoaXMuY2xpZW50T3B0aW9ucy5yZXF1ZXN0SG9zdCk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBIdHRwIENsaWVudCBjb25uZWN0aW9uIGNvbmZpZ3VyYXRpb24gb3B0aW9ucy5cbiAgICAgKiBZb3UgbWF5IG1vZGlmeSB0aGVzZSB2YWx1ZXMgYW5kIG5ldyBjbGllbnRzIHdpbGwgdXNlIHRoZW0uXG4gICAgICogQW55IHZhbHVlcyBwcm92aWRlZCB0byBhIENsaWVudCBjb25zdHJ1Y3RvciB3aWxsIG92ZXJyaWRlIGRlZmF1bHQgb3B0aW9ucy5cbiAgICAgKi9cbiAgICBIdHRwQ2xpZW50LkRlZmF1bHRPcHRpb25zID0ge1xuICAgICAgICB1c2VIdHRwczogdHJ1ZSxcbiAgICAgICAgcmVxdWVzdEhvc3Q6IFwiYXBpLnBvc3RtYXJrYXBwLmNvbVwiLFxuICAgICAgICB0aW1lb3V0OiAxODAsXG4gICAgfTtcbiAgICByZXR1cm4gSHR0cENsaWVudDtcbn0oKSk7XG5leHBvcnRzLkh0dHBDbGllbnQgPSBIdHRwQ2xpZW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SHR0cENsaWVudC5qcy5tYXAiXSwibmFtZXMiOlsiX19hc3NpZ24iLCJPYmplY3QiLCJhc3NpZ24iLCJ0IiwicyIsImkiLCJuIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwicCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImFwcGx5IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJIdHRwQ2xpZW50IiwiY29uZmlnT3B0aW9ucyIsImNsaWVudE9wdGlvbnMiLCJEZWZhdWx0T3B0aW9ucyIsImluaXRIdHRwQ2xpZW50IiwiZ2V0QmFzZUh0dHBSZXF1ZXN0VVJMIiwic2NoZW1lIiwidXNlSHR0cHMiLCJjb25jYXQiLCJyZXF1ZXN0SG9zdCIsInRpbWVvdXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/client/HttpClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/client/SupportingTypes.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/client/SupportingTypes.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=SupportingTypes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9jbGllbnQvU3VwcG9ydGluZ1R5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDLEVBQzdELDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL3Bvc3RtYXJrQDQuMC41L25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvY2xpZW50L1N1cHBvcnRpbmdUeXBlcy5qcz82ZmQ3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3VwcG9ydGluZ1R5cGVzLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/client/SupportingTypes.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/data_removal/DataRemovals.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/data_removal/DataRemovals.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.DataRemovalRequest = exports.DataRemovalStatusTypes = void 0;\nvar DataRemovalStatusTypes;\n(function(DataRemovalStatusTypes) {\n    DataRemovalStatusTypes[\"Pending\"] = \"Pending\";\n    DataRemovalStatusTypes[\"Done\"] = \"Done\";\n})(DataRemovalStatusTypes = exports.DataRemovalStatusTypes || (exports.DataRemovalStatusTypes = {}));\nvar DataRemovalRequest = /** @class */ function() {\n    function DataRemovalRequest(requestedBy, requestedFor, notifyWhenCompleted) {\n        this.RequestedBy = requestedBy;\n        this.RequestedFor = requestedFor;\n        this.NotifyWhenCompleted = notifyWhenCompleted;\n    }\n    return DataRemovalRequest;\n}();\nexports.DataRemovalRequest = DataRemovalRequest; //# sourceMappingURL=DataRemovals.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9kYXRhX3JlbW92YWwvRGF0YVJlbW92YWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCwwQkFBMEIsR0FBR0EsOEJBQThCLEdBQUcsS0FBSztBQUNuRSxJQUFJRztBQUNILFVBQVVBLHNCQUFzQjtJQUM3QkEsc0JBQXNCLENBQUMsVUFBVSxHQUFHO0lBQ3BDQSxzQkFBc0IsQ0FBQyxPQUFPLEdBQUc7QUFDckMsR0FBR0EseUJBQXlCSCxRQUFRRyxzQkFBc0IsSUFBS0gsQ0FBQUEsOEJBQThCLEdBQUcsQ0FBQztBQUNqRyxJQUFJRSxxQkFBcUIsV0FBVyxHQUFJO0lBQ3BDLFNBQVNBLG1CQUFtQkUsV0FBVyxFQUFFQyxZQUFZLEVBQUVDLG1CQUFtQjtRQUN0RSxJQUFJLENBQUNDLFdBQVcsR0FBR0g7UUFDbkIsSUFBSSxDQUFDSSxZQUFZLEdBQUdIO1FBQ3BCLElBQUksQ0FBQ0ksbUJBQW1CLEdBQUdIO0lBQy9CO0lBQ0EsT0FBT0o7QUFDWDtBQUNBRiwwQkFBMEIsR0FBR0Usb0JBQzdCLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL3Bvc3RtYXJrQDQuMC41L25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvZGF0YV9yZW1vdmFsL0RhdGFSZW1vdmFscy5qcz8xNzdjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5EYXRhUmVtb3ZhbFJlcXVlc3QgPSBleHBvcnRzLkRhdGFSZW1vdmFsU3RhdHVzVHlwZXMgPSB2b2lkIDA7XG52YXIgRGF0YVJlbW92YWxTdGF0dXNUeXBlcztcbihmdW5jdGlvbiAoRGF0YVJlbW92YWxTdGF0dXNUeXBlcykge1xuICAgIERhdGFSZW1vdmFsU3RhdHVzVHlwZXNbXCJQZW5kaW5nXCJdID0gXCJQZW5kaW5nXCI7XG4gICAgRGF0YVJlbW92YWxTdGF0dXNUeXBlc1tcIkRvbmVcIl0gPSBcIkRvbmVcIjtcbn0pKERhdGFSZW1vdmFsU3RhdHVzVHlwZXMgPSBleHBvcnRzLkRhdGFSZW1vdmFsU3RhdHVzVHlwZXMgfHwgKGV4cG9ydHMuRGF0YVJlbW92YWxTdGF0dXNUeXBlcyA9IHt9KSk7XG52YXIgRGF0YVJlbW92YWxSZXF1ZXN0ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIERhdGFSZW1vdmFsUmVxdWVzdChyZXF1ZXN0ZWRCeSwgcmVxdWVzdGVkRm9yLCBub3RpZnlXaGVuQ29tcGxldGVkKSB7XG4gICAgICAgIHRoaXMuUmVxdWVzdGVkQnkgPSByZXF1ZXN0ZWRCeTtcbiAgICAgICAgdGhpcy5SZXF1ZXN0ZWRGb3IgPSByZXF1ZXN0ZWRGb3I7XG4gICAgICAgIHRoaXMuTm90aWZ5V2hlbkNvbXBsZXRlZCA9IG5vdGlmeVdoZW5Db21wbGV0ZWQ7XG4gICAgfVxuICAgIHJldHVybiBEYXRhUmVtb3ZhbFJlcXVlc3Q7XG59KCkpO1xuZXhwb3J0cy5EYXRhUmVtb3ZhbFJlcXVlc3QgPSBEYXRhUmVtb3ZhbFJlcXVlc3Q7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1EYXRhUmVtb3ZhbHMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiRGF0YVJlbW92YWxSZXF1ZXN0IiwiRGF0YVJlbW92YWxTdGF0dXNUeXBlcyIsInJlcXVlc3RlZEJ5IiwicmVxdWVzdGVkRm9yIiwibm90aWZ5V2hlbkNvbXBsZXRlZCIsIlJlcXVlc3RlZEJ5IiwiUmVxdWVzdGVkRm9yIiwiTm90aWZ5V2hlbkNvbXBsZXRlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/data_removal/DataRemovals.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/domains/Domain.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/domains/Domain.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UpdateDomainRequest = exports.CreateDomainRequest = void 0;\nvar CreateDomainRequest = /** @class */ function() {\n    function CreateDomainRequest(Name, ReturnPathDomain) {\n        this.Name = Name;\n        this.ReturnPathDomain = ReturnPathDomain;\n    }\n    return CreateDomainRequest;\n}();\nexports.CreateDomainRequest = CreateDomainRequest;\nvar UpdateDomainRequest = /** @class */ function() {\n    function UpdateDomainRequest(ReturnPathDomain) {\n        this.ReturnPathDomain = ReturnPathDomain;\n    }\n    return UpdateDomainRequest;\n}();\nexports.UpdateDomainRequest = UpdateDomainRequest; //# sourceMappingURL=Domain.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9kb21haW5zL0RvbWFpbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsMkJBQTJCLEdBQUdBLDJCQUEyQixHQUFHLEtBQUs7QUFDakUsSUFBSUcsc0JBQXNCLFdBQVcsR0FBSTtJQUNyQyxTQUFTQSxvQkFBb0JDLElBQUksRUFBRUMsZ0JBQWdCO1FBQy9DLElBQUksQ0FBQ0QsSUFBSSxHQUFHQTtRQUNaLElBQUksQ0FBQ0MsZ0JBQWdCLEdBQUdBO0lBQzVCO0lBQ0EsT0FBT0Y7QUFDWDtBQUNBSCwyQkFBMkIsR0FBR0c7QUFDOUIsSUFBSUQsc0JBQXNCLFdBQVcsR0FBSTtJQUNyQyxTQUFTQSxvQkFBb0JHLGdCQUFnQjtRQUN6QyxJQUFJLENBQUNBLGdCQUFnQixHQUFHQTtJQUM1QjtJQUNBLE9BQU9IO0FBQ1g7QUFDQUYsMkJBQTJCLEdBQUdFLHFCQUM5QixrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy8ucG5wbS9wb3N0bWFya0A0LjAuNS9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2RvbWFpbnMvRG9tYWluLmpzPzE0MDciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVwZGF0ZURvbWFpblJlcXVlc3QgPSBleHBvcnRzLkNyZWF0ZURvbWFpblJlcXVlc3QgPSB2b2lkIDA7XG52YXIgQ3JlYXRlRG9tYWluUmVxdWVzdCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBDcmVhdGVEb21haW5SZXF1ZXN0KE5hbWUsIFJldHVyblBhdGhEb21haW4pIHtcbiAgICAgICAgdGhpcy5OYW1lID0gTmFtZTtcbiAgICAgICAgdGhpcy5SZXR1cm5QYXRoRG9tYWluID0gUmV0dXJuUGF0aERvbWFpbjtcbiAgICB9XG4gICAgcmV0dXJuIENyZWF0ZURvbWFpblJlcXVlc3Q7XG59KCkpO1xuZXhwb3J0cy5DcmVhdGVEb21haW5SZXF1ZXN0ID0gQ3JlYXRlRG9tYWluUmVxdWVzdDtcbnZhciBVcGRhdGVEb21haW5SZXF1ZXN0ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFVwZGF0ZURvbWFpblJlcXVlc3QoUmV0dXJuUGF0aERvbWFpbikge1xuICAgICAgICB0aGlzLlJldHVyblBhdGhEb21haW4gPSBSZXR1cm5QYXRoRG9tYWluO1xuICAgIH1cbiAgICByZXR1cm4gVXBkYXRlRG9tYWluUmVxdWVzdDtcbn0oKSk7XG5leHBvcnRzLlVwZGF0ZURvbWFpblJlcXVlc3QgPSBVcGRhdGVEb21haW5SZXF1ZXN0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RG9tYWluLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlVwZGF0ZURvbWFpblJlcXVlc3QiLCJDcmVhdGVEb21haW5SZXF1ZXN0IiwiTmFtZSIsIlJldHVyblBhdGhEb21haW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/domains/Domain.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/index.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/index.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./client/ClientOptions */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/client/ClientOptions.js\"), exports);\n__exportStar(__webpack_require__(/*! ./client/SupportingTypes */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/client/SupportingTypes.js\"), exports);\n__exportStar(__webpack_require__(/*! ./client/HttpClient */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/client/HttpClient.js\"), exports);\n__exportStar(__webpack_require__(/*! ./client/Callback */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/client/Callback.js\"), exports);\n__exportStar(__webpack_require__(/*! ./client/DefaultResponse */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/client/DefaultResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./client/FilteringParameters */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/client/FilteringParameters.js\"), exports);\n__exportStar(__webpack_require__(/*! ./bounces/Bounce */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/bounces/Bounce.js\"), exports);\n__exportStar(__webpack_require__(/*! ./bounces/BounceFilteringParameters */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/bounces/BounceFilteringParameters.js\"), exports);\n__exportStar(__webpack_require__(/*! ./message/Message */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/message/Message.js\"), exports);\n__exportStar(__webpack_require__(/*! ./message/SupportingTypes */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/message/SupportingTypes.js\"), exports);\n__exportStar(__webpack_require__(/*! ./messages/OutboundMessage */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/messages/OutboundMessage.js\"), exports);\n__exportStar(__webpack_require__(/*! ./messages/OutboundMessageOpen */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/messages/OutboundMessageOpen.js\"), exports);\n__exportStar(__webpack_require__(/*! ./messages/OutboundMessageClick */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/messages/OutboundMessageClick.js\"), exports);\n__exportStar(__webpack_require__(/*! ./messages/InboundMessage */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/messages/InboundMessage.js\"), exports);\n__exportStar(__webpack_require__(/*! ./messages/MessageFilteringParameters */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/messages/MessageFilteringParameters.js\"), exports);\n__exportStar(__webpack_require__(/*! ./templates/Template */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/templates/Template.js\"), exports);\n__exportStar(__webpack_require__(/*! ./server/Server */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/server/Server.js\"), exports);\n__exportStar(__webpack_require__(/*! ./server/Servers */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/server/Servers.js\"), exports);\n__exportStar(__webpack_require__(/*! ./server/ServerFilteringParameters */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/server/ServerFilteringParameters.js\"), exports);\n__exportStar(__webpack_require__(/*! ./domains/Domain */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/domains/Domain.js\"), exports);\n__exportStar(__webpack_require__(/*! ./senders/Signature */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/senders/Signature.js\"), exports);\n__exportStar(__webpack_require__(/*! ./suppressions/Suppression */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/suppressions/Suppression.js\"), exports);\n__exportStar(__webpack_require__(/*! ./stats/Stats */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/stats/Stats.js\"), exports);\n__exportStar(__webpack_require__(/*! ./stats/StatsFilteringParameters */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/stats/StatsFilteringParameters.js\"), exports);\n__exportStar(__webpack_require__(/*! ./triggers/InboundRule */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/triggers/InboundRule.js\"), exports);\n__exportStar(__webpack_require__(/*! ./webhooks/Webhooks */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/Webhooks.js\"), exports);\n__exportStar(__webpack_require__(/*! ./webhooks/Webhook */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/Webhook.js\"), exports);\n__exportStar(__webpack_require__(/*! ./webhooks/WebhookFilteringParameters */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/WebhookFilteringParameters.js\"), exports);\n__exportStar(__webpack_require__(/*! ./webhooks/payload/BounceWebhook */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/payload/BounceWebhook.js\"), exports);\n__exportStar(__webpack_require__(/*! ./webhooks/payload/DeliveryWebhook */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/payload/DeliveryWebhook.js\"), exports);\n__exportStar(__webpack_require__(/*! ./webhooks/payload/SpamComplaintWebhook */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/payload/SpamComplaintWebhook.js\"), exports);\n__exportStar(__webpack_require__(/*! ./webhooks/payload/ClickWebhook */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/payload/ClickWebhook.js\"), exports);\n__exportStar(__webpack_require__(/*! ./webhooks/payload/OpenWebhook */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/payload/OpenWebhook.js\"), exports);\n__exportStar(__webpack_require__(/*! ./webhooks/payload/SubscriptionChangeWebhook */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/payload/SubscriptionChangeWebhook.js\"), exports);\n__exportStar(__webpack_require__(/*! ./webhooks/payload/InboundWebhook */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/payload/InboundWebhook.js\"), exports);\n__exportStar(__webpack_require__(/*! ./suppressions/Suppression */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/suppressions/Suppression.js\"), exports);\n__exportStar(__webpack_require__(/*! ./suppressions/SuppressionFilteringParameters */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/suppressions/SuppressionFilteringParameters.js\"), exports);\n__exportStar(__webpack_require__(/*! ./streams/MessageStream */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/streams/MessageStream.js\"), exports);\n__exportStar(__webpack_require__(/*! ./streams/MessageStreamsFilteringParameters */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/streams/MessageStreamsFilteringParameters.js\"), exports);\n__exportStar(__webpack_require__(/*! ./data_removal/DataRemovals */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/data_removal/DataRemovals.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/message/Message.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/message/Message.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Message = void 0;\nvar Message = /** @class */ function() {\n    function Message(From, Subject, HtmlBody, TextBody, To, Cc, Bcc, ReplyTo, Tag, TrackOpens, TrackLinks, Headers, Attachments, Metadata) {\n        this.From = From;\n        this.To = To;\n        this.Cc = Cc;\n        this.Bcc = Bcc;\n        this.Subject = Subject;\n        this.ReplyTo = ReplyTo;\n        this.HtmlBody = HtmlBody;\n        this.TextBody = TextBody;\n        this.Tag = Tag;\n        this.TrackOpens = TrackOpens;\n        this.TrackLinks = TrackLinks;\n        this.Headers = Headers;\n        this.Attachments = Attachments;\n        this.Metadata = Metadata;\n    }\n    return Message;\n}();\nexports.Message = Message; //# sourceMappingURL=Message.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9tZXNzYWdlL01lc3NhZ2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGVBQWUsR0FBRyxLQUFLO0FBQ3ZCLElBQUlFLFVBQVUsV0FBVyxHQUFJO0lBQ3pCLFNBQVNBLFFBQVFDLElBQUksRUFBRUMsT0FBTyxFQUFFQyxRQUFRLEVBQUVDLFFBQVEsRUFBRUMsRUFBRSxFQUFFQyxFQUFFLEVBQUVDLEdBQUcsRUFBRUMsT0FBTyxFQUFFQyxHQUFHLEVBQUVDLFVBQVUsRUFBRUMsVUFBVSxFQUFFQyxPQUFPLEVBQUVDLFdBQVcsRUFBRUMsUUFBUTtRQUNqSSxJQUFJLENBQUNiLElBQUksR0FBR0E7UUFDWixJQUFJLENBQUNJLEVBQUUsR0FBR0E7UUFDVixJQUFJLENBQUNDLEVBQUUsR0FBR0E7UUFDVixJQUFJLENBQUNDLEdBQUcsR0FBR0E7UUFDWCxJQUFJLENBQUNMLE9BQU8sR0FBR0E7UUFDZixJQUFJLENBQUNNLE9BQU8sR0FBR0E7UUFDZixJQUFJLENBQUNMLFFBQVEsR0FBR0E7UUFDaEIsSUFBSSxDQUFDQyxRQUFRLEdBQUdBO1FBQ2hCLElBQUksQ0FBQ0ssR0FBRyxHQUFHQTtRQUNYLElBQUksQ0FBQ0MsVUFBVSxHQUFHQTtRQUNsQixJQUFJLENBQUNDLFVBQVUsR0FBR0E7UUFDbEIsSUFBSSxDQUFDQyxPQUFPLEdBQUdBO1FBQ2YsSUFBSSxDQUFDQyxXQUFXLEdBQUdBO1FBQ25CLElBQUksQ0FBQ0MsUUFBUSxHQUFHQTtJQUNwQjtJQUNBLE9BQU9kO0FBQ1g7QUFDQUYsZUFBZSxHQUFHRSxTQUNsQixtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy8ucG5wbS9wb3N0bWFya0A0LjAuNS9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL21lc3NhZ2UvTWVzc2FnZS5qcz9lMDkwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5NZXNzYWdlID0gdm9pZCAwO1xudmFyIE1lc3NhZ2UgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTWVzc2FnZShGcm9tLCBTdWJqZWN0LCBIdG1sQm9keSwgVGV4dEJvZHksIFRvLCBDYywgQmNjLCBSZXBseVRvLCBUYWcsIFRyYWNrT3BlbnMsIFRyYWNrTGlua3MsIEhlYWRlcnMsIEF0dGFjaG1lbnRzLCBNZXRhZGF0YSkge1xuICAgICAgICB0aGlzLkZyb20gPSBGcm9tO1xuICAgICAgICB0aGlzLlRvID0gVG87XG4gICAgICAgIHRoaXMuQ2MgPSBDYztcbiAgICAgICAgdGhpcy5CY2MgPSBCY2M7XG4gICAgICAgIHRoaXMuU3ViamVjdCA9IFN1YmplY3Q7XG4gICAgICAgIHRoaXMuUmVwbHlUbyA9IFJlcGx5VG87XG4gICAgICAgIHRoaXMuSHRtbEJvZHkgPSBIdG1sQm9keTtcbiAgICAgICAgdGhpcy5UZXh0Qm9keSA9IFRleHRCb2R5O1xuICAgICAgICB0aGlzLlRhZyA9IFRhZztcbiAgICAgICAgdGhpcy5UcmFja09wZW5zID0gVHJhY2tPcGVucztcbiAgICAgICAgdGhpcy5UcmFja0xpbmtzID0gVHJhY2tMaW5rcztcbiAgICAgICAgdGhpcy5IZWFkZXJzID0gSGVhZGVycztcbiAgICAgICAgdGhpcy5BdHRhY2htZW50cyA9IEF0dGFjaG1lbnRzO1xuICAgICAgICB0aGlzLk1ldGFkYXRhID0gTWV0YWRhdGE7XG4gICAgfVxuICAgIHJldHVybiBNZXNzYWdlO1xufSgpKTtcbmV4cG9ydHMuTWVzc2FnZSA9IE1lc3NhZ2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1NZXNzYWdlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIk1lc3NhZ2UiLCJGcm9tIiwiU3ViamVjdCIsIkh0bWxCb2R5IiwiVGV4dEJvZHkiLCJUbyIsIkNjIiwiQmNjIiwiUmVwbHlUbyIsIlRhZyIsIlRyYWNrT3BlbnMiLCJUcmFja0xpbmtzIiwiSGVhZGVycyIsIkF0dGFjaG1lbnRzIiwiTWV0YWRhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/message/Message.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/message/SupportingTypes.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/message/SupportingTypes.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Attachment = exports.Header = exports.ServerDeliveryTypes = exports.LinkClickLocation = exports.LinkTrackingOptions = void 0;\nvar LinkTrackingOptions;\n(function(LinkTrackingOptions) {\n    LinkTrackingOptions[\"TextOnly\"] = \"TextOnly\";\n    LinkTrackingOptions[\"HtmlOnly\"] = \"HtmlOnly\";\n    LinkTrackingOptions[\"HtmlAndText\"] = \"HtmlAndText\";\n    LinkTrackingOptions[\"None\"] = \"None\";\n})(LinkTrackingOptions = exports.LinkTrackingOptions || (exports.LinkTrackingOptions = {}));\nvar LinkClickLocation;\n(function(LinkClickLocation) {\n    LinkClickLocation[\"HTML\"] = \"HTML\";\n    LinkClickLocation[\"Text\"] = \"Text\";\n})(LinkClickLocation = exports.LinkClickLocation || (exports.LinkClickLocation = {}));\nvar ServerDeliveryTypes;\n(function(ServerDeliveryTypes) {\n    ServerDeliveryTypes[\"Live\"] = \"Live\";\n    ServerDeliveryTypes[\"Sandbox\"] = \"Sandbox\";\n})(ServerDeliveryTypes = exports.ServerDeliveryTypes || (exports.ServerDeliveryTypes = {}));\nvar Header = /** @class */ function() {\n    function Header(Name, Value) {\n        this.Name = Name;\n        this.Value = Value;\n    }\n    return Header;\n}();\nexports.Header = Header;\n/**\n * Attachment content\n *\n * @param Name - name of the attachment, for example book.pdf\n * @param Content - Base64 encoded content, for example: fs.readFileSync('/Folder/book.pdf').toString('base64')\n * @param ContentID - id of the attachment, in case we are referencing it, for example: cid:123book.pdf\n * @param ContentType - content type (json, image, etc)\n * @param ContentLength - length of the message\n */ var Attachment = /** @class */ function() {\n    function Attachment(Name, Content, ContentType, ContentID, ContentLength, Disposition) {\n        if (ContentID === void 0) {\n            ContentID = null;\n        }\n        this.Name = Name;\n        this.Content = Content;\n        this.ContentType = ContentType;\n        this.ContentID = ContentID;\n        this.ContentLength = ContentLength;\n        this.Disposition = Disposition;\n    }\n    return Attachment;\n}();\nexports.Attachment = Attachment; //# sourceMappingURL=SupportingTypes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9tZXNzYWdlL1N1cHBvcnRpbmdUeXBlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsa0JBQWtCLEdBQUdBLGNBQWMsR0FBR0EsMkJBQTJCLEdBQUdBLHlCQUF5QixHQUFHQSwyQkFBMkIsR0FBRyxLQUFLO0FBQ25JLElBQUlNO0FBQ0gsVUFBVUEsbUJBQW1CO0lBQzFCQSxtQkFBbUIsQ0FBQyxXQUFXLEdBQUc7SUFDbENBLG1CQUFtQixDQUFDLFdBQVcsR0FBRztJQUNsQ0EsbUJBQW1CLENBQUMsY0FBYyxHQUFHO0lBQ3JDQSxtQkFBbUIsQ0FBQyxPQUFPLEdBQUc7QUFDbEMsR0FBR0Esc0JBQXNCTixRQUFRTSxtQkFBbUIsSUFBS04sQ0FBQUEsMkJBQTJCLEdBQUcsQ0FBQztBQUN4RixJQUFJSztBQUNILFVBQVVBLGlCQUFpQjtJQUN4QkEsaUJBQWlCLENBQUMsT0FBTyxHQUFHO0lBQzVCQSxpQkFBaUIsQ0FBQyxPQUFPLEdBQUc7QUFDaEMsR0FBR0Esb0JBQW9CTCxRQUFRSyxpQkFBaUIsSUFBS0wsQ0FBQUEseUJBQXlCLEdBQUcsQ0FBQztBQUNsRixJQUFJSTtBQUNILFVBQVVBLG1CQUFtQjtJQUMxQkEsbUJBQW1CLENBQUMsT0FBTyxHQUFHO0lBQzlCQSxtQkFBbUIsQ0FBQyxVQUFVLEdBQUc7QUFDckMsR0FBR0Esc0JBQXNCSixRQUFRSSxtQkFBbUIsSUFBS0osQ0FBQUEsMkJBQTJCLEdBQUcsQ0FBQztBQUN4RixJQUFJRyxTQUFTLFdBQVcsR0FBSTtJQUN4QixTQUFTQSxPQUFPSSxJQUFJLEVBQUVDLEtBQUs7UUFDdkIsSUFBSSxDQUFDRCxJQUFJLEdBQUdBO1FBQ1osSUFBSSxDQUFDQyxLQUFLLEdBQUdBO0lBQ2pCO0lBQ0EsT0FBT0w7QUFDWDtBQUNBSCxjQUFjLEdBQUdHO0FBQ2pCOzs7Ozs7OztDQVFDLEdBQ0QsSUFBSUQsYUFBYSxXQUFXLEdBQUk7SUFDNUIsU0FBU0EsV0FBV0ssSUFBSSxFQUFFRSxPQUFPLEVBQUVDLFdBQVcsRUFBRUMsU0FBUyxFQUFFQyxhQUFhLEVBQUVDLFdBQVc7UUFDakYsSUFBSUYsY0FBYyxLQUFLLEdBQUc7WUFBRUEsWUFBWTtRQUFNO1FBQzlDLElBQUksQ0FBQ0osSUFBSSxHQUFHQTtRQUNaLElBQUksQ0FBQ0UsT0FBTyxHQUFHQTtRQUNmLElBQUksQ0FBQ0MsV0FBVyxHQUFHQTtRQUNuQixJQUFJLENBQUNDLFNBQVMsR0FBR0E7UUFDakIsSUFBSSxDQUFDQyxhQUFhLEdBQUdBO1FBQ3JCLElBQUksQ0FBQ0MsV0FBVyxHQUFHQTtJQUN2QjtJQUNBLE9BQU9YO0FBQ1g7QUFDQUYsa0JBQWtCLEdBQUdFLFlBQ3JCLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL3Bvc3RtYXJrQDQuMC41L25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvbWVzc2FnZS9TdXBwb3J0aW5nVHlwZXMuanM/NDIwOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQXR0YWNobWVudCA9IGV4cG9ydHMuSGVhZGVyID0gZXhwb3J0cy5TZXJ2ZXJEZWxpdmVyeVR5cGVzID0gZXhwb3J0cy5MaW5rQ2xpY2tMb2NhdGlvbiA9IGV4cG9ydHMuTGlua1RyYWNraW5nT3B0aW9ucyA9IHZvaWQgMDtcbnZhciBMaW5rVHJhY2tpbmdPcHRpb25zO1xuKGZ1bmN0aW9uIChMaW5rVHJhY2tpbmdPcHRpb25zKSB7XG4gICAgTGlua1RyYWNraW5nT3B0aW9uc1tcIlRleHRPbmx5XCJdID0gXCJUZXh0T25seVwiO1xuICAgIExpbmtUcmFja2luZ09wdGlvbnNbXCJIdG1sT25seVwiXSA9IFwiSHRtbE9ubHlcIjtcbiAgICBMaW5rVHJhY2tpbmdPcHRpb25zW1wiSHRtbEFuZFRleHRcIl0gPSBcIkh0bWxBbmRUZXh0XCI7XG4gICAgTGlua1RyYWNraW5nT3B0aW9uc1tcIk5vbmVcIl0gPSBcIk5vbmVcIjtcbn0pKExpbmtUcmFja2luZ09wdGlvbnMgPSBleHBvcnRzLkxpbmtUcmFja2luZ09wdGlvbnMgfHwgKGV4cG9ydHMuTGlua1RyYWNraW5nT3B0aW9ucyA9IHt9KSk7XG52YXIgTGlua0NsaWNrTG9jYXRpb247XG4oZnVuY3Rpb24gKExpbmtDbGlja0xvY2F0aW9uKSB7XG4gICAgTGlua0NsaWNrTG9jYXRpb25bXCJIVE1MXCJdID0gXCJIVE1MXCI7XG4gICAgTGlua0NsaWNrTG9jYXRpb25bXCJUZXh0XCJdID0gXCJUZXh0XCI7XG59KShMaW5rQ2xpY2tMb2NhdGlvbiA9IGV4cG9ydHMuTGlua0NsaWNrTG9jYXRpb24gfHwgKGV4cG9ydHMuTGlua0NsaWNrTG9jYXRpb24gPSB7fSkpO1xudmFyIFNlcnZlckRlbGl2ZXJ5VHlwZXM7XG4oZnVuY3Rpb24gKFNlcnZlckRlbGl2ZXJ5VHlwZXMpIHtcbiAgICBTZXJ2ZXJEZWxpdmVyeVR5cGVzW1wiTGl2ZVwiXSA9IFwiTGl2ZVwiO1xuICAgIFNlcnZlckRlbGl2ZXJ5VHlwZXNbXCJTYW5kYm94XCJdID0gXCJTYW5kYm94XCI7XG59KShTZXJ2ZXJEZWxpdmVyeVR5cGVzID0gZXhwb3J0cy5TZXJ2ZXJEZWxpdmVyeVR5cGVzIHx8IChleHBvcnRzLlNlcnZlckRlbGl2ZXJ5VHlwZXMgPSB7fSkpO1xudmFyIEhlYWRlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBIZWFkZXIoTmFtZSwgVmFsdWUpIHtcbiAgICAgICAgdGhpcy5OYW1lID0gTmFtZTtcbiAgICAgICAgdGhpcy5WYWx1ZSA9IFZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4gSGVhZGVyO1xufSgpKTtcbmV4cG9ydHMuSGVhZGVyID0gSGVhZGVyO1xuLyoqXG4gKiBBdHRhY2htZW50IGNvbnRlbnRcbiAqXG4gKiBAcGFyYW0gTmFtZSAtIG5hbWUgb2YgdGhlIGF0dGFjaG1lbnQsIGZvciBleGFtcGxlIGJvb2sucGRmXG4gKiBAcGFyYW0gQ29udGVudCAtIEJhc2U2NCBlbmNvZGVkIGNvbnRlbnQsIGZvciBleGFtcGxlOiBmcy5yZWFkRmlsZVN5bmMoJy9Gb2xkZXIvYm9vay5wZGYnKS50b1N0cmluZygnYmFzZTY0JylcbiAqIEBwYXJhbSBDb250ZW50SUQgLSBpZCBvZiB0aGUgYXR0YWNobWVudCwgaW4gY2FzZSB3ZSBhcmUgcmVmZXJlbmNpbmcgaXQsIGZvciBleGFtcGxlOiBjaWQ6MTIzYm9vay5wZGZcbiAqIEBwYXJhbSBDb250ZW50VHlwZSAtIGNvbnRlbnQgdHlwZSAoanNvbiwgaW1hZ2UsIGV0YylcbiAqIEBwYXJhbSBDb250ZW50TGVuZ3RoIC0gbGVuZ3RoIG9mIHRoZSBtZXNzYWdlXG4gKi9cbnZhciBBdHRhY2htZW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEF0dGFjaG1lbnQoTmFtZSwgQ29udGVudCwgQ29udGVudFR5cGUsIENvbnRlbnRJRCwgQ29udGVudExlbmd0aCwgRGlzcG9zaXRpb24pIHtcbiAgICAgICAgaWYgKENvbnRlbnRJRCA9PT0gdm9pZCAwKSB7IENvbnRlbnRJRCA9IG51bGw7IH1cbiAgICAgICAgdGhpcy5OYW1lID0gTmFtZTtcbiAgICAgICAgdGhpcy5Db250ZW50ID0gQ29udGVudDtcbiAgICAgICAgdGhpcy5Db250ZW50VHlwZSA9IENvbnRlbnRUeXBlO1xuICAgICAgICB0aGlzLkNvbnRlbnRJRCA9IENvbnRlbnRJRDtcbiAgICAgICAgdGhpcy5Db250ZW50TGVuZ3RoID0gQ29udGVudExlbmd0aDtcbiAgICAgICAgdGhpcy5EaXNwb3NpdGlvbiA9IERpc3Bvc2l0aW9uO1xuICAgIH1cbiAgICByZXR1cm4gQXR0YWNobWVudDtcbn0oKSk7XG5leHBvcnRzLkF0dGFjaG1lbnQgPSBBdHRhY2htZW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3VwcG9ydGluZ1R5cGVzLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkF0dGFjaG1lbnQiLCJIZWFkZXIiLCJTZXJ2ZXJEZWxpdmVyeVR5cGVzIiwiTGlua0NsaWNrTG9jYXRpb24iLCJMaW5rVHJhY2tpbmdPcHRpb25zIiwiTmFtZSIsIlZhbHVlIiwiQ29udGVudCIsIkNvbnRlbnRUeXBlIiwiQ29udGVudElEIiwiQ29udGVudExlbmd0aCIsIkRpc3Bvc2l0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/message/SupportingTypes.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/messages/InboundMessage.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/messages/InboundMessage.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=InboundMessage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9tZXNzYWdlcy9JbmJvdW5kTWVzc2FnZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQyxFQUM3RCwwQ0FBMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy8ucG5wbS9wb3N0bWFya0A0LjAuNS9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL21lc3NhZ2VzL0luYm91bmRNZXNzYWdlLmpzPzQxY2MiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1JbmJvdW5kTWVzc2FnZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/messages/InboundMessage.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/messages/MessageFilteringParameters.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/messages/MessageFilteringParameters.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.OutboundMessageClicksFilteringParameters = exports.OutboundMessageOpensFilteringParameters = exports.OutboundMessageTrackingFilteringParameters = exports.InboundMessagesFilteringParameters = exports.OutboundMessagesFilteringParameters = exports.InboundMessageStatus = exports.OutboundMessageStatus = void 0;\nvar FilteringParameters_1 = __webpack_require__(/*! ../client/FilteringParameters */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/client/FilteringParameters.js\");\nvar OutboundMessageStatus;\n(function(OutboundMessageStatus) {\n    OutboundMessageStatus[\"Queued\"] = \"queued\";\n    OutboundMessageStatus[\"Sent\"] = \"sent\";\n    OutboundMessageStatus[\"Processed\"] = \"processed\";\n})(OutboundMessageStatus = exports.OutboundMessageStatus || (exports.OutboundMessageStatus = {}));\nvar InboundMessageStatus;\n(function(InboundMessageStatus) {\n    InboundMessageStatus[\"Queued\"] = \"queued\";\n    InboundMessageStatus[\"Sent\"] = \"sent\";\n    InboundMessageStatus[\"Processed\"] = \"processed\";\n    InboundMessageStatus[\"Blocked\"] = \"blocked\";\n    InboundMessageStatus[\"Failed\"] = \"failed\";\n    InboundMessageStatus[\"Scheduled\"] = \"scheduled\";\n})(InboundMessageStatus = exports.InboundMessageStatus || (exports.InboundMessageStatus = {}));\n/**\n * Describes filtering parameters that can be used when retrieving outbound messages.\n * When pagination parameters are not specified, default values are set.\n */ var OutboundMessagesFilteringParameters = /** @class */ function(_super) {\n    __extends(OutboundMessagesFilteringParameters, _super);\n    function OutboundMessagesFilteringParameters(count, offset, recipient, fromEmail, tag, status, fromDate, toDate, subject, messageStream) {\n        if (count === void 0) {\n            count = 100;\n        }\n        if (offset === void 0) {\n            offset = 0;\n        }\n        var _this = _super.call(this, count, offset) || this;\n        _this.recipient = recipient;\n        _this.fromEmail = fromEmail;\n        _this.tag = tag;\n        _this.status = status;\n        _this.fromDate = fromDate;\n        _this.toDate = toDate;\n        _this.subject = subject;\n        _this.messageStream = messageStream;\n        return _this;\n    }\n    return OutboundMessagesFilteringParameters;\n}(FilteringParameters_1.FilteringParameters);\nexports.OutboundMessagesFilteringParameters = OutboundMessagesFilteringParameters;\n/**\n * Describes filtering parameters that can be used when retrieving inbound messages.\n * When pagination parameters are not specified, default values are set.\n */ var InboundMessagesFilteringParameters = /** @class */ function(_super) {\n    __extends(InboundMessagesFilteringParameters, _super);\n    function InboundMessagesFilteringParameters(count, offset, mailboxHash, recipient, fromEmail, tag, status, fromDate, toDate, subject) {\n        if (count === void 0) {\n            count = 100;\n        }\n        if (offset === void 0) {\n            offset = 0;\n        }\n        var _this = _super.call(this, count, offset) || this;\n        _this.status = status;\n        _this.mailboxHash = mailboxHash;\n        _this.recipient = recipient;\n        _this.fromEmail = fromEmail;\n        _this.tag = tag;\n        _this.fromDate = fromDate;\n        _this.toDate = toDate;\n        _this.subject = subject;\n        return _this;\n    }\n    return InboundMessagesFilteringParameters;\n}(FilteringParameters_1.FilteringParameters);\nexports.InboundMessagesFilteringParameters = InboundMessagesFilteringParameters;\n/**\n * Describes filtering parameters that can be used when retrieving tracked outbound messages.\n * When pagination parameters are not specified, default values are set.\n */ var OutboundMessageTrackingFilteringParameters = /** @class */ function(_super) {\n    __extends(OutboundMessageTrackingFilteringParameters, _super);\n    function OutboundMessageTrackingFilteringParameters(count, offset, recipient, tag, client_name, client_company, client_family, os_name, os_family, os_company, platform, country, region, city, messageStream) {\n        if (count === void 0) {\n            count = 100;\n        }\n        if (offset === void 0) {\n            offset = 0;\n        }\n        var _this = _super.call(this, count, offset) || this;\n        _this.recipient = recipient;\n        _this.tag = tag;\n        _this.client_name = client_name;\n        _this.client_company = client_company;\n        _this.client_family = client_family;\n        _this.os_name = os_name;\n        _this.os_family = os_family;\n        _this.os_company = os_company;\n        _this.platform = platform;\n        _this.country = country;\n        _this.region = region;\n        _this.city = city;\n        _this.messageStream = messageStream;\n        return _this;\n    }\n    return OutboundMessageTrackingFilteringParameters;\n}(FilteringParameters_1.FilteringParameters);\nexports.OutboundMessageTrackingFilteringParameters = OutboundMessageTrackingFilteringParameters;\nvar OutboundMessageOpensFilteringParameters = /** @class */ function(_super) {\n    __extends(OutboundMessageOpensFilteringParameters, _super);\n    function OutboundMessageOpensFilteringParameters() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return OutboundMessageOpensFilteringParameters;\n}(OutboundMessageTrackingFilteringParameters);\nexports.OutboundMessageOpensFilteringParameters = OutboundMessageOpensFilteringParameters;\nvar OutboundMessageClicksFilteringParameters = /** @class */ function(_super) {\n    __extends(OutboundMessageClicksFilteringParameters, _super);\n    function OutboundMessageClicksFilteringParameters() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return OutboundMessageClicksFilteringParameters;\n}(OutboundMessageTrackingFilteringParameters);\nexports.OutboundMessageClicksFilteringParameters = OutboundMessageClicksFilteringParameters; //# sourceMappingURL=MessageFilteringParameters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/messages/MessageFilteringParameters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/messages/OutboundMessage.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/messages/OutboundMessage.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=OutboundMessage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9tZXNzYWdlcy9PdXRib3VuZE1lc3NhZ2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUMsRUFDN0QsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9tZXNzYWdlcy9PdXRib3VuZE1lc3NhZ2UuanM/YTkzOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU91dGJvdW5kTWVzc2FnZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/messages/OutboundMessage.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/messages/OutboundMessageClick.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/messages/OutboundMessageClick.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=OutboundMessageClick.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9tZXNzYWdlcy9PdXRib3VuZE1lc3NhZ2VDbGljay5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQyxFQUM3RCxnREFBZ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy8ucG5wbS9wb3N0bWFya0A0LjAuNS9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL21lc3NhZ2VzL091dGJvdW5kTWVzc2FnZUNsaWNrLmpzP2ZjMzgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1PdXRib3VuZE1lc3NhZ2VDbGljay5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/messages/OutboundMessageClick.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/messages/OutboundMessageOpen.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/messages/OutboundMessageOpen.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=OutboundMessageOpen.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9tZXNzYWdlcy9PdXRib3VuZE1lc3NhZ2VPcGVuLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDLEVBQzdELCtDQUErQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL3Bvc3RtYXJrQDQuMC41L25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvbWVzc2FnZXMvT3V0Ym91bmRNZXNzYWdlT3Blbi5qcz8xOGY4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9T3V0Ym91bmRNZXNzYWdlT3Blbi5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/messages/OutboundMessageOpen.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/senders/Signature.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/senders/Signature.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateSignatureRequest = exports.UpdateSignatureRequest = void 0;\nvar UpdateSignatureRequest = /** @class */ function() {\n    function UpdateSignatureRequest(Name, ReplyToEmail, ReturnPathDomain, ConfirmationPersonalNote) {\n        this.Name = Name;\n        this.ReplyToEmail = ReplyToEmail;\n        this.ReturnPathDomain = ReturnPathDomain;\n        this.ConfirmationPersonalNote = ConfirmationPersonalNote;\n    }\n    return UpdateSignatureRequest;\n}();\nexports.UpdateSignatureRequest = UpdateSignatureRequest;\nvar CreateSignatureRequest = /** @class */ function() {\n    function CreateSignatureRequest(Name, FromEmail, ReplyToEmail, ReturnPathDomain, ConfirmationPersonalNote) {\n        this.Name = Name;\n        this.ReplyToEmail = ReplyToEmail;\n        this.ReturnPathDomain = ReturnPathDomain;\n        this.FromEmail = FromEmail;\n        this.ConfirmationPersonalNote = ConfirmationPersonalNote;\n    }\n    return CreateSignatureRequest;\n}();\nexports.CreateSignatureRequest = CreateSignatureRequest; //# sourceMappingURL=Signature.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9zZW5kZXJzL1NpZ25hdHVyZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsOEJBQThCLEdBQUdBLDhCQUE4QixHQUFHLEtBQUs7QUFDdkUsSUFBSUcseUJBQXlCLFdBQVcsR0FBSTtJQUN4QyxTQUFTQSx1QkFBdUJDLElBQUksRUFBRUMsWUFBWSxFQUFFQyxnQkFBZ0IsRUFBRUMsd0JBQXdCO1FBQzFGLElBQUksQ0FBQ0gsSUFBSSxHQUFHQTtRQUNaLElBQUksQ0FBQ0MsWUFBWSxHQUFHQTtRQUNwQixJQUFJLENBQUNDLGdCQUFnQixHQUFHQTtRQUN4QixJQUFJLENBQUNDLHdCQUF3QixHQUFHQTtJQUNwQztJQUNBLE9BQU9KO0FBQ1g7QUFDQUgsOEJBQThCLEdBQUdHO0FBQ2pDLElBQUlELHlCQUF5QixXQUFXLEdBQUk7SUFDeEMsU0FBU0EsdUJBQXVCRSxJQUFJLEVBQUVJLFNBQVMsRUFBRUgsWUFBWSxFQUFFQyxnQkFBZ0IsRUFBRUMsd0JBQXdCO1FBQ3JHLElBQUksQ0FBQ0gsSUFBSSxHQUFHQTtRQUNaLElBQUksQ0FBQ0MsWUFBWSxHQUFHQTtRQUNwQixJQUFJLENBQUNDLGdCQUFnQixHQUFHQTtRQUN4QixJQUFJLENBQUNFLFNBQVMsR0FBR0E7UUFDakIsSUFBSSxDQUFDRCx3QkFBd0IsR0FBR0E7SUFDcEM7SUFDQSxPQUFPTDtBQUNYO0FBQ0FGLDhCQUE4QixHQUFHRSx3QkFDakMscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9zZW5kZXJzL1NpZ25hdHVyZS5qcz81ZThlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5DcmVhdGVTaWduYXR1cmVSZXF1ZXN0ID0gZXhwb3J0cy5VcGRhdGVTaWduYXR1cmVSZXF1ZXN0ID0gdm9pZCAwO1xudmFyIFVwZGF0ZVNpZ25hdHVyZVJlcXVlc3QgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gVXBkYXRlU2lnbmF0dXJlUmVxdWVzdChOYW1lLCBSZXBseVRvRW1haWwsIFJldHVyblBhdGhEb21haW4sIENvbmZpcm1hdGlvblBlcnNvbmFsTm90ZSkge1xuICAgICAgICB0aGlzLk5hbWUgPSBOYW1lO1xuICAgICAgICB0aGlzLlJlcGx5VG9FbWFpbCA9IFJlcGx5VG9FbWFpbDtcbiAgICAgICAgdGhpcy5SZXR1cm5QYXRoRG9tYWluID0gUmV0dXJuUGF0aERvbWFpbjtcbiAgICAgICAgdGhpcy5Db25maXJtYXRpb25QZXJzb25hbE5vdGUgPSBDb25maXJtYXRpb25QZXJzb25hbE5vdGU7XG4gICAgfVxuICAgIHJldHVybiBVcGRhdGVTaWduYXR1cmVSZXF1ZXN0O1xufSgpKTtcbmV4cG9ydHMuVXBkYXRlU2lnbmF0dXJlUmVxdWVzdCA9IFVwZGF0ZVNpZ25hdHVyZVJlcXVlc3Q7XG52YXIgQ3JlYXRlU2lnbmF0dXJlUmVxdWVzdCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBDcmVhdGVTaWduYXR1cmVSZXF1ZXN0KE5hbWUsIEZyb21FbWFpbCwgUmVwbHlUb0VtYWlsLCBSZXR1cm5QYXRoRG9tYWluLCBDb25maXJtYXRpb25QZXJzb25hbE5vdGUpIHtcbiAgICAgICAgdGhpcy5OYW1lID0gTmFtZTtcbiAgICAgICAgdGhpcy5SZXBseVRvRW1haWwgPSBSZXBseVRvRW1haWw7XG4gICAgICAgIHRoaXMuUmV0dXJuUGF0aERvbWFpbiA9IFJldHVyblBhdGhEb21haW47XG4gICAgICAgIHRoaXMuRnJvbUVtYWlsID0gRnJvbUVtYWlsO1xuICAgICAgICB0aGlzLkNvbmZpcm1hdGlvblBlcnNvbmFsTm90ZSA9IENvbmZpcm1hdGlvblBlcnNvbmFsTm90ZTtcbiAgICB9XG4gICAgcmV0dXJuIENyZWF0ZVNpZ25hdHVyZVJlcXVlc3Q7XG59KCkpO1xuZXhwb3J0cy5DcmVhdGVTaWduYXR1cmVSZXF1ZXN0ID0gQ3JlYXRlU2lnbmF0dXJlUmVxdWVzdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNpZ25hdHVyZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJDcmVhdGVTaWduYXR1cmVSZXF1ZXN0IiwiVXBkYXRlU2lnbmF0dXJlUmVxdWVzdCIsIk5hbWUiLCJSZXBseVRvRW1haWwiLCJSZXR1cm5QYXRoRG9tYWluIiwiQ29uZmlybWF0aW9uUGVyc29uYWxOb3RlIiwiRnJvbUVtYWlsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/senders/Signature.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/server/Server.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/server/Server.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateServerRequest = exports.UpdateServerRequest = void 0;\nvar UpdateServerRequest = /** @class */ function() {\n    function UpdateServerRequest(Name, Color, SmtpApiActivated, RawEmailEnabled, InboundHookUrl, BounceHookUrl, OpenHookUrl, DeliveryHookUrl, ClickHookUrl, PostFirstOpenOnly, InboundSpamThreshold, TrackOpens, TrackLinks, IncludeBounceContentInHook, EnableSmtpApiErrorHooks, InboundDomain) {\n        this.Name = Name;\n        this.Color = Color;\n        this.SmtpApiActivated = SmtpApiActivated;\n        this.RawEmailEnabled = RawEmailEnabled;\n        this.InboundHookUrl = InboundHookUrl;\n        this.BounceHookUrl = BounceHookUrl;\n        this.OpenHookUrl = OpenHookUrl;\n        this.DeliveryHookUrl = DeliveryHookUrl;\n        this.ClickHookUrl = ClickHookUrl;\n        this.PostFirstOpenOnly = PostFirstOpenOnly;\n        this.InboundSpamThreshold = InboundSpamThreshold;\n        this.InboundDomain = InboundDomain;\n        this.TrackOpens = TrackOpens;\n        this.TrackLinks = TrackLinks;\n        this.IncludeBounceContentInHook = IncludeBounceContentInHook;\n        this.EnableSmtpApiErrorHooks = EnableSmtpApiErrorHooks;\n    }\n    return UpdateServerRequest;\n}();\nexports.UpdateServerRequest = UpdateServerRequest;\nvar CreateServerRequest = /** @class */ function(_super) {\n    __extends(CreateServerRequest, _super);\n    function CreateServerRequest(Name, Color, SmtpApiActivated, RawEmailEnabled, InboundHookUrl, BounceHookUrl, OpenHookUrl, DeliveryHookUrl, ClickHookUrl, PostFirstOpenOnly, InboundSpamThreshold, TrackOpens, TrackLinks, IncludeBounceContentInHook, EnableSmtpApiErrorHooks, InboundDomain, DeliveryType) {\n        var _this = _super.call(this, Name, Color, SmtpApiActivated, RawEmailEnabled, InboundHookUrl, BounceHookUrl, OpenHookUrl, DeliveryHookUrl, ClickHookUrl, PostFirstOpenOnly, InboundSpamThreshold, TrackOpens, TrackLinks, IncludeBounceContentInHook, EnableSmtpApiErrorHooks, InboundDomain) || this;\n        _this.DeliveryType = DeliveryType;\n        return _this;\n    }\n    return CreateServerRequest;\n}(UpdateServerRequest);\nexports.CreateServerRequest = CreateServerRequest; //# sourceMappingURL=Server.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9zZXJ2ZXIvU2VydmVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsWUFBWSxDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLFNBQVMsSUFBSztJQUN4QyxJQUFJQyxnQkFBZ0IsU0FBVUMsQ0FBQyxFQUFFQyxDQUFDO1FBQzlCRixnQkFBZ0JHLE9BQU9DLGNBQWMsSUFDaEM7WUFBRUMsV0FBVyxFQUFFO1FBQUMsY0FBYUMsU0FBUyxTQUFVTCxDQUFDLEVBQUVDLENBQUM7WUFBSUQsRUFBRUksU0FBUyxHQUFHSDtRQUFHLEtBQzFFLFNBQVVELENBQUMsRUFBRUMsQ0FBQztZQUFJLElBQUssSUFBSUssS0FBS0wsRUFBRyxJQUFJQyxPQUFPSyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDUixHQUFHSyxJQUFJTixDQUFDLENBQUNNLEVBQUUsR0FBR0wsQ0FBQyxDQUFDSyxFQUFFO1FBQUU7UUFDcEcsT0FBT1AsY0FBY0MsR0FBR0M7SUFDNUI7SUFDQSxPQUFPLFNBQVVELENBQUMsRUFBRUMsQ0FBQztRQUNqQixJQUFJLE9BQU9BLE1BQU0sY0FBY0EsTUFBTSxNQUNqQyxNQUFNLElBQUlTLFVBQVUseUJBQXlCQyxPQUFPVixLQUFLO1FBQzdERixjQUFjQyxHQUFHQztRQUNqQixTQUFTVztZQUFPLElBQUksQ0FBQ0MsV0FBVyxHQUFHYjtRQUFHO1FBQ3RDQSxFQUFFTyxTQUFTLEdBQUdOLE1BQU0sT0FBT0MsT0FBT1ksTUFBTSxDQUFDYixLQUFNVyxDQUFBQSxHQUFHTCxTQUFTLEdBQUdOLEVBQUVNLFNBQVMsRUFBRSxJQUFJSyxJQUFHO0lBQ3RGO0FBQ0o7QUFDQVYsOENBQTZDO0lBQUVlLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELDJCQUEyQixHQUFHQSwyQkFBMkIsR0FBRyxLQUFLO0FBQ2pFLElBQUlHLHNCQUFzQixXQUFXLEdBQUk7SUFDckMsU0FBU0Esb0JBQW9CQyxJQUFJLEVBQUVDLEtBQUssRUFBRUMsZ0JBQWdCLEVBQUVDLGVBQWUsRUFBRUMsY0FBYyxFQUFFQyxhQUFhLEVBQUVDLFdBQVcsRUFBRUMsZUFBZSxFQUFFQyxZQUFZLEVBQUVDLGlCQUFpQixFQUFFQyxvQkFBb0IsRUFBRUMsVUFBVSxFQUFFQyxVQUFVLEVBQUVDLDBCQUEwQixFQUFFQyx1QkFBdUIsRUFBRUMsYUFBYTtRQUN2UixJQUFJLENBQUNmLElBQUksR0FBR0E7UUFDWixJQUFJLENBQUNDLEtBQUssR0FBR0E7UUFDYixJQUFJLENBQUNDLGdCQUFnQixHQUFHQTtRQUN4QixJQUFJLENBQUNDLGVBQWUsR0FBR0E7UUFDdkIsSUFBSSxDQUFDQyxjQUFjLEdBQUdBO1FBQ3RCLElBQUksQ0FBQ0MsYUFBYSxHQUFHQTtRQUNyQixJQUFJLENBQUNDLFdBQVcsR0FBR0E7UUFDbkIsSUFBSSxDQUFDQyxlQUFlLEdBQUdBO1FBQ3ZCLElBQUksQ0FBQ0MsWUFBWSxHQUFHQTtRQUNwQixJQUFJLENBQUNDLGlCQUFpQixHQUFHQTtRQUN6QixJQUFJLENBQUNDLG9CQUFvQixHQUFHQTtRQUM1QixJQUFJLENBQUNLLGFBQWEsR0FBR0E7UUFDckIsSUFBSSxDQUFDSixVQUFVLEdBQUdBO1FBQ2xCLElBQUksQ0FBQ0MsVUFBVSxHQUFHQTtRQUNsQixJQUFJLENBQUNDLDBCQUEwQixHQUFHQTtRQUNsQyxJQUFJLENBQUNDLHVCQUF1QixHQUFHQTtJQUNuQztJQUNBLE9BQU9mO0FBQ1g7QUFDQUgsMkJBQTJCLEdBQUdHO0FBQzlCLElBQUlELHNCQUFzQixXQUFXLEdBQUksU0FBVWtCLE1BQU07SUFDckR0QyxVQUFVb0IscUJBQXFCa0I7SUFDL0IsU0FBU2xCLG9CQUFvQkUsSUFBSSxFQUFFQyxLQUFLLEVBQUVDLGdCQUFnQixFQUFFQyxlQUFlLEVBQUVDLGNBQWMsRUFBRUMsYUFBYSxFQUFFQyxXQUFXLEVBQUVDLGVBQWUsRUFBRUMsWUFBWSxFQUFFQyxpQkFBaUIsRUFBRUMsb0JBQW9CLEVBQUVDLFVBQVUsRUFBRUMsVUFBVSxFQUFFQywwQkFBMEIsRUFBRUMsdUJBQXVCLEVBQUVDLGFBQWEsRUFBRUUsWUFBWTtRQUNyUyxJQUFJQyxRQUFRRixPQUFPM0IsSUFBSSxDQUFDLElBQUksRUFBRVcsTUFBTUMsT0FBT0Msa0JBQWtCQyxpQkFBaUJDLGdCQUFnQkMsZUFBZUMsYUFBYUMsaUJBQWlCQyxjQUFjQyxtQkFBbUJDLHNCQUFzQkMsWUFBWUMsWUFBWUMsNEJBQTRCQyx5QkFBeUJDLGtCQUFrQixJQUFJO1FBQ3JTRyxNQUFNRCxZQUFZLEdBQUdBO1FBQ3JCLE9BQU9DO0lBQ1g7SUFDQSxPQUFPcEI7QUFDWCxFQUFFQztBQUNGSCwyQkFBMkIsR0FBR0UscUJBQzlCLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL3Bvc3RtYXJrQDQuMC41L25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvc2VydmVyL1NlcnZlci5qcz9hNmRmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBiICE9PSBcImZ1bmN0aW9uXCIgJiYgYiAhPT0gbnVsbClcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ3JlYXRlU2VydmVyUmVxdWVzdCA9IGV4cG9ydHMuVXBkYXRlU2VydmVyUmVxdWVzdCA9IHZvaWQgMDtcbnZhciBVcGRhdGVTZXJ2ZXJSZXF1ZXN0ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFVwZGF0ZVNlcnZlclJlcXVlc3QoTmFtZSwgQ29sb3IsIFNtdHBBcGlBY3RpdmF0ZWQsIFJhd0VtYWlsRW5hYmxlZCwgSW5ib3VuZEhvb2tVcmwsIEJvdW5jZUhvb2tVcmwsIE9wZW5Ib29rVXJsLCBEZWxpdmVyeUhvb2tVcmwsIENsaWNrSG9va1VybCwgUG9zdEZpcnN0T3Blbk9ubHksIEluYm91bmRTcGFtVGhyZXNob2xkLCBUcmFja09wZW5zLCBUcmFja0xpbmtzLCBJbmNsdWRlQm91bmNlQ29udGVudEluSG9vaywgRW5hYmxlU210cEFwaUVycm9ySG9va3MsIEluYm91bmREb21haW4pIHtcbiAgICAgICAgdGhpcy5OYW1lID0gTmFtZTtcbiAgICAgICAgdGhpcy5Db2xvciA9IENvbG9yO1xuICAgICAgICB0aGlzLlNtdHBBcGlBY3RpdmF0ZWQgPSBTbXRwQXBpQWN0aXZhdGVkO1xuICAgICAgICB0aGlzLlJhd0VtYWlsRW5hYmxlZCA9IFJhd0VtYWlsRW5hYmxlZDtcbiAgICAgICAgdGhpcy5JbmJvdW5kSG9va1VybCA9IEluYm91bmRIb29rVXJsO1xuICAgICAgICB0aGlzLkJvdW5jZUhvb2tVcmwgPSBCb3VuY2VIb29rVXJsO1xuICAgICAgICB0aGlzLk9wZW5Ib29rVXJsID0gT3Blbkhvb2tVcmw7XG4gICAgICAgIHRoaXMuRGVsaXZlcnlIb29rVXJsID0gRGVsaXZlcnlIb29rVXJsO1xuICAgICAgICB0aGlzLkNsaWNrSG9va1VybCA9IENsaWNrSG9va1VybDtcbiAgICAgICAgdGhpcy5Qb3N0Rmlyc3RPcGVuT25seSA9IFBvc3RGaXJzdE9wZW5Pbmx5O1xuICAgICAgICB0aGlzLkluYm91bmRTcGFtVGhyZXNob2xkID0gSW5ib3VuZFNwYW1UaHJlc2hvbGQ7XG4gICAgICAgIHRoaXMuSW5ib3VuZERvbWFpbiA9IEluYm91bmREb21haW47XG4gICAgICAgIHRoaXMuVHJhY2tPcGVucyA9IFRyYWNrT3BlbnM7XG4gICAgICAgIHRoaXMuVHJhY2tMaW5rcyA9IFRyYWNrTGlua3M7XG4gICAgICAgIHRoaXMuSW5jbHVkZUJvdW5jZUNvbnRlbnRJbkhvb2sgPSBJbmNsdWRlQm91bmNlQ29udGVudEluSG9vaztcbiAgICAgICAgdGhpcy5FbmFibGVTbXRwQXBpRXJyb3JIb29rcyA9IEVuYWJsZVNtdHBBcGlFcnJvckhvb2tzO1xuICAgIH1cbiAgICByZXR1cm4gVXBkYXRlU2VydmVyUmVxdWVzdDtcbn0oKSk7XG5leHBvcnRzLlVwZGF0ZVNlcnZlclJlcXVlc3QgPSBVcGRhdGVTZXJ2ZXJSZXF1ZXN0O1xudmFyIENyZWF0ZVNlcnZlclJlcXVlc3QgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKENyZWF0ZVNlcnZlclJlcXVlc3QsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gQ3JlYXRlU2VydmVyUmVxdWVzdChOYW1lLCBDb2xvciwgU210cEFwaUFjdGl2YXRlZCwgUmF3RW1haWxFbmFibGVkLCBJbmJvdW5kSG9va1VybCwgQm91bmNlSG9va1VybCwgT3Blbkhvb2tVcmwsIERlbGl2ZXJ5SG9va1VybCwgQ2xpY2tIb29rVXJsLCBQb3N0Rmlyc3RPcGVuT25seSwgSW5ib3VuZFNwYW1UaHJlc2hvbGQsIFRyYWNrT3BlbnMsIFRyYWNrTGlua3MsIEluY2x1ZGVCb3VuY2VDb250ZW50SW5Ib29rLCBFbmFibGVTbXRwQXBpRXJyb3JIb29rcywgSW5ib3VuZERvbWFpbiwgRGVsaXZlcnlUeXBlKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIE5hbWUsIENvbG9yLCBTbXRwQXBpQWN0aXZhdGVkLCBSYXdFbWFpbEVuYWJsZWQsIEluYm91bmRIb29rVXJsLCBCb3VuY2VIb29rVXJsLCBPcGVuSG9va1VybCwgRGVsaXZlcnlIb29rVXJsLCBDbGlja0hvb2tVcmwsIFBvc3RGaXJzdE9wZW5Pbmx5LCBJbmJvdW5kU3BhbVRocmVzaG9sZCwgVHJhY2tPcGVucywgVHJhY2tMaW5rcywgSW5jbHVkZUJvdW5jZUNvbnRlbnRJbkhvb2ssIEVuYWJsZVNtdHBBcGlFcnJvckhvb2tzLCBJbmJvdW5kRG9tYWluKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy5EZWxpdmVyeVR5cGUgPSBEZWxpdmVyeVR5cGU7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgcmV0dXJuIENyZWF0ZVNlcnZlclJlcXVlc3Q7XG59KFVwZGF0ZVNlcnZlclJlcXVlc3QpKTtcbmV4cG9ydHMuQ3JlYXRlU2VydmVyUmVxdWVzdCA9IENyZWF0ZVNlcnZlclJlcXVlc3Q7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TZXJ2ZXIuanMubWFwIl0sIm5hbWVzIjpbIl9fZXh0ZW5kcyIsImV4dGVuZFN0YXRpY3MiLCJkIiwiYiIsIk9iamVjdCIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiQXJyYXkiLCJwIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiVHlwZUVycm9yIiwiU3RyaW5nIiwiX18iLCJjb25zdHJ1Y3RvciIsImNyZWF0ZSIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQ3JlYXRlU2VydmVyUmVxdWVzdCIsIlVwZGF0ZVNlcnZlclJlcXVlc3QiLCJOYW1lIiwiQ29sb3IiLCJTbXRwQXBpQWN0aXZhdGVkIiwiUmF3RW1haWxFbmFibGVkIiwiSW5ib3VuZEhvb2tVcmwiLCJCb3VuY2VIb29rVXJsIiwiT3Blbkhvb2tVcmwiLCJEZWxpdmVyeUhvb2tVcmwiLCJDbGlja0hvb2tVcmwiLCJQb3N0Rmlyc3RPcGVuT25seSIsIkluYm91bmRTcGFtVGhyZXNob2xkIiwiVHJhY2tPcGVucyIsIlRyYWNrTGlua3MiLCJJbmNsdWRlQm91bmNlQ29udGVudEluSG9vayIsIkVuYWJsZVNtdHBBcGlFcnJvckhvb2tzIiwiSW5ib3VuZERvbWFpbiIsIl9zdXBlciIsIkRlbGl2ZXJ5VHlwZSIsIl90aGlzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/server/Server.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/server/ServerFilteringParameters.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/server/ServerFilteringParameters.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ServerFilteringParameters = void 0;\nvar FilteringParameters_1 = __webpack_require__(/*! ../client/FilteringParameters */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/client/FilteringParameters.js\");\n/**\n * Describes filtering parameters that can be used when retrieving servers.\n * When pagination parameters are not specified, default values are set.\n */ var ServerFilteringParameters = /** @class */ function(_super) {\n    __extends(ServerFilteringParameters, _super);\n    function ServerFilteringParameters(count, offset, name) {\n        if (count === void 0) {\n            count = 100;\n        }\n        if (offset === void 0) {\n            offset = 0;\n        }\n        var _this = _super.call(this, count, offset) || this;\n        _this.name = name;\n        return _this;\n    }\n    return ServerFilteringParameters;\n}(FilteringParameters_1.FilteringParameters);\nexports.ServerFilteringParameters = ServerFilteringParameters; //# sourceMappingURL=ServerFilteringParameters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9zZXJ2ZXIvU2VydmVyRmlsdGVyaW5nUGFyYW1ldGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLFlBQVksQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxTQUFTLElBQUs7SUFDeEMsSUFBSUMsZ0JBQWdCLFNBQVVDLENBQUMsRUFBRUMsQ0FBQztRQUM5QkYsZ0JBQWdCRyxPQUFPQyxjQUFjLElBQ2hDO1lBQUVDLFdBQVcsRUFBRTtRQUFDLGNBQWFDLFNBQVMsU0FBVUwsQ0FBQyxFQUFFQyxDQUFDO1lBQUlELEVBQUVJLFNBQVMsR0FBR0g7UUFBRyxLQUMxRSxTQUFVRCxDQUFDLEVBQUVDLENBQUM7WUFBSSxJQUFLLElBQUlLLEtBQUtMLEVBQUcsSUFBSUMsT0FBT0ssU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ1IsR0FBR0ssSUFBSU4sQ0FBQyxDQUFDTSxFQUFFLEdBQUdMLENBQUMsQ0FBQ0ssRUFBRTtRQUFFO1FBQ3BHLE9BQU9QLGNBQWNDLEdBQUdDO0lBQzVCO0lBQ0EsT0FBTyxTQUFVRCxDQUFDLEVBQUVDLENBQUM7UUFDakIsSUFBSSxPQUFPQSxNQUFNLGNBQWNBLE1BQU0sTUFDakMsTUFBTSxJQUFJUyxVQUFVLHlCQUF5QkMsT0FBT1YsS0FBSztRQUM3REYsY0FBY0MsR0FBR0M7UUFDakIsU0FBU1c7WUFBTyxJQUFJLENBQUNDLFdBQVcsR0FBR2I7UUFBRztRQUN0Q0EsRUFBRU8sU0FBUyxHQUFHTixNQUFNLE9BQU9DLE9BQU9ZLE1BQU0sQ0FBQ2IsS0FBTVcsQ0FBQUEsR0FBR0wsU0FBUyxHQUFHTixFQUFFTSxTQUFTLEVBQUUsSUFBSUssSUFBRztJQUN0RjtBQUNKO0FBQ0FWLDhDQUE2QztJQUFFZSxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxpQ0FBaUMsR0FBRyxLQUFLO0FBQ3pDLElBQUlHLHdCQUF3QkMsbUJBQU9BLENBQUMsdUpBQStCO0FBQ25FOzs7Q0FHQyxHQUNELElBQUlGLDRCQUE0QixXQUFXLEdBQUksU0FBVUcsTUFBTTtJQUMzRHZCLFVBQVVvQiwyQkFBMkJHO0lBQ3JDLFNBQVNILDBCQUEwQkksS0FBSyxFQUFFQyxNQUFNLEVBQUVDLElBQUk7UUFDbEQsSUFBSUYsVUFBVSxLQUFLLEdBQUc7WUFBRUEsUUFBUTtRQUFLO1FBQ3JDLElBQUlDLFdBQVcsS0FBSyxHQUFHO1lBQUVBLFNBQVM7UUFBRztRQUNyQyxJQUFJRSxRQUFRSixPQUFPWixJQUFJLENBQUMsSUFBSSxFQUFFYSxPQUFPQyxXQUFXLElBQUk7UUFDcERFLE1BQU1ELElBQUksR0FBR0E7UUFDYixPQUFPQztJQUNYO0lBQ0EsT0FBT1A7QUFDWCxFQUFFQyxzQkFBc0JPLG1CQUFtQjtBQUMzQ1YsaUNBQWlDLEdBQUdFLDJCQUNwQyxxREFBcUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy8ucG5wbS9wb3N0bWFya0A0LjAuNS9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3NlcnZlci9TZXJ2ZXJGaWx0ZXJpbmdQYXJhbWV0ZXJzLmpzP2UzMzgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwgcCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIgKyBTdHJpbmcoYikgKyBcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TZXJ2ZXJGaWx0ZXJpbmdQYXJhbWV0ZXJzID0gdm9pZCAwO1xudmFyIEZpbHRlcmluZ1BhcmFtZXRlcnNfMSA9IHJlcXVpcmUoXCIuLi9jbGllbnQvRmlsdGVyaW5nUGFyYW1ldGVyc1wiKTtcbi8qKlxuICogRGVzY3JpYmVzIGZpbHRlcmluZyBwYXJhbWV0ZXJzIHRoYXQgY2FuIGJlIHVzZWQgd2hlbiByZXRyaWV2aW5nIHNlcnZlcnMuXG4gKiBXaGVuIHBhZ2luYXRpb24gcGFyYW1ldGVycyBhcmUgbm90IHNwZWNpZmllZCwgZGVmYXVsdCB2YWx1ZXMgYXJlIHNldC5cbiAqL1xudmFyIFNlcnZlckZpbHRlcmluZ1BhcmFtZXRlcnMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFNlcnZlckZpbHRlcmluZ1BhcmFtZXRlcnMsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gU2VydmVyRmlsdGVyaW5nUGFyYW1ldGVycyhjb3VudCwgb2Zmc2V0LCBuYW1lKSB7XG4gICAgICAgIGlmIChjb3VudCA9PT0gdm9pZCAwKSB7IGNvdW50ID0gMTAwOyB9XG4gICAgICAgIGlmIChvZmZzZXQgPT09IHZvaWQgMCkgeyBvZmZzZXQgPSAwOyB9XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIGNvdW50LCBvZmZzZXQpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIHJldHVybiBTZXJ2ZXJGaWx0ZXJpbmdQYXJhbWV0ZXJzO1xufShGaWx0ZXJpbmdQYXJhbWV0ZXJzXzEuRmlsdGVyaW5nUGFyYW1ldGVycykpO1xuZXhwb3J0cy5TZXJ2ZXJGaWx0ZXJpbmdQYXJhbWV0ZXJzID0gU2VydmVyRmlsdGVyaW5nUGFyYW1ldGVycztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNlcnZlckZpbHRlcmluZ1BhcmFtZXRlcnMuanMubWFwIl0sIm5hbWVzIjpbIl9fZXh0ZW5kcyIsImV4dGVuZFN0YXRpY3MiLCJkIiwiYiIsIk9iamVjdCIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiQXJyYXkiLCJwIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiVHlwZUVycm9yIiwiU3RyaW5nIiwiX18iLCJjb25zdHJ1Y3RvciIsImNyZWF0ZSIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiU2VydmVyRmlsdGVyaW5nUGFyYW1ldGVycyIsIkZpbHRlcmluZ1BhcmFtZXRlcnNfMSIsInJlcXVpcmUiLCJfc3VwZXIiLCJjb3VudCIsIm9mZnNldCIsIm5hbWUiLCJfdGhpcyIsIkZpbHRlcmluZ1BhcmFtZXRlcnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/server/ServerFilteringParameters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/server/Servers.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/server/Servers.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=Servers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9zZXJ2ZXIvU2VydmVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQyxFQUM3RCxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy8ucG5wbS9wb3N0bWFya0A0LjAuNS9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3NlcnZlci9TZXJ2ZXJzLmpzPzg2MTciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TZXJ2ZXJzLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/server/Servers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/stats/Stats.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/stats/Stats.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=Stats.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9zdGF0cy9TdGF0cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQyxFQUM3RCxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy8ucG5wbS9wb3N0bWFya0A0LjAuNS9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3N0YXRzL1N0YXRzLmpzPzJlMDIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TdGF0cy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/stats/Stats.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/stats/StatsFilteringParameters.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/stats/StatsFilteringParameters.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.StatisticsFilteringParameters = void 0;\nvar StatisticsFilteringParameters = /** @class */ function() {\n    function StatisticsFilteringParameters(tag, fromDate, toDate, messageStream) {\n        this.tag = tag;\n        this.fromDate = fromDate;\n        this.toDate = toDate;\n        this.messageStream = messageStream;\n    }\n    return StatisticsFilteringParameters;\n}();\nexports.StatisticsFilteringParameters = StatisticsFilteringParameters; //# sourceMappingURL=StatsFilteringParameters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9zdGF0cy9TdGF0c0ZpbHRlcmluZ1BhcmFtZXRlcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHFDQUFxQyxHQUFHLEtBQUs7QUFDN0MsSUFBSUUsZ0NBQWdDLFdBQVcsR0FBSTtJQUMvQyxTQUFTQSw4QkFBOEJDLEdBQUcsRUFBRUMsUUFBUSxFQUFFQyxNQUFNLEVBQUVDLGFBQWE7UUFDdkUsSUFBSSxDQUFDSCxHQUFHLEdBQUdBO1FBQ1gsSUFBSSxDQUFDQyxRQUFRLEdBQUdBO1FBQ2hCLElBQUksQ0FBQ0MsTUFBTSxHQUFHQTtRQUNkLElBQUksQ0FBQ0MsYUFBYSxHQUFHQTtJQUN6QjtJQUNBLE9BQU9KO0FBQ1g7QUFDQUYscUNBQXFDLEdBQUdFLCtCQUN4QyxvREFBb0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy8ucG5wbS9wb3N0bWFya0A0LjAuNS9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3N0YXRzL1N0YXRzRmlsdGVyaW5nUGFyYW1ldGVycy5qcz9hYjc3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TdGF0aXN0aWNzRmlsdGVyaW5nUGFyYW1ldGVycyA9IHZvaWQgMDtcbnZhciBTdGF0aXN0aWNzRmlsdGVyaW5nUGFyYW1ldGVycyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBTdGF0aXN0aWNzRmlsdGVyaW5nUGFyYW1ldGVycyh0YWcsIGZyb21EYXRlLCB0b0RhdGUsIG1lc3NhZ2VTdHJlYW0pIHtcbiAgICAgICAgdGhpcy50YWcgPSB0YWc7XG4gICAgICAgIHRoaXMuZnJvbURhdGUgPSBmcm9tRGF0ZTtcbiAgICAgICAgdGhpcy50b0RhdGUgPSB0b0RhdGU7XG4gICAgICAgIHRoaXMubWVzc2FnZVN0cmVhbSA9IG1lc3NhZ2VTdHJlYW07XG4gICAgfVxuICAgIHJldHVybiBTdGF0aXN0aWNzRmlsdGVyaW5nUGFyYW1ldGVycztcbn0oKSk7XG5leHBvcnRzLlN0YXRpc3RpY3NGaWx0ZXJpbmdQYXJhbWV0ZXJzID0gU3RhdGlzdGljc0ZpbHRlcmluZ1BhcmFtZXRlcnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TdGF0c0ZpbHRlcmluZ1BhcmFtZXRlcnMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiU3RhdGlzdGljc0ZpbHRlcmluZ1BhcmFtZXRlcnMiLCJ0YWciLCJmcm9tRGF0ZSIsInRvRGF0ZSIsIm1lc3NhZ2VTdHJlYW0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/stats/StatsFilteringParameters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/streams/MessageStream.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/streams/MessageStream.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateMessageStreamRequest = exports.UpdateMessageStreamRequest = exports.UnsubscribeHandlingTypes = void 0;\nvar UnsubscribeHandlingTypes;\n(function(UnsubscribeHandlingTypes) {\n    UnsubscribeHandlingTypes[\"None\"] = \"None\";\n    UnsubscribeHandlingTypes[\"Postmark\"] = \"Postmark\";\n    UnsubscribeHandlingTypes[\"Custom\"] = \"Custom\";\n})(UnsubscribeHandlingTypes = exports.UnsubscribeHandlingTypes || (exports.UnsubscribeHandlingTypes = {}));\nvar UpdateMessageStreamRequest = /** @class */ function() {\n    function UpdateMessageStreamRequest(name, description, subscriptionManagementConfiguration) {\n        this.Name = name;\n        this.Description = description;\n        this.SubscriptionManagementConfiguration = subscriptionManagementConfiguration;\n    }\n    return UpdateMessageStreamRequest;\n}();\nexports.UpdateMessageStreamRequest = UpdateMessageStreamRequest;\nvar CreateMessageStreamRequest = /** @class */ function() {\n    function CreateMessageStreamRequest(id, name, messageStreamType, description, subscriptionManagementConfiguration) {\n        this.Name = name;\n        this.Description = description;\n        this.ID = id;\n        this.MessageStreamType = messageStreamType;\n        this.SubscriptionManagementConfiguration = subscriptionManagementConfiguration;\n    }\n    return CreateMessageStreamRequest;\n}();\nexports.CreateMessageStreamRequest = CreateMessageStreamRequest; //# sourceMappingURL=MessageStream.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9zdHJlYW1zL01lc3NhZ2VTdHJlYW0uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGtDQUFrQyxHQUFHQSxrQ0FBa0MsR0FBR0EsZ0NBQWdDLEdBQUcsS0FBSztBQUNsSCxJQUFJSTtBQUNILFVBQVVBLHdCQUF3QjtJQUMvQkEsd0JBQXdCLENBQUMsT0FBTyxHQUFHO0lBQ25DQSx3QkFBd0IsQ0FBQyxXQUFXLEdBQUc7SUFDdkNBLHdCQUF3QixDQUFDLFNBQVMsR0FBRztBQUN6QyxHQUFHQSwyQkFBMkJKLFFBQVFJLHdCQUF3QixJQUFLSixDQUFBQSxnQ0FBZ0MsR0FBRyxDQUFDO0FBQ3ZHLElBQUlHLDZCQUE2QixXQUFXLEdBQUk7SUFDNUMsU0FBU0EsMkJBQTJCRSxJQUFJLEVBQUVDLFdBQVcsRUFBRUMsbUNBQW1DO1FBQ3RGLElBQUksQ0FBQ0MsSUFBSSxHQUFHSDtRQUNaLElBQUksQ0FBQ0ksV0FBVyxHQUFHSDtRQUNuQixJQUFJLENBQUNJLG1DQUFtQyxHQUFHSDtJQUMvQztJQUNBLE9BQU9KO0FBQ1g7QUFDQUgsa0NBQWtDLEdBQUdHO0FBQ3JDLElBQUlELDZCQUE2QixXQUFXLEdBQUk7SUFDNUMsU0FBU0EsMkJBQTJCUyxFQUFFLEVBQUVOLElBQUksRUFBRU8saUJBQWlCLEVBQUVOLFdBQVcsRUFBRUMsbUNBQW1DO1FBQzdHLElBQUksQ0FBQ0MsSUFBSSxHQUFHSDtRQUNaLElBQUksQ0FBQ0ksV0FBVyxHQUFHSDtRQUNuQixJQUFJLENBQUNPLEVBQUUsR0FBR0Y7UUFDVixJQUFJLENBQUNHLGlCQUFpQixHQUFHRjtRQUN6QixJQUFJLENBQUNGLG1DQUFtQyxHQUFHSDtJQUMvQztJQUNBLE9BQU9MO0FBQ1g7QUFDQUYsa0NBQWtDLEdBQUdFLDRCQUNyQyx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy8ucG5wbS9wb3N0bWFya0A0LjAuNS9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3N0cmVhbXMvTWVzc2FnZVN0cmVhbS5qcz85Yzg3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5DcmVhdGVNZXNzYWdlU3RyZWFtUmVxdWVzdCA9IGV4cG9ydHMuVXBkYXRlTWVzc2FnZVN0cmVhbVJlcXVlc3QgPSBleHBvcnRzLlVuc3Vic2NyaWJlSGFuZGxpbmdUeXBlcyA9IHZvaWQgMDtcbnZhciBVbnN1YnNjcmliZUhhbmRsaW5nVHlwZXM7XG4oZnVuY3Rpb24gKFVuc3Vic2NyaWJlSGFuZGxpbmdUeXBlcykge1xuICAgIFVuc3Vic2NyaWJlSGFuZGxpbmdUeXBlc1tcIk5vbmVcIl0gPSBcIk5vbmVcIjtcbiAgICBVbnN1YnNjcmliZUhhbmRsaW5nVHlwZXNbXCJQb3N0bWFya1wiXSA9IFwiUG9zdG1hcmtcIjtcbiAgICBVbnN1YnNjcmliZUhhbmRsaW5nVHlwZXNbXCJDdXN0b21cIl0gPSBcIkN1c3RvbVwiO1xufSkoVW5zdWJzY3JpYmVIYW5kbGluZ1R5cGVzID0gZXhwb3J0cy5VbnN1YnNjcmliZUhhbmRsaW5nVHlwZXMgfHwgKGV4cG9ydHMuVW5zdWJzY3JpYmVIYW5kbGluZ1R5cGVzID0ge30pKTtcbnZhciBVcGRhdGVNZXNzYWdlU3RyZWFtUmVxdWVzdCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBVcGRhdGVNZXNzYWdlU3RyZWFtUmVxdWVzdChuYW1lLCBkZXNjcmlwdGlvbiwgc3Vic2NyaXB0aW9uTWFuYWdlbWVudENvbmZpZ3VyYXRpb24pIHtcbiAgICAgICAgdGhpcy5OYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5EZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xuICAgICAgICB0aGlzLlN1YnNjcmlwdGlvbk1hbmFnZW1lbnRDb25maWd1cmF0aW9uID0gc3Vic2NyaXB0aW9uTWFuYWdlbWVudENvbmZpZ3VyYXRpb247XG4gICAgfVxuICAgIHJldHVybiBVcGRhdGVNZXNzYWdlU3RyZWFtUmVxdWVzdDtcbn0oKSk7XG5leHBvcnRzLlVwZGF0ZU1lc3NhZ2VTdHJlYW1SZXF1ZXN0ID0gVXBkYXRlTWVzc2FnZVN0cmVhbVJlcXVlc3Q7XG52YXIgQ3JlYXRlTWVzc2FnZVN0cmVhbVJlcXVlc3QgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQ3JlYXRlTWVzc2FnZVN0cmVhbVJlcXVlc3QoaWQsIG5hbWUsIG1lc3NhZ2VTdHJlYW1UeXBlLCBkZXNjcmlwdGlvbiwgc3Vic2NyaXB0aW9uTWFuYWdlbWVudENvbmZpZ3VyYXRpb24pIHtcbiAgICAgICAgdGhpcy5OYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5EZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xuICAgICAgICB0aGlzLklEID0gaWQ7XG4gICAgICAgIHRoaXMuTWVzc2FnZVN0cmVhbVR5cGUgPSBtZXNzYWdlU3RyZWFtVHlwZTtcbiAgICAgICAgdGhpcy5TdWJzY3JpcHRpb25NYW5hZ2VtZW50Q29uZmlndXJhdGlvbiA9IHN1YnNjcmlwdGlvbk1hbmFnZW1lbnRDb25maWd1cmF0aW9uO1xuICAgIH1cbiAgICByZXR1cm4gQ3JlYXRlTWVzc2FnZVN0cmVhbVJlcXVlc3Q7XG59KCkpO1xuZXhwb3J0cy5DcmVhdGVNZXNzYWdlU3RyZWFtUmVxdWVzdCA9IENyZWF0ZU1lc3NhZ2VTdHJlYW1SZXF1ZXN0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TWVzc2FnZVN0cmVhbS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJDcmVhdGVNZXNzYWdlU3RyZWFtUmVxdWVzdCIsIlVwZGF0ZU1lc3NhZ2VTdHJlYW1SZXF1ZXN0IiwiVW5zdWJzY3JpYmVIYW5kbGluZ1R5cGVzIiwibmFtZSIsImRlc2NyaXB0aW9uIiwic3Vic2NyaXB0aW9uTWFuYWdlbWVudENvbmZpZ3VyYXRpb24iLCJOYW1lIiwiRGVzY3JpcHRpb24iLCJTdWJzY3JpcHRpb25NYW5hZ2VtZW50Q29uZmlndXJhdGlvbiIsImlkIiwibWVzc2FnZVN0cmVhbVR5cGUiLCJJRCIsIk1lc3NhZ2VTdHJlYW1UeXBlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/streams/MessageStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/streams/MessageStreamsFilteringParameters.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/streams/MessageStreamsFilteringParameters.js ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.MessageStreamsFilteringParameters = void 0;\n/**\n * Describes filtering parameters that can be used when retrieving message streams.\n */ var MessageStreamsFilteringParameters = /** @class */ function() {\n    function MessageStreamsFilteringParameters(messageStreamType, includeArchivedStreams) {\n        this.messageStreamType = messageStreamType;\n        this.includeArchivedStreams = includeArchivedStreams;\n    }\n    return MessageStreamsFilteringParameters;\n}();\nexports.MessageStreamsFilteringParameters = MessageStreamsFilteringParameters; //# sourceMappingURL=MessageStreamsFilteringParameters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9zdHJlYW1zL01lc3NhZ2VTdHJlYW1zRmlsdGVyaW5nUGFyYW1ldGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQseUNBQXlDLEdBQUcsS0FBSztBQUNqRDs7Q0FFQyxHQUNELElBQUlFLG9DQUFvQyxXQUFXLEdBQUk7SUFDbkQsU0FBU0Esa0NBQWtDQyxpQkFBaUIsRUFBRUMsc0JBQXNCO1FBQ2hGLElBQUksQ0FBQ0QsaUJBQWlCLEdBQUdBO1FBQ3pCLElBQUksQ0FBQ0Msc0JBQXNCLEdBQUdBO0lBQ2xDO0lBQ0EsT0FBT0Y7QUFDWDtBQUNBRix5Q0FBeUMsR0FBR0UsbUNBQzVDLDZEQUE2RCIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL3Bvc3RtYXJrQDQuMC41L25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvc3RyZWFtcy9NZXNzYWdlU3RyZWFtc0ZpbHRlcmluZ1BhcmFtZXRlcnMuanM/N2UyOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTWVzc2FnZVN0cmVhbXNGaWx0ZXJpbmdQYXJhbWV0ZXJzID0gdm9pZCAwO1xuLyoqXG4gKiBEZXNjcmliZXMgZmlsdGVyaW5nIHBhcmFtZXRlcnMgdGhhdCBjYW4gYmUgdXNlZCB3aGVuIHJldHJpZXZpbmcgbWVzc2FnZSBzdHJlYW1zLlxuICovXG52YXIgTWVzc2FnZVN0cmVhbXNGaWx0ZXJpbmdQYXJhbWV0ZXJzID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIE1lc3NhZ2VTdHJlYW1zRmlsdGVyaW5nUGFyYW1ldGVycyhtZXNzYWdlU3RyZWFtVHlwZSwgaW5jbHVkZUFyY2hpdmVkU3RyZWFtcykge1xuICAgICAgICB0aGlzLm1lc3NhZ2VTdHJlYW1UeXBlID0gbWVzc2FnZVN0cmVhbVR5cGU7XG4gICAgICAgIHRoaXMuaW5jbHVkZUFyY2hpdmVkU3RyZWFtcyA9IGluY2x1ZGVBcmNoaXZlZFN0cmVhbXM7XG4gICAgfVxuICAgIHJldHVybiBNZXNzYWdlU3RyZWFtc0ZpbHRlcmluZ1BhcmFtZXRlcnM7XG59KCkpO1xuZXhwb3J0cy5NZXNzYWdlU3RyZWFtc0ZpbHRlcmluZ1BhcmFtZXRlcnMgPSBNZXNzYWdlU3RyZWFtc0ZpbHRlcmluZ1BhcmFtZXRlcnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1NZXNzYWdlU3RyZWFtc0ZpbHRlcmluZ1BhcmFtZXRlcnMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiTWVzc2FnZVN0cmVhbXNGaWx0ZXJpbmdQYXJhbWV0ZXJzIiwibWVzc2FnZVN0cmVhbVR5cGUiLCJpbmNsdWRlQXJjaGl2ZWRTdHJlYW1zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/streams/MessageStreamsFilteringParameters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/suppressions/Suppression.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/suppressions/Suppression.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=Suppression.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9zdXBwcmVzc2lvbnMvU3VwcHJlc3Npb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUMsRUFDN0QsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9zdXBwcmVzc2lvbnMvU3VwcHJlc3Npb24uanM/ZjVlZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVN1cHByZXNzaW9uLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/suppressions/Suppression.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/suppressions/SuppressionFilteringParameters.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/suppressions/SuppressionFilteringParameters.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.SuppressionFilteringParameters = exports.SuppressionOrigin = exports.SuppressionReason = void 0;\nvar FilteringParameters_1 = __webpack_require__(/*! ../client/FilteringParameters */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/client/FilteringParameters.js\");\nvar SuppressionReason;\n(function(SuppressionReason) {\n    SuppressionReason[\"HardBounce\"] = \"HardBounce\";\n    SuppressionReason[\"SpamComplaint\"] = \"SpamComplaint\";\n    SuppressionReason[\"ManualSuppression\"] = \"ManualSuppression\";\n})(SuppressionReason = exports.SuppressionReason || (exports.SuppressionReason = {}));\nvar SuppressionOrigin;\n(function(SuppressionOrigin) {\n    SuppressionOrigin[\"Recipient\"] = \"Recipient\";\n    SuppressionOrigin[\"Customer\"] = \"Customer\";\n    SuppressionOrigin[\"Admin\"] = \"Admin\";\n})(SuppressionOrigin = exports.SuppressionOrigin || (exports.SuppressionOrigin = {}));\n/**\n * Describes filtering parameters that can be used when retrieving bounces.\n * When pagination parameters are not specified, default values are set.\n */ var SuppressionFilteringParameters = /** @class */ function(_super) {\n    __extends(SuppressionFilteringParameters, _super);\n    function SuppressionFilteringParameters(count, offset, suppressionReason, origin, emailAddress, fromDate, toDate) {\n        if (count === void 0) {\n            count = 100;\n        }\n        if (offset === void 0) {\n            offset = 0;\n        }\n        var _this = _super.call(this, count, offset) || this;\n        _this.suppressionReason = suppressionReason;\n        _this.origin = origin;\n        _this.emailAddress = emailAddress;\n        _this.fromDate = fromDate;\n        _this.toDate = toDate;\n        return _this;\n    }\n    return SuppressionFilteringParameters;\n}(FilteringParameters_1.FilteringParameters);\nexports.SuppressionFilteringParameters = SuppressionFilteringParameters; //# sourceMappingURL=SuppressionFilteringParameters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9zdXBwcmVzc2lvbnMvU3VwcHJlc3Npb25GaWx0ZXJpbmdQYXJhbWV0ZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsWUFBWSxDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLFNBQVMsSUFBSztJQUN4QyxJQUFJQyxnQkFBZ0IsU0FBVUMsQ0FBQyxFQUFFQyxDQUFDO1FBQzlCRixnQkFBZ0JHLE9BQU9DLGNBQWMsSUFDaEM7WUFBRUMsV0FBVyxFQUFFO1FBQUMsY0FBYUMsU0FBUyxTQUFVTCxDQUFDLEVBQUVDLENBQUM7WUFBSUQsRUFBRUksU0FBUyxHQUFHSDtRQUFHLEtBQzFFLFNBQVVELENBQUMsRUFBRUMsQ0FBQztZQUFJLElBQUssSUFBSUssS0FBS0wsRUFBRyxJQUFJQyxPQUFPSyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDUixHQUFHSyxJQUFJTixDQUFDLENBQUNNLEVBQUUsR0FBR0wsQ0FBQyxDQUFDSyxFQUFFO1FBQUU7UUFDcEcsT0FBT1AsY0FBY0MsR0FBR0M7SUFDNUI7SUFDQSxPQUFPLFNBQVVELENBQUMsRUFBRUMsQ0FBQztRQUNqQixJQUFJLE9BQU9BLE1BQU0sY0FBY0EsTUFBTSxNQUNqQyxNQUFNLElBQUlTLFVBQVUseUJBQXlCQyxPQUFPVixLQUFLO1FBQzdERixjQUFjQyxHQUFHQztRQUNqQixTQUFTVztZQUFPLElBQUksQ0FBQ0MsV0FBVyxHQUFHYjtRQUFHO1FBQ3RDQSxFQUFFTyxTQUFTLEdBQUdOLE1BQU0sT0FBT0MsT0FBT1ksTUFBTSxDQUFDYixLQUFNVyxDQUFBQSxHQUFHTCxTQUFTLEdBQUdOLEVBQUVNLFNBQVMsRUFBRSxJQUFJSyxJQUFHO0lBQ3RGO0FBQ0o7QUFDQVYsOENBQTZDO0lBQUVlLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHNDQUFzQyxHQUFHQSx5QkFBeUIsR0FBR0EseUJBQXlCLEdBQUcsS0FBSztBQUN0RyxJQUFJSyx3QkFBd0JDLG1CQUFPQSxDQUFDLHVKQUErQjtBQUNuRSxJQUFJRjtBQUNILFVBQVVBLGlCQUFpQjtJQUN4QkEsaUJBQWlCLENBQUMsYUFBYSxHQUFHO0lBQ2xDQSxpQkFBaUIsQ0FBQyxnQkFBZ0IsR0FBRztJQUNyQ0EsaUJBQWlCLENBQUMsb0JBQW9CLEdBQUc7QUFDN0MsR0FBR0Esb0JBQW9CSixRQUFRSSxpQkFBaUIsSUFBS0osQ0FBQUEseUJBQXlCLEdBQUcsQ0FBQztBQUNsRixJQUFJRztBQUNILFVBQVVBLGlCQUFpQjtJQUN4QkEsaUJBQWlCLENBQUMsWUFBWSxHQUFHO0lBQ2pDQSxpQkFBaUIsQ0FBQyxXQUFXLEdBQUc7SUFDaENBLGlCQUFpQixDQUFDLFFBQVEsR0FBRztBQUNqQyxHQUFHQSxvQkFBb0JILFFBQVFHLGlCQUFpQixJQUFLSCxDQUFBQSx5QkFBeUIsR0FBRyxDQUFDO0FBQ2xGOzs7Q0FHQyxHQUNELElBQUlFLGlDQUFpQyxXQUFXLEdBQUksU0FBVUssTUFBTTtJQUNoRXpCLFVBQVVvQixnQ0FBZ0NLO0lBQzFDLFNBQVNMLCtCQUErQk0sS0FBSyxFQUFFQyxNQUFNLEVBQUVDLGlCQUFpQixFQUFFQyxNQUFNLEVBQUVDLFlBQVksRUFBRUMsUUFBUSxFQUFFQyxNQUFNO1FBQzVHLElBQUlOLFVBQVUsS0FBSyxHQUFHO1lBQUVBLFFBQVE7UUFBSztRQUNyQyxJQUFJQyxXQUFXLEtBQUssR0FBRztZQUFFQSxTQUFTO1FBQUc7UUFDckMsSUFBSU0sUUFBUVIsT0FBT2QsSUFBSSxDQUFDLElBQUksRUFBRWUsT0FBT0MsV0FBVyxJQUFJO1FBQ3BETSxNQUFNTCxpQkFBaUIsR0FBR0E7UUFDMUJLLE1BQU1KLE1BQU0sR0FBR0E7UUFDZkksTUFBTUgsWUFBWSxHQUFHQTtRQUNyQkcsTUFBTUYsUUFBUSxHQUFHQTtRQUNqQkUsTUFBTUQsTUFBTSxHQUFHQTtRQUNmLE9BQU9DO0lBQ1g7SUFDQSxPQUFPYjtBQUNYLEVBQUVHLHNCQUFzQlcsbUJBQW1CO0FBQzNDaEIsc0NBQXNDLEdBQUdFLGdDQUN6QywwREFBMEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy8ucG5wbS9wb3N0bWFya0A0LjAuNS9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3N1cHByZXNzaW9ucy9TdXBwcmVzc2lvbkZpbHRlcmluZ1BhcmFtZXRlcnMuanM/MTlmMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChiLCBwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgICAgIHJldHVybiBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgIH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgYiAhPT0gXCJmdW5jdGlvblwiICYmIGIgIT09IG51bGwpXG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIiArIFN0cmluZyhiKSArIFwiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlN1cHByZXNzaW9uRmlsdGVyaW5nUGFyYW1ldGVycyA9IGV4cG9ydHMuU3VwcHJlc3Npb25PcmlnaW4gPSBleHBvcnRzLlN1cHByZXNzaW9uUmVhc29uID0gdm9pZCAwO1xudmFyIEZpbHRlcmluZ1BhcmFtZXRlcnNfMSA9IHJlcXVpcmUoXCIuLi9jbGllbnQvRmlsdGVyaW5nUGFyYW1ldGVyc1wiKTtcbnZhciBTdXBwcmVzc2lvblJlYXNvbjtcbihmdW5jdGlvbiAoU3VwcHJlc3Npb25SZWFzb24pIHtcbiAgICBTdXBwcmVzc2lvblJlYXNvbltcIkhhcmRCb3VuY2VcIl0gPSBcIkhhcmRCb3VuY2VcIjtcbiAgICBTdXBwcmVzc2lvblJlYXNvbltcIlNwYW1Db21wbGFpbnRcIl0gPSBcIlNwYW1Db21wbGFpbnRcIjtcbiAgICBTdXBwcmVzc2lvblJlYXNvbltcIk1hbnVhbFN1cHByZXNzaW9uXCJdID0gXCJNYW51YWxTdXBwcmVzc2lvblwiO1xufSkoU3VwcHJlc3Npb25SZWFzb24gPSBleHBvcnRzLlN1cHByZXNzaW9uUmVhc29uIHx8IChleHBvcnRzLlN1cHByZXNzaW9uUmVhc29uID0ge30pKTtcbnZhciBTdXBwcmVzc2lvbk9yaWdpbjtcbihmdW5jdGlvbiAoU3VwcHJlc3Npb25PcmlnaW4pIHtcbiAgICBTdXBwcmVzc2lvbk9yaWdpbltcIlJlY2lwaWVudFwiXSA9IFwiUmVjaXBpZW50XCI7XG4gICAgU3VwcHJlc3Npb25PcmlnaW5bXCJDdXN0b21lclwiXSA9IFwiQ3VzdG9tZXJcIjtcbiAgICBTdXBwcmVzc2lvbk9yaWdpbltcIkFkbWluXCJdID0gXCJBZG1pblwiO1xufSkoU3VwcHJlc3Npb25PcmlnaW4gPSBleHBvcnRzLlN1cHByZXNzaW9uT3JpZ2luIHx8IChleHBvcnRzLlN1cHByZXNzaW9uT3JpZ2luID0ge30pKTtcbi8qKlxuICogRGVzY3JpYmVzIGZpbHRlcmluZyBwYXJhbWV0ZXJzIHRoYXQgY2FuIGJlIHVzZWQgd2hlbiByZXRyaWV2aW5nIGJvdW5jZXMuXG4gKiBXaGVuIHBhZ2luYXRpb24gcGFyYW1ldGVycyBhcmUgbm90IHNwZWNpZmllZCwgZGVmYXVsdCB2YWx1ZXMgYXJlIHNldC5cbiAqL1xudmFyIFN1cHByZXNzaW9uRmlsdGVyaW5nUGFyYW1ldGVycyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoU3VwcHJlc3Npb25GaWx0ZXJpbmdQYXJhbWV0ZXJzLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIFN1cHByZXNzaW9uRmlsdGVyaW5nUGFyYW1ldGVycyhjb3VudCwgb2Zmc2V0LCBzdXBwcmVzc2lvblJlYXNvbiwgb3JpZ2luLCBlbWFpbEFkZHJlc3MsIGZyb21EYXRlLCB0b0RhdGUpIHtcbiAgICAgICAgaWYgKGNvdW50ID09PSB2b2lkIDApIHsgY291bnQgPSAxMDA7IH1cbiAgICAgICAgaWYgKG9mZnNldCA9PT0gdm9pZCAwKSB7IG9mZnNldCA9IDA7IH1cbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgY291bnQsIG9mZnNldCkgfHwgdGhpcztcbiAgICAgICAgX3RoaXMuc3VwcHJlc3Npb25SZWFzb24gPSBzdXBwcmVzc2lvblJlYXNvbjtcbiAgICAgICAgX3RoaXMub3JpZ2luID0gb3JpZ2luO1xuICAgICAgICBfdGhpcy5lbWFpbEFkZHJlc3MgPSBlbWFpbEFkZHJlc3M7XG4gICAgICAgIF90aGlzLmZyb21EYXRlID0gZnJvbURhdGU7XG4gICAgICAgIF90aGlzLnRvRGF0ZSA9IHRvRGF0ZTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICByZXR1cm4gU3VwcHJlc3Npb25GaWx0ZXJpbmdQYXJhbWV0ZXJzO1xufShGaWx0ZXJpbmdQYXJhbWV0ZXJzXzEuRmlsdGVyaW5nUGFyYW1ldGVycykpO1xuZXhwb3J0cy5TdXBwcmVzc2lvbkZpbHRlcmluZ1BhcmFtZXRlcnMgPSBTdXBwcmVzc2lvbkZpbHRlcmluZ1BhcmFtZXRlcnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TdXBwcmVzc2lvbkZpbHRlcmluZ1BhcmFtZXRlcnMuanMubWFwIl0sIm5hbWVzIjpbIl9fZXh0ZW5kcyIsImV4dGVuZFN0YXRpY3MiLCJkIiwiYiIsIk9iamVjdCIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiQXJyYXkiLCJwIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiVHlwZUVycm9yIiwiU3RyaW5nIiwiX18iLCJjb25zdHJ1Y3RvciIsImNyZWF0ZSIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiU3VwcHJlc3Npb25GaWx0ZXJpbmdQYXJhbWV0ZXJzIiwiU3VwcHJlc3Npb25PcmlnaW4iLCJTdXBwcmVzc2lvblJlYXNvbiIsIkZpbHRlcmluZ1BhcmFtZXRlcnNfMSIsInJlcXVpcmUiLCJfc3VwZXIiLCJjb3VudCIsIm9mZnNldCIsInN1cHByZXNzaW9uUmVhc29uIiwib3JpZ2luIiwiZW1haWxBZGRyZXNzIiwiZnJvbURhdGUiLCJ0b0RhdGUiLCJfdGhpcyIsIkZpbHRlcmluZ1BhcmFtZXRlcnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/suppressions/SuppressionFilteringParameters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/templates/Template.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/templates/Template.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.TemplateFilteringParameters = exports.TemplatedMessage = exports.TemplatesPushRequest = exports.TemplateTypes = exports.TemplateValidationOptions = exports.CreateTemplateRequest = exports.UpdateTemplateRequest = void 0;\nvar FilteringParameters_1 = __webpack_require__(/*! ../client/FilteringParameters */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/client/FilteringParameters.js\");\nvar UpdateTemplateRequest = /** @class */ function() {\n    function UpdateTemplateRequest(Name, Subject, HtmlBody, TextBody, Alias, TemplateType, LayoutTemplate) {\n        this.Name = Name;\n        this.Subject = Subject;\n        this.HtmlBody = HtmlBody;\n        this.TextBody = TextBody;\n        this.Alias = Alias;\n        this.LayoutTemplate = LayoutTemplate;\n        this.TemplateType = TemplateType;\n    }\n    return UpdateTemplateRequest;\n}();\nexports.UpdateTemplateRequest = UpdateTemplateRequest;\nvar CreateTemplateRequest = /** @class */ function(_super) {\n    __extends(CreateTemplateRequest, _super);\n    function CreateTemplateRequest(Name, Subject, HtmlBody, TextBody, Alias, TemplateType, LayoutTemplate) {\n        return _super.call(this, Name, Subject, HtmlBody, TextBody, Alias, TemplateType, LayoutTemplate) || this;\n    }\n    return CreateTemplateRequest;\n}(UpdateTemplateRequest);\nexports.CreateTemplateRequest = CreateTemplateRequest;\nvar TemplateValidationOptions = /** @class */ function() {\n    function TemplateValidationOptions(Subject, HtmlBody, TextBody, TestRenderModel, TemplateType, LayoutTemplate, InlineCssForHtmlTestRender) {\n        this.Subject = Subject;\n        this.HtmlBody = HtmlBody;\n        this.TextBody = TextBody;\n        this.TestRenderModel = TestRenderModel;\n        this.TemplateType = TemplateType;\n        this.LayoutTemplate = LayoutTemplate;\n        this.InlineCssForHtmlTestRender = InlineCssForHtmlTestRender;\n    }\n    return TemplateValidationOptions;\n}();\nexports.TemplateValidationOptions = TemplateValidationOptions;\nvar TemplateTypes;\n(function(TemplateTypes) {\n    TemplateTypes[\"Standard\"] = \"Standard\";\n    TemplateTypes[\"Layout\"] = \"Layout\";\n})(TemplateTypes = exports.TemplateTypes || (exports.TemplateTypes = {}));\nvar TemplatesPushRequest = /** @class */ function() {\n    function TemplatesPushRequest(SourceServerID, DestinationServerID, PerformChanges) {\n        this.SourceServerID = SourceServerID;\n        this.DestinationServerID = DestinationServerID;\n        this.PerformChanges = PerformChanges;\n    }\n    return TemplatesPushRequest;\n}();\nexports.TemplatesPushRequest = TemplatesPushRequest;\nvar TemplatedMessage = /** @class */ function() {\n    function TemplatedMessage(from, templateIdOrAlias, templateModel, to, cc, bcc, replyTo, tag, trackOpens, trackLinks, headers, attachments) {\n        this.From = from;\n        this.TemplateModel = templateModel;\n        if (typeof templateIdOrAlias === \"number\") {\n            this.TemplateId = templateIdOrAlias;\n        } else {\n            this.TemplateAlias = templateIdOrAlias;\n        }\n        this.To = to;\n        this.Cc = cc;\n        this.Bcc = bcc;\n        this.ReplyTo = replyTo;\n        this.Tag = tag;\n        this.TrackOpens = trackOpens;\n        this.TrackLinks = trackLinks;\n        this.Headers = headers;\n        this.Attachments = attachments;\n    }\n    return TemplatedMessage;\n}();\nexports.TemplatedMessage = TemplatedMessage;\n/**\n * Describes filtering parameters that can be used when retrieving templates.\n * When pagination parameters are not specified, default values are set.\n */ var TemplateFilteringParameters = /** @class */ function(_super) {\n    __extends(TemplateFilteringParameters, _super);\n    function TemplateFilteringParameters(count, offset, templateType, layoutTemplate) {\n        if (count === void 0) {\n            count = 100;\n        }\n        if (offset === void 0) {\n            offset = 0;\n        }\n        var _this = _super.call(this, count, offset) || this;\n        _this.templateType = templateType;\n        _this.layoutTemplate = layoutTemplate;\n        return _this;\n    }\n    return TemplateFilteringParameters;\n}(FilteringParameters_1.FilteringParameters);\nexports.TemplateFilteringParameters = TemplateFilteringParameters; //# sourceMappingURL=Template.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy90ZW1wbGF0ZXMvVGVtcGxhdGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxZQUFZLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsU0FBUyxJQUFLO0lBQ3hDLElBQUlDLGdCQUFnQixTQUFVQyxDQUFDLEVBQUVDLENBQUM7UUFDOUJGLGdCQUFnQkcsT0FBT0MsY0FBYyxJQUNoQztZQUFFQyxXQUFXLEVBQUU7UUFBQyxjQUFhQyxTQUFTLFNBQVVMLENBQUMsRUFBRUMsQ0FBQztZQUFJRCxFQUFFSSxTQUFTLEdBQUdIO1FBQUcsS0FDMUUsU0FBVUQsQ0FBQyxFQUFFQyxDQUFDO1lBQUksSUFBSyxJQUFJSyxLQUFLTCxFQUFHLElBQUlDLE9BQU9LLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNSLEdBQUdLLElBQUlOLENBQUMsQ0FBQ00sRUFBRSxHQUFHTCxDQUFDLENBQUNLLEVBQUU7UUFBRTtRQUNwRyxPQUFPUCxjQUFjQyxHQUFHQztJQUM1QjtJQUNBLE9BQU8sU0FBVUQsQ0FBQyxFQUFFQyxDQUFDO1FBQ2pCLElBQUksT0FBT0EsTUFBTSxjQUFjQSxNQUFNLE1BQ2pDLE1BQU0sSUFBSVMsVUFBVSx5QkFBeUJDLE9BQU9WLEtBQUs7UUFDN0RGLGNBQWNDLEdBQUdDO1FBQ2pCLFNBQVNXO1lBQU8sSUFBSSxDQUFDQyxXQUFXLEdBQUdiO1FBQUc7UUFDdENBLEVBQUVPLFNBQVMsR0FBR04sTUFBTSxPQUFPQyxPQUFPWSxNQUFNLENBQUNiLEtBQU1XLENBQUFBLEdBQUdMLFNBQVMsR0FBR04sRUFBRU0sU0FBUyxFQUFFLElBQUlLLElBQUc7SUFDdEY7QUFDSjtBQUNBViw4Q0FBNkM7SUFBRWUsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsbUNBQW1DLEdBQUdBLHdCQUF3QixHQUFHQSw0QkFBNEIsR0FBR0EscUJBQXFCLEdBQUdBLGlDQUFpQyxHQUFHQSw2QkFBNkIsR0FBR0EsNkJBQTZCLEdBQUcsS0FBSztBQUNqTyxJQUFJUyx3QkFBd0JDLG1CQUFPQSxDQUFDLHVKQUErQjtBQUNuRSxJQUFJRix3QkFBd0IsV0FBVyxHQUFJO0lBQ3ZDLFNBQVNBLHNCQUFzQkcsSUFBSSxFQUFFQyxPQUFPLEVBQUVDLFFBQVEsRUFBRUMsUUFBUSxFQUFFQyxLQUFLLEVBQUVDLFlBQVksRUFBRUMsY0FBYztRQUNqRyxJQUFJLENBQUNOLElBQUksR0FBR0E7UUFDWixJQUFJLENBQUNDLE9BQU8sR0FBR0E7UUFDZixJQUFJLENBQUNDLFFBQVEsR0FBR0E7UUFDaEIsSUFBSSxDQUFDQyxRQUFRLEdBQUdBO1FBQ2hCLElBQUksQ0FBQ0MsS0FBSyxHQUFHQTtRQUNiLElBQUksQ0FBQ0UsY0FBYyxHQUFHQTtRQUN0QixJQUFJLENBQUNELFlBQVksR0FBR0E7SUFDeEI7SUFDQSxPQUFPUjtBQUNYO0FBQ0FSLDZCQUE2QixHQUFHUTtBQUNoQyxJQUFJRCx3QkFBd0IsV0FBVyxHQUFJLFNBQVVXLE1BQU07SUFDdkRwQyxVQUFVeUIsdUJBQXVCVztJQUNqQyxTQUFTWCxzQkFBc0JJLElBQUksRUFBRUMsT0FBTyxFQUFFQyxRQUFRLEVBQUVDLFFBQVEsRUFBRUMsS0FBSyxFQUFFQyxZQUFZLEVBQUVDLGNBQWM7UUFDakcsT0FBT0MsT0FBT3pCLElBQUksQ0FBQyxJQUFJLEVBQUVrQixNQUFNQyxTQUFTQyxVQUFVQyxVQUFVQyxPQUFPQyxjQUFjQyxtQkFBbUIsSUFBSTtJQUM1RztJQUNBLE9BQU9WO0FBQ1gsRUFBRUM7QUFDRlIsNkJBQTZCLEdBQUdPO0FBQ2hDLElBQUlELDRCQUE0QixXQUFXLEdBQUk7SUFDM0MsU0FBU0EsMEJBQTBCTSxPQUFPLEVBQUVDLFFBQVEsRUFBRUMsUUFBUSxFQUFFSyxlQUFlLEVBQUVILFlBQVksRUFBRUMsY0FBYyxFQUFFRywwQkFBMEI7UUFDckksSUFBSSxDQUFDUixPQUFPLEdBQUdBO1FBQ2YsSUFBSSxDQUFDQyxRQUFRLEdBQUdBO1FBQ2hCLElBQUksQ0FBQ0MsUUFBUSxHQUFHQTtRQUNoQixJQUFJLENBQUNLLGVBQWUsR0FBR0E7UUFDdkIsSUFBSSxDQUFDSCxZQUFZLEdBQUdBO1FBQ3BCLElBQUksQ0FBQ0MsY0FBYyxHQUFHQTtRQUN0QixJQUFJLENBQUNHLDBCQUEwQixHQUFHQTtJQUN0QztJQUNBLE9BQU9kO0FBQ1g7QUFDQU4saUNBQWlDLEdBQUdNO0FBQ3BDLElBQUlEO0FBQ0gsVUFBVUEsYUFBYTtJQUNwQkEsYUFBYSxDQUFDLFdBQVcsR0FBRztJQUM1QkEsYUFBYSxDQUFDLFNBQVMsR0FBRztBQUM5QixHQUFHQSxnQkFBZ0JMLFFBQVFLLGFBQWEsSUFBS0wsQ0FBQUEscUJBQXFCLEdBQUcsQ0FBQztBQUN0RSxJQUFJSSx1QkFBdUIsV0FBVyxHQUFJO0lBQ3RDLFNBQVNBLHFCQUFxQmlCLGNBQWMsRUFBRUMsbUJBQW1CLEVBQUVDLGNBQWM7UUFDN0UsSUFBSSxDQUFDRixjQUFjLEdBQUdBO1FBQ3RCLElBQUksQ0FBQ0MsbUJBQW1CLEdBQUdBO1FBQzNCLElBQUksQ0FBQ0MsY0FBYyxHQUFHQTtJQUMxQjtJQUNBLE9BQU9uQjtBQUNYO0FBQ0FKLDRCQUE0QixHQUFHSTtBQUMvQixJQUFJRCxtQkFBbUIsV0FBVyxHQUFJO0lBQ2xDLFNBQVNBLGlCQUFpQnFCLElBQUksRUFBRUMsaUJBQWlCLEVBQUVDLGFBQWEsRUFBRUMsRUFBRSxFQUFFQyxFQUFFLEVBQUVDLEdBQUcsRUFBRUMsT0FBTyxFQUFFQyxHQUFHLEVBQUVDLFVBQVUsRUFBRUMsVUFBVSxFQUFFQyxPQUFPLEVBQUVDLFdBQVc7UUFDckksSUFBSSxDQUFDQyxJQUFJLEdBQUdaO1FBQ1osSUFBSSxDQUFDYSxhQUFhLEdBQUdYO1FBQ3JCLElBQUksT0FBT0Qsc0JBQXNCLFVBQVU7WUFDdkMsSUFBSSxDQUFDYSxVQUFVLEdBQUdiO1FBQ3RCLE9BQ0s7WUFDRCxJQUFJLENBQUNjLGFBQWEsR0FBR2Q7UUFDekI7UUFDQSxJQUFJLENBQUNlLEVBQUUsR0FBR2I7UUFDVixJQUFJLENBQUNjLEVBQUUsR0FBR2I7UUFDVixJQUFJLENBQUNjLEdBQUcsR0FBR2I7UUFDWCxJQUFJLENBQUNjLE9BQU8sR0FBR2I7UUFDZixJQUFJLENBQUNjLEdBQUcsR0FBR2I7UUFDWCxJQUFJLENBQUNjLFVBQVUsR0FBR2I7UUFDbEIsSUFBSSxDQUFDYyxVQUFVLEdBQUdiO1FBQ2xCLElBQUksQ0FBQ2MsT0FBTyxHQUFHYjtRQUNmLElBQUksQ0FBQ2MsV0FBVyxHQUFHYjtJQUN2QjtJQUNBLE9BQU9oQztBQUNYO0FBQ0FILHdCQUF3QixHQUFHRztBQUMzQjs7O0NBR0MsR0FDRCxJQUFJRCw4QkFBOEIsV0FBVyxHQUFJLFNBQVVnQixNQUFNO0lBQzdEcEMsVUFBVW9CLDZCQUE2QmdCO0lBQ3ZDLFNBQVNoQiw0QkFBNEIrQyxLQUFLLEVBQUVDLE1BQU0sRUFBRUMsWUFBWSxFQUFFQyxjQUFjO1FBQzVFLElBQUlILFVBQVUsS0FBSyxHQUFHO1lBQUVBLFFBQVE7UUFBSztRQUNyQyxJQUFJQyxXQUFXLEtBQUssR0FBRztZQUFFQSxTQUFTO1FBQUc7UUFDckMsSUFBSUcsUUFBUW5DLE9BQU96QixJQUFJLENBQUMsSUFBSSxFQUFFd0QsT0FBT0MsV0FBVyxJQUFJO1FBQ3BERyxNQUFNRixZQUFZLEdBQUdBO1FBQ3JCRSxNQUFNRCxjQUFjLEdBQUdBO1FBQ3ZCLE9BQU9DO0lBQ1g7SUFDQSxPQUFPbkQ7QUFDWCxFQUFFTyxzQkFBc0I2QyxtQkFBbUI7QUFDM0N0RCxtQ0FBbUMsR0FBR0UsNkJBQ3RDLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL3Bvc3RtYXJrQDQuMC41L25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvdGVtcGxhdGVzL1RlbXBsYXRlLmpzPzU0ZTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwgcCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIgKyBTdHJpbmcoYikgKyBcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5UZW1wbGF0ZUZpbHRlcmluZ1BhcmFtZXRlcnMgPSBleHBvcnRzLlRlbXBsYXRlZE1lc3NhZ2UgPSBleHBvcnRzLlRlbXBsYXRlc1B1c2hSZXF1ZXN0ID0gZXhwb3J0cy5UZW1wbGF0ZVR5cGVzID0gZXhwb3J0cy5UZW1wbGF0ZVZhbGlkYXRpb25PcHRpb25zID0gZXhwb3J0cy5DcmVhdGVUZW1wbGF0ZVJlcXVlc3QgPSBleHBvcnRzLlVwZGF0ZVRlbXBsYXRlUmVxdWVzdCA9IHZvaWQgMDtcbnZhciBGaWx0ZXJpbmdQYXJhbWV0ZXJzXzEgPSByZXF1aXJlKFwiLi4vY2xpZW50L0ZpbHRlcmluZ1BhcmFtZXRlcnNcIik7XG52YXIgVXBkYXRlVGVtcGxhdGVSZXF1ZXN0ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFVwZGF0ZVRlbXBsYXRlUmVxdWVzdChOYW1lLCBTdWJqZWN0LCBIdG1sQm9keSwgVGV4dEJvZHksIEFsaWFzLCBUZW1wbGF0ZVR5cGUsIExheW91dFRlbXBsYXRlKSB7XG4gICAgICAgIHRoaXMuTmFtZSA9IE5hbWU7XG4gICAgICAgIHRoaXMuU3ViamVjdCA9IFN1YmplY3Q7XG4gICAgICAgIHRoaXMuSHRtbEJvZHkgPSBIdG1sQm9keTtcbiAgICAgICAgdGhpcy5UZXh0Qm9keSA9IFRleHRCb2R5O1xuICAgICAgICB0aGlzLkFsaWFzID0gQWxpYXM7XG4gICAgICAgIHRoaXMuTGF5b3V0VGVtcGxhdGUgPSBMYXlvdXRUZW1wbGF0ZTtcbiAgICAgICAgdGhpcy5UZW1wbGF0ZVR5cGUgPSBUZW1wbGF0ZVR5cGU7XG4gICAgfVxuICAgIHJldHVybiBVcGRhdGVUZW1wbGF0ZVJlcXVlc3Q7XG59KCkpO1xuZXhwb3J0cy5VcGRhdGVUZW1wbGF0ZVJlcXVlc3QgPSBVcGRhdGVUZW1wbGF0ZVJlcXVlc3Q7XG52YXIgQ3JlYXRlVGVtcGxhdGVSZXF1ZXN0ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhDcmVhdGVUZW1wbGF0ZVJlcXVlc3QsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gQ3JlYXRlVGVtcGxhdGVSZXF1ZXN0KE5hbWUsIFN1YmplY3QsIEh0bWxCb2R5LCBUZXh0Qm9keSwgQWxpYXMsIFRlbXBsYXRlVHlwZSwgTGF5b3V0VGVtcGxhdGUpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIE5hbWUsIFN1YmplY3QsIEh0bWxCb2R5LCBUZXh0Qm9keSwgQWxpYXMsIFRlbXBsYXRlVHlwZSwgTGF5b3V0VGVtcGxhdGUpIHx8IHRoaXM7XG4gICAgfVxuICAgIHJldHVybiBDcmVhdGVUZW1wbGF0ZVJlcXVlc3Q7XG59KFVwZGF0ZVRlbXBsYXRlUmVxdWVzdCkpO1xuZXhwb3J0cy5DcmVhdGVUZW1wbGF0ZVJlcXVlc3QgPSBDcmVhdGVUZW1wbGF0ZVJlcXVlc3Q7XG52YXIgVGVtcGxhdGVWYWxpZGF0aW9uT3B0aW9ucyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBUZW1wbGF0ZVZhbGlkYXRpb25PcHRpb25zKFN1YmplY3QsIEh0bWxCb2R5LCBUZXh0Qm9keSwgVGVzdFJlbmRlck1vZGVsLCBUZW1wbGF0ZVR5cGUsIExheW91dFRlbXBsYXRlLCBJbmxpbmVDc3NGb3JIdG1sVGVzdFJlbmRlcikge1xuICAgICAgICB0aGlzLlN1YmplY3QgPSBTdWJqZWN0O1xuICAgICAgICB0aGlzLkh0bWxCb2R5ID0gSHRtbEJvZHk7XG4gICAgICAgIHRoaXMuVGV4dEJvZHkgPSBUZXh0Qm9keTtcbiAgICAgICAgdGhpcy5UZXN0UmVuZGVyTW9kZWwgPSBUZXN0UmVuZGVyTW9kZWw7XG4gICAgICAgIHRoaXMuVGVtcGxhdGVUeXBlID0gVGVtcGxhdGVUeXBlO1xuICAgICAgICB0aGlzLkxheW91dFRlbXBsYXRlID0gTGF5b3V0VGVtcGxhdGU7XG4gICAgICAgIHRoaXMuSW5saW5lQ3NzRm9ySHRtbFRlc3RSZW5kZXIgPSBJbmxpbmVDc3NGb3JIdG1sVGVzdFJlbmRlcjtcbiAgICB9XG4gICAgcmV0dXJuIFRlbXBsYXRlVmFsaWRhdGlvbk9wdGlvbnM7XG59KCkpO1xuZXhwb3J0cy5UZW1wbGF0ZVZhbGlkYXRpb25PcHRpb25zID0gVGVtcGxhdGVWYWxpZGF0aW9uT3B0aW9ucztcbnZhciBUZW1wbGF0ZVR5cGVzO1xuKGZ1bmN0aW9uIChUZW1wbGF0ZVR5cGVzKSB7XG4gICAgVGVtcGxhdGVUeXBlc1tcIlN0YW5kYXJkXCJdID0gXCJTdGFuZGFyZFwiO1xuICAgIFRlbXBsYXRlVHlwZXNbXCJMYXlvdXRcIl0gPSBcIkxheW91dFwiO1xufSkoVGVtcGxhdGVUeXBlcyA9IGV4cG9ydHMuVGVtcGxhdGVUeXBlcyB8fCAoZXhwb3J0cy5UZW1wbGF0ZVR5cGVzID0ge30pKTtcbnZhciBUZW1wbGF0ZXNQdXNoUmVxdWVzdCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBUZW1wbGF0ZXNQdXNoUmVxdWVzdChTb3VyY2VTZXJ2ZXJJRCwgRGVzdGluYXRpb25TZXJ2ZXJJRCwgUGVyZm9ybUNoYW5nZXMpIHtcbiAgICAgICAgdGhpcy5Tb3VyY2VTZXJ2ZXJJRCA9IFNvdXJjZVNlcnZlcklEO1xuICAgICAgICB0aGlzLkRlc3RpbmF0aW9uU2VydmVySUQgPSBEZXN0aW5hdGlvblNlcnZlcklEO1xuICAgICAgICB0aGlzLlBlcmZvcm1DaGFuZ2VzID0gUGVyZm9ybUNoYW5nZXM7XG4gICAgfVxuICAgIHJldHVybiBUZW1wbGF0ZXNQdXNoUmVxdWVzdDtcbn0oKSk7XG5leHBvcnRzLlRlbXBsYXRlc1B1c2hSZXF1ZXN0ID0gVGVtcGxhdGVzUHVzaFJlcXVlc3Q7XG52YXIgVGVtcGxhdGVkTWVzc2FnZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBUZW1wbGF0ZWRNZXNzYWdlKGZyb20sIHRlbXBsYXRlSWRPckFsaWFzLCB0ZW1wbGF0ZU1vZGVsLCB0bywgY2MsIGJjYywgcmVwbHlUbywgdGFnLCB0cmFja09wZW5zLCB0cmFja0xpbmtzLCBoZWFkZXJzLCBhdHRhY2htZW50cykge1xuICAgICAgICB0aGlzLkZyb20gPSBmcm9tO1xuICAgICAgICB0aGlzLlRlbXBsYXRlTW9kZWwgPSB0ZW1wbGF0ZU1vZGVsO1xuICAgICAgICBpZiAodHlwZW9mIHRlbXBsYXRlSWRPckFsaWFzID09PSBcIm51bWJlclwiKSB7XG4gICAgICAgICAgICB0aGlzLlRlbXBsYXRlSWQgPSB0ZW1wbGF0ZUlkT3JBbGlhcztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuVGVtcGxhdGVBbGlhcyA9IHRlbXBsYXRlSWRPckFsaWFzO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuVG8gPSB0bztcbiAgICAgICAgdGhpcy5DYyA9IGNjO1xuICAgICAgICB0aGlzLkJjYyA9IGJjYztcbiAgICAgICAgdGhpcy5SZXBseVRvID0gcmVwbHlUbztcbiAgICAgICAgdGhpcy5UYWcgPSB0YWc7XG4gICAgICAgIHRoaXMuVHJhY2tPcGVucyA9IHRyYWNrT3BlbnM7XG4gICAgICAgIHRoaXMuVHJhY2tMaW5rcyA9IHRyYWNrTGlua3M7XG4gICAgICAgIHRoaXMuSGVhZGVycyA9IGhlYWRlcnM7XG4gICAgICAgIHRoaXMuQXR0YWNobWVudHMgPSBhdHRhY2htZW50cztcbiAgICB9XG4gICAgcmV0dXJuIFRlbXBsYXRlZE1lc3NhZ2U7XG59KCkpO1xuZXhwb3J0cy5UZW1wbGF0ZWRNZXNzYWdlID0gVGVtcGxhdGVkTWVzc2FnZTtcbi8qKlxuICogRGVzY3JpYmVzIGZpbHRlcmluZyBwYXJhbWV0ZXJzIHRoYXQgY2FuIGJlIHVzZWQgd2hlbiByZXRyaWV2aW5nIHRlbXBsYXRlcy5cbiAqIFdoZW4gcGFnaW5hdGlvbiBwYXJhbWV0ZXJzIGFyZSBub3Qgc3BlY2lmaWVkLCBkZWZhdWx0IHZhbHVlcyBhcmUgc2V0LlxuICovXG52YXIgVGVtcGxhdGVGaWx0ZXJpbmdQYXJhbWV0ZXJzID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhUZW1wbGF0ZUZpbHRlcmluZ1BhcmFtZXRlcnMsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gVGVtcGxhdGVGaWx0ZXJpbmdQYXJhbWV0ZXJzKGNvdW50LCBvZmZzZXQsIHRlbXBsYXRlVHlwZSwgbGF5b3V0VGVtcGxhdGUpIHtcbiAgICAgICAgaWYgKGNvdW50ID09PSB2b2lkIDApIHsgY291bnQgPSAxMDA7IH1cbiAgICAgICAgaWYgKG9mZnNldCA9PT0gdm9pZCAwKSB7IG9mZnNldCA9IDA7IH1cbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgY291bnQsIG9mZnNldCkgfHwgdGhpcztcbiAgICAgICAgX3RoaXMudGVtcGxhdGVUeXBlID0gdGVtcGxhdGVUeXBlO1xuICAgICAgICBfdGhpcy5sYXlvdXRUZW1wbGF0ZSA9IGxheW91dFRlbXBsYXRlO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIHJldHVybiBUZW1wbGF0ZUZpbHRlcmluZ1BhcmFtZXRlcnM7XG59KEZpbHRlcmluZ1BhcmFtZXRlcnNfMS5GaWx0ZXJpbmdQYXJhbWV0ZXJzKSk7XG5leHBvcnRzLlRlbXBsYXRlRmlsdGVyaW5nUGFyYW1ldGVycyA9IFRlbXBsYXRlRmlsdGVyaW5nUGFyYW1ldGVycztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVRlbXBsYXRlLmpzLm1hcCJdLCJuYW1lcyI6WyJfX2V4dGVuZHMiLCJleHRlbmRTdGF0aWNzIiwiZCIsImIiLCJPYmplY3QiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIkFycmF5IiwicCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIlR5cGVFcnJvciIsIlN0cmluZyIsIl9fIiwiY29uc3RydWN0b3IiLCJjcmVhdGUiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlRlbXBsYXRlRmlsdGVyaW5nUGFyYW1ldGVycyIsIlRlbXBsYXRlZE1lc3NhZ2UiLCJUZW1wbGF0ZXNQdXNoUmVxdWVzdCIsIlRlbXBsYXRlVHlwZXMiLCJUZW1wbGF0ZVZhbGlkYXRpb25PcHRpb25zIiwiQ3JlYXRlVGVtcGxhdGVSZXF1ZXN0IiwiVXBkYXRlVGVtcGxhdGVSZXF1ZXN0IiwiRmlsdGVyaW5nUGFyYW1ldGVyc18xIiwicmVxdWlyZSIsIk5hbWUiLCJTdWJqZWN0IiwiSHRtbEJvZHkiLCJUZXh0Qm9keSIsIkFsaWFzIiwiVGVtcGxhdGVUeXBlIiwiTGF5b3V0VGVtcGxhdGUiLCJfc3VwZXIiLCJUZXN0UmVuZGVyTW9kZWwiLCJJbmxpbmVDc3NGb3JIdG1sVGVzdFJlbmRlciIsIlNvdXJjZVNlcnZlcklEIiwiRGVzdGluYXRpb25TZXJ2ZXJJRCIsIlBlcmZvcm1DaGFuZ2VzIiwiZnJvbSIsInRlbXBsYXRlSWRPckFsaWFzIiwidGVtcGxhdGVNb2RlbCIsInRvIiwiY2MiLCJiY2MiLCJyZXBseVRvIiwidGFnIiwidHJhY2tPcGVucyIsInRyYWNrTGlua3MiLCJoZWFkZXJzIiwiYXR0YWNobWVudHMiLCJGcm9tIiwiVGVtcGxhdGVNb2RlbCIsIlRlbXBsYXRlSWQiLCJUZW1wbGF0ZUFsaWFzIiwiVG8iLCJDYyIsIkJjYyIsIlJlcGx5VG8iLCJUYWciLCJUcmFja09wZW5zIiwiVHJhY2tMaW5rcyIsIkhlYWRlcnMiLCJBdHRhY2htZW50cyIsImNvdW50Iiwib2Zmc2V0IiwidGVtcGxhdGVUeXBlIiwibGF5b3V0VGVtcGxhdGUiLCJfdGhpcyIsIkZpbHRlcmluZ1BhcmFtZXRlcnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/templates/Template.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/triggers/InboundRule.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/triggers/InboundRule.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateInboundRuleRequest = void 0;\nvar CreateInboundRuleRequest = /** @class */ function() {\n    function CreateInboundRuleRequest(Rule) {\n        this.Rule = Rule;\n    }\n    return CreateInboundRuleRequest;\n}();\nexports.CreateInboundRuleRequest = CreateInboundRuleRequest; //# sourceMappingURL=InboundRule.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy90cmlnZ2Vycy9JbmJvdW5kUnVsZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsZ0NBQWdDLEdBQUcsS0FBSztBQUN4QyxJQUFJRSwyQkFBMkIsV0FBVyxHQUFJO0lBQzFDLFNBQVNBLHlCQUF5QkMsSUFBSTtRQUNsQyxJQUFJLENBQUNBLElBQUksR0FBR0E7SUFDaEI7SUFDQSxPQUFPRDtBQUNYO0FBQ0FGLGdDQUFnQyxHQUFHRSwwQkFDbkMsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy90cmlnZ2Vycy9JbmJvdW5kUnVsZS5qcz9mNTliIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5DcmVhdGVJbmJvdW5kUnVsZVJlcXVlc3QgPSB2b2lkIDA7XG52YXIgQ3JlYXRlSW5ib3VuZFJ1bGVSZXF1ZXN0ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIENyZWF0ZUluYm91bmRSdWxlUmVxdWVzdChSdWxlKSB7XG4gICAgICAgIHRoaXMuUnVsZSA9IFJ1bGU7XG4gICAgfVxuICAgIHJldHVybiBDcmVhdGVJbmJvdW5kUnVsZVJlcXVlc3Q7XG59KCkpO1xuZXhwb3J0cy5DcmVhdGVJbmJvdW5kUnVsZVJlcXVlc3QgPSBDcmVhdGVJbmJvdW5kUnVsZVJlcXVlc3Q7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1JbmJvdW5kUnVsZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJDcmVhdGVJbmJvdW5kUnVsZVJlcXVlc3QiLCJSdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/triggers/InboundRule.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/Webhook.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/Webhook.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateWebhookRequest = exports.UpdateWebhookRequest = void 0;\nvar UpdateWebhookRequest = /** @class */ function() {\n    function UpdateWebhookRequest(url, triggers, httpAuth, httpHeaders) {\n        this.Url = url;\n        this.HttpAuth = httpAuth;\n        this.HttpHeaders = httpHeaders;\n        this.Triggers = triggers;\n    }\n    return UpdateWebhookRequest;\n}();\nexports.UpdateWebhookRequest = UpdateWebhookRequest;\nvar CreateWebhookRequest = /** @class */ function(_super) {\n    __extends(CreateWebhookRequest, _super);\n    function CreateWebhookRequest(url, triggers, httpAuth, httpHeaders, messageStream) {\n        var _this = _super.call(this, url, triggers, httpAuth, httpHeaders) || this;\n        _this.MessageStream = messageStream;\n        return _this;\n    }\n    return CreateWebhookRequest;\n}(UpdateWebhookRequest);\nexports.CreateWebhookRequest = CreateWebhookRequest; //# sourceMappingURL=Webhook.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy93ZWJob29rcy9XZWJob29rLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsWUFBWSxDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLFNBQVMsSUFBSztJQUN4QyxJQUFJQyxnQkFBZ0IsU0FBVUMsQ0FBQyxFQUFFQyxDQUFDO1FBQzlCRixnQkFBZ0JHLE9BQU9DLGNBQWMsSUFDaEM7WUFBRUMsV0FBVyxFQUFFO1FBQUMsY0FBYUMsU0FBUyxTQUFVTCxDQUFDLEVBQUVDLENBQUM7WUFBSUQsRUFBRUksU0FBUyxHQUFHSDtRQUFHLEtBQzFFLFNBQVVELENBQUMsRUFBRUMsQ0FBQztZQUFJLElBQUssSUFBSUssS0FBS0wsRUFBRyxJQUFJQyxPQUFPSyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDUixHQUFHSyxJQUFJTixDQUFDLENBQUNNLEVBQUUsR0FBR0wsQ0FBQyxDQUFDSyxFQUFFO1FBQUU7UUFDcEcsT0FBT1AsY0FBY0MsR0FBR0M7SUFDNUI7SUFDQSxPQUFPLFNBQVVELENBQUMsRUFBRUMsQ0FBQztRQUNqQixJQUFJLE9BQU9BLE1BQU0sY0FBY0EsTUFBTSxNQUNqQyxNQUFNLElBQUlTLFVBQVUseUJBQXlCQyxPQUFPVixLQUFLO1FBQzdERixjQUFjQyxHQUFHQztRQUNqQixTQUFTVztZQUFPLElBQUksQ0FBQ0MsV0FBVyxHQUFHYjtRQUFHO1FBQ3RDQSxFQUFFTyxTQUFTLEdBQUdOLE1BQU0sT0FBT0MsT0FBT1ksTUFBTSxDQUFDYixLQUFNVyxDQUFBQSxHQUFHTCxTQUFTLEdBQUdOLEVBQUVNLFNBQVMsRUFBRSxJQUFJSyxJQUFHO0lBQ3RGO0FBQ0o7QUFDQVYsOENBQTZDO0lBQUVlLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELDRCQUE0QixHQUFHQSw0QkFBNEIsR0FBRyxLQUFLO0FBQ25FLElBQUlHLHVCQUF1QixXQUFXLEdBQUk7SUFDdEMsU0FBU0EscUJBQXFCQyxHQUFHLEVBQUVDLFFBQVEsRUFBRUMsUUFBUSxFQUFFQyxXQUFXO1FBQzlELElBQUksQ0FBQ0MsR0FBRyxHQUFHSjtRQUNYLElBQUksQ0FBQ0ssUUFBUSxHQUFHSDtRQUNoQixJQUFJLENBQUNJLFdBQVcsR0FBR0g7UUFDbkIsSUFBSSxDQUFDSSxRQUFRLEdBQUdOO0lBQ3BCO0lBQ0EsT0FBT0Y7QUFDWDtBQUNBSCw0QkFBNEIsR0FBR0c7QUFDL0IsSUFBSUQsdUJBQXVCLFdBQVcsR0FBSSxTQUFVVSxNQUFNO0lBQ3REOUIsVUFBVW9CLHNCQUFzQlU7SUFDaEMsU0FBU1YscUJBQXFCRSxHQUFHLEVBQUVDLFFBQVEsRUFBRUMsUUFBUSxFQUFFQyxXQUFXLEVBQUVNLGFBQWE7UUFDN0UsSUFBSUMsUUFBUUYsT0FBT25CLElBQUksQ0FBQyxJQUFJLEVBQUVXLEtBQUtDLFVBQVVDLFVBQVVDLGdCQUFnQixJQUFJO1FBQzNFTyxNQUFNQyxhQUFhLEdBQUdGO1FBQ3RCLE9BQU9DO0lBQ1g7SUFDQSxPQUFPWjtBQUNYLEVBQUVDO0FBQ0ZILDRCQUE0QixHQUFHRSxzQkFDL0IsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy93ZWJob29rcy9XZWJob29rLmpzP2E5NTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwgcCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIgKyBTdHJpbmcoYikgKyBcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5DcmVhdGVXZWJob29rUmVxdWVzdCA9IGV4cG9ydHMuVXBkYXRlV2ViaG9va1JlcXVlc3QgPSB2b2lkIDA7XG52YXIgVXBkYXRlV2ViaG9va1JlcXVlc3QgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gVXBkYXRlV2ViaG9va1JlcXVlc3QodXJsLCB0cmlnZ2VycywgaHR0cEF1dGgsIGh0dHBIZWFkZXJzKSB7XG4gICAgICAgIHRoaXMuVXJsID0gdXJsO1xuICAgICAgICB0aGlzLkh0dHBBdXRoID0gaHR0cEF1dGg7XG4gICAgICAgIHRoaXMuSHR0cEhlYWRlcnMgPSBodHRwSGVhZGVycztcbiAgICAgICAgdGhpcy5UcmlnZ2VycyA9IHRyaWdnZXJzO1xuICAgIH1cbiAgICByZXR1cm4gVXBkYXRlV2ViaG9va1JlcXVlc3Q7XG59KCkpO1xuZXhwb3J0cy5VcGRhdGVXZWJob29rUmVxdWVzdCA9IFVwZGF0ZVdlYmhvb2tSZXF1ZXN0O1xudmFyIENyZWF0ZVdlYmhvb2tSZXF1ZXN0ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhDcmVhdGVXZWJob29rUmVxdWVzdCwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBDcmVhdGVXZWJob29rUmVxdWVzdCh1cmwsIHRyaWdnZXJzLCBodHRwQXV0aCwgaHR0cEhlYWRlcnMsIG1lc3NhZ2VTdHJlYW0pIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgdXJsLCB0cmlnZ2VycywgaHR0cEF1dGgsIGh0dHBIZWFkZXJzKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy5NZXNzYWdlU3RyZWFtID0gbWVzc2FnZVN0cmVhbTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICByZXR1cm4gQ3JlYXRlV2ViaG9va1JlcXVlc3Q7XG59KFVwZGF0ZVdlYmhvb2tSZXF1ZXN0KSk7XG5leHBvcnRzLkNyZWF0ZVdlYmhvb2tSZXF1ZXN0ID0gQ3JlYXRlV2ViaG9va1JlcXVlc3Q7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1XZWJob29rLmpzLm1hcCJdLCJuYW1lcyI6WyJfX2V4dGVuZHMiLCJleHRlbmRTdGF0aWNzIiwiZCIsImIiLCJPYmplY3QiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIkFycmF5IiwicCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIlR5cGVFcnJvciIsIlN0cmluZyIsIl9fIiwiY29uc3RydWN0b3IiLCJjcmVhdGUiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkNyZWF0ZVdlYmhvb2tSZXF1ZXN0IiwiVXBkYXRlV2ViaG9va1JlcXVlc3QiLCJ1cmwiLCJ0cmlnZ2VycyIsImh0dHBBdXRoIiwiaHR0cEhlYWRlcnMiLCJVcmwiLCJIdHRwQXV0aCIsIkh0dHBIZWFkZXJzIiwiVHJpZ2dlcnMiLCJfc3VwZXIiLCJtZXNzYWdlU3RyZWFtIiwiX3RoaXMiLCJNZXNzYWdlU3RyZWFtIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/Webhook.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/WebhookFilteringParameters.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/WebhookFilteringParameters.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.WebhookFilteringParameters = void 0;\n/**\n * Describes filtering parameters that can be used when retrieving webhooks.\n */ var WebhookFilteringParameters = /** @class */ function() {\n    function WebhookFilteringParameters(messageStream) {\n        this.messageStream = messageStream;\n    }\n    return WebhookFilteringParameters;\n}();\nexports.WebhookFilteringParameters = WebhookFilteringParameters; //# sourceMappingURL=WebhookFilteringParameters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy93ZWJob29rcy9XZWJob29rRmlsdGVyaW5nUGFyYW1ldGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsa0NBQWtDLEdBQUcsS0FBSztBQUMxQzs7Q0FFQyxHQUNELElBQUlFLDZCQUE2QixXQUFXLEdBQUk7SUFDNUMsU0FBU0EsMkJBQTJCQyxhQUFhO1FBQzdDLElBQUksQ0FBQ0EsYUFBYSxHQUFHQTtJQUN6QjtJQUNBLE9BQU9EO0FBQ1g7QUFDQUYsa0NBQWtDLEdBQUdFLDRCQUNyQyxzREFBc0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy8ucG5wbS9wb3N0bWFya0A0LjAuNS9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3dlYmhvb2tzL1dlYmhvb2tGaWx0ZXJpbmdQYXJhbWV0ZXJzLmpzPzVlMGYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLldlYmhvb2tGaWx0ZXJpbmdQYXJhbWV0ZXJzID0gdm9pZCAwO1xuLyoqXG4gKiBEZXNjcmliZXMgZmlsdGVyaW5nIHBhcmFtZXRlcnMgdGhhdCBjYW4gYmUgdXNlZCB3aGVuIHJldHJpZXZpbmcgd2ViaG9va3MuXG4gKi9cbnZhciBXZWJob29rRmlsdGVyaW5nUGFyYW1ldGVycyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBXZWJob29rRmlsdGVyaW5nUGFyYW1ldGVycyhtZXNzYWdlU3RyZWFtKSB7XG4gICAgICAgIHRoaXMubWVzc2FnZVN0cmVhbSA9IG1lc3NhZ2VTdHJlYW07XG4gICAgfVxuICAgIHJldHVybiBXZWJob29rRmlsdGVyaW5nUGFyYW1ldGVycztcbn0oKSk7XG5leHBvcnRzLldlYmhvb2tGaWx0ZXJpbmdQYXJhbWV0ZXJzID0gV2ViaG9va0ZpbHRlcmluZ1BhcmFtZXRlcnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1XZWJob29rRmlsdGVyaW5nUGFyYW1ldGVycy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJXZWJob29rRmlsdGVyaW5nUGFyYW1ldGVycyIsIm1lc3NhZ2VTdHJlYW0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/WebhookFilteringParameters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/Webhooks.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/Webhooks.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=Webhooks.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy93ZWJob29rcy9XZWJob29rcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQyxFQUM3RCxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy8ucG5wbS9wb3N0bWFya0A0LjAuNS9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3dlYmhvb2tzL1dlYmhvb2tzLmpzP2VmMmUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1XZWJob29rcy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/Webhooks.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/payload/BounceWebhook.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/payload/BounceWebhook.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=BounceWebhook.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy93ZWJob29rcy9wYXlsb2FkL0JvdW5jZVdlYmhvb2suanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUMsRUFDN0QseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy93ZWJob29rcy9wYXlsb2FkL0JvdW5jZVdlYmhvb2suanM/ZmYyMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJvdW5jZVdlYmhvb2suanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/payload/BounceWebhook.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/payload/ClickWebhook.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/payload/ClickWebhook.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=ClickWebhook.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy93ZWJob29rcy9wYXlsb2FkL0NsaWNrV2ViaG9vay5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQyxFQUM3RCx3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy8ucG5wbS9wb3N0bWFya0A0LjAuNS9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3dlYmhvb2tzL3BheWxvYWQvQ2xpY2tXZWJob29rLmpzP2I2Y2IiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DbGlja1dlYmhvb2suanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/payload/ClickWebhook.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/payload/DeliveryWebhook.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/payload/DeliveryWebhook.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=DeliveryWebhook.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy93ZWJob29rcy9wYXlsb2FkL0RlbGl2ZXJ5V2ViaG9vay5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQyxFQUM3RCwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy8ucG5wbS9wb3N0bWFya0A0LjAuNS9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3dlYmhvb2tzL3BheWxvYWQvRGVsaXZlcnlXZWJob29rLmpzPzEyYjQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1EZWxpdmVyeVdlYmhvb2suanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/payload/DeliveryWebhook.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/payload/InboundWebhook.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/payload/InboundWebhook.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=InboundWebhook.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy93ZWJob29rcy9wYXlsb2FkL0luYm91bmRXZWJob29rLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDLEVBQzdELDBDQUEwQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL3Bvc3RtYXJrQDQuMC41L25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvd2ViaG9va3MvcGF5bG9hZC9JbmJvdW5kV2ViaG9vay5qcz85MjY2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SW5ib3VuZFdlYmhvb2suanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/payload/InboundWebhook.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/payload/OpenWebhook.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/payload/OpenWebhook.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=OpenWebhook.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy93ZWJob29rcy9wYXlsb2FkL09wZW5XZWJob29rLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDLEVBQzdELHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL3Bvc3RtYXJrQDQuMC41L25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvd2ViaG9va3MvcGF5bG9hZC9PcGVuV2ViaG9vay5qcz8wMzBkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9T3BlbldlYmhvb2suanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/payload/OpenWebhook.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/payload/SpamComplaintWebhook.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/payload/SpamComplaintWebhook.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=SpamComplaintWebhook.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy93ZWJob29rcy9wYXlsb2FkL1NwYW1Db21wbGFpbnRXZWJob29rLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDLEVBQzdELGdEQUFnRCIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL3Bvc3RtYXJrQDQuMC41L25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvd2ViaG9va3MvcGF5bG9hZC9TcGFtQ29tcGxhaW50V2ViaG9vay5qcz8wNmU3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3BhbUNvbXBsYWludFdlYmhvb2suanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/payload/SpamComplaintWebhook.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/payload/SubscriptionChangeWebhook.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/payload/SubscriptionChangeWebhook.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=SubscriptionChangeWebhook.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy93ZWJob29rcy9wYXlsb2FkL1N1YnNjcmlwdGlvbkNoYW5nZVdlYmhvb2suanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUMsRUFDN0QscURBQXFEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy93ZWJob29rcy9wYXlsb2FkL1N1YnNjcmlwdGlvbkNoYW5nZVdlYmhvb2suanM/Y2FhZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVN1YnNjcmlwdGlvbkNoYW5nZVdlYmhvb2suanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/webhooks/payload/SubscriptionChangeWebhook.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/index.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Header = exports.Attachment = exports.TemplatedMessage = exports.Message = exports.Errors = exports.Models = exports.AdminClient = exports.AccountClient = exports.Client = exports.ServerClient = void 0;\nvar AccountClient_1 = __webpack_require__(/*! ./client/AccountClient */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/AccountClient.js\");\nexports.AccountClient = AccountClient_1.default;\nexports.AdminClient = AccountClient_1.default;\nvar ServerClient_1 = __webpack_require__(/*! ./client/ServerClient */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/ServerClient.js\");\nexports.ServerClient = ServerClient_1.default;\nexports.Client = ServerClient_1.default;\nvar Models = __webpack_require__(/*! ./client/models */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/index.js\");\nexports.Models = Models;\nvar Errors = __webpack_require__(/*! ./client/errors/Errors */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/errors/Errors.js\");\nexports.Errors = Errors;\n// Essential types are exposed directly\n// to make working with common requests simpler.\nvar models_1 = __webpack_require__(/*! ./client/models */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/index.js\");\nObject.defineProperty(exports, \"Message\", ({\n    enumerable: true,\n    get: function() {\n        return models_1.Message;\n    }\n}));\nvar models_2 = __webpack_require__(/*! ./client/models */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/index.js\");\nObject.defineProperty(exports, \"TemplatedMessage\", ({\n    enumerable: true,\n    get: function() {\n        return models_2.TemplatedMessage;\n    }\n}));\nvar models_3 = __webpack_require__(/*! ./client/models */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/index.js\");\nObject.defineProperty(exports, \"Attachment\", ({\n    enumerable: true,\n    get: function() {\n        return models_3.Attachment;\n    }\n}));\nvar models_4 = __webpack_require__(/*! ./client/models */ \"(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/client/models/index.js\");\nObject.defineProperty(exports, \"Header\", ({\n    enumerable: true,\n    get: function() {\n        return models_4.Header;\n    }\n})); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcG9zdG1hcmtANC4wLjUvbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGNBQWMsR0FBR0Esa0JBQWtCLEdBQUdBLHdCQUF3QixHQUFHQSxlQUFlLEdBQUdBLGNBQWMsR0FBR0EsY0FBYyxHQUFHQSxtQkFBbUIsR0FBR0EscUJBQXFCLEdBQUdBLGNBQWMsR0FBR0Esb0JBQW9CLEdBQUcsS0FBSztBQUNoTixJQUFJWSxrQkFBa0JDLG1CQUFPQSxDQUFDLDRIQUF3QjtBQUN0RGIscUJBQXFCLEdBQUdZLGdCQUFnQkUsT0FBTztBQUMvQ2QsbUJBQW1CLEdBQUdZLGdCQUFnQkUsT0FBTztBQUM3QyxJQUFJQyxpQkFBaUJGLG1CQUFPQSxDQUFDLDBIQUF1QjtBQUNwRGIsb0JBQW9CLEdBQUdlLGVBQWVELE9BQU87QUFDN0NkLGNBQWMsR0FBR2UsZUFBZUQsT0FBTztBQUN2QyxJQUFJUCxTQUFTTSxtQkFBT0EsQ0FBQyxvSEFBaUI7QUFDdENiLGNBQWMsR0FBR087QUFDakIsSUFBSUQsU0FBU08sbUJBQU9BLENBQUMsNEhBQXdCO0FBQzdDYixjQUFjLEdBQUdNO0FBQ2pCLHVDQUF1QztBQUN2QyxnREFBZ0Q7QUFDaEQsSUFBSVUsV0FBV0gsbUJBQU9BLENBQUMsb0hBQWlCO0FBQ3hDZiwyQ0FBMEM7SUFBRW1CLFlBQVk7SUFBTUMsS0FBSztRQUFjLE9BQU9GLFNBQVNYLE9BQU87SUFBRTtBQUFFLENBQUMsRUFBQztBQUM5RyxJQUFJYyxXQUFXTixtQkFBT0EsQ0FBQyxvSEFBaUI7QUFDeENmLG9EQUFtRDtJQUFFbUIsWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT0MsU0FBU2YsZ0JBQWdCO0lBQUU7QUFBRSxDQUFDLEVBQUM7QUFDaEksSUFBSWdCLFdBQVdQLG1CQUFPQSxDQUFDLG9IQUFpQjtBQUN4Q2YsOENBQTZDO0lBQUVtQixZQUFZO0lBQU1DLEtBQUs7UUFBYyxPQUFPRSxTQUFTakIsVUFBVTtJQUFFO0FBQUUsQ0FBQyxFQUFDO0FBQ3BILElBQUlrQixXQUFXUixtQkFBT0EsQ0FBQyxvSEFBaUI7QUFDeENmLDBDQUF5QztJQUFFbUIsWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT0csU0FBU25CLE1BQU07SUFBRTtBQUFFLENBQUMsRUFBQyxFQUM1RyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy8ucG5wbS9wb3N0bWFya0A0LjAuNS9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9pbmRleC5qcz9kYjUzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5IZWFkZXIgPSBleHBvcnRzLkF0dGFjaG1lbnQgPSBleHBvcnRzLlRlbXBsYXRlZE1lc3NhZ2UgPSBleHBvcnRzLk1lc3NhZ2UgPSBleHBvcnRzLkVycm9ycyA9IGV4cG9ydHMuTW9kZWxzID0gZXhwb3J0cy5BZG1pbkNsaWVudCA9IGV4cG9ydHMuQWNjb3VudENsaWVudCA9IGV4cG9ydHMuQ2xpZW50ID0gZXhwb3J0cy5TZXJ2ZXJDbGllbnQgPSB2b2lkIDA7XG52YXIgQWNjb3VudENsaWVudF8xID0gcmVxdWlyZShcIi4vY2xpZW50L0FjY291bnRDbGllbnRcIik7XG5leHBvcnRzLkFjY291bnRDbGllbnQgPSBBY2NvdW50Q2xpZW50XzEuZGVmYXVsdDtcbmV4cG9ydHMuQWRtaW5DbGllbnQgPSBBY2NvdW50Q2xpZW50XzEuZGVmYXVsdDtcbnZhciBTZXJ2ZXJDbGllbnRfMSA9IHJlcXVpcmUoXCIuL2NsaWVudC9TZXJ2ZXJDbGllbnRcIik7XG5leHBvcnRzLlNlcnZlckNsaWVudCA9IFNlcnZlckNsaWVudF8xLmRlZmF1bHQ7XG5leHBvcnRzLkNsaWVudCA9IFNlcnZlckNsaWVudF8xLmRlZmF1bHQ7XG52YXIgTW9kZWxzID0gcmVxdWlyZShcIi4vY2xpZW50L21vZGVsc1wiKTtcbmV4cG9ydHMuTW9kZWxzID0gTW9kZWxzO1xudmFyIEVycm9ycyA9IHJlcXVpcmUoXCIuL2NsaWVudC9lcnJvcnMvRXJyb3JzXCIpO1xuZXhwb3J0cy5FcnJvcnMgPSBFcnJvcnM7XG4vLyBFc3NlbnRpYWwgdHlwZXMgYXJlIGV4cG9zZWQgZGlyZWN0bHlcbi8vIHRvIG1ha2Ugd29ya2luZyB3aXRoIGNvbW1vbiByZXF1ZXN0cyBzaW1wbGVyLlxudmFyIG1vZGVsc18xID0gcmVxdWlyZShcIi4vY2xpZW50L21vZGVsc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk1lc3NhZ2VcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZGVsc18xLk1lc3NhZ2U7IH0gfSk7XG52YXIgbW9kZWxzXzIgPSByZXF1aXJlKFwiLi9jbGllbnQvbW9kZWxzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVGVtcGxhdGVkTWVzc2FnZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbW9kZWxzXzIuVGVtcGxhdGVkTWVzc2FnZTsgfSB9KTtcbnZhciBtb2RlbHNfMyA9IHJlcXVpcmUoXCIuL2NsaWVudC9tb2RlbHNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJBdHRhY2htZW50XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBtb2RlbHNfMy5BdHRhY2htZW50OyB9IH0pO1xudmFyIG1vZGVsc180ID0gcmVxdWlyZShcIi4vY2xpZW50L21vZGVsc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkhlYWRlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbW9kZWxzXzQuSGVhZGVyOyB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiSGVhZGVyIiwiQXR0YWNobWVudCIsIlRlbXBsYXRlZE1lc3NhZ2UiLCJNZXNzYWdlIiwiRXJyb3JzIiwiTW9kZWxzIiwiQWRtaW5DbGllbnQiLCJBY2NvdW50Q2xpZW50IiwiQ2xpZW50IiwiU2VydmVyQ2xpZW50IiwiQWNjb3VudENsaWVudF8xIiwicmVxdWlyZSIsImRlZmF1bHQiLCJTZXJ2ZXJDbGllbnRfMSIsIm1vZGVsc18xIiwiZW51bWVyYWJsZSIsImdldCIsIm1vZGVsc18yIiwibW9kZWxzXzMiLCJtb2RlbHNfNCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/dist/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/package.json":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/postmark@4.0.5/node_modules/postmark/package.json ***!
  \******************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse('{"name":"postmark","description":"Official Node.js client library for the Postmark HTTP API - https://www.postmarkapp.com","license":"MIT","tags":["email","utility","postmark","sending","transactional"],"version":"4.0.5","author":"Igor Balos","contributors":["Igor Balos","Andrew Theken","Aaron Blum","Aleksey Aleksandrov","Alex Shepard","Antony Jones","Ben Burwell","Ben Williamson","Chris Williams","Jakub Borys","Mark Nguyen","Matt","Matthew Blackshaw","Matthew Conlen","Ryan Kirkman","Scott Anderson","Sebastien Chopin","Theophane RUPIN","codesplicer","francescoRubini","Matthew Reff"],"main":"./dist/index.js","types":"./dist/index.d.ts","directories":{"lib":"./dist/index.js"},"scripts":{"compile":"rm -r -f ./dist && node_modules/.bin/tsc","test":"node_modules/.bin/mocha --timeout 30000 --retries 1 -r ts-node/register test/**/*test.ts","unittest":"node_modules/.bin/mocha --timeout 30000 --retries 1 -r ts-node/register test/unit/**/*test.ts","watchtests":"node_modules/.bin/mocha --timeout 30000 --retries 1 -r ts-node/register -R list -w --recursive -G test/**/*test.ts","lint":"npx eslint src --ext ts --ignore-pattern \'src/*test*\'; exit 0","lintfix":"npx eslint src --ext ts --fix --ignore-pattern \'src/test*.ts\'; exit 0","compile-docs":"echo \'Generating docs...\' && mkdir -p ./docs && rm -r ./docs && node_modules/.bin/typedoc --options typedoc.json && git add -A ./docs && echo \'Generated docs!\'"},"homepage":"http://ActiveCampaign.github.io/postmark.js","repository":{"type":"git","url":"https://github.com/ActiveCampaign/postmark.js.git"},"bugs":{"url":"https://github.com/ActiveCampaign/postmark.js/issues"},"precommit":["compile","lint","test","compile-docs"],"devDependencies":{"@types/chai":"^4.3.11","@types/mocha":"^10.0.6","@types/node":"^12.12.6","@types/sinon":"^17.0.2","@typescript-eslint/eslint-plugin":"^5.40.1","@typescript-eslint/parser":"^5.40.1","chai":"^4.3.10","dotenv":"^16.3.1","eslint":"^8.54.0","mocha":"^10.2.0","pre-commit":"^1.2.2","sinon":"^17.0.1","ts-node":"^10.9.1","typedoc":"^0.25.4","typescript":"^4.7.4"},"dependencies":{"axios":"^1.7.4"}}');

/***/ })

};
;