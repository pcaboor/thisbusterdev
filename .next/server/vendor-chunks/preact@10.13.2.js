/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/preact@10.13.2";
exports.ids = ["vendor-chunks/preact@10.13.2"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/preact@10.13.2/node_modules/preact/dist/preact.js":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/preact@10.13.2/node_modules/preact/dist/preact.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("var n, l, u, t, i, r, o, f, e, c = {}, s = [], a = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\nfunction p(n, l) {\n    for(var u in l)n[u] = l[u];\n    return n;\n}\nfunction h(n) {\n    var l = n.parentNode;\n    l && l.removeChild(n);\n}\nfunction v(l, u, t) {\n    var i, r, o, f = {};\n    for(o in u)\"key\" == o ? i = u[o] : \"ref\" == o ? r = u[o] : f[o] = u[o];\n    if (arguments.length > 2 && (f.children = arguments.length > 3 ? n.call(arguments, 2) : t), \"function\" == typeof l && null != l.defaultProps) for(o in l.defaultProps)void 0 === f[o] && (f[o] = l.defaultProps[o]);\n    return y(l, f, i, r, null);\n}\nfunction y(n, t, i, r, o) {\n    var f = {\n        type: n,\n        props: t,\n        key: i,\n        ref: r,\n        __k: null,\n        __: null,\n        __b: 0,\n        __e: null,\n        __d: void 0,\n        __c: null,\n        __h: null,\n        constructor: void 0,\n        __v: null == o ? ++u : o\n    };\n    return null == o && null != l.vnode && l.vnode(f), f;\n}\nfunction d(n) {\n    return n.children;\n}\nfunction _(n, l) {\n    this.props = n, this.context = l;\n}\nfunction k(n, l) {\n    if (null == l) return n.__ ? k(n.__, n.__.__k.indexOf(n) + 1) : null;\n    for(var u; l < n.__k.length; l++)if (null != (u = n.__k[l]) && null != u.__e) return u.__e;\n    return \"function\" == typeof n.type ? k(n) : null;\n}\nfunction x(n) {\n    var l, u;\n    if (null != (n = n.__) && null != n.__c) {\n        for(n.__e = n.__c.base = null, l = 0; l < n.__k.length; l++)if (null != (u = n.__k[l]) && null != u.__e) {\n            n.__e = n.__c.base = u.__e;\n            break;\n        }\n        return x(n);\n    }\n}\nfunction b(n) {\n    (!n.__d && (n.__d = !0) && i.push(n) && !g.__r++ || r !== l.debounceRendering) && ((r = l.debounceRendering) || o)(g);\n}\nfunction g() {\n    var n, l, u, t, r, o, e, c;\n    for(i.sort(f); n = i.shift();)n.__d && (l = i.length, t = void 0, r = void 0, e = (o = (u = n).__v).__e, (c = u.__P) && (t = [], (r = p({}, o)).__v = o.__v + 1, j(c, o, r, u.__n, void 0 !== c.ownerSVGElement, null != o.__h ? [\n        e\n    ] : null, t, null == e ? k(o) : e, o.__h), z(t, o), o.__e != e && x(o)), i.length > l && i.sort(f));\n    g.__r = 0;\n}\nfunction m(n, l, u, t, i, r, o, f, e, a) {\n    var p, h, v, _, x, b, g, m = t && t.__k || s, C = m.length;\n    for(u.__k = [], p = 0; p < l.length; p++)if (null != (_ = u.__k[p] = null == (_ = l[p]) || \"boolean\" == typeof _ || \"function\" == typeof _ ? null : \"string\" == typeof _ || \"number\" == typeof _ || \"bigint\" == typeof _ ? y(null, _, null, null, _) : Array.isArray(_) ? y(d, {\n        children: _\n    }, null, null, null) : _.__b > 0 ? y(_.type, _.props, _.key, _.ref ? _.ref : null, _.__v) : _)) {\n        if (_.__ = u, _.__b = u.__b + 1, null === (v = m[p]) || v && _.key == v.key && _.type === v.type) m[p] = void 0;\n        else for(h = 0; h < C; h++){\n            if ((v = m[h]) && _.key == v.key && _.type === v.type) {\n                m[h] = void 0;\n                break;\n            }\n            v = null;\n        }\n        j(n, _, v = v || c, i, r, o, f, e, a), x = _.__e, (h = _.ref) && v.ref != h && (g || (g = []), v.ref && g.push(v.ref, null, _), g.push(h, _.__c || x, _)), null != x ? (null == b && (b = x), \"function\" == typeof _.type && _.__k === v.__k ? _.__d = e = w(_, e, n) : e = A(n, _, v, m, x, e), \"function\" == typeof u.type && (u.__d = e)) : e && v.__e == e && e.parentNode != n && (e = k(v));\n    }\n    for(u.__e = b, p = C; p--;)null != m[p] && (\"function\" == typeof u.type && null != m[p].__e && m[p].__e == u.__d && (u.__d = P(t).nextSibling), N(m[p], m[p]));\n    if (g) for(p = 0; p < g.length; p++)M(g[p], g[++p], g[++p]);\n}\nfunction w(n, l, u) {\n    for(var t, i = n.__k, r = 0; i && r < i.length; r++)(t = i[r]) && (t.__ = n, l = \"function\" == typeof t.type ? w(t, l, u) : A(u, t, t, i, t.__e, l));\n    return l;\n}\nfunction A(n, l, u, t, i, r) {\n    var o, f, e;\n    if (void 0 !== l.__d) o = l.__d, l.__d = void 0;\n    else if (null == u || i != r || null == i.parentNode) n: if (null == r || r.parentNode !== n) n.appendChild(i), o = null;\n    else {\n        for(f = r, e = 0; (f = f.nextSibling) && e < t.length; e += 1)if (f == i) break n;\n        n.insertBefore(i, r), o = r;\n    }\n    return void 0 !== o ? o : i.nextSibling;\n}\nfunction P(n) {\n    var l, u, t;\n    if (null == n.type || \"string\" == typeof n.type) return n.__e;\n    if (n.__k) {\n        for(l = n.__k.length - 1; l >= 0; l--)if ((u = n.__k[l]) && (t = P(u))) return t;\n    }\n    return null;\n}\nfunction C(n, l, u, t, i) {\n    var r;\n    for(r in u)\"children\" === r || \"key\" === r || r in l || H(n, r, null, u[r], t);\n    for(r in l)i && \"function\" != typeof l[r] || \"children\" === r || \"key\" === r || \"value\" === r || \"checked\" === r || u[r] === l[r] || H(n, r, l[r], u[r], t);\n}\nfunction $(n, l, u) {\n    \"-\" === l[0] ? n.setProperty(l, null == u ? \"\" : u) : n[l] = null == u ? \"\" : \"number\" != typeof u || a.test(l) ? u : u + \"px\";\n}\nfunction H(n, l, u, t, i) {\n    var r;\n    n: if (\"style\" === l) if (\"string\" == typeof u) n.style.cssText = u;\n    else {\n        if (\"string\" == typeof t && (n.style.cssText = t = \"\"), t) for(l in t)u && l in u || $(n.style, l, \"\");\n        if (u) for(l in u)t && u[l] === t[l] || $(n.style, l, u[l]);\n    }\n    else if (\"o\" === l[0] && \"n\" === l[1]) r = l !== (l = l.replace(/Capture$/, \"\")), l = l.toLowerCase() in n ? l.toLowerCase().slice(2) : l.slice(2), n.l || (n.l = {}), n.l[l + r] = u, u ? t || n.addEventListener(l, r ? T : I, r) : n.removeEventListener(l, r ? T : I, r);\n    else if (\"dangerouslySetInnerHTML\" !== l) {\n        if (i) l = l.replace(/xlink(H|:h)/, \"h\").replace(/sName$/, \"s\");\n        else if (\"width\" !== l && \"height\" !== l && \"href\" !== l && \"list\" !== l && \"form\" !== l && \"tabIndex\" !== l && \"download\" !== l && l in n) try {\n            n[l] = null == u ? \"\" : u;\n            break n;\n        } catch (n) {}\n        \"function\" == typeof u || (null == u || !1 === u && \"-\" !== l[4] ? n.removeAttribute(l) : n.setAttribute(l, u));\n    }\n}\nfunction I(n) {\n    return this.l[n.type + !1](l.event ? l.event(n) : n);\n}\nfunction T(n) {\n    return this.l[n.type + !0](l.event ? l.event(n) : n);\n}\nfunction j(n, u, t, i, r, o, f, e, c) {\n    var s, a, h, v, y, k, x, b, g, w, A, P, C, $, H, I = u.type;\n    if (void 0 !== u.constructor) return null;\n    null != t.__h && (c = t.__h, e = u.__e = t.__e, u.__h = null, o = [\n        e\n    ]), (s = l.__b) && s(u);\n    try {\n        n: if (\"function\" == typeof I) {\n            if (b = u.props, g = (s = I.contextType) && i[s.__c], w = s ? g ? g.props.value : s.__ : i, t.__c ? x = (a = u.__c = t.__c).__ = a.__E : (\"prototype\" in I && I.prototype.render ? u.__c = a = new I(b, w) : (u.__c = a = new _(b, w), a.constructor = I, a.render = O), g && g.sub(a), a.props = b, a.state || (a.state = {}), a.context = w, a.__n = i, h = a.__d = !0, a.__h = [], a._sb = []), null == a.__s && (a.__s = a.state), null != I.getDerivedStateFromProps && (a.__s == a.state && (a.__s = p({}, a.__s)), p(a.__s, I.getDerivedStateFromProps(b, a.__s))), v = a.props, y = a.state, a.__v = u, h) null == I.getDerivedStateFromProps && null != a.componentWillMount && a.componentWillMount(), null != a.componentDidMount && a.__h.push(a.componentDidMount);\n            else {\n                if (null == I.getDerivedStateFromProps && b !== v && null != a.componentWillReceiveProps && a.componentWillReceiveProps(b, w), !a.__e && null != a.shouldComponentUpdate && !1 === a.shouldComponentUpdate(b, a.__s, w) || u.__v === t.__v) {\n                    for(u.__v !== t.__v && (a.props = b, a.state = a.__s, a.__d = !1), a.__e = !1, u.__e = t.__e, u.__k = t.__k, u.__k.forEach(function(n) {\n                        n && (n.__ = u);\n                    }), A = 0; A < a._sb.length; A++)a.__h.push(a._sb[A]);\n                    a._sb = [], a.__h.length && f.push(a);\n                    break n;\n                }\n                null != a.componentWillUpdate && a.componentWillUpdate(b, a.__s, w), null != a.componentDidUpdate && a.__h.push(function() {\n                    a.componentDidUpdate(v, y, k);\n                });\n            }\n            if (a.context = w, a.props = b, a.__P = n, P = l.__r, C = 0, \"prototype\" in I && I.prototype.render) {\n                for(a.state = a.__s, a.__d = !1, P && P(u), s = a.render(a.props, a.state, a.context), $ = 0; $ < a._sb.length; $++)a.__h.push(a._sb[$]);\n                a._sb = [];\n            } else do {\n                a.__d = !1, P && P(u), s = a.render(a.props, a.state, a.context), a.state = a.__s;\n            }while (a.__d && ++C < 25);\n            a.state = a.__s, null != a.getChildContext && (i = p(p({}, i), a.getChildContext())), h || null == a.getSnapshotBeforeUpdate || (k = a.getSnapshotBeforeUpdate(v, y)), H = null != s && s.type === d && null == s.key ? s.props.children : s, m(n, Array.isArray(H) ? H : [\n                H\n            ], u, t, i, r, o, f, e, c), a.base = u.__e, u.__h = null, a.__h.length && f.push(a), x && (a.__E = a.__ = null), a.__e = !1;\n        } else null == o && u.__v === t.__v ? (u.__k = t.__k, u.__e = t.__e) : u.__e = L(t.__e, u, t, i, r, o, f, c);\n        (s = l.diffed) && s(u);\n    } catch (n) {\n        u.__v = null, (c || null != o) && (u.__e = e, u.__h = !!c, o[o.indexOf(e)] = null), l.__e(n, u, t);\n    }\n}\nfunction z(n, u) {\n    l.__c && l.__c(u, n), n.some(function(u) {\n        try {\n            n = u.__h, u.__h = [], n.some(function(n) {\n                n.call(u);\n            });\n        } catch (n) {\n            l.__e(n, u.__v);\n        }\n    });\n}\nfunction L(l, u, t, i, r, o, f, e) {\n    var s, a, p, v = t.props, y = u.props, d = u.type, _ = 0;\n    if (\"svg\" === d && (r = !0), null != o) {\n        for(; _ < o.length; _++)if ((s = o[_]) && \"setAttribute\" in s == !!d && (d ? s.localName === d : 3 === s.nodeType)) {\n            l = s, o[_] = null;\n            break;\n        }\n    }\n    if (null == l) {\n        if (null === d) return document.createTextNode(y);\n        l = r ? document.createElementNS(\"http://www.w3.org/2000/svg\", d) : document.createElement(d, y.is && y), o = null, e = !1;\n    }\n    if (null === d) v === y || e && l.data === y || (l.data = y);\n    else {\n        if (o = o && n.call(l.childNodes), a = (v = t.props || c).dangerouslySetInnerHTML, p = y.dangerouslySetInnerHTML, !e) {\n            if (null != o) for(v = {}, _ = 0; _ < l.attributes.length; _++)v[l.attributes[_].name] = l.attributes[_].value;\n            (p || a) && (p && (a && p.__html == a.__html || p.__html === l.innerHTML) || (l.innerHTML = p && p.__html || \"\"));\n        }\n        if (C(l, y, v, r, e), p) u.__k = [];\n        else if (_ = u.props.children, m(l, Array.isArray(_) ? _ : [\n            _\n        ], u, t, i, r && \"foreignObject\" !== d, o, f, o ? o[0] : t.__k && k(t, 0), e), null != o) for(_ = o.length; _--;)null != o[_] && h(o[_]);\n        e || (\"value\" in y && void 0 !== (_ = y.value) && (_ !== l.value || \"progress\" === d && !_ || \"option\" === d && _ !== v.value) && H(l, \"value\", _, v.value, !1), \"checked\" in y && void 0 !== (_ = y.checked) && _ !== l.checked && H(l, \"checked\", _, v.checked, !1));\n    }\n    return l;\n}\nfunction M(n, u, t) {\n    try {\n        \"function\" == typeof n ? n(u) : n.current = u;\n    } catch (n) {\n        l.__e(n, t);\n    }\n}\nfunction N(n, u, t) {\n    var i, r;\n    if (l.unmount && l.unmount(n), (i = n.ref) && (i.current && i.current !== n.__e || M(i, null, u)), null != (i = n.__c)) {\n        if (i.componentWillUnmount) try {\n            i.componentWillUnmount();\n        } catch (n) {\n            l.__e(n, u);\n        }\n        i.base = i.__P = null, n.__c = void 0;\n    }\n    if (i = n.__k) for(r = 0; r < i.length; r++)i[r] && N(i[r], u, t || \"function\" != typeof n.type);\n    t || null == n.__e || h(n.__e), n.__ = n.__e = n.__d = void 0;\n}\nfunction O(n, l, u) {\n    return this.constructor(n, u);\n}\nfunction S(u, t, i) {\n    var r, o, f;\n    l.__ && l.__(u, t), o = (r = \"function\" == typeof i) ? null : i && i.__k || t.__k, f = [], j(t, u = (!r && i || t).__k = v(d, null, [\n        u\n    ]), o || c, c, void 0 !== t.ownerSVGElement, !r && i ? [\n        i\n    ] : o ? null : t.firstChild ? n.call(t.childNodes) : null, f, !r && i ? i : o ? o.__e : t.firstChild, r), z(f, u);\n}\nn = s.slice, l = {\n    __e: function(n, l, u, t) {\n        for(var i, r, o; l = l.__;)if ((i = l.__c) && !i.__) try {\n            if ((r = i.constructor) && null != r.getDerivedStateFromError && (i.setState(r.getDerivedStateFromError(n)), o = i.__d), null != i.componentDidCatch && (i.componentDidCatch(n, t || {}), o = i.__d), o) return i.__E = i;\n        } catch (l) {\n            n = l;\n        }\n        throw n;\n    }\n}, u = 0, t = function(n) {\n    return null != n && void 0 === n.constructor;\n}, _.prototype.setState = function(n, l) {\n    var u;\n    u = null != this.__s && this.__s !== this.state ? this.__s : this.__s = p({}, this.state), \"function\" == typeof n && (n = n(p({}, u), this.props)), n && p(u, n), null != n && this.__v && (l && this._sb.push(l), b(this));\n}, _.prototype.forceUpdate = function(n) {\n    this.__v && (this.__e = !0, n && this.__h.push(n), b(this));\n}, _.prototype.render = d, i = [], o = \"function\" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, f = function(n, l) {\n    return n.__v.__b - l.__v.__b;\n}, g.__r = 0, e = 0, exports.Component = _, exports.Fragment = d, exports.cloneElement = function(l, u, t) {\n    var i, r, o, f = p({}, l.props);\n    for(o in u)\"key\" == o ? i = u[o] : \"ref\" == o ? r = u[o] : f[o] = u[o];\n    return arguments.length > 2 && (f.children = arguments.length > 3 ? n.call(arguments, 2) : t), y(l.type, f, i || l.key, r || l.ref, null);\n}, exports.createContext = function(n, l) {\n    var u = {\n        __c: l = \"__cC\" + e++,\n        __: n,\n        Consumer: function(n, l) {\n            return n.children(l);\n        },\n        Provider: function(n) {\n            var u, t;\n            return this.getChildContext || (u = [], (t = {})[l] = this, this.getChildContext = function() {\n                return t;\n            }, this.shouldComponentUpdate = function(n) {\n                this.props.value !== n.value && u.some(function(n) {\n                    n.__e = !0, b(n);\n                });\n            }, this.sub = function(n) {\n                u.push(n);\n                var l = n.componentWillUnmount;\n                n.componentWillUnmount = function() {\n                    u.splice(u.indexOf(n), 1), l && l.call(n);\n                };\n            }), n.children;\n        }\n    };\n    return u.Provider.__ = u.Consumer.contextType = u;\n}, exports.createElement = v, exports.createRef = function() {\n    return {\n        current: null\n    };\n}, exports.h = v, exports.hydrate = function n(l, u) {\n    S(l, u, n);\n}, exports.isValidElement = t, exports.options = l, exports.render = S, exports.toChildArray = function n(l, u) {\n    return u = u || [], null == l || \"boolean\" == typeof l || (Array.isArray(l) ? l.some(function(l) {\n        n(l, u);\n    }) : u.push(l)), u;\n}; //# sourceMappingURL=preact.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/preact@10.13.2/node_modules/preact/dist/preact.js\n");

/***/ })

};
;