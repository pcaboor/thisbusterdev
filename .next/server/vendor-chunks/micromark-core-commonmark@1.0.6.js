"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/micromark-core-commonmark@1.0.6";
exports.ids = ["vendor-chunks/micromark-core-commonmark@1.0.6"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/attention.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/attention.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   attention: () => (/* binding */ attention)\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"(rsc)/./node_modules/.pnpm/uvu@0.5.6/node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-chunked */ \"(rsc)/./node_modules/.pnpm/micromark-util-chunked@1.0.0/node_modules/micromark-util-chunked/dev/index.js\");\n/* harmony import */ var micromark_util_classify_character__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-classify-character */ \"(rsc)/./node_modules/.pnpm/micromark-util-classify-character@1.0.0/node_modules/micromark-util-classify-character/dev/index.js\");\n/* harmony import */ var micromark_util_resolve_all__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-resolve-all */ \"(rsc)/./node_modules/.pnpm/micromark-util-resolve-all@1.0.0/node_modules/micromark-util-resolve-all/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/types.js\");\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */ \n\n\n\n\n\n\n/** @type {Construct} */ const attention = {\n    name: \"attention\",\n    tokenize: tokenizeAttention,\n    resolveAll: resolveAllAttention\n};\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */ function resolveAllAttention(events, context) {\n    let index = -1;\n    /** @type {number} */ let open;\n    /** @type {Token} */ let group;\n    /** @type {Token} */ let text;\n    /** @type {Token} */ let openingSequence;\n    /** @type {Token} */ let closingSequence;\n    /** @type {number} */ let use;\n    /** @type {Event[]} */ let nextEvents;\n    /** @type {number} */ let offset;\n    // Walk through all events.\n    //\n    // Note: performance of this is fine on an mb of normal markdown, but it’s\n    // a bottleneck for malicious stuff.\n    while(++index < events.length){\n        // Find a token that can close.\n        if (events[index][0] === \"enter\" && events[index][1].type === \"attentionSequence\" && events[index][1]._close) {\n            open = index;\n            // Now walk back to find an opener.\n            while(open--){\n                // Find a token that can open the closer.\n                if (events[open][0] === \"exit\" && events[open][1].type === \"attentionSequence\" && events[open][1]._open && // If the markers are the same:\n                context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index][1]).charCodeAt(0)) {\n                    // If the opening can close or the closing can open,\n                    // and the close size *is not* a multiple of three,\n                    // but the sum of the opening and closing size *is* multiple of three,\n                    // then don’t match.\n                    if ((events[open][1]._close || events[index][1]._open) && (events[index][1].end.offset - events[index][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index][1].end.offset - events[index][1].start.offset) % 3)) {\n                        continue;\n                    }\n                    // Number of markers to use from the sequence.\n                    use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index][1].end.offset - events[index][1].start.offset > 1 ? 2 : 1;\n                    const start = Object.assign({}, events[open][1].end);\n                    const end = Object.assign({}, events[index][1].start);\n                    movePoint(start, -use);\n                    movePoint(end, use);\n                    openingSequence = {\n                        type: use > 1 ? micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.strongSequence : micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.emphasisSequence,\n                        start,\n                        end: Object.assign({}, events[open][1].end)\n                    };\n                    closingSequence = {\n                        type: use > 1 ? micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.strongSequence : micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.emphasisSequence,\n                        start: Object.assign({}, events[index][1].start),\n                        end\n                    };\n                    text = {\n                        type: use > 1 ? micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.strongText : micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.emphasisText,\n                        start: Object.assign({}, events[open][1].end),\n                        end: Object.assign({}, events[index][1].start)\n                    };\n                    group = {\n                        type: use > 1 ? micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.strong : micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.emphasis,\n                        start: Object.assign({}, openingSequence.start),\n                        end: Object.assign({}, closingSequence.end)\n                    };\n                    events[open][1].end = Object.assign({}, openingSequence.start);\n                    events[index][1].start = Object.assign({}, closingSequence.end);\n                    nextEvents = [];\n                    // If there are more markers in the opening, add them before.\n                    if (events[open][1].end.offset - events[open][1].start.offset) {\n                        nextEvents = (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.push)(nextEvents, [\n                            [\n                                \"enter\",\n                                events[open][1],\n                                context\n                            ],\n                            [\n                                \"exit\",\n                                events[open][1],\n                                context\n                            ]\n                        ]);\n                    }\n                    // Opening.\n                    nextEvents = (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.push)(nextEvents, [\n                        [\n                            \"enter\",\n                            group,\n                            context\n                        ],\n                        [\n                            \"enter\",\n                            openingSequence,\n                            context\n                        ],\n                        [\n                            \"exit\",\n                            openingSequence,\n                            context\n                        ],\n                        [\n                            \"enter\",\n                            text,\n                            context\n                        ]\n                    ]);\n                    // Between.\n                    nextEvents = (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.push)(nextEvents, (0,micromark_util_resolve_all__WEBPACK_IMPORTED_MODULE_3__.resolveAll)(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context));\n                    // Closing.\n                    nextEvents = (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.push)(nextEvents, [\n                        [\n                            \"exit\",\n                            text,\n                            context\n                        ],\n                        [\n                            \"enter\",\n                            closingSequence,\n                            context\n                        ],\n                        [\n                            \"exit\",\n                            closingSequence,\n                            context\n                        ],\n                        [\n                            \"exit\",\n                            group,\n                            context\n                        ]\n                    ]);\n                    // If there are more markers in the closing, add them after.\n                    if (events[index][1].end.offset - events[index][1].start.offset) {\n                        offset = 2;\n                        nextEvents = (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.push)(nextEvents, [\n                            [\n                                \"enter\",\n                                events[index][1],\n                                context\n                            ],\n                            [\n                                \"exit\",\n                                events[index][1],\n                                context\n                            ]\n                        ]);\n                    } else {\n                        offset = 0;\n                    }\n                    (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.splice)(events, open - 1, index - open + 3, nextEvents);\n                    index = open + nextEvents.length - offset - 2;\n                    break;\n                }\n            }\n        }\n    }\n    // Remove remaining sequences.\n    index = -1;\n    while(++index < events.length){\n        if (events[index][1].type === \"attentionSequence\") {\n            events[index][1].type = \"data\";\n        }\n    }\n    return events;\n}\n/** @type {Tokenizer} */ function tokenizeAttention(effects, ok) {\n    const attentionMarkers = this.parser.constructs.attentionMarkers.null;\n    const previous = this.previous;\n    const before = (0,micromark_util_classify_character__WEBPACK_IMPORTED_MODULE_4__.classifyCharacter)(previous);\n    /** @type {NonNullable<Code>} */ let marker;\n    return start;\n    /** @type {State} */ function start(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_5__.codes.asterisk || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_5__.codes.underscore, \"expected asterisk or underscore\");\n        effects.enter(\"attentionSequence\");\n        marker = code;\n        return sequence(code);\n    }\n    /** @type {State} */ function sequence(code) {\n        if (code === marker) {\n            effects.consume(code);\n            return sequence;\n        }\n        const token = effects.exit(\"attentionSequence\");\n        const after = (0,micromark_util_classify_character__WEBPACK_IMPORTED_MODULE_4__.classifyCharacter)(code);\n        const open = !after || after === micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_6__.constants.characterGroupPunctuation && before || attentionMarkers.includes(code);\n        const close = !before || before === micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_6__.constants.characterGroupPunctuation && after || attentionMarkers.includes(previous);\n        token._open = Boolean(marker === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_5__.codes.asterisk ? open : open && (before || !close));\n        token._close = Boolean(marker === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_5__.codes.asterisk ? close : close && (after || !open));\n        return ok(code);\n    }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */ function movePoint(point, offset) {\n    point.column += offset;\n    point.offset += offset;\n    point._bufferIndex += offset;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/attention.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/autolink.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/autolink.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   autolink: () => (/* binding */ autolink)\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"(rsc)/./node_modules/.pnpm/uvu@0.5.6/node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-character */ \"(rsc)/./node_modules/.pnpm/micromark-util-character@1.1.0/node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/types.js\");\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */ \n\n\n\n\n/** @type {Construct} */ const autolink = {\n    name: \"autolink\",\n    tokenize: tokenizeAutolink\n};\n/** @type {Tokenizer} */ function tokenizeAutolink(effects, ok, nok) {\n    let size = 1;\n    return start;\n    /** @type {State} */ function start(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.lessThan, \"expected `<`\");\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.autolink);\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.autolinkMarker);\n        effects.consume(code);\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.autolinkMarker);\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.autolinkProtocol);\n        return open;\n    }\n    /** @type {State} */ function open(code) {\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiAlpha)(code)) {\n            effects.consume(code);\n            return schemeOrEmailAtext;\n        }\n        return (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiAtext)(code) ? emailAtext(code) : nok(code);\n    }\n    /** @type {State} */ function schemeOrEmailAtext(code) {\n        return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.plusSign || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dot || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiAlphanumeric)(code) ? schemeInsideOrEmailAtext(code) : emailAtext(code);\n    }\n    /** @type {State} */ function schemeInsideOrEmailAtext(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.colon) {\n            effects.consume(code);\n            return urlInside;\n        }\n        if ((code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.plusSign || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dot || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiAlphanumeric)(code)) && size++ < micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_4__.constants.autolinkSchemeSizeMax) {\n            effects.consume(code);\n            return schemeInsideOrEmailAtext;\n        }\n        return emailAtext(code);\n    }\n    /** @type {State} */ function urlInside(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.greaterThan) {\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.autolinkProtocol);\n            return end(code);\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.space || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.lessThan || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiControl)(code)) {\n            return nok(code);\n        }\n        effects.consume(code);\n        return urlInside;\n    }\n    /** @type {State} */ function emailAtext(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.atSign) {\n            effects.consume(code);\n            size = 0;\n            return emailAtSignOrDot;\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiAtext)(code)) {\n            effects.consume(code);\n            return emailAtext;\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function emailAtSignOrDot(code) {\n        return (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiAlphanumeric)(code) ? emailLabel(code) : nok(code);\n    }\n    /** @type {State} */ function emailLabel(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dot) {\n            effects.consume(code);\n            size = 0;\n            return emailAtSignOrDot;\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.greaterThan) {\n            // Exit, then change the type.\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.autolinkProtocol).type = micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.autolinkEmail;\n            return end(code);\n        }\n        return emailValue(code);\n    }\n    /** @type {State} */ function emailValue(code) {\n        if ((code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiAlphanumeric)(code)) && size++ < micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_4__.constants.autolinkDomainSizeMax) {\n            effects.consume(code);\n            return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash ? emailValue : emailLabel;\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function end(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.greaterThan, \"expected `>`\");\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.autolinkMarker);\n        effects.consume(code);\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.autolinkMarker);\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.autolink);\n        return ok;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbWljcm9tYXJrLWNvcmUtY29tbW9ubWFya0AxLjAuNi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWNvcmUtY29tbW9ubWFyay9kZXYvbGliL2F1dG9saW5rLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOzs7O0NBSUMsR0FFc0M7QUFNTjtBQUNtQjtBQUNRO0FBQ1I7QUFFcEQsc0JBQXNCLEdBQ2YsTUFBTVMsV0FBVztJQUFDQyxNQUFNO0lBQVlDLFVBQVVDO0FBQWdCLEVBQUM7QUFFdEUsc0JBQXNCLEdBQ3RCLFNBQVNBLGlCQUFpQkMsT0FBTyxFQUFFYixFQUFFLEVBQUVjLEdBQUc7SUFDeEMsSUFBSUMsT0FBTztJQUVYLE9BQU9DO0lBRVAsa0JBQWtCLEdBQ2xCLFNBQVNBLE1BQU1DLElBQUk7UUFDakJoQiw4Q0FBTUEsQ0FBQ2dCLFNBQVNYLGlFQUFLQSxDQUFDWSxRQUFRLEVBQUU7UUFDaENMLFFBQVFNLEtBQUssQ0FBQ1gsaUVBQUtBLENBQUNDLFFBQVE7UUFDNUJJLFFBQVFNLEtBQUssQ0FBQ1gsaUVBQUtBLENBQUNZLGNBQWM7UUFDbENQLFFBQVFRLE9BQU8sQ0FBQ0o7UUFDaEJKLFFBQVFTLElBQUksQ0FBQ2QsaUVBQUtBLENBQUNZLGNBQWM7UUFDakNQLFFBQVFNLEtBQUssQ0FBQ1gsaUVBQUtBLENBQUNlLGdCQUFnQjtRQUNwQyxPQUFPQztJQUNUO0lBRUEsa0JBQWtCLEdBQ2xCLFNBQVNBLEtBQUtQLElBQUk7UUFDaEIsSUFBSWYsb0VBQVVBLENBQUNlLE9BQU87WUFDcEJKLFFBQVFRLE9BQU8sQ0FBQ0o7WUFDaEIsT0FBT1E7UUFDVDtRQUVBLE9BQU9yQixvRUFBVUEsQ0FBQ2EsUUFBUVMsV0FBV1QsUUFBUUgsSUFBSUc7SUFDbkQ7SUFFQSxrQkFBa0IsR0FDbEIsU0FBU1EsbUJBQW1CUixJQUFJO1FBQzlCLE9BQU9BLFNBQVNYLGlFQUFLQSxDQUFDcUIsUUFBUSxJQUM1QlYsU0FBU1gsaUVB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S0EsQ0FBQ1ksY0FBYztRQUNsQ1AsUUFBUVEsT0FBTyxDQUFDSjtRQUNoQkosUUFBUVMsSUFBSSxDQUFDZCxpRUFBS0EsQ0FBQ1ksY0FBYztRQUNqQ1AsUUFBUVMsSUFBSSxDQUFDZCxpRUFBS0EsQ0FBQ0MsUUFBUTtRQUMzQixPQUFPVDtJQUNUO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy8ucG5wbS9taWNyb21hcmstY29yZS1jb21tb25tYXJrQDEuMC42L25vZGVfbW9kdWxlcy9taWNyb21hcmstY29yZS1jb21tb25tYXJrL2Rldi9saWIvYXV0b2xpbmsuanM/YzExNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuQ29uc3RydWN0fSBDb25zdHJ1Y3RcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuVG9rZW5pemVyfSBUb2tlbml6ZXJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuU3RhdGV9IFN0YXRlXG4gKi9cblxuaW1wb3J0IHtvayBhcyBhc3NlcnR9IGZyb20gJ3V2dS9hc3NlcnQnXG5pbXBvcnQge1xuICBhc2NpaUFscGhhLFxuICBhc2NpaUFscGhhbnVtZXJpYyxcbiAgYXNjaWlBdGV4dCxcbiAgYXNjaWlDb250cm9sXG59IGZyb20gJ21pY3JvbWFyay11dGlsLWNoYXJhY3RlcidcbmltcG9ydCB7Y29kZXN9IGZyb20gJ21pY3JvbWFyay11dGlsLXN5bWJvbC9jb2Rlcy5qcydcbmltcG9ydCB7Y29uc3RhbnRzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvY29uc3RhbnRzLmpzJ1xuaW1wb3J0IHt0eXBlc30gZnJvbSAnbWljcm9tYXJrLXV0aWwtc3ltYm9sL3R5cGVzLmpzJ1xuXG4vKiogQHR5cGUge0NvbnN0cnVjdH0gKi9cbmV4cG9ydCBjb25zdCBhdXRvbGluayA9IHtuYW1lOiAnYXV0b2xpbmsnLCB0b2tlbml6ZTogdG9rZW5pemVBdXRvbGlua31cblxuLyoqIEB0eXBlIHtUb2tlbml6ZXJ9ICovXG5mdW5jdGlvbiB0b2tlbml6ZUF1dG9saW5rKGVmZmVjdHMsIG9rLCBub2spIHtcbiAgbGV0IHNpemUgPSAxXG5cbiAgcmV0dXJuIHN0YXJ0XG5cbiAgLyoqIEB0eXBlIHtTdGF0ZX0gKi9cbiAgZnVuY3Rpb24gc3RhcnQoY29kZSkge1xuICAgIGFzc2VydChjb2RlID09PSBjb2Rlcy5sZXNzVGhhbiwgJ2V4cGVjdGVkIGA8YCcpXG4gICAgZWZmZWN0cy5lbnRlcih0eXBlcy5hdXRvbGluaylcbiAgICBlZmZlY3RzLmVudGVyKHR5cGVzLmF1dG9saW5rTWFya2VyKVxuICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxuICAgIGVmZmVjdHMuZXhpdCh0eXBlcy5hdXRvbGlua01hcmtlcilcbiAgICBlZmZlY3RzLmVudGVyKHR5cGVzLmF1dG9saW5rUHJvdG9jb2wpXG4gICAgcmV0dXJuIG9wZW5cbiAgfVxuXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXG4gIGZ1bmN0aW9uIG9wZW4oY29kZSkge1xuICAgIGlmIChhc2NpaUFscGhhKGNvZGUpKSB7XG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcbiAgICAgIHJldHVybiBzY2hlbWVPckVtYWlsQXRleHRcbiAgICB9XG5cbiAgICByZXR1cm4gYXNjaWlBdGV4dChjb2RlKSA/IGVtYWlsQXRleHQoY29kZSkgOiBub2soY29kZSlcbiAgfVxuXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXG4gIGZ1bmN0aW9uIHNjaGVtZU9yRW1haWxBdGV4dChjb2RlKSB7XG4gICAgcmV0dXJuIGNvZGUgPT09IGNvZGVzLnBsdXNTaWduIHx8XG4gICAgICBjb2RlID09PSBjb2Rlcy5kYXNoIHx8XG4gICAgICBjb2RlID09PSBjb2Rlcy5kb3QgfHxcbiAgICAgIGFzY2lpQWxwaGFudW1lcmljKGNvZGUpXG4gICAgICA/IHNjaGVtZUluc2lkZU9yRW1haWxBdGV4dChjb2RlKVxuICAgICAgOiBlbWFpbEF0ZXh0KGNvZGUpXG4gIH1cblxuICAvKiogQHR5cGUge1N0YXRlfSAqL1xuICBmdW5jdGlvbiBzY2hlbWVJbnNpZGVPckVtYWlsQXRleHQoY29kZSkge1xuICAgIGlmIChjb2RlID09PSBjb2Rlcy5jb2xvbikge1xuICAgICAgZWZmZWN0cy5jb25zdW1lKGNvZGUpXG4gICAgICByZXR1cm4gdXJsSW5zaWRlXG4gICAgfVxuXG4gICAgaWYgKFxuICAgICAgKGNvZGUgPT09IGNvZGVzLnBsdXNTaWduIHx8XG4gICAgICAgIGNvZGUgPT09IGNvZGVzLmRhc2ggfHxcbiAgICAgICAgY29kZSA9PT0gY29kZXMuZG90IHx8XG4gICAgICAgIGFzY2lpQWxwaGFudW1lcmljKGNvZGUpKSAmJlxuICAgICAgc2l6ZSsrIDwgY29uc3RhbnRzLmF1dG9saW5rU2NoZW1lU2l6ZU1heFxuICAgICkge1xuICAgICAgZWZmZWN0cy5jb25zdW1lKGNvZGUpXG4gICAgICByZXR1cm4gc2NoZW1lSW5zaWRlT3JFbWFpbEF0ZXh0XG4gICAgfVxuXG4gICAgcmV0dXJuIGVtYWlsQXRleHQoY29kZSlcbiAgfVxuXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXG4gIGZ1bmN0aW9uIHVybEluc2lkZShjb2RlKSB7XG4gICAgaWYgKGNvZGUgPT09IGNvZGVzLmdyZWF0ZXJUaGFuKSB7XG4gICAgICBlZmZlY3RzLmV4aXQodHlwZXMuYXV0b2xpbmtQcm90b2NvbClcbiAgICAgIHJldHVybiBlbmQoY29kZSlcbiAgICB9XG5cbiAgICBpZiAoXG4gICAgICBjb2RlID09PSBjb2Rlcy5lb2YgfHxcbiAgICAgIGNvZGUgPT09IGNvZGVzLnNwYWNlIHx8XG4gICAgICBjb2RlID09PSBjb2Rlcy5sZXNzVGhhbiB8fFxuICAgICAgYXNjaWlDb250cm9sKGNvZGUpXG4gICAgKSB7XG4gICAgICByZXR1cm4gbm9rKGNvZGUpXG4gICAgfVxuXG4gICAgZWZmZWN0cy5jb25zdW1lKGNvZGUpXG4gICAgcmV0dXJuIHVybEluc2lkZVxuICB9XG5cbiAgLyoqIEB0eXBlIHtTdGF0ZX0gKi9cbiAgZnVuY3Rpb24gZW1haWxBdGV4dChjb2RlKSB7XG4gICAgaWYgKGNvZGUgPT09IGNvZGVzLmF0U2lnbikge1xuICAgICAgZWZmZWN0cy5jb25zdW1lKGNvZGUpXG4gICAgICBzaXplID0gMFxuICAgICAgcmV0dXJuIGVtYWlsQXRTaWduT3JEb3RcbiAgICB9XG5cbiAgICBpZiAoYXNjaWlBdGV4dChjb2RlKSkge1xuICAgICAgZWZmZWN0cy5jb25zdW1lKGNvZGUpXG4gICAgICByZXR1cm4gZW1haWxBdGV4dFxuICAgIH1cblxuICAgIHJldHVybiBub2soY29kZSlcbiAgfVxuXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXG4gIGZ1bmN0aW9uIGVtYWlsQXRTaWduT3JEb3QoY29kZSkge1xuICAgIHJldHVybiBhc2NpaUFscGhhbnVtZXJpYyhjb2RlKSA/IGVtYWlsTGFiZWwoY29kZSkgOiBub2soY29kZSlcbiAgfVxuXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXG4gIGZ1bmN0aW9uIGVtYWlsTGFiZWwoY29kZSkge1xuICAgIGlmIChjb2RlID09PSBjb2Rlcy5kb3QpIHtcbiAgICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxuICAgICAgc2l6ZSA9IDBcbiAgICAgIHJldHVybiBlbWFpbEF0U2lnbk9yRG90XG4gICAgfVxuXG4gICAgaWYgKGNvZGUgPT09IGNvZGVzLmdyZWF0ZXJUaGFuKSB7XG4gICAgICAvLyBFeGl0LCB0aGVuIGNoYW5nZSB0aGUgdHlwZS5cbiAgICAgIGVmZmVjdHMuZXhpdCh0eXBlcy5hdXRvbGlua1Byb3RvY29sKS50eXBlID0gdHlwZXMuYXV0b2xpbmtFbWFpbFxuICAgICAgcmV0dXJuIGVuZChjb2RlKVxuICAgIH1cblxuICAgIHJldHVybiBlbWFpbFZhbHVlKGNvZGUpXG4gIH1cblxuICAvKiogQHR5cGUge1N0YXRlfSAqL1xuICBmdW5jdGlvbiBlbWFpbFZhbHVlKGNvZGUpIHtcbiAgICBpZiAoXG4gICAgICAoY29kZSA9PT0gY29kZXMuZGFzaCB8fCBhc2NpaUFscGhhbnVtZXJpYyhjb2RlKSkgJiZcbiAgICAgIHNpemUrKyA8IGNvbnN0YW50cy5hdXRvbGlua0RvbWFpblNpemVNYXhcbiAgICApIHtcbiAgICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxuICAgICAgcmV0dXJuIGNvZGUgPT09IGNvZGVzLmRhc2ggPyBlbWFpbFZhbHVlIDogZW1haWxMYWJlbFxuICAgIH1cblxuICAgIHJldHVybiBub2soY29kZSlcbiAgfVxuXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXG4gIGZ1bmN0aW9uIGVuZChjb2RlKSB7XG4gICAgYXNzZXJ0KGNvZGUgPT09IGNvZGVzLmdyZWF0ZXJUaGFuLCAnZXhwZWN0ZWQgYD5gJylcbiAgICBlZmZlY3RzLmVudGVyKHR5cGVzLmF1dG9saW5rTWFya2VyKVxuICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxuICAgIGVmZmVjdHMuZXhpdCh0eXBlcy5hdXRvbGlua01hcmtlcilcbiAgICBlZmZlY3RzLmV4aXQodHlwZXMuYXV0b2xpbmspXG4gICAgcmV0dXJuIG9rXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJvayIsImFzc2VydCIsImFzY2lpQWxwaGEiLCJhc2NpaUFscGhhbnVtZXJpYyIsImFzY2lpQXRleHQiLCJhc2NpaUNvbnRyb2wiLCJjb2RlcyIsImNvbnN0YW50cyIsInR5cGVzIiwiYXV0b2xpbmsiLCJuYW1lIiwidG9rZW5pemUiLCJ0b2tlbml6ZUF1dG9saW5rIiwiZWZmZWN0cyIsIm5vayIsInNpemUiLCJzdGFydCIsImNvZGUiLCJsZXNzVGhhbiIsImVudGVyIiwiYXV0b2xpbmtNYXJrZXIiLCJjb25zdW1lIiwiZXhpdCIsImF1dG9saW5rUHJvdG9jb2wiLCJvcGVuIiwic2NoZW1lT3JFbWFpbEF0ZXh0IiwiZW1haWxBdGV4dCIsInBsdXNTaWduIiwiZGFzaCIsImRvdCIsInNjaGVtZUluc2lkZU9yRW1haWxBdGV4dCIsImNvbG9uIiwidXJsSW5zaWRlIiwiYXV0b2xpbmtTY2hlbWVTaXplTWF4IiwiZ3JlYXRlclRoYW4iLCJlbmQiLCJlb2YiLCJzcGFjZSIsImF0U2lnbiIsImVtYWlsQXRTaWduT3JEb3QiLCJlbWFpbExhYmVsIiwidHlwZSIsImF1dG9saW5rRW1haWwiLCJlbWFpbFZhbHVlIiwiYXV0b2xpbmtEb21haW5TaXplTWF4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/autolink.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/blank-line.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/blank-line.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   blankLine: () => (/* binding */ blankLine)\n/* harmony export */ });\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-factory-space */ \"(rsc)/./node_modules/.pnpm/micromark-factory-space@1.0.0/node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-character */ \"(rsc)/./node_modules/.pnpm/micromark-util-character@1.1.0/node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/types.js\");\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */ \n\n\n\n/** @type {Construct} */ const blankLine = {\n    tokenize: tokenizeBlankLine,\n    partial: true\n};\n/** @type {Tokenizer} */ function tokenizeBlankLine(effects, ok, nok) {\n    return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_0__.factorySpace)(effects, afterWhitespace, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.linePrefix);\n    /** @type {State} */ function afterWhitespace(code) {\n        return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code) ? ok(code) : nok(code);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbWljcm9tYXJrLWNvcmUtY29tbW9ubWFya0AxLjAuNi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWNvcmUtY29tbW9ubWFyay9kZXYvbGliL2JsYW5rLWxpbmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7OztDQUlDLEdBRW1EO0FBQ087QUFDUDtBQUNBO0FBRXBELHNCQUFzQixHQUNmLE1BQU1JLFlBQVk7SUFBQ0MsVUFBVUM7SUFBbUJDLFNBQVM7QUFBSSxFQUFDO0FBRXJFLHNCQUFzQixHQUN0QixTQUFTRCxrQkFBa0JFLE9BQU8sRUFBRUMsRUFBRSxFQUFFQyxHQUFHO0lBQ3pDLE9BQU9WLHFFQUFZQSxDQUFDUSxTQUFTRyxpQkFBaUJSLGlFQUFLQSxDQUFDUyxVQUFVO0lBRTlELGtCQUFrQixHQUNsQixTQUFTRCxnQkFBZ0JFLElBQUk7UUFDM0IsT0FBT0EsU0FBU1gsaUVBQUtBLENBQUNZLEdBQUcsSUFBSWIsNEVBQWtCQSxDQUFDWSxRQUFRSixHQUFHSSxRQUFRSCxJQUFJRztJQUN6RTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvLnBucG0vbWljcm9tYXJrLWNvcmUtY29tbW9ubWFya0AxLjAuNi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWNvcmUtY29tbW9ubWFyay9kZXYvbGliL2JsYW5rLWxpbmUuanM/YTM1OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuQ29uc3RydWN0fSBDb25zdHJ1Y3RcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuVG9rZW5pemVyfSBUb2tlbml6ZXJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuU3RhdGV9IFN0YXRlXG4gKi9cblxuaW1wb3J0IHtmYWN0b3J5U3BhY2V9IGZyb20gJ21pY3JvbWFyay1mYWN0b3J5LXNwYWNlJ1xuaW1wb3J0IHttYXJrZG93bkxpbmVFbmRpbmd9IGZyb20gJ21pY3JvbWFyay11dGlsLWNoYXJhY3RlcidcbmltcG9ydCB7Y29kZXN9IGZyb20gJ21pY3JvbWFyay11dGlsLXN5bWJvbC9jb2Rlcy5qcydcbmltcG9ydCB7dHlwZXN9IGZyb20gJ21pY3JvbWFyay11dGlsLXN5bWJvbC90eXBlcy5qcydcblxuLyoqIEB0eXBlIHtDb25zdHJ1Y3R9ICovXG5leHBvcnQgY29uc3QgYmxhbmtMaW5lID0ge3Rva2VuaXplOiB0b2tlbml6ZUJsYW5rTGluZSwgcGFydGlhbDogdHJ1ZX1cblxuLyoqIEB0eXBlIHtUb2tlbml6ZXJ9ICovXG5mdW5jdGlvbiB0b2tlbml6ZUJsYW5rTGluZShlZmZlY3RzLCBvaywgbm9rKSB7XG4gIHJldHVybiBmYWN0b3J5U3BhY2UoZWZmZWN0cywgYWZ0ZXJXaGl0ZXNwYWNlLCB0eXBlcy5saW5lUHJlZml4KVxuXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXG4gIGZ1bmN0aW9uIGFmdGVyV2hpdGVzcGFjZShjb2RlKSB7XG4gICAgcmV0dXJuIGNvZGUgPT09IGNvZGVzLmVvZiB8fCBtYXJrZG93bkxpbmVFbmRpbmcoY29kZSkgPyBvayhjb2RlKSA6IG5vayhjb2RlKVxuICB9XG59XG4iXSwibmFtZXMiOlsiZmFjdG9yeVNwYWNlIiwibWFya2Rvd25MaW5lRW5kaW5nIiwiY29kZXMiLCJ0eXBlcyIsImJsYW5rTGluZSIsInRva2VuaXplIiwidG9rZW5pemVCbGFua0xpbmUiLCJwYXJ0aWFsIiwiZWZmZWN0cyIsIm9rIiwibm9rIiwiYWZ0ZXJXaGl0ZXNwYWNlIiwibGluZVByZWZpeCIsImNvZGUiLCJlb2YiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/blank-line.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/block-quote.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/block-quote.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   blockQuote: () => (/* binding */ blockQuote)\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"(rsc)/./node_modules/.pnpm/uvu@0.5.6/node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-factory-space */ \"(rsc)/./node_modules/.pnpm/micromark-factory-space@1.0.0/node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-character */ \"(rsc)/./node_modules/.pnpm/micromark-util-character@1.1.0/node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/types.js\");\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */ \n\n\n\n\n\n/** @type {Construct} */ const blockQuote = {\n    name: \"blockQuote\",\n    tokenize: tokenizeBlockQuoteStart,\n    continuation: {\n        tokenize: tokenizeBlockQuoteContinuation\n    },\n    exit\n};\n/** @type {Tokenizer} */ function tokenizeBlockQuoteStart(effects, ok, nok) {\n    const self = this;\n    return start;\n    /** @type {State} */ function start(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.greaterThan) {\n            const state = self.containerState;\n            (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(state, \"expected `containerState` to be defined in container\");\n            if (!state.open) {\n                effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.blockQuote, {\n                    _container: true\n                });\n                state.open = true;\n            }\n            effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.blockQuotePrefix);\n            effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.blockQuoteMarker);\n            effects.consume(code);\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.blockQuoteMarker);\n            return after;\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function after(code) {\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownSpace)(code)) {\n            effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.blockQuotePrefixWhitespace);\n            effects.consume(code);\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.blockQuotePrefixWhitespace);\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.blockQuotePrefix);\n            return ok;\n        }\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.blockQuotePrefix);\n        return ok(code);\n    }\n}\n/** @type {Tokenizer} */ function tokenizeBlockQuoteContinuation(effects, ok, nok) {\n    return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_4__.factorySpace)(effects, effects.attempt(blockQuote, ok, nok), micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.linePrefix, this.parser.constructs.disable.null.includes(\"codeIndented\") ? undefined : micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_5__.constants.tabSize);\n}\n/** @type {Exiter} */ function exit(effects) {\n    effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.blockQuote);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbWljcm9tYXJrLWNvcmUtY29tbW9ubWFya0AxLjAuNi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWNvcmUtY29tbW9ubWFyay9kZXYvbGliL2Jsb2NrLXF1b3RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7Ozs7Q0FLQyxHQUVzQztBQUNhO0FBQ0U7QUFDRjtBQUNRO0FBQ1I7QUFFcEQsc0JBQXNCLEdBQ2YsTUFBTU8sYUFBYTtJQUN4QkMsTUFBTTtJQUNOQyxVQUFVQztJQUNWQyxjQUFjO1FBQUNGLFVBQVVHO0lBQThCO0lBQ3ZEQztBQUNGLEVBQUM7QUFFRCxzQkFBc0IsR0FDdEIsU0FBU0gsd0JBQXdCSSxPQUFPLEVBQUVkLEVBQUUsRUFBRWUsR0FBRztJQUMvQyxNQUFNQyxPQUFPLElBQUk7SUFFakIsT0FBT0M7SUFFUCxrQkFBa0IsR0FDbEIsU0FBU0EsTUFBTUMsSUFBSTtRQUNqQixJQUFJQSxTQUFTZCxpRUFBS0EsQ0FBQ2UsV0FBVyxFQUFFO1lBQzlCLE1BQU1DLFFBQVFKLEtBQUtLLGNBQWM7WUFFakNwQiw4Q0FBTUEsQ0FBQ21CLE9BQU87WUFFZCxJQUFJLENBQUNBLE1BQU1FLElBQUksRUFBRTtnQkFDZlIsUUFBUVMsS0FBSyxDQUFDakIsaUVBQUtBLENBQUNDLFVBQVUsRUFBRTtvQkFBQ2lCLFlBQVk7Z0JBQUk7Z0JBQ2pESixNQUFNRSxJQUFJLEdBQUc7WUFDZjtZQUVBUixRQUFRUyxLQUFLLENBQUNqQixpRUFBS0EsQ0FBQ21CLGdCQUFnQjtZQUNwQ1gsUUFBUVMsS0FBSyxDQUFDakIsaUVBQUtBLENBQUNvQixnQkFBZ0I7WUFDcENaLFFBQVFhLE9BQU8sQ0FBQ1Q7WUFDaEJKLFFBQVFELElBQUksQ0FBQ1AsaUVBQUtBLENBQUNvQixnQkFBZ0I7WUFDbkMsT0FBT0U7UUFDVDtRQUVBLE9BQU9iLElBQUlHO0lBQ2I7SUFFQSxrQkFBa0IsR0FDbEIsU0FBU1UsTUFBTVYsSUFBSTtRQUNqQixJQUFJZix1RUFBYUEsQ0FBQ2UsT0FBTztZQUN2QkosUUFBUVMsS0FBSyxDQUFDakIsaUVBQUtBLENBQUN1QiwwQkFBMEI7WUFDOUNmLFFBQVFhLE9BQU8sQ0FBQ1Q7WUFDaEJKLFFBQVFELElBQUksQ0FBQ1AsaUVBQUtBLENBQUN1QiwwQkFBMEI7WUFDN0NmLFFBQVFELElBQUksQ0FBQ1AsaUVBQUtBLENBQUNtQixnQkFBZ0I7WUFDbkMsT0FBT3pCO1FBQ1Q7UUFFQWMsUUFBUUQsSUFBSSxDQUFDUCxpRUFBS0EsQ0FBQ21CLGdCQUFnQjtRQUNuQyxPQUFPekIsR0FBR2tCO0lBQ1o7QUFDRjtBQUVBLHNCQUFzQixHQUN0QixTQUFTTiwrQkFBK0JFLE9BQU8sRUFBRWQsRUFBRSxFQUFFZSxHQUFHO0lBQ3RELE9BQU9iLHFFQUFZQSxDQUNqQlksU0FDQUEsUUFBUWdCLE9BQU8sQ0FBQ3ZCLFlBQVlQLElBQUllLE1BQ2hDVCxpRUFBS0EsQ0FBQ3lCLFVBQVUsRUFDaEIsSUFBSSxDQUFDQyxNQUFNLENBQUNDLFVBQVUsQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUNDLFFBQVEsQ0FBQyxrQkFDekNDLFlBQ0FoQyx5RUFBU0EsQ0FBQ2lDLE9BQU87QUFFekI7QUFFQSxtQkFBbUIsR0FDbkIsU0FBU3pCLEtBQUtDLE9BQU87SUFDbkJBLFFBQVFELElBQUksQ0FBQ1AsaUVBQUtBLENBQUNDLFVBQVU7QUFDL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy8ucG5wbS9taWNyb21hcmstY29yZS1jb21tb25tYXJrQDEuMC42L25vZGVfbW9kdWxlcy9taWNyb21hcmstY29yZS1jb21tb25tYXJrL2Rldi9saWIvYmxvY2stcXVvdGUuanM/YTZkZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuQ29uc3RydWN0fSBDb25zdHJ1Y3RcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuVG9rZW5pemVyfSBUb2tlbml6ZXJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuRXhpdGVyfSBFeGl0ZXJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuU3RhdGV9IFN0YXRlXG4gKi9cblxuaW1wb3J0IHtvayBhcyBhc3NlcnR9IGZyb20gJ3V2dS9hc3NlcnQnXG5pbXBvcnQge2ZhY3RvcnlTcGFjZX0gZnJvbSAnbWljcm9tYXJrLWZhY3Rvcnktc3BhY2UnXG5pbXBvcnQge21hcmtkb3duU3BhY2V9IGZyb20gJ21pY3JvbWFyay11dGlsLWNoYXJhY3RlcidcbmltcG9ydCB7Y29kZXN9IGZyb20gJ21pY3JvbWFyay11dGlsLXN5bWJvbC9jb2Rlcy5qcydcbmltcG9ydCB7Y29uc3RhbnRzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvY29uc3RhbnRzLmpzJ1xuaW1wb3J0IHt0eXBlc30gZnJvbSAnbWljcm9tYXJrLXV0aWwtc3ltYm9sL3R5cGVzLmpzJ1xuXG4vKiogQHR5cGUge0NvbnN0cnVjdH0gKi9cbmV4cG9ydCBjb25zdCBibG9ja1F1b3RlID0ge1xuICBuYW1lOiAnYmxvY2tRdW90ZScsXG4gIHRva2VuaXplOiB0b2tlbml6ZUJsb2NrUXVvdGVTdGFydCxcbiAgY29udGludWF0aW9uOiB7dG9rZW5pemU6IHRva2VuaXplQmxvY2tRdW90ZUNvbnRpbnVhdGlvbn0sXG4gIGV4aXRcbn1cblxuLyoqIEB0eXBlIHtUb2tlbml6ZXJ9ICovXG5mdW5jdGlvbiB0b2tlbml6ZUJsb2NrUXVvdGVTdGFydChlZmZlY3RzLCBvaywgbm9rKSB7XG4gIGNvbnN0IHNlbGYgPSB0aGlzXG5cbiAgcmV0dXJuIHN0YXJ0XG5cbiAgLyoqIEB0eXBlIHtTdGF0ZX0gKi9cbiAgZnVuY3Rpb24gc3RhcnQoY29kZSkge1xuICAgIGlmIChjb2RlID09PSBjb2Rlcy5ncmVhdGVyVGhhbikge1xuICAgICAgY29uc3Qgc3RhdGUgPSBzZWxmLmNvbnRhaW5lclN0YXRlXG5cbiAgICAgIGFzc2VydChzdGF0ZSwgJ2V4cGVjdGVkIGBjb250YWluZXJTdGF0ZWAgdG8gYmUgZGVmaW5lZCBpbiBjb250YWluZXInKVxuXG4gICAgICBpZiAoIXN0YXRlLm9wZW4pIHtcbiAgICAgICAgZWZmZWN0cy5lbnRlcih0eXBlcy5ibG9ja1F1b3RlLCB7X2NvbnRhaW5lcjogdHJ1ZX0pXG4gICAgICAgIHN0YXRlLm9wZW4gPSB0cnVlXG4gICAgICB9XG5cbiAgICAgIGVmZmVjdHMuZW50ZXIodHlwZXMuYmxvY2tRdW90ZVByZWZpeClcbiAgICAgIGVmZmVjdHMuZW50ZXIodHlwZXMuYmxvY2tRdW90ZU1hcmtlcilcbiAgICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxuICAgICAgZWZmZWN0cy5leGl0KHR5cGVzLmJsb2NrUXVvdGVNYXJrZXIpXG4gICAgICByZXR1cm4gYWZ0ZXJcbiAgICB9XG5cbiAgICByZXR1cm4gbm9rKGNvZGUpXG4gIH1cblxuICAvKiogQHR5cGUge1N0YXRlfSAqL1xuICBmdW5jdGlvbiBhZnRlcihjb2RlKSB7XG4gICAgaWYgKG1hcmtkb3duU3BhY2UoY29kZSkpIHtcbiAgICAgIGVmZmVjdHMuZW50ZXIodHlwZXMuYmxvY2tRdW90ZVByZWZpeFdoaXRlc3BhY2UpXG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcbiAgICAgIGVmZmVjdHMuZXhpdCh0eXBlcy5ibG9ja1F1b3RlUHJlZml4V2hpdGVzcGFjZSlcbiAgICAgIGVmZmVjdHMuZXhpdCh0eXBlcy5ibG9ja1F1b3RlUHJlZml4KVxuICAgICAgcmV0dXJuIG9rXG4gICAgfVxuXG4gICAgZWZmZWN0cy5leGl0KHR5cGVzLmJsb2NrUXVvdGVQcmVmaXgpXG4gICAgcmV0dXJuIG9rKGNvZGUpXG4gIH1cbn1cblxuLyoqIEB0eXBlIHtUb2tlbml6ZXJ9ICovXG5mdW5jdGlvbiB0b2tlbml6ZUJsb2NrUXVvdGVDb250aW51YXRpb24oZWZmZWN0cywgb2ssIG5vaykge1xuICByZXR1cm4gZmFjdG9yeVNwYWNlKFxuICAgIGVmZmVjdHMsXG4gICAgZWZmZWN0cy5hdHRlbXB0KGJsb2NrUXVvdGUsIG9rLCBub2spLFxuICAgIHR5cGVzLmxpbmVQcmVmaXgsXG4gICAgdGhpcy5wYXJzZXIuY29uc3RydWN0cy5kaXNhYmxlLm51bGwuaW5jbHVkZXMoJ2NvZGVJbmRlbnRlZCcpXG4gICAgICA/IHVuZGVmaW5lZFxuICAgICAgOiBjb25zdGFudHMudGFiU2l6ZVxuICApXG59XG5cbi8qKiBAdHlwZSB7RXhpdGVyfSAqL1xuZnVuY3Rpb24gZXhpdChlZmZlY3RzKSB7XG4gIGVmZmVjdHMuZXhpdCh0eXBlcy5ibG9ja1F1b3RlKVxufVxuIl0sIm5hbWVzIjpbIm9rIiwiYXNzZXJ0IiwiZmFjdG9yeVNwYWNlIiwibWFya2Rvd25TcGFjZSIsImNvZGVzIiwiY29uc3RhbnRzIiwidHlwZXMiLCJibG9ja1F1b3RlIiwibmFtZSIsInRva2VuaXplIiwidG9rZW5pemVCbG9ja1F1b3RlU3RhcnQiLCJjb250aW51YXRpb24iLCJ0b2tlbml6ZUJsb2NrUXVvdGVDb250aW51YXRpb24iLCJleGl0IiwiZWZmZWN0cyIsIm5vayIsInNlbGYiLCJzdGFydCIsImNvZGUiLCJncmVhdGVyVGhhbiIsInN0YXRlIiwiY29udGFpbmVyU3RhdGUiLCJvcGVuIiwiZW50ZXIiLCJfY29udGFpbmVyIiwiYmxvY2tRdW90ZVByZWZpeCIsImJsb2NrUXVvdGVNYXJrZXIiLCJjb25zdW1lIiwiYWZ0ZXIiLCJibG9ja1F1b3RlUHJlZml4V2hpdGVzcGFjZSIsImF0dGVtcHQiLCJsaW5lUHJlZml4IiwicGFyc2VyIiwiY29uc3RydWN0cyIsImRpc2FibGUiLCJudWxsIiwiaW5jbHVkZXMiLCJ1bmRlZmluZWQiLCJ0YWJTaXplIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/block-quote.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/character-escape.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/character-escape.js ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   characterEscape: () => (/* binding */ characterEscape)\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"(rsc)/./node_modules/.pnpm/uvu@0.5.6/node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-character */ \"(rsc)/./node_modules/.pnpm/micromark-util-character@1.1.0/node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/types.js\");\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */ \n\n\n\n/** @type {Construct} */ const characterEscape = {\n    name: \"characterEscape\",\n    tokenize: tokenizeCharacterEscape\n};\n/** @type {Tokenizer} */ function tokenizeCharacterEscape(effects, ok, nok) {\n    return start;\n    /** @type {State} */ function start(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.backslash, \"expected `\\\\`\");\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterEscape);\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.escapeMarker);\n        effects.consume(code);\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.escapeMarker);\n        return open;\n    }\n    /** @type {State} */ function open(code) {\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiPunctuation)(code)) {\n            effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterEscapeValue);\n            effects.consume(code);\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterEscapeValue);\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterEscape);\n            return ok;\n        }\n        return nok(code);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbWljcm9tYXJrLWNvcmUtY29tbW9ubWFya0AxLjAuNi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWNvcmUtY29tbW9ubWFyay9kZXYvbGliL2NoYXJhY3Rlci1lc2NhcGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7OztDQUlDLEdBRXNDO0FBQ2tCO0FBQ0w7QUFDQTtBQUVwRCxzQkFBc0IsR0FDZixNQUFNSyxrQkFBa0I7SUFDN0JDLE1BQU07SUFDTkMsVUFBVUM7QUFDWixFQUFDO0FBRUQsc0JBQXNCLEdBQ3RCLFNBQVNBLHdCQUF3QkMsT0FBTyxFQUFFVCxFQUFFLEVBQUVVLEdBQUc7SUFDL0MsT0FBT0M7SUFFUCxrQkFBa0IsR0FDbEIsU0FBU0EsTUFBTUMsSUFBSTtRQUNqQlgsOENBQU1BLENBQUNXLFNBQVNULGlFQUFLQSxDQUFDVSxTQUFTLEVBQUU7UUFDakNKLFFBQVFLLEtBQUssQ0FBQ1YsaUVBQUtBLENBQUNDLGVBQWU7UUFDbkNJLFFBQVFLLEtBQUssQ0FBQ1YsaUVBQUtBLENBQUNXLFlBQVk7UUFDaENOLFFBQVFPLE9BQU8sQ0FBQ0o7UUFDaEJILFFBQVFRLElBQUksQ0FBQ2IsaUVBQUtBLENBQUNXLFlBQVk7UUFDL0IsT0FBT0c7SUFDVDtJQUVBLGtCQUFrQixHQUNsQixTQUFTQSxLQUFLTixJQUFJO1FBQ2hCLElBQUlWLDBFQUFnQkEsQ0FBQ1UsT0FBTztZQUMxQkgsUUFBUUssS0FBSyxDQUFDVixpRUFBS0EsQ0FBQ2Usb0JBQW9CO1lBQ3hDVixRQUFRTyxPQUFPLENBQUNKO1lBQ2hCSCxRQUFRUSxJQUFJLENBQUNiLGlFQUFLQSxDQUFDZSxvQkFBb0I7WUFDdkNWLFFBQVFRLElBQUksQ0FBQ2IsaUVBQUtBLENBQUNDLGVBQWU7WUFDbEMsT0FBT0w7UUFDVDtRQUVBLE9BQU9VLElBQUlFO0lBQ2I7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL21pY3JvbWFyay1jb3JlLWNvbW1vbm1hcmtAMS4wLjYvbm9kZV9tb2R1bGVzL21pY3JvbWFyay1jb3JlLWNvbW1vbm1hcmsvZGV2L2xpYi9jaGFyYWN0ZXItZXNjYXBlLmpzPzM2NjkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLkNvbnN0cnVjdH0gQ29uc3RydWN0XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlRva2VuaXplcn0gVG9rZW5pemVyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlN0YXRlfSBTdGF0ZVxuICovXG5cbmltcG9ydCB7b2sgYXMgYXNzZXJ0fSBmcm9tICd1dnUvYXNzZXJ0J1xuaW1wb3J0IHthc2NpaVB1bmN0dWF0aW9ufSBmcm9tICdtaWNyb21hcmstdXRpbC1jaGFyYWN0ZXInXG5pbXBvcnQge2NvZGVzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvY29kZXMuanMnXG5pbXBvcnQge3R5cGVzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvdHlwZXMuanMnXG5cbi8qKiBAdHlwZSB7Q29uc3RydWN0fSAqL1xuZXhwb3J0IGNvbnN0IGNoYXJhY3RlckVzY2FwZSA9IHtcbiAgbmFtZTogJ2NoYXJhY3RlckVzY2FwZScsXG4gIHRva2VuaXplOiB0b2tlbml6ZUNoYXJhY3RlckVzY2FwZVxufVxuXG4vKiogQHR5cGUge1Rva2VuaXplcn0gKi9cbmZ1bmN0aW9uIHRva2VuaXplQ2hhcmFjdGVyRXNjYXBlKGVmZmVjdHMsIG9rLCBub2spIHtcbiAgcmV0dXJuIHN0YXJ0XG5cbiAgLyoqIEB0eXBlIHtTdGF0ZX0gKi9cbiAgZnVuY3Rpb24gc3RhcnQoY29kZSkge1xuICAgIGFzc2VydChjb2RlID09PSBjb2Rlcy5iYWNrc2xhc2gsICdleHBlY3RlZCBgXFxcXGAnKVxuICAgIGVmZmVjdHMuZW50ZXIodHlwZXMuY2hhcmFjdGVyRXNjYXBlKVxuICAgIGVmZmVjdHMuZW50ZXIodHlwZXMuZXNjYXBlTWFya2VyKVxuICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxuICAgIGVmZmVjdHMuZXhpdCh0eXBlcy5lc2NhcGVNYXJrZXIpXG4gICAgcmV0dXJuIG9wZW5cbiAgfVxuXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXG4gIGZ1bmN0aW9uIG9wZW4oY29kZSkge1xuICAgIGlmIChhc2NpaVB1bmN0dWF0aW9uKGNvZGUpKSB7XG4gICAgICBlZmZlY3RzLmVudGVyKHR5cGVzLmNoYXJhY3RlckVzY2FwZVZhbHVlKVxuICAgICAgZWZmZWN0cy5jb25zdW1lKGNvZGUpXG4gICAgICBlZmZlY3RzLmV4aXQodHlwZXMuY2hhcmFjdGVyRXNjYXBlVmFsdWUpXG4gICAgICBlZmZlY3RzLmV4aXQodHlwZXMuY2hhcmFjdGVyRXNjYXBlKVxuICAgICAgcmV0dXJuIG9rXG4gICAgfVxuXG4gICAgcmV0dXJuIG5vayhjb2RlKVxuICB9XG59XG4iXSwibmFtZXMiOlsib2siLCJhc3NlcnQiLCJhc2NpaVB1bmN0dWF0aW9uIiwiY29kZXMiLCJ0eXBlcyIsImNoYXJhY3RlckVzY2FwZSIsIm5hbWUiLCJ0b2tlbml6ZSIsInRva2VuaXplQ2hhcmFjdGVyRXNjYXBlIiwiZWZmZWN0cyIsIm5vayIsInN0YXJ0IiwiY29kZSIsImJhY2tzbGFzaCIsImVudGVyIiwiZXNjYXBlTWFya2VyIiwiY29uc3VtZSIsImV4aXQiLCJvcGVuIiwiY2hhcmFjdGVyRXNjYXBlVmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/character-escape.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/character-reference.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/character-reference.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   characterReference: () => (/* binding */ characterReference)\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"(rsc)/./node_modules/.pnpm/uvu@0.5.6/node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var decode_named_character_reference__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! decode-named-character-reference */ \"(rsc)/./node_modules/.pnpm/decode-named-character-reference@1.0.2/node_modules/decode-named-character-reference/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-character */ \"(rsc)/./node_modules/.pnpm/micromark-util-character@1.1.0/node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/types.js\");\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */ \n\n\n\n\n\n/** @type {Construct} */ const characterReference = {\n    name: \"characterReference\",\n    tokenize: tokenizeCharacterReference\n};\n/** @type {Tokenizer} */ function tokenizeCharacterReference(effects, ok, nok) {\n    const self = this;\n    let size = 0;\n    /** @type {number} */ let max;\n    /** @type {(code: Code) => code is number} */ let test;\n    return start;\n    /** @type {State} */ function start(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.ampersand, \"expected `&`\");\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterReference);\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterReferenceMarker);\n        effects.consume(code);\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterReferenceMarker);\n        return open;\n    }\n    /** @type {State} */ function open(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.numberSign) {\n            effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterReferenceMarkerNumeric);\n            effects.consume(code);\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterReferenceMarkerNumeric);\n            return numeric;\n        }\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterReferenceValue);\n        max = micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.characterReferenceNamedSizeMax;\n        test = micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.asciiAlphanumeric;\n        return value(code);\n    }\n    /** @type {State} */ function numeric(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.uppercaseX || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.lowercaseX) {\n            effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterReferenceMarkerHexadecimal);\n            effects.consume(code);\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterReferenceMarkerHexadecimal);\n            effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterReferenceValue);\n            max = micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.characterReferenceHexadecimalSizeMax;\n            test = micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.asciiHexDigit;\n            return value;\n        }\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterReferenceValue);\n        max = micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.characterReferenceDecimalSizeMax;\n        test = micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.asciiDigit;\n        return value(code);\n    }\n    /** @type {State} */ function value(code) {\n        /** @type {Token} */ let token;\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.semicolon && size) {\n            token = effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterReferenceValue);\n            if (test === micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.asciiAlphanumeric && !(0,decode_named_character_reference__WEBPACK_IMPORTED_MODULE_5__.decodeNamedCharacterReference)(self.sliceSerialize(token))) {\n                return nok(code);\n            }\n            effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterReferenceMarker);\n            effects.consume(code);\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterReferenceMarker);\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.characterReference);\n            return ok;\n        }\n        if (test(code) && size++ < max) {\n            effects.consume(code);\n            return value;\n        }\n        return nok(code);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbWljcm9tYXJrLWNvcmUtY29tbW9ubWFya0AxLjAuNi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWNvcmUtY29tbW9ubWFyay9kZXYvbGliL2NoYXJhY3Rlci1yZWZlcmVuY2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBOzs7Ozs7Q0FNQyxHQUVzQztBQUN1QztBQUs3QztBQUNtQjtBQUNRO0FBQ1I7QUFFcEQsc0JBQXNCLEdBQ2YsTUFBTVMscUJBQXFCO0lBQ2hDQyxNQUFNO0lBQ05DLFVBQVVDO0FBQ1osRUFBQztBQUVELHNCQUFzQixHQUN0QixTQUFTQSwyQkFBMkJDLE9BQU8sRUFBRWIsRUFBRSxFQUFFYyxHQUFHO0lBQ2xELE1BQU1DLE9BQU8sSUFBSTtJQUNqQixJQUFJQyxPQUFPO0lBQ1gsbUJBQW1CLEdBQ25CLElBQUlDO0lBQ0osMkNBQTJDLEdBQzNDLElBQUlDO0lBRUosT0FBT0M7SUFFUCxrQkFBa0IsR0FDbEIsU0FBU0EsTUFBTUMsSUFBSTtRQUNqQm5CLDhDQUFNQSxDQUFDbUIsU0FBU2QsaUVBQUtBLENBQUNlLFNBQVMsRUFBRTtRQUNqQ1IsUUFBUVMsS0FBSyxDQUFDZCxpRUFBS0EsQ0FBQ0Msa0JBQWtCO1FBQ3RDSSxRQUFRUyxLQUFLLENBQUNkLGlFQUFLQSxDQUFDZSx3QkFBd0I7UUFDNUNWLFFBQVFXLE9BQU8sQ0FBQ0o7UUFDaEJQLFFBQVFZLElBQUksQ0FBQ2pCLGlFQUFLQSxDQUFDZSx3QkFBd0I7UUFDM0MsT0FBT0c7SUFDVDtJQUVBLGtCQUFrQixHQUNsQixTQUFTQSxLQUFLTixJQUFJO1FBQ2hCLElBQUlBLFNBQVNkLGlFQUFLQSxDQUFDcUIsVUFBVSxFQUFFO1lBQzdCZCxRQUFRUyxLQUFLLENBQUNkLGlFQUFLQSxDQUFDb0IsK0JBQStCO1lBQ25EZixRQUFRVyxPQUFPLENBQUNKO1lBQ2hCUCxRQUFRWSxJQUFJLENBQUNqQixpRUFBS0EsQ0FBQ29CLCtCQUErQjtZQUNsRCxPQUFPQztRQUNUO1FBRUFoQixRQUFRUyxLQUFLLENBQUNkLGlFQUFLQSxDQUFDc0IsdUJBQXVCO1FBQzNDYixNQUFNVix5RUFBU0EsQ0FBQ3dCLDhCQUE4QjtRQUM5Q2IsT0FBT2YsdUVBQWlCQTtRQUN4QixPQUFPNkIsTUFBTVo7SUFDZjtJQUVBLGtCQUFrQixHQUNsQixTQUFTUyxRQUFRVCxJQUFJO1FBQ25CLElBQUlBLFNBQVNkLGlFQUFLQSxDQUFDMkIsVUFBVSxJQUFJYixTQUFTZCxpRUFBS0EsQ0FBQzRCLFVBQVUsRUFBRTtZQUMxRHJCLFFBQVFTLEtBQUssQ0FBQ2QsaUVBQUtBLENBQUMyQixtQ0FBbUM7WUFDdkR0QixRQUFRVyxPQUFPLENBQUNKO1lBQ2hCUCxRQUFRWSxJQUFJLENBQUNqQixpRUFBS0EsQ0FBQzJCLG1DQUFtQztZQUN0RHRCLFFBQVFTLEtBQUssQ0FBQ2QsaUVBQUtBLENBQUNzQix1QkFBdUI7WUFDM0NiLE1BQU1WLHlFQUFTQSxDQUFDNkIsb0NBQW9DO1lBQ3BEbEIsT0FBT2IsbUVBQWFBO1lBQ3BCLE9BQU8yQjtRQUNUO1FBRUFuQixRQUFRUyxLQUFLLENBQUNkLGlFQUFLQSxDQUFDc0IsdUJBQXVCO1FBQzNDYixNQUFNVix5RUFBU0EsQ0FBQzhCLGdDQUFnQztRQUNoRG5CLE9BQU9kLGdFQUFVQTtRQUNqQixPQUFPNEIsTUFBTVo7SUFDZjtJQUVBLGtCQUFrQixHQUNsQixTQUFTWSxNQUFNWixJQUFJO1FBQ2pCLGtCQUFrQixHQUNsQixJQUFJa0I7UUFFSixJQUFJbEIsU0FBU2QsaUVBQUtBLENBQUNpQyxTQUFTLElBQUl2QixNQUFNO1lBQ3BDc0IsUUFBUXpCLFFBQVFZLElBQUksQ0FBQ2pCLGlFQUFLQSxDQUFDc0IsdUJBQXVCO1lBRWxELElBQ0VaLFNBQVNmLHVFQUFpQkEsSUFDMUIsQ0FBQ0QsK0ZBQTZCQSxDQUFDYSxLQUFLeUIsY0FBYyxDQUFDRixTQUNuRDtnQkFDQSxPQUFPeEIsSUFBSU07WUFDYjtZQUVBUCxRQUFRUyxLQUFLLENBQUNkLGlFQUFLQSxDQUFDZSx3QkFBd0I7WUFDNUNWLFFBQVFXLE9BQU8sQ0FBQ0o7WUFDaEJQLFFBQVFZLElBQUksQ0FBQ2pCLGlFQUFLQSxDQUFDZSx3QkFBd0I7WUFDM0NWLFFBQVFZLElBQUksQ0FBQ2pCLGlFQUFLQSxDQUFDQyxrQkFBa0I7WUFDckMsT0FBT1Q7UUFDVDtRQUVBLElBQUlrQixLQUFLRSxTQUFTSixTQUFTQyxLQUFLO1lBQzlCSixRQUFRVyxPQUFPLENBQUNKO1lBQ2hCLE9BQU9ZO1FBQ1Q7UUFFQSxPQUFPbEIsSUFBSU07SUFDYjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvLnBucG0vbWljcm9tYXJrLWNvcmUtY29tbW9ubWFya0AxLjAuNi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWNvcmUtY29tbW9ubWFyay9kZXYvbGliL2NoYXJhY3Rlci1yZWZlcmVuY2UuanM/MjFhOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuQ29uc3RydWN0fSBDb25zdHJ1Y3RcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuVG9rZW5pemVyfSBUb2tlbml6ZXJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuVG9rZW59IFRva2VuXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlN0YXRlfSBTdGF0ZVxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5Db2RlfSBDb2RlXG4gKi9cblxuaW1wb3J0IHtvayBhcyBhc3NlcnR9IGZyb20gJ3V2dS9hc3NlcnQnXG5pbXBvcnQge2RlY29kZU5hbWVkQ2hhcmFjdGVyUmVmZXJlbmNlfSBmcm9tICdkZWNvZGUtbmFtZWQtY2hhcmFjdGVyLXJlZmVyZW5jZSdcbmltcG9ydCB7XG4gIGFzY2lpQWxwaGFudW1lcmljLFxuICBhc2NpaURpZ2l0LFxuICBhc2NpaUhleERpZ2l0XG59IGZyb20gJ21pY3JvbWFyay11dGlsLWNoYXJhY3RlcidcbmltcG9ydCB7Y29kZXN9IGZyb20gJ21pY3JvbWFyay11dGlsLXN5bWJvbC9jb2Rlcy5qcydcbmltcG9ydCB7Y29uc3RhbnRzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvY29uc3RhbnRzLmpzJ1xuaW1wb3J0IHt0eXBlc30gZnJvbSAnbWljcm9tYXJrLXV0aWwtc3ltYm9sL3R5cGVzLmpzJ1xuXG4vKiogQHR5cGUge0NvbnN0cnVjdH0gKi9cbmV4cG9ydCBjb25zdCBjaGFyYWN0ZXJSZWZlcmVuY2UgPSB7XG4gIG5hbWU6ICdjaGFyYWN0ZXJSZWZlcmVuY2UnLFxuICB0b2tlbml6ZTogdG9rZW5pemVDaGFyYWN0ZXJSZWZlcmVuY2Vcbn1cblxuLyoqIEB0eXBlIHtUb2tlbml6ZXJ9ICovXG5mdW5jdGlvbiB0b2tlbml6ZUNoYXJhY3RlclJlZmVyZW5jZShlZmZlY3RzLCBvaywgbm9rKSB7XG4gIGNvbnN0IHNlbGYgPSB0aGlzXG4gIGxldCBzaXplID0gMFxuICAvKiogQHR5cGUge251bWJlcn0gKi9cbiAgbGV0IG1heFxuICAvKiogQHR5cGUgeyhjb2RlOiBDb2RlKSA9PiBjb2RlIGlzIG51bWJlcn0gKi9cbiAgbGV0IHRlc3RcblxuICByZXR1cm4gc3RhcnRcblxuICAvKiogQHR5cGUge1N0YXRlfSAqL1xuICBmdW5jdGlvbiBzdGFydChjb2RlKSB7XG4gICAgYXNzZXJ0KGNvZGUgPT09IGNvZGVzLmFtcGVyc2FuZCwgJ2V4cGVjdGVkIGAmYCcpXG4gICAgZWZmZWN0cy5lbnRlcih0eXBlcy5jaGFyYWN0ZXJSZWZlcmVuY2UpXG4gICAgZWZmZWN0cy5lbnRlcih0eXBlcy5jaGFyYWN0ZXJSZWZlcmVuY2VNYXJrZXIpXG4gICAgZWZmZWN0cy5jb25zdW1lKGNvZGUpXG4gICAgZWZmZWN0cy5leGl0KHR5cGVzLmNoYXJhY3RlclJlZmVyZW5jZU1hcmtlcilcbiAgICByZXR1cm4gb3BlblxuICB9XG5cbiAgLyoqIEB0eXBlIHtTdGF0ZX0gKi9cbiAgZnVuY3Rpb24gb3Blbihjb2RlKSB7XG4gICAgaWYgKGNvZGUgPT09IGNvZGVzLm51bWJlclNpZ24pIHtcbiAgICAgIGVmZmVjdHMuZW50ZXIodHlwZXMuY2hhcmFjdGVyUmVmZXJlbmNlTWFya2VyTnVtZXJpYylcbiAgICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxuICAgICAgZWZmZWN0cy5leGl0KHR5cGVzLmNoYXJhY3RlclJlZmVyZW5jZU1hcmtlck51bWVyaWMpXG4gICAgICByZXR1cm4gbnVtZXJpY1xuICAgIH1cblxuICAgIGVmZmVjdHMuZW50ZXIodHlwZXMuY2hhcmFjdGVyUmVmZXJlbmNlVmFsdWUpXG4gICAgbWF4ID0gY29uc3RhbnRzLmNoYXJhY3RlclJlZmVyZW5jZU5hbWVkU2l6ZU1heFxuICAgIHRlc3QgPSBhc2NpaUFscGhhbnVtZXJpY1xuICAgIHJldHVybiB2YWx1ZShjb2RlKVxuICB9XG5cbiAgLyoqIEB0eXBlIHtTdGF0ZX0gKi9cbiAgZnVuY3Rpb24gbnVtZXJpYyhjb2RlKSB7XG4gICAgaWYgKGNvZGUgPT09IGNvZGVzLnVwcGVyY2FzZVggfHwgY29kZSA9PT0gY29kZXMubG93ZXJjYXNlWCkge1xuICAgICAgZWZmZWN0cy5lbnRlcih0eXBlcy5jaGFyYWN0ZXJSZWZlcmVuY2VNYXJrZXJIZXhhZGVjaW1hbClcbiAgICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxuICAgICAgZWZmZWN0cy5leGl0KHR5cGVzLmNoYXJhY3RlclJlZmVyZW5jZU1hcmtlckhleGFkZWNpbWFsKVxuICAgICAgZWZmZWN0cy5lbnRlcih0eXBlcy5jaGFyYWN0ZXJSZWZlcmVuY2VWYWx1ZSlcbiAgICAgIG1heCA9IGNvbnN0YW50cy5jaGFyYWN0ZXJSZWZlcmVuY2VIZXhhZGVjaW1hbFNpemVNYXhcbiAgICAgIHRlc3QgPSBhc2NpaUhleERpZ2l0XG4gICAgICByZXR1cm4gdmFsdWVcbiAgICB9XG5cbiAgICBlZmZlY3RzLmVudGVyKHR5cGVzLmNoYXJhY3RlclJlZmVyZW5jZVZhbHVlKVxuICAgIG1heCA9IGNvbnN0YW50cy5jaGFyYWN0ZXJSZWZlcmVuY2VEZWNpbWFsU2l6ZU1heFxuICAgIHRlc3QgPSBhc2NpaURpZ2l0XG4gICAgcmV0dXJuIHZhbHVlKGNvZGUpXG4gIH1cblxuICAvKiogQHR5cGUge1N0YXRlfSAqL1xuICBmdW5jdGlvbiB2YWx1ZShjb2RlKSB7XG4gICAgLyoqIEB0eXBlIHtUb2tlbn0gKi9cbiAgICBsZXQgdG9rZW5cblxuICAgIGlmIChjb2RlID09PSBjb2Rlcy5zZW1pY29sb24gJiYgc2l6ZSkge1xuICAgICAgdG9rZW4gPSBlZmZlY3RzLmV4aXQodHlwZXMuY2hhcmFjdGVyUmVmZXJlbmNlVmFsdWUpXG5cbiAgICAgIGlmIChcbiAgICAgICAgdGVzdCA9PT0gYXNjaWlBbHBoYW51bWVyaWMgJiZcbiAgICAgICAgIWRlY29kZU5hbWVkQ2hhcmFjdGVyUmVmZXJlbmNlKHNlbGYuc2xpY2VTZXJpYWxpemUodG9rZW4pKVxuICAgICAgKSB7XG4gICAgICAgIHJldHVybiBub2soY29kZSlcbiAgICAgIH1cblxuICAgICAgZWZmZWN0cy5lbnRlcih0eXBlcy5jaGFyYWN0ZXJSZWZlcmVuY2VNYXJrZXIpXG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcbiAgICAgIGVmZmVjdHMuZXhpdCh0eXBlcy5jaGFyYWN0ZXJSZWZlcmVuY2VNYXJrZXIpXG4gICAgICBlZmZlY3RzLmV4aXQodHlwZXMuY2hhcmFjdGVyUmVmZXJlbmNlKVxuICAgICAgcmV0dXJuIG9rXG4gICAgfVxuXG4gICAgaWYgKHRlc3QoY29kZSkgJiYgc2l6ZSsrIDwgbWF4KSB7XG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcbiAgICAgIHJldHVybiB2YWx1ZVxuICAgIH1cblxuICAgIHJldHVybiBub2soY29kZSlcbiAgfVxufVxuIl0sIm5hbWVzIjpbIm9rIiwiYXNzZXJ0IiwiZGVjb2RlTmFtZWRDaGFyYWN0ZXJSZWZlcmVuY2UiLCJhc2NpaUFscGhhbnVtZXJpYyIsImFzY2lpRGlnaXQiLCJhc2NpaUhleERpZ2l0IiwiY29kZXMiLCJjb25zdGFudHMiLCJ0eXBlcyIsImNoYXJhY3RlclJlZmVyZW5jZSIsIm5hbWUiLCJ0b2tlbml6ZSIsInRva2VuaXplQ2hhcmFjdGVyUmVmZXJlbmNlIiwiZWZmZWN0cyIsIm5vayIsInNlbGYiLCJzaXplIiwibWF4IiwidGVzdCIsInN0YXJ0IiwiY29kZSIsImFtcGVyc2FuZCIsImVudGVyIiwiY2hhcmFjdGVyUmVmZXJlbmNlTWFya2VyIiwiY29uc3VtZSIsImV4aXQiLCJvcGVuIiwibnVtYmVyU2lnbiIsImNoYXJhY3RlclJlZmVyZW5jZU1hcmtlck51bWVyaWMiLCJudW1lcmljIiwiY2hhcmFjdGVyUmVmZXJlbmNlVmFsdWUiLCJjaGFyYWN0ZXJSZWZlcmVuY2VOYW1lZFNpemVNYXgiLCJ2YWx1ZSIsInVwcGVyY2FzZVgiLCJsb3dlcmNhc2VYIiwiY2hhcmFjdGVyUmVmZXJlbmNlTWFya2VySGV4YWRlY2ltYWwiLCJjaGFyYWN0ZXJSZWZlcmVuY2VIZXhhZGVjaW1hbFNpemVNYXgiLCJjaGFyYWN0ZXJSZWZlcmVuY2VEZWNpbWFsU2l6ZU1heCIsInRva2VuIiwic2VtaWNvbG9uIiwic2xpY2VTZXJpYWxpemUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/character-reference.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/code-fenced.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/code-fenced.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   codeFenced: () => (/* binding */ codeFenced)\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"(rsc)/./node_modules/.pnpm/uvu@0.5.6/node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-factory-space */ \"(rsc)/./node_modules/.pnpm/micromark-factory-space@1.0.0/node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-util-character */ \"(rsc)/./node_modules/.pnpm/micromark-util-character@1.1.0/node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/types.js\");\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */ \n\n\n\n\n\n/** @type {Construct} */ const codeFenced = {\n    name: \"codeFenced\",\n    tokenize: tokenizeCodeFenced,\n    concrete: true\n};\n/** @type {Tokenizer} */ function tokenizeCodeFenced(effects, ok, nok) {\n    const self = this;\n    /** @type {Construct} */ const closingFenceConstruct = {\n        tokenize: tokenizeClosingFence,\n        partial: true\n    };\n    /** @type {Construct} */ const nonLazyLine = {\n        tokenize: tokenizeNonLazyLine,\n        partial: true\n    };\n    const tail = this.events[this.events.length - 1];\n    const initialPrefix = tail && tail[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.linePrefix ? tail[2].sliceSerialize(tail[1], true).length : 0;\n    let sizeOpen = 0;\n    /** @type {NonNullable<Code>} */ let marker;\n    return start;\n    /** @type {State} */ function start(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.graveAccent || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.tilde, \"expected `` ` `` or `~`\");\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeFenced);\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeFencedFence);\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeFencedFenceSequence);\n        marker = code;\n        return sequenceOpen(code);\n    }\n    /** @type {State} */ function sequenceOpen(code) {\n        if (code === marker) {\n            effects.consume(code);\n            sizeOpen++;\n            return sequenceOpen;\n        }\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeFencedFenceSequence);\n        return sizeOpen < micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.codeFencedSequenceSizeMin ? nok(code) : (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_4__.factorySpace)(effects, infoOpen, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.whitespace)(code);\n    }\n    /** @type {State} */ function infoOpen(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownLineEnding)(code)) {\n            return openAfter(code);\n        }\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeFencedFenceInfo);\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.chunkString, {\n            contentType: micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.contentTypeString\n        });\n        return info(code);\n    }\n    /** @type {State} */ function info(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownLineEndingOrSpace)(code)) {\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.chunkString);\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeFencedFenceInfo);\n            return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_4__.factorySpace)(effects, infoAfter, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.whitespace)(code);\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.graveAccent && code === marker) return nok(code);\n        effects.consume(code);\n        return info;\n    }\n    /** @type {State} */ function infoAfter(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownLineEnding)(code)) {\n            return openAfter(code);\n        }\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeFencedFenceMeta);\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.chunkString, {\n            contentType: micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.contentTypeString\n        });\n        return meta(code);\n    }\n    /** @type {State} */ function meta(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownLineEnding)(code)) {\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.chunkString);\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeFencedFenceMeta);\n            return openAfter(code);\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.graveAccent && code === marker) return nok(code);\n        effects.consume(code);\n        return meta;\n    }\n    /** @type {State} */ function openAfter(code) {\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeFencedFence);\n        return self.interrupt ? ok(code) : contentStart(code);\n    }\n    /** @type {State} */ function contentStart(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof) {\n            return after(code);\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownLineEnding)(code)) {\n            return effects.attempt(nonLazyLine, effects.attempt(closingFenceConstruct, after, initialPrefix ? (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_4__.factorySpace)(effects, contentStart, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.linePrefix, initialPrefix + 1) : contentStart), after)(code);\n        }\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeFlowValue);\n        return contentContinue(code);\n    }\n    /** @type {State} */ function contentContinue(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownLineEnding)(code)) {\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeFlowValue);\n            return contentStart(code);\n        }\n        effects.consume(code);\n        return contentContinue;\n    }\n    /** @type {State} */ function after(code) {\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeFenced);\n        return ok(code);\n    }\n    /** @type {Tokenizer} */ function tokenizeNonLazyLine(effects, ok, nok) {\n        const self = this;\n        return start;\n        /** @type {State} */ function start(code) {\n            (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownLineEnding)(code), \"expected eol\");\n            effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding);\n            effects.consume(code);\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding);\n            return lineStart;\n        }\n        /** @type {State} */ function lineStart(code) {\n            return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n        }\n    }\n    /** @type {Tokenizer} */ function tokenizeClosingFence(effects, ok, nok) {\n        let size = 0;\n        return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_4__.factorySpace)(effects, closingSequenceStart, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.linePrefix, this.parser.constructs.disable.null.includes(\"codeIndented\") ? undefined : micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.tabSize);\n        /** @type {State} */ function closingSequenceStart(code) {\n            effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeFencedFence);\n            effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeFencedFenceSequence);\n            return closingSequence(code);\n        }\n        /** @type {State} */ function closingSequence(code) {\n            if (code === marker) {\n                effects.consume(code);\n                size++;\n                return closingSequence;\n            }\n            if (size < sizeOpen) return nok(code);\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeFencedFenceSequence);\n            return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_4__.factorySpace)(effects, closingSequenceEnd, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.whitespace)(code);\n        }\n        /** @type {State} */ function closingSequenceEnd(code) {\n            if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownLineEnding)(code)) {\n                effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeFencedFence);\n                return ok(code);\n            }\n            return nok(code);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/code-fenced.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/code-indented.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/code-indented.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   codeIndented: () => (/* binding */ codeIndented)\n/* harmony export */ });\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-factory-space */ \"(rsc)/./node_modules/.pnpm/micromark-factory-space@1.0.0/node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-character */ \"(rsc)/./node_modules/.pnpm/micromark-util-character@1.1.0/node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/types.js\");\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */ \n\n\n\n\n/** @type {Construct} */ const codeIndented = {\n    name: \"codeIndented\",\n    tokenize: tokenizeCodeIndented\n};\n/** @type {Construct} */ const indentedContent = {\n    tokenize: tokenizeIndentedContent,\n    partial: true\n};\n/** @type {Tokenizer} */ function tokenizeCodeIndented(effects, ok, nok) {\n    const self = this;\n    return start;\n    /** @type {State} */ function start(code) {\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_0__.types.codeIndented);\n        return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_1__.factorySpace)(effects, afterStartPrefix, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_0__.types.linePrefix, micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_2__.constants.tabSize + 1)(code);\n    }\n    /** @type {State} */ function afterStartPrefix(code) {\n        const tail = self.events[self.events.length - 1];\n        return tail && tail[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_0__.types.linePrefix && tail[2].sliceSerialize(tail[1], true).length >= micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_2__.constants.tabSize ? afterPrefix(code) : nok(code);\n    }\n    /** @type {State} */ function afterPrefix(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_3__.codes.eof) {\n            return after(code);\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code)) {\n            return effects.attempt(indentedContent, afterPrefix, after)(code);\n        }\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_0__.types.codeFlowValue);\n        return content(code);\n    }\n    /** @type {State} */ function content(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_3__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code)) {\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_0__.types.codeFlowValue);\n            return afterPrefix(code);\n        }\n        effects.consume(code);\n        return content;\n    }\n    /** @type {State} */ function after(code) {\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_0__.types.codeIndented);\n        return ok(code);\n    }\n}\n/** @type {Tokenizer} */ function tokenizeIndentedContent(effects, ok, nok) {\n    const self = this;\n    return start;\n    /** @type {State} */ function start(code) {\n        // If this is a lazy line, it can’t be code.\n        if (self.parser.lazy[self.now().line]) {\n            return nok(code);\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code)) {\n            effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_0__.types.lineEnding);\n            effects.consume(code);\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_0__.types.lineEnding);\n            return start;\n        }\n        return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_1__.factorySpace)(effects, afterPrefix, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_0__.types.linePrefix, micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_2__.constants.tabSize + 1)(code);\n    }\n    /** @type {State} */ function afterPrefix(code) {\n        const tail = self.events[self.events.length - 1];\n        return tail && tail[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_0__.types.linePrefix && tail[2].sliceSerialize(tail[1], true).length >= micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_2__.constants.tabSize ? ok(code) : (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code) ? start(code) : nok(code);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/code-indented.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/code-text.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/code-text.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   codeText: () => (/* binding */ codeText)\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"(rsc)/./node_modules/.pnpm/uvu@0.5.6/node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-character */ \"(rsc)/./node_modules/.pnpm/micromark-util-character@1.1.0/node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/types.js\");\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */ \n\n\n\n/** @type {Construct} */ const codeText = {\n    name: \"codeText\",\n    tokenize: tokenizeCodeText,\n    resolve: resolveCodeText,\n    previous\n};\n/** @type {Resolver} */ function resolveCodeText(events) {\n    let tailExitIndex = events.length - 4;\n    let headEnterIndex = 3;\n    /** @type {number} */ let index;\n    /** @type {number|undefined} */ let enter;\n    // If we start and end with an EOL or a space.\n    if ((events[headEnterIndex][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding || events[headEnterIndex][1].type === \"space\") && (events[tailExitIndex][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding || events[tailExitIndex][1].type === \"space\")) {\n        index = headEnterIndex;\n        // And we have data.\n        while(++index < tailExitIndex){\n            if (events[index][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeTextData) {\n                // Then we have padding.\n                events[headEnterIndex][1].type = micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeTextPadding;\n                events[tailExitIndex][1].type = micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeTextPadding;\n                headEnterIndex += 2;\n                tailExitIndex -= 2;\n                break;\n            }\n        }\n    }\n    // Merge adjacent spaces and data.\n    index = headEnterIndex - 1;\n    tailExitIndex++;\n    while(++index <= tailExitIndex){\n        if (enter === undefined) {\n            if (index !== tailExitIndex && events[index][1].type !== micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding) {\n                enter = index;\n            }\n        } else if (index === tailExitIndex || events[index][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding) {\n            events[enter][1].type = micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeTextData;\n            if (index !== enter + 2) {\n                events[enter][1].end = events[index - 1][1].end;\n                events.splice(enter + 2, index - enter - 2);\n                tailExitIndex -= index - enter - 2;\n                index = enter + 2;\n            }\n            enter = undefined;\n        }\n    }\n    return events;\n}\n/** @type {Previous} */ function previous(code) {\n    // If there is a previous code, there will always be a tail.\n    return code !== micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.graveAccent || this.events[this.events.length - 1][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.characterEscape;\n}\n/** @type {Tokenizer} */ function tokenizeCodeText(effects, ok, nok) {\n    const self = this;\n    let sizeOpen = 0;\n    /** @type {number} */ let size;\n    /** @type {Token} */ let token;\n    return start;\n    /** @type {State} */ function start(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.graveAccent, \"expected `` ` ``\");\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(previous.call(self, self.previous), \"expected correct previous\");\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeText);\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeTextSequence);\n        return openingSequence(code);\n    }\n    /** @type {State} */ function openingSequence(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.graveAccent) {\n            effects.consume(code);\n            sizeOpen++;\n            return openingSequence;\n        }\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeTextSequence);\n        return gap(code);\n    }\n    /** @type {State} */ function gap(code) {\n        // EOF.\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof) {\n            return nok(code);\n        }\n        // Closing fence?\n        // Could also be data.\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.graveAccent) {\n            token = effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeTextSequence);\n            size = 0;\n            return closingSequence(code);\n        }\n        // Tabs don’t work, and virtual spaces don’t make sense.\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.space) {\n            effects.enter(\"space\");\n            effects.consume(code);\n            effects.exit(\"space\");\n            return gap;\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\n            effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding);\n            effects.consume(code);\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding);\n            return gap;\n        }\n        // Data.\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeTextData);\n        return data(code);\n    }\n    // In code.\n    /** @type {State} */ function data(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.space || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.graveAccent || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeTextData);\n            return gap(code);\n        }\n        effects.consume(code);\n        return data;\n    }\n    // Closing fence.\n    /** @type {State} */ function closingSequence(code) {\n        // More.\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.graveAccent) {\n            effects.consume(code);\n            size++;\n            return closingSequence;\n        }\n        // Done!\n        if (size === sizeOpen) {\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeTextSequence);\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeText);\n            return ok(code);\n        }\n        // More or less accents: mark as data.\n        token.type = micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.codeTextData;\n        return data(code);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/code-text.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/content.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/content.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   content: () => (/* binding */ content)\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"(rsc)/./node_modules/.pnpm/uvu@0.5.6/node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! micromark-factory-space */ \"(rsc)/./node_modules/.pnpm/micromark-factory-space@1.0.0/node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-character */ \"(rsc)/./node_modules/.pnpm/micromark-util-character@1.1.0/node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_subtokenize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-subtokenize */ \"(rsc)/./node_modules/.pnpm/micromark-util-subtokenize@1.0.2/node_modules/micromark-util-subtokenize/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/types.js\");\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */ \n\n\n\n\n\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */ const content = {\n    tokenize: tokenizeContent,\n    resolve: resolveContent\n};\n/** @type {Construct} */ const continuationConstruct = {\n    tokenize: tokenizeContinuation,\n    partial: true\n};\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */ function resolveContent(events) {\n    (0,micromark_util_subtokenize__WEBPACK_IMPORTED_MODULE_1__.subtokenize)(events);\n    return events;\n}\n/** @type {Tokenizer} */ function tokenizeContent(effects, ok) {\n    /** @type {Token} */ let previous;\n    return start;\n    /** @type {State} */ function start(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code !== micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof && !(0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code), \"expected no eof or eol\");\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.content);\n        previous = effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.chunkContent, {\n            contentType: micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_5__.constants.contentTypeContent\n        });\n        return data(code);\n    }\n    /** @type {State} */ function data(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof) {\n            return contentEnd(code);\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\n            return effects.check(continuationConstruct, contentContinue, contentEnd)(code);\n        }\n        // Data.\n        effects.consume(code);\n        return data;\n    }\n    /** @type {State} */ function contentEnd(code) {\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.chunkContent);\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.content);\n        return ok(code);\n    }\n    /** @type {State} */ function contentContinue(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code), \"expected eol\");\n        effects.consume(code);\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.chunkContent);\n        previous.next = effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.chunkContent, {\n            contentType: micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_5__.constants.contentTypeContent,\n            previous\n        });\n        previous = previous.next;\n        return data;\n    }\n}\n/** @type {Tokenizer} */ function tokenizeContinuation(effects, ok, nok) {\n    const self = this;\n    return startLookahead;\n    /** @type {State} */ function startLookahead(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code), \"expected a line ending\");\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.chunkContent);\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.lineEnding);\n        effects.consume(code);\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.lineEnding);\n        return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_6__.factorySpace)(effects, prefixed, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.linePrefix);\n    }\n    /** @type {State} */ function prefixed(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\n            return nok(code);\n        }\n        const tail = self.events[self.events.length - 1];\n        if (!self.parser.constructs.disable.null.includes(\"codeIndented\") && tail && tail[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_4__.types.linePrefix && tail[2].sliceSerialize(tail[1], true).length >= micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_5__.constants.tabSize) {\n            return ok(code);\n        }\n        return effects.interrupt(self.parser.constructs.flow, nok, ok)(code);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/content.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/definition.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/definition.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   definition: () => (/* binding */ definition)\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"(rsc)/./node_modules/.pnpm/uvu@0.5.6/node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var micromark_factory_destination__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! micromark-factory-destination */ \"(rsc)/./node_modules/.pnpm/micromark-factory-destination@1.0.0/node_modules/micromark-factory-destination/dev/index.js\");\n/* harmony import */ var micromark_factory_label__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-factory-label */ \"(rsc)/./node_modules/.pnpm/micromark-factory-label@1.0.2/node_modules/micromark-factory-label/dev/index.js\");\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! micromark-factory-space */ \"(rsc)/./node_modules/.pnpm/micromark-factory-space@1.0.0/node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_factory_title__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! micromark-factory-title */ \"(rsc)/./node_modules/.pnpm/micromark-factory-title@1.0.2/node_modules/micromark-factory-title/dev/index.js\");\n/* harmony import */ var micromark_factory_whitespace__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-factory-whitespace */ \"(rsc)/./node_modules/.pnpm/micromark-factory-whitespace@1.0.0/node_modules/micromark-factory-whitespace/dev/index.js\");\n/* harmony import */ var micromark_util_normalize_identifier__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-normalize-identifier */ \"(rsc)/./node_modules/.pnpm/micromark-util-normalize-identifier@1.0.0/node_modules/micromark-util-normalize-identifier/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! micromark-util-character */ \"(rsc)/./node_modules/.pnpm/micromark-util-character@1.1.0/node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/types.js\");\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */ \n\n\n\n\n\n\n\n\n\n/** @type {Construct} */ const definition = {\n    name: \"definition\",\n    tokenize: tokenizeDefinition\n};\n/** @type {Construct} */ const titleConstruct = {\n    tokenize: tokenizeTitle,\n    partial: true\n};\n/** @type {Tokenizer} */ function tokenizeDefinition(effects, ok, nok) {\n    const self = this;\n    /** @type {string} */ let identifier;\n    return start;\n    /** @type {State} */ function start(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.leftSquareBracket, \"expected `[`\");\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.definition);\n        return micromark_factory_label__WEBPACK_IMPORTED_MODULE_3__.factoryLabel.call(self, effects, labelAfter, nok, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.definitionLabel, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.definitionLabelMarker, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.definitionLabelString)(code);\n    }\n    /** @type {State} */ function labelAfter(code) {\n        identifier = (0,micromark_util_normalize_identifier__WEBPACK_IMPORTED_MODULE_4__.normalizeIdentifier)(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1));\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.colon) {\n            effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.definitionMarker);\n            effects.consume(code);\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.definitionMarker);\n            // Note: blank lines can’t exist in content.\n            return (0,micromark_factory_whitespace__WEBPACK_IMPORTED_MODULE_5__.factoryWhitespace)(effects, (0,micromark_factory_destination__WEBPACK_IMPORTED_MODULE_6__.factoryDestination)(effects, effects.attempt(titleConstruct, (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_7__.factorySpace)(effects, after, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.whitespace), (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_7__.factorySpace)(effects, after, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.whitespace)), nok, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.definitionDestination, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.definitionDestinationLiteral, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.definitionDestinationLiteralMarker, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.definitionDestinationRaw, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.definitionDestinationString));\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function after(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_8__.markdownLineEnding)(code)) {\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.definition);\n            if (!self.parser.defined.includes(identifier)) {\n                self.parser.defined.push(identifier);\n            }\n            return ok(code);\n        }\n        return nok(code);\n    }\n}\n/** @type {Tokenizer} */ function tokenizeTitle(effects, ok, nok) {\n    return start;\n    /** @type {State} */ function start(code) {\n        return (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_8__.markdownLineEndingOrSpace)(code) ? (0,micromark_factory_whitespace__WEBPACK_IMPORTED_MODULE_5__.factoryWhitespace)(effects, before)(code) : nok(code);\n    }\n    /** @type {State} */ function before(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.quotationMark || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.apostrophe || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.leftParenthesis) {\n            return (0,micromark_factory_title__WEBPACK_IMPORTED_MODULE_9__.factoryTitle)(effects, (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_7__.factorySpace)(effects, after, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.whitespace), nok, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.definitionTitle, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.definitionTitleMarker, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.definitionTitleString)(code);\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function after(code) {\n        return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_8__.markdownLineEnding)(code) ? ok(code) : nok(code);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/definition.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/hard-break-escape.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/hard-break-escape.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hardBreakEscape: () => (/* binding */ hardBreakEscape)\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"(rsc)/./node_modules/.pnpm/uvu@0.5.6/node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-character */ \"(rsc)/./node_modules/.pnpm/micromark-util-character@1.1.0/node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/types.js\");\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */ \n\n\n\n/** @type {Construct} */ const hardBreakEscape = {\n    name: \"hardBreakEscape\",\n    tokenize: tokenizeHardBreakEscape\n};\n/** @type {Tokenizer} */ function tokenizeHardBreakEscape(effects, ok, nok) {\n    return start;\n    /** @type {State} */ function start(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.backslash, \"expected `\\\\`\");\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.hardBreakEscape);\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.escapeMarker);\n        effects.consume(code);\n        return open;\n    }\n    /** @type {State} */ function open(code) {\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.escapeMarker);\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.hardBreakEscape);\n            return ok(code);\n        }\n        return nok(code);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbWljcm9tYXJrLWNvcmUtY29tbW9ubWFya0AxLjAuNi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWNvcmUtY29tbW9ubWFyay9kZXYvbGliL2hhcmQtYnJlYWstZXNjYXBlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7Q0FJQyxHQUVzQztBQUNvQjtBQUNQO0FBQ0E7QUFFcEQsc0JBQXNCLEdBQ2YsTUFBTUssa0JBQWtCO0lBQzdCQyxNQUFNO0lBQ05DLFVBQVVDO0FBQ1osRUFBQztBQUVELHNCQUFzQixHQUN0QixTQUFTQSx3QkFBd0JDLE9BQU8sRUFBRVQsRUFBRSxFQUFFVSxHQUFHO0lBQy9DLE9BQU9DO0lBRVAsa0JBQWtCLEdBQ2xCLFNBQVNBLE1BQU1DLElBQUk7UUFDakJYLDhDQUFNQSxDQUFDVyxTQUFTVCxpRUFBS0EsQ0FBQ1UsU0FBUyxFQUFFO1FBQ2pDSixRQUFRSyxLQUFLLENBQUNWLGlFQUFLQSxDQUFDQyxlQUFlO1FBQ25DSSxRQUFRSyxLQUFLLENBQUNWLGlFQUFLQSxDQUFDVyxZQUFZO1FBQ2hDTixRQUFRTyxPQUFPLENBQUNKO1FBQ2hCLE9BQU9LO0lBQ1Q7SUFFQSxrQkFBa0IsR0FDbEIsU0FBU0EsS0FBS0wsSUFBSTtRQUNoQixJQUFJViw0RUFBa0JBLENBQUNVLE9BQU87WUFDNUJILFFBQVFTLElBQUksQ0FBQ2QsaUVBQUtBLENBQUNXLFlBQVk7WUFDL0JOLFFBQVFTLElBQUksQ0FBQ2QsaUVBQUtBLENBQUNDLGVBQWU7WUFDbEMsT0FBT0wsR0FBR1k7UUFDWjtRQUVBLE9BQU9GLElBQUlFO0lBQ2I7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL21pY3JvbWFyay1jb3JlLWNvbW1vbm1hcmtAMS4wLjYvbm9kZV9tb2R1bGVzL21pY3JvbWFyay1jb3JlLWNvbW1vbm1hcmsvZGV2L2xpYi9oYXJkLWJyZWFrLWVzY2FwZS5qcz84N2ZiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5Db25zdHJ1Y3R9IENvbnN0cnVjdFxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5Ub2tlbml6ZXJ9IFRva2VuaXplclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5TdGF0ZX0gU3RhdGVcbiAqL1xuXG5pbXBvcnQge29rIGFzIGFzc2VydH0gZnJvbSAndXZ1L2Fzc2VydCdcbmltcG9ydCB7bWFya2Rvd25MaW5lRW5kaW5nfSBmcm9tICdtaWNyb21hcmstdXRpbC1jaGFyYWN0ZXInXG5pbXBvcnQge2NvZGVzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvY29kZXMuanMnXG5pbXBvcnQge3R5cGVzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvdHlwZXMuanMnXG5cbi8qKiBAdHlwZSB7Q29uc3RydWN0fSAqL1xuZXhwb3J0IGNvbnN0IGhhcmRCcmVha0VzY2FwZSA9IHtcbiAgbmFtZTogJ2hhcmRCcmVha0VzY2FwZScsXG4gIHRva2VuaXplOiB0b2tlbml6ZUhhcmRCcmVha0VzY2FwZVxufVxuXG4vKiogQHR5cGUge1Rva2VuaXplcn0gKi9cbmZ1bmN0aW9uIHRva2VuaXplSGFyZEJyZWFrRXNjYXBlKGVmZmVjdHMsIG9rLCBub2spIHtcbiAgcmV0dXJuIHN0YXJ0XG5cbiAgLyoqIEB0eXBlIHtTdGF0ZX0gKi9cbiAgZnVuY3Rpb24gc3RhcnQoY29kZSkge1xuICAgIGFzc2VydChjb2RlID09PSBjb2Rlcy5iYWNrc2xhc2gsICdleHBlY3RlZCBgXFxcXGAnKVxuICAgIGVmZmVjdHMuZW50ZXIodHlwZXMuaGFyZEJyZWFrRXNjYXBlKVxuICAgIGVmZmVjdHMuZW50ZXIodHlwZXMuZXNjYXBlTWFya2VyKVxuICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxuICAgIHJldHVybiBvcGVuXG4gIH1cblxuICAvKiogQHR5cGUge1N0YXRlfSAqL1xuICBmdW5jdGlvbiBvcGVuKGNvZGUpIHtcbiAgICBpZiAobWFya2Rvd25MaW5lRW5kaW5nKGNvZGUpKSB7XG4gICAgICBlZmZlY3RzLmV4aXQodHlwZXMuZXNjYXBlTWFya2VyKVxuICAgICAgZWZmZWN0cy5leGl0KHR5cGVzLmhhcmRCcmVha0VzY2FwZSlcbiAgICAgIHJldHVybiBvayhjb2RlKVxuICAgIH1cblxuICAgIHJldHVybiBub2soY29kZSlcbiAgfVxufVxuIl0sIm5hbWVzIjpbIm9rIiwiYXNzZXJ0IiwibWFya2Rvd25MaW5lRW5kaW5nIiwiY29kZXMiLCJ0eXBlcyIsImhhcmRCcmVha0VzY2FwZSIsIm5hbWUiLCJ0b2tlbml6ZSIsInRva2VuaXplSGFyZEJyZWFrRXNjYXBlIiwiZWZmZWN0cyIsIm5vayIsInN0YXJ0IiwiY29kZSIsImJhY2tzbGFzaCIsImVudGVyIiwiZXNjYXBlTWFya2VyIiwiY29uc3VtZSIsIm9wZW4iLCJleGl0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/hard-break-escape.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/heading-atx.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/heading-atx.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headingAtx: () => (/* binding */ headingAtx)\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"(rsc)/./node_modules/.pnpm/uvu@0.5.6/node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! micromark-factory-space */ \"(rsc)/./node_modules/.pnpm/micromark-factory-space@1.0.0/node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-util-character */ \"(rsc)/./node_modules/.pnpm/micromark-util-character@1.1.0/node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_chunked__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-chunked */ \"(rsc)/./node_modules/.pnpm/micromark-util-chunked@1.0.0/node_modules/micromark-util-chunked/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/types.js\");\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */ \n\n\n\n\n\n\n/** @type {Construct} */ const headingAtx = {\n    name: \"headingAtx\",\n    tokenize: tokenizeHeadingAtx,\n    resolve: resolveHeadingAtx\n};\n/** @type {Resolver} */ function resolveHeadingAtx(events, context) {\n    let contentEnd = events.length - 2;\n    let contentStart = 3;\n    /** @type {Token} */ let content;\n    /** @type {Token} */ let text;\n    // Prefix whitespace, part of the opening.\n    if (events[contentStart][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.whitespace) {\n        contentStart += 2;\n    }\n    // Suffix whitespace, part of the closing.\n    if (contentEnd - 2 > contentStart && events[contentEnd][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.whitespace) {\n        contentEnd -= 2;\n    }\n    if (events[contentEnd][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.atxHeadingSequence && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.whitespace)) {\n        contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;\n    }\n    if (contentEnd > contentStart) {\n        content = {\n            type: micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.atxHeadingText,\n            start: events[contentStart][1].start,\n            end: events[contentEnd][1].end\n        };\n        text = {\n            type: micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.chunkText,\n            start: events[contentStart][1].start,\n            end: events[contentEnd][1].end,\n            // @ts-expect-error Constants are fine to assign.\n            contentType: micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_2__.constants.contentTypeText\n        };\n        (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_3__.splice)(events, contentStart, contentEnd - contentStart + 1, [\n            [\n                \"enter\",\n                content,\n                context\n            ],\n            [\n                \"enter\",\n                text,\n                context\n            ],\n            [\n                \"exit\",\n                text,\n                context\n            ],\n            [\n                \"exit\",\n                content,\n                context\n            ]\n        ]);\n    }\n    return events;\n}\n/** @type {Tokenizer} */ function tokenizeHeadingAtx(effects, ok, nok) {\n    const self = this;\n    let size = 0;\n    return start;\n    /** @type {State} */ function start(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.numberSign, \"expected `#`\");\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.atxHeading);\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.atxHeadingSequence);\n        return fenceOpenInside(code);\n    }\n    /** @type {State} */ function fenceOpenInside(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.numberSign && size++ < micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_2__.constants.atxHeadingOpeningFenceSizeMax) {\n            effects.consume(code);\n            return fenceOpenInside;\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownLineEndingOrSpace)(code)) {\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.atxHeadingSequence);\n            return self.interrupt ? ok(code) : headingBreak(code);\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function headingBreak(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.numberSign) {\n            effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.atxHeadingSequence);\n            return sequence(code);\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownLineEnding)(code)) {\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.atxHeading);\n            return ok(code);\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownSpace)(code)) {\n            return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_6__.factorySpace)(effects, headingBreak, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.whitespace)(code);\n        }\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.atxHeadingText);\n        return data(code);\n    }\n    /** @type {State} */ function sequence(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.numberSign) {\n            effects.consume(code);\n            return sequence;\n        }\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.atxHeadingSequence);\n        return headingBreak(code);\n    }\n    /** @type {State} */ function data(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.eof || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.numberSign || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_5__.markdownLineEndingOrSpace)(code)) {\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.atxHeadingText);\n            return headingBreak(code);\n        }\n        effects.consume(code);\n        return data;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/heading-atx.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/html-flow.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/html-flow.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   htmlFlow: () => (/* binding */ htmlFlow)\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"(rsc)/./node_modules/.pnpm/uvu@0.5.6/node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-character */ \"(rsc)/./node_modules/.pnpm/micromark-util-character@1.1.0/node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_html_tag_name__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-util-html-tag-name */ \"(rsc)/./node_modules/.pnpm/micromark-util-html-tag-name@1.1.0/node_modules/micromark-util-html-tag-name/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var _blank_line_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./blank-line.js */ \"(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/blank-line.js\");\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */ \n\n\n\n\n\n\n/** @type {Construct} */ const htmlFlow = {\n    name: \"htmlFlow\",\n    tokenize: tokenizeHtmlFlow,\n    resolveTo: resolveToHtmlFlow,\n    concrete: true\n};\n/** @type {Construct} */ const nextBlankConstruct = {\n    tokenize: tokenizeNextBlank,\n    partial: true\n};\n/** @type {Resolver} */ function resolveToHtmlFlow(events) {\n    let index = events.length;\n    while(index--){\n        if (events[index][0] === \"enter\" && events[index][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.htmlFlow) {\n            break;\n        }\n    }\n    if (index > 1 && events[index - 2][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.linePrefix) {\n        // Add the prefix start to the HTML token.\n        events[index][1].start = events[index - 2][1].start;\n        // Add the prefix start to the HTML line token.\n        events[index + 1][1].start = events[index - 2][1].start;\n        // Remove the line prefix.\n        events.splice(index - 2, 2);\n    }\n    return events;\n}\n/** @type {Tokenizer} */ function tokenizeHtmlFlow(effects, ok, nok) {\n    const self = this;\n    /** @type {number} */ let kind;\n    /** @type {boolean} */ let startTag;\n    /** @type {string} */ let buffer;\n    /** @type {number} */ let index;\n    /** @type {Code} */ let marker;\n    return start;\n    /** @type {State} */ function start(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.lessThan, \"expected `<`\");\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.htmlFlow);\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.htmlFlowData);\n        effects.consume(code);\n        return open;\n    }\n    /** @type {State} */ function open(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.exclamationMark) {\n            effects.consume(code);\n            return declarationStart;\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.slash) {\n            effects.consume(code);\n            return tagCloseStart;\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.questionMark) {\n            effects.consume(code);\n            kind = micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlInstruction;\n            // While we’re in an instruction instead of a declaration, we’re on a `?`\n            // right now, so we do need to search for `>`, similar to declarations.\n            return self.interrupt ? ok : continuationDeclarationInside;\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.asciiAlpha)(code)) {\n            effects.consume(code);\n            buffer = String.fromCharCode(code);\n            startTag = true;\n            return tagName;\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function declarationStart(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.dash) {\n            effects.consume(code);\n            kind = micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlComment;\n            return commentOpenInside;\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.leftSquareBracket) {\n            effects.consume(code);\n            kind = micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlCdata;\n            buffer = micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.cdataOpeningString;\n            index = 0;\n            return cdataOpenInside;\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.asciiAlpha)(code)) {\n            effects.consume(code);\n            kind = micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlDeclaration;\n            return self.interrupt ? ok : continuationDeclarationInside;\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function commentOpenInside(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.dash) {\n            effects.consume(code);\n            return self.interrupt ? ok : continuationDeclarationInside;\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function cdataOpenInside(code) {\n        if (code === buffer.charCodeAt(index++)) {\n            effects.consume(code);\n            return index === buffer.length ? self.interrupt ? ok : continuation : cdataOpenInside;\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function tagCloseStart(code) {\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.asciiAlpha)(code)) {\n            effects.consume(code);\n            buffer = String.fromCharCode(code);\n            return tagName;\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function tagName(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.slash || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.greaterThan || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEndingOrSpace)(code)) {\n            if (code !== micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.slash && startTag && micromark_util_html_tag_name__WEBPACK_IMPORTED_MODULE_5__.htmlRawNames.includes(buffer.toLowerCase())) {\n                kind = micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlRaw;\n                return self.interrupt ? ok(code) : continuation(code);\n            }\n            if (micromark_util_html_tag_name__WEBPACK_IMPORTED_MODULE_5__.htmlBlockNames.includes(buffer.toLowerCase())) {\n                kind = micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlBasic;\n                if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.slash) {\n                    effects.consume(code);\n                    return basicSelfClosing;\n                }\n                return self.interrupt ? ok(code) : continuation(code);\n            }\n            kind = micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlComplete;\n            // Do not support complete HTML when interrupting\n            return self.interrupt && !self.parser.lazy[self.now().line] ? nok(code) : startTag ? completeAttributeNameBefore(code) : completeClosingTagAfter(code);\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.dash || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.asciiAlphanumeric)(code)) {\n            effects.consume(code);\n            buffer += String.fromCharCode(code);\n            return tagName;\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function basicSelfClosing(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.greaterThan) {\n            effects.consume(code);\n            return self.interrupt ? ok : continuation;\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function completeClosingTagAfter(code) {\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownSpace)(code)) {\n            effects.consume(code);\n            return completeClosingTagAfter;\n        }\n        return completeEnd(code);\n    }\n    /** @type {State} */ function completeAttributeNameBefore(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.slash) {\n            effects.consume(code);\n            return completeEnd;\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.colon || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.underscore || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.asciiAlpha)(code)) {\n            effects.consume(code);\n            return completeAttributeName;\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownSpace)(code)) {\n            effects.consume(code);\n            return completeAttributeNameBefore;\n        }\n        return completeEnd(code);\n    }\n    /** @type {State} */ function completeAttributeName(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.dash || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.dot || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.colon || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.underscore || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.asciiAlphanumeric)(code)) {\n            effects.consume(code);\n            return completeAttributeName;\n        }\n        return completeAttributeNameAfter(code);\n    }\n    /** @type {State} */ function completeAttributeNameAfter(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.equalsTo) {\n            effects.consume(code);\n            return completeAttributeValueBefore;\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownSpace)(code)) {\n            effects.consume(code);\n            return completeAttributeNameAfter;\n        }\n        return completeAttributeNameBefore(code);\n    }\n    /** @type {State} */ function completeAttributeValueBefore(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.lessThan || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.equalsTo || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.greaterThan || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.graveAccent) {\n            return nok(code);\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.quotationMark || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.apostrophe) {\n            effects.consume(code);\n            marker = code;\n            return completeAttributeValueQuoted;\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownSpace)(code)) {\n            effects.consume(code);\n            return completeAttributeValueBefore;\n        }\n        marker = null;\n        return completeAttributeValueUnquoted(code);\n    }\n    /** @type {State} */ function completeAttributeValueQuoted(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code)) {\n            return nok(code);\n        }\n        if (code === marker) {\n            effects.consume(code);\n            return completeAttributeValueQuotedAfter;\n        }\n        effects.consume(code);\n        return completeAttributeValueQuoted;\n    }\n    /** @type {State} */ function completeAttributeValueUnquoted(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.quotationMark || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.apostrophe || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.lessThan || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.equalsTo || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.greaterThan || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.graveAccent || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEndingOrSpace)(code)) {\n            return completeAttributeNameAfter(code);\n        }\n        effects.consume(code);\n        return completeAttributeValueUnquoted;\n    }\n    /** @type {State} */ function completeAttributeValueQuotedAfter(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.slash || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.greaterThan || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownSpace)(code)) {\n            return completeAttributeNameBefore(code);\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function completeEnd(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.greaterThan) {\n            effects.consume(code);\n            return completeAfter;\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function completeAfter(code) {\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownSpace)(code)) {\n            effects.consume(code);\n            return completeAfter;\n        }\n        return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code) ? continuation(code) : nok(code);\n    }\n    /** @type {State} */ function continuation(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.dash && kind === micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlComment) {\n            effects.consume(code);\n            return continuationCommentInside;\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.lessThan && kind === micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlRaw) {\n            effects.consume(code);\n            return continuationRawTagOpen;\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.greaterThan && kind === micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlDeclaration) {\n            effects.consume(code);\n            return continuationClose;\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.questionMark && kind === micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlInstruction) {\n            effects.consume(code);\n            return continuationDeclarationInside;\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.rightSquareBracket && kind === micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlCdata) {\n            effects.consume(code);\n            return continuationCharacterDataInside;\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code) && (kind === micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlBasic || kind === micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlComplete)) {\n            return effects.check(nextBlankConstruct, continuationClose, continuationAtLineEnding)(code);\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code)) {\n            return continuationAtLineEnding(code);\n        }\n        effects.consume(code);\n        return continuation;\n    }\n    /** @type {State} */ function continuationAtLineEnding(code) {\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.htmlFlowData);\n        return htmlContinueStart(code);\n    }\n    /** @type {State} */ function htmlContinueStart(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof) {\n            return done(code);\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code)) {\n            return effects.attempt({\n                tokenize: htmlLineEnd,\n                partial: true\n            }, htmlContinueStart, done)(code);\n        }\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.htmlFlowData);\n        return continuation(code);\n    }\n    /** @type {Tokenizer} */ function htmlLineEnd(effects, ok, nok) {\n        return start;\n        /** @type {State} */ function start(code) {\n            (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code), \"expected eol\");\n            effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding);\n            effects.consume(code);\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding);\n            return lineStart;\n        }\n        /** @type {State} */ function lineStart(code) {\n            return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n        }\n    }\n    /** @type {State} */ function continuationCommentInside(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.dash) {\n            effects.consume(code);\n            return continuationDeclarationInside;\n        }\n        return continuation(code);\n    }\n    /** @type {State} */ function continuationRawTagOpen(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.slash) {\n            effects.consume(code);\n            buffer = \"\";\n            return continuationRawEndTag;\n        }\n        return continuation(code);\n    }\n    /** @type {State} */ function continuationRawEndTag(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.greaterThan && micromark_util_html_tag_name__WEBPACK_IMPORTED_MODULE_5__.htmlRawNames.includes(buffer.toLowerCase())) {\n            effects.consume(code);\n            return continuationClose;\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.asciiAlpha)(code) && buffer.length < micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlRawSizeMax) {\n            effects.consume(code);\n            buffer += String.fromCharCode(code);\n            return continuationRawEndTag;\n        }\n        return continuation(code);\n    }\n    /** @type {State} */ function continuationCharacterDataInside(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.rightSquareBracket) {\n            effects.consume(code);\n            return continuationDeclarationInside;\n        }\n        return continuation(code);\n    }\n    /** @type {State} */ function continuationDeclarationInside(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.greaterThan) {\n            effects.consume(code);\n            return continuationClose;\n        }\n        // More dashes.\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.dash && kind === micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_3__.constants.htmlComment) {\n            effects.consume(code);\n            return continuationDeclarationInside;\n        }\n        return continuation(code);\n    }\n    /** @type {State} */ function continuationClose(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code)) {\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.htmlFlowData);\n            return done(code);\n        }\n        effects.consume(code);\n        return continuationClose;\n    }\n    /** @type {State} */ function done(code) {\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.htmlFlow);\n        return ok(code);\n    }\n}\n/** @type {Tokenizer} */ function tokenizeNextBlank(effects, ok, nok) {\n    return start;\n    /** @type {State} */ function start(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code), \"expected a line ending\");\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.htmlFlowData);\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEndingBlank);\n        effects.consume(code);\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEndingBlank);\n        return effects.attempt(_blank_line_js__WEBPACK_IMPORTED_MODULE_6__.blankLine, ok, nok);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbWljcm9tYXJrLWNvcmUtY29tbW9ubWFya0AxLjAuNi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWNvcmUtY29tbW9ubWFyay9kZXYvbGliL2h0bWwtZmxvdy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOzs7Ozs7Q0FNQyxHQUVzQztBQU9OO0FBQ3dDO0FBQ3JCO0FBQ1E7QUFDUjtBQUNYO0FBRXpDLHNCQUFzQixHQUNmLE1BQU1hLFdBQVc7SUFDdEJDLE1BQU07SUFDTkMsVUFBVUM7SUFDVkMsV0FBV0M7SUFDWEMsVUFBVTtBQUNaLEVBQUM7QUFFRCxzQkFBc0IsR0FDdEIsTUFBTUMscUJBQXFCO0lBQUNMLFVBQVVNO0lBQW1CQyxTQUFTO0FBQUk7QUFFdEUscUJBQXFCLEdBQ3JCLFNBQVNKLGtCQUFrQkssTUFBTTtJQUMvQixJQUFJQyxRQUFRRCxPQUFPRSxNQUFNO0lBRXpCLE1BQU9ELFFBQVM7UUFDZCxJQUNFRCxNQUFNLENBQUNDLE1BQU0sQ0FBQyxFQUFFLEtBQUssV0FDckJELE1BQU0sQ0FBQ0MsTUFBTSxDQUFDLEVBQUUsQ0FBQ0UsSUFBSSxLQUFLZixpRUFBS0EsQ0FBQ0UsUUFBUSxFQUN4QztZQUNBO1FBQ0Y7SUFDRjtJQUVBLElBQUlXLFFBQVEsS0FBS0QsTUFBTSxDQUFDQyxRQUFRLEVBQUUsQ0FBQyxFQUFFLENBQUNFLElBQUksS0FBS2YsaUVBQUtBLENBQUNnQixVQUFVLEVBQUU7UUFDL0QsMENBQTBDO1FBQzFDSixNQUFNLENBQUNDLE1BQU0sQ0FBQyxFQUFFLENBQUNJLEtBQUssR0FBR0wsTUFBTSxDQUFDQyxRQUFRLEVBQUUsQ0FBQyxFQUFFLENBQUNJLEtBQUs7UUFDbkQsK0NBQStDO1FBQy9DTCxNQUFNLENBQUNDLFFBQVEsRUFBRSxDQUFDLEVBQUUsQ0FBQ0ksS0FBSyxHQUFHTCxNQUFNLENBQUNDLFFBQVEsRUFBRSxDQUFDLEVBQUUsQ0FBQ0ksS0FBSztRQUN2RCwwQkFBMEI7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LE9BQU9IO0lBRVAsa0JBQWtCLEdBQ2xCLFNBQVNBLE1BQU1TLElBQUk7UUFDakJwQyw4Q0FBTUEsQ0FBQ0csNEVBQWtCQSxDQUFDaUMsT0FBTztRQUNqQ1AsUUFBUXNFLElBQUksQ0FBQ3pGLGlFQUFLQSxDQUFDNkIsWUFBWTtRQUMvQlYsUUFBUVMsS0FBSyxDQUFDNUIsaUVBQUtBLENBQUNrRyxlQUFlO1FBQ25DL0UsUUFBUVcsT0FBTyxDQUFDSjtRQUNoQlAsUUFBUXNFLElBQUksQ0FBQ3pGLGlFQUFLQSxDQUFDa0csZUFBZTtRQUNsQyxPQUFPL0UsUUFBUXlFLE9BQU8sQ0FBQzNGLHFEQUFTQSxFQUFFWixJQUFJK0I7SUFDeEM7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL21pY3JvbWFyay1jb3JlLWNvbW1vbm1hcmtAMS4wLjYvbm9kZV9tb2R1bGVzL21pY3JvbWFyay1jb3JlLWNvbW1vbm1hcmsvZGV2L2xpYi9odG1sLWZsb3cuanM/Y2RhMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuQ29uc3RydWN0fSBDb25zdHJ1Y3RcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuUmVzb2x2ZXJ9IFJlc29sdmVyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlRva2VuaXplcn0gVG9rZW5pemVyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlN0YXRlfSBTdGF0ZVxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5Db2RlfSBDb2RlXG4gKi9cblxuaW1wb3J0IHtvayBhcyBhc3NlcnR9IGZyb20gJ3V2dS9hc3NlcnQnXG5pbXBvcnQge1xuICBhc2NpaUFscGhhLFxuICBhc2NpaUFscGhhbnVtZXJpYyxcbiAgbWFya2Rvd25MaW5lRW5kaW5nLFxuICBtYXJrZG93bkxpbmVFbmRpbmdPclNwYWNlLFxuICBtYXJrZG93blNwYWNlXG59IGZyb20gJ21pY3JvbWFyay11dGlsLWNoYXJhY3RlcidcbmltcG9ydCB7aHRtbEJsb2NrTmFtZXMsIGh0bWxSYXdOYW1lc30gZnJvbSAnbWljcm9tYXJrLXV0aWwtaHRtbC10YWctbmFtZSdcbmltcG9ydCB7Y29kZXN9IGZyb20gJ21pY3JvbWFyay11dGlsLXN5bWJvbC9jb2Rlcy5qcydcbmltcG9ydCB7Y29uc3RhbnRzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvY29uc3RhbnRzLmpzJ1xuaW1wb3J0IHt0eXBlc30gZnJvbSAnbWljcm9tYXJrLXV0aWwtc3ltYm9sL3R5cGVzLmpzJ1xuaW1wb3J0IHtibGFua0xpbmV9IGZyb20gJy4vYmxhbmstbGluZS5qcydcblxuLyoqIEB0eXBlIHtDb25zdHJ1Y3R9ICovXG5leHBvcnQgY29uc3QgaHRtbEZsb3cgPSB7XG4gIG5hbWU6ICdodG1sRmxvdycsXG4gIHRva2VuaXplOiB0b2tlbml6ZUh0bWxGbG93LFxuICByZXNvbHZlVG86IHJlc29sdmVUb0h0bWxGbG93LFxuICBjb25jcmV0ZTogdHJ1ZVxufVxuXG4vKiogQHR5cGUge0NvbnN0cnVjdH0gKi9cbmNvbnN0IG5leHRCbGFua0NvbnN0cnVjdCA9IHt0b2tlbml6ZTogdG9rZW5pemVOZXh0QmxhbmssIHBhcnRpYWw6IHRydWV9XG5cbi8qKiBAdHlwZSB7UmVzb2x2ZXJ9ICovXG5mdW5jdGlvbiByZXNvbHZlVG9IdG1sRmxvdyhldmVudHMpIHtcbiAgbGV0IGluZGV4ID0gZXZlbnRzLmxlbmd0aFxuXG4gIHdoaWxlIChpbmRleC0tKSB7XG4gICAgaWYgKFxuICAgICAgZXZlbnRzW2luZGV4XVswXSA9PT0gJ2VudGVyJyAmJlxuICAgICAgZXZlbnRzW2luZGV4XVsxXS50eXBlID09PSB0eXBlcy5odG1sRmxvd1xuICAgICkge1xuICAgICAgYnJlYWtcbiAgICB9XG4gIH1cblxuICBpZiAoaW5kZXggPiAxICYmIGV2ZW50c1tpbmRleCAtIDJdWzFdLnR5cGUgPT09IHR5cGVzLmxpbmVQcmVmaXgpIHtcbiAgICAvLyBBZGQgdGhlIHByZWZpeCBzdGFydCB0byB0aGUgSFRNTCB0b2tlbi5cbiAgICBldmVudHNbaW5kZXhdWzFdLnN0YXJ0ID0gZXZlbnRzW2luZGV4IC0gMl1bMV0uc3RhcnRcbiAgICAvLyBBZGQgdGhlIHByZWZpeCBzdGFydCB0byB0aGUgSFRNTCBsaW5lIHRva2VuLlxuICAgIGV2ZW50c1tpbmRleCArIDFdWzFdLnN0YXJ0ID0gZXZlbnRzW2luZGV4IC0gMl1bMV0uc3RhcnRcbiAgICAvLyBSZW1vdmUgdGhlIGxpbmUgcHJlZml4LlxuICAgIGV2ZW50cy5zcGxpY2UoaW5kZXggLSAyLCAyKVxuICB9XG5cbiAgcmV0dXJuIGV2ZW50c1xufVxuXG4vKiogQHR5cGUge1Rva2VuaXplcn0gKi9cbmZ1bmN0aW9uIHRva2VuaXplSHRtbEZsb3coZWZmZWN0cywgb2ssIG5vaykge1xuICBjb25zdCBzZWxmID0gdGhpc1xuICAvKiogQHR5cGUge251bWJlcn0gKi9cbiAgbGV0IGtpbmRcbiAgLyoqIEB0eXBlIHtib29sZWFufSAqL1xuICBsZXQgc3RhcnRUYWdcbiAgLyoqIEB0eXBlIHtzdHJpbmd9ICovXG4gIGxldCBidWZmZXJcbiAgLyoqIEB0eXBlIHtudW1iZXJ9ICovXG4gIGxldCBpbmRleFxuICAvKiogQHR5cGUge0NvZGV9ICovXG4gIGxldCBtYXJrZXJcblxuICByZXR1cm4gc3RhcnRcblxuICAvKiogQHR5cGUge1N0YXRlfSAqL1xuICBmdW5jdGlvbiBzdGFydChjb2RlKSB7XG4gICAgYXNzZXJ0KGNvZGUgPT09IGNvZGVzLmxlc3NUaGFuLCAnZXhwZWN0ZWQgYDxgJylcbiAgICBlZmZlY3RzLmVudGVyKHR5cGVzLmh0bWxGbG93KVxuICAgIGVmZmVjdHMuZW50ZXIodHlwZXMuaHRtbEZsb3dEYXRhKVxuICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxuICAgIHJldHVybiBvcGVuXG4gIH1cblxuICAvKiogQHR5cGUge1N0YXRlfSAqL1xuICBmdW5jdGlvbiBvcGVuKGNvZGUpIHtcbiAgICBpZiAoY29kZSA9PT0gY29kZXMuZXhjbGFtYXRpb25NYXJrKSB7XG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcbiAgICAgIHJldHVybiBkZWNsYXJhdGlvblN0YXJ0XG4gICAgfVxuXG4gICAgaWYgKGNvZGUgPT09IGNvZGVzLnNsYXNoKSB7XG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcbiAgICAgIHJldHVybiB0YWdDbG9zZVN0YXJ0XG4gICAgfVxuXG4gICAgaWYgKGNvZGUgPT09IGNvZGVzLnF1ZXN0aW9uTWFyaykge1xuICAgICAgZWZmZWN0cy5jb25zdW1lKGNvZGUpXG4gICAgICBraW5kID0gY29uc3RhbnRzLmh0bWxJbnN0cnVjdGlvblxuICAgICAgLy8gV2hpbGUgd2XigJlyZSBpbiBhbiBpbnN0cnVjdGlvbiBpbnN0ZWFkIG9mIGEgZGVjbGFyYXRpb24sIHdl4oCZcmUgb24gYSBgP2BcbiAgICAgIC8vIHJpZ2h0IG5vdywgc28gd2UgZG8gbmVlZCB0byBzZWFyY2ggZm9yIGA+YCwgc2ltaWxhciB0byBkZWNsYXJhdGlvbnMuXG4gICAgICByZXR1cm4gc2VsZi5pbnRlcnJ1cHQgPyBvayA6IGNvbnRpbnVhdGlvbkRlY2xhcmF0aW9uSW5zaWRlXG4gICAgfVxuXG4gICAgaWYgKGFzY2lpQWxwaGEoY29kZSkpIHtcbiAgICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxuICAgICAgYnVmZmVyID0gU3RyaW5nLmZyb21DaGFyQ29kZShjb2RlKVxuICAgICAgc3RhcnRUYWcgPSB0cnVlXG4gICAgICByZXR1cm4gdGFnTmFtZVxuICAgIH1cblxuICAgIHJldHVybiBub2soY29kZSlcbiAgfVxuXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXG4gIGZ1bmN0aW9uIGRlY2xhcmF0aW9uU3RhcnQoY29kZSkge1xuICAgIGlmIChjb2RlID09PSBjb2Rlcy5kYXNoKSB7XG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcbiAgICAgIGtpbmQgPSBjb25zdGFudHMuaHRtbENvbW1lbnRcbiAgICAgIHJldHVybiBjb21tZW50T3Blbkluc2lkZVxuICAgIH1cblxuICAgIGlmIChjb2RlID09PSBjb2Rlcy5sZWZ0U3F1YXJlQnJhY2tldCkge1xuICAgICAgZWZmZWN0cy5jb25zdW1lKGNvZGUpXG4gICAgICBraW5kID0gY29uc3RhbnRzLmh0bWxDZGF0YVxuICAgICAgYnVmZmVyID0gY29uc3RhbnRzLmNkYXRhT3BlbmluZ1N0cmluZ1xuICAgICAgaW5kZXggPSAwXG4gICAgICByZXR1cm4gY2RhdGFPcGVuSW5zaWRlXG4gICAgfVxuXG4gICAgaWYgKGFzY2lpQWxwaGEoY29kZSkpIHtcbiAgICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxuICAgICAga2luZCA9IGNvbnN0YW50cy5odG1sRGVjbGFyYXRpb25cbiAgICAgIHJldHVybiBzZWxmLmludGVycnVwdCA/IG9rIDogY29udGludWF0aW9uRGVjbGFyYXRpb25JbnNpZGVcbiAgICB9XG5cbiAgICByZXR1cm4gbm9rKGNvZGUpXG4gIH1cblxuICAvKiogQHR5cGUge1N0YXRlfSAqL1xuICBmdW5jdGlvbiBjb21tZW50T3Blbkluc2lkZShjb2RlKSB7XG4gICAgaWYgKGNvZGUgPT09IGNvZGVzLmRhc2gpIHtcbiAgICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxuICAgICAgcmV0dXJuIHNlbGYuaW50ZXJydXB0ID8gb2sgOiBjb250aW51YXRpb25EZWNsYXJhdGlvbkluc2lkZVxuICAgIH1cblxuICAgIHJldHVybiBub2soY29kZSlcbiAgfVxuXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXG4gIGZ1bmN0aW9uIGNkYXRhT3Blbkluc2lkZShjb2RlKSB7XG4gICAgaWYgKGNvZGUgPT09IGJ1ZmZlci5jaGFyQ29kZUF0KGluZGV4KyspKSB7XG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcbiAgICAgIHJldHVybiBpbmRleCA9PT0gYnVmZmVyLmxlbmd0aFxuICAgICAgICA/IHNlbGYuaW50ZXJydXB0XG4gICAgICAgICAgPyBva1xuICAgICAgICAgIDogY29udGludWF0aW9uXG4gICAgICAgIDogY2RhdGFPcGVuSW5zaWRlXG4gICAgfVxuXG4gICAgcmV0dXJuIG5vayhjb2RlKVxuICB9XG5cbiAgLyoqIEB0eXBlIHtTdGF0ZX0gKi9cbiAgZnVuY3Rpb24gdGFnQ2xvc2VTdGFydChjb2RlKSB7XG4gICAgaWYgKGFzY2lpQWxwaGEoY29kZSkpIHtcbiAgICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxuICAgICAgYnVmZmVyID0gU3RyaW5nLmZyb21DaGFyQ29kZShjb2RlKVxuICAgICAgcmV0dXJuIHRhZ05hbWVcbiAgICB9XG5cbiAgICByZXR1cm4gbm9rKGNvZGUpXG4gIH1cblxuICAvKiogQHR5cGUge1N0YXRlfSAqL1xuICBmdW5jdGlvbiB0YWdOYW1lKGNvZGUpIHtcbiAgICBpZiAoXG4gICAgICBjb2RlID09PSBjb2Rlcy5lb2YgfHxcbiAgICAgIGNvZGUgPT09IGNvZGVzLnNsYXNoIHx8XG4gICAgICBjb2RlID09PSBjb2Rlcy5ncmVhdGVyVGhhbiB8fFxuICAgICAgbWFya2Rvd25MaW5lRW5kaW5nT3JTcGFjZShjb2RlKVxuICAgICkge1xuICAgICAgaWYgKFxuICAgICAgICBjb2RlICE9PSBjb2Rlcy5zbGFzaCAmJlxuICAgICAgICBzdGFydFRhZyAmJlxuICAgICAgICBodG1sUmF3TmFtZXMuaW5jbHVkZXMoYnVmZmVyLnRvTG93ZXJDYXNlKCkpXG4gICAgICApIHtcbiAgICAgICAga2luZCA9IGNvbnN0YW50cy5odG1sUmF3XG4gICAgICAgIHJldHVybiBzZWxmLmludGVycnVwdCA/IG9rKGNvZGUpIDogY29udGludWF0aW9uKGNvZGUpXG4gICAgICB9XG5cbiAgICAgIGlmIChodG1sQmxvY2tOYW1lcy5pbmNsdWRlcyhidWZmZXIudG9Mb3dlckNhc2UoKSkpIHtcbiAgICAgICAga2luZCA9IGNvbnN0YW50cy5odG1sQmFzaWNcblxuICAgICAgICBpZiAoY29kZSA9PT0gY29kZXMuc2xhc2gpIHtcbiAgICAgICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcbiAgICAgICAgICByZXR1cm4gYmFzaWNTZWxmQ2xvc2luZ1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHNlbGYuaW50ZXJydXB0ID8gb2soY29kZSkgOiBjb250aW51YXRpb24oY29kZSlcbiAgICAgIH1cblxuICAgICAga2luZCA9IGNvbnN0YW50cy5odG1sQ29tcGxldGVcbiAgICAgIC8vIERvIG5vdCBzdXBwb3J0IGNvbXBsZXRlIEhUTUwgd2hlbiBpbnRlcnJ1cHRpbmdcbiAgICAgIHJldHVybiBzZWxmLmludGVycnVwdCAmJiAhc2VsZi5wYXJzZXIubGF6eVtzZWxmLm5vdygpLmxpbmVdXG4gICAgICAgID8gbm9rKGNvZGUpXG4gICAgICAgIDogc3RhcnRUYWdcbiAgICAgICAgPyBjb21wbGV0ZUF0dHJpYnV0ZU5hbWVCZWZvcmUoY29kZSlcbiAgICAgICAgOiBjb21wbGV0ZUNsb3NpbmdUYWdBZnRlcihjb2RlKVxuICAgIH1cblxuICAgIGlmIChjb2RlID09PSBjb2Rlcy5kYXNoIHx8IGFzY2lpQWxwaGFudW1lcmljKGNvZGUpKSB7XG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcbiAgICAgIGJ1ZmZlciArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGNvZGUpXG4gICAgICByZXR1cm4gdGFnTmFtZVxuICAgIH1cblxuICAgIHJldHVybiBub2soY29kZSlcbiAgfVxuXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXG4gIGZ1bmN0aW9uIGJhc2ljU2VsZkNsb3NpbmcoY29kZSkge1xuICAgIGlmIChjb2RlID09PSBjb2Rlcy5ncmVhdGVyVGhhbikge1xuICAgICAgZWZmZWN0cy5jb25zdW1lKGNvZGUpXG4gICAgICByZXR1cm4gc2VsZi5pbnRlcnJ1cHQgPyBvayA6IGNvbnRpbnVhdGlvblxuICAgIH1cblxuICAgIHJldHVybiBub2soY29kZSlcbiAgfVxuXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXG4gIGZ1bmN0aW9uIGNvbXBsZXRlQ2xvc2luZ1RhZ0FmdGVyKGNvZGUpIHtcbiAgICBpZiAobWFya2Rvd25TcGFjZShjb2RlKSkge1xuICAgICAgZWZmZWN0cy5jb25zdW1lKGNvZGUpXG4gICAgICByZXR1cm4gY29tcGxldGVDbG9zaW5nVGFnQWZ0ZXJcbiAgICB9XG5cbiAgICByZXR1cm4gY29tcGxldGVFbmQoY29kZSlcbiAgfVxuXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXG4gIGZ1bmN0aW9uIGNvbXBsZXRlQXR0cmlidXRlTmFtZUJlZm9yZShjb2RlKSB7XG4gICAgaWYgKGNvZGUgPT09IGNvZGVzLnNsYXNoKSB7XG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcbiAgICAgIHJldHVybiBjb21wbGV0ZUVuZFxuICAgIH1cblxuICAgIGlmIChjb2RlID09PSBjb2Rlcy5jb2xvbiB8fCBjb2RlID09PSBjb2Rlcy51bmRlcnNjb3JlIHx8IGFzY2lpQWxwaGEoY29kZSkpIHtcbiAgICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxuICAgICAgcmV0dXJuIGNvbXBsZXRlQXR0cmlidXRlTmFtZVxuICAgIH1cblxuICAgIGlmIChtYXJrZG93blNwYWNlKGNvZGUpKSB7XG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcbiAgICAgIHJldHVybiBjb21wbGV0ZUF0dHJpYnV0ZU5hbWVCZWZvcmVcbiAgICB9XG5cbiAgICByZXR1cm4gY29tcGxldGVFbmQoY29kZSlcbiAgfVxuXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXG4gIGZ1bmN0aW9uIGNvbXBsZXRlQXR0cmlidXRlTmFtZShjb2RlKSB7XG4gICAgaWYgKFxuICAgICAgY29kZSA9PT0gY29kZXMuZGFzaCB8fFxuICAgICAgY29kZSA9PT0gY29kZXMuZG90IHx8XG4gICAgICBjb2RlID09PSBjb2Rlcy5jb2xvbiB8fFxuICAgICAgY29kZSA9PT0gY29kZXMudW5kZXJzY29yZSB8fFxuICAgICAgYXNjaWlBbHBoYW51bWVyaWMoY29kZSlcbiAgICApIHtcbiAgICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxuICAgICAgcmV0dXJuIGNvbXBsZXRlQXR0cmlidXRlTmFtZVxuICAgIH1cblxuICAgIHJldHVybiBjb21wbGV0ZUF0dHJpYnV0ZU5hbWVBZnRlcihjb2RlKVxuICB9XG5cbiAgLyoqIEB0eXBlIHtTdGF0ZX0gKi9cbiAgZnVuY3Rpb24gY29tcGxldGVBdHRyaWJ1dGVOYW1lQWZ0ZXIoY29kZSkge1xuICAgIGlmIChjb2RlID09PSBjb2Rlcy5lcXVhbHNUbykge1xuICAgICAgZWZmZWN0cy5jb25zdW1lKGNvZGUpXG4gICAgICByZXR1cm4gY29tcGxldGVBdHRyaWJ1dGVWYWx1ZUJlZm9yZVxuICAgIH1cblxuICAgIGlmIChtYXJrZG93blNwYWNlKGNvZGUpKSB7XG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcbiAgICAgIHJldHVybiBjb21wbGV0ZUF0dHJpYnV0ZU5hbWVBZnRlclxuICAgIH1cblxuICAgIHJldHVybiBjb21wbGV0ZUF0dHJpYnV0ZU5hbWVCZWZvcmUoY29kZSlcbiAgfVxuXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXG4gIGZ1bmN0aW9uIGNvbXBsZXRlQXR0cmlidXRlVmFsdWVCZWZvcmUoY29kZSkge1xuICAgIGlmIChcbiAgICAgIGNvZGUgPT09IGNvZGVzLmVvZiB8fFxuICAgICAgY29kZSA9PT0gY29kZXMubGVzc1RoYW4gfHxcbiAgICAgIGNvZGUgPT09IGNvZGVzLmVxdWFsc1RvIHx8XG4gICAgICBjb2RlID09PSBjb2Rlcy5ncmVhdGVyVGhhbiB8fFxuICAgICAgY29kZSA9PT0gY29kZXMuZ3JhdmVBY2NlbnRcbiAgICApIHtcbiAgICAgIHJldHVybiBub2soY29kZSlcbiAgICB9XG5cbiAgICBpZiAoY29kZSA9PT0gY29kZXMucXVvdGF0aW9uTWFyayB8fCBjb2RlID09PSBjb2Rlcy5hcG9zdHJvcGhlKSB7XG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcbiAgICAgIG1hcmtlciA9IGNvZGVcbiAgICAgIHJldHVybiBjb21wbGV0ZUF0dHJpYnV0ZVZhbHVlUXVvdGVkXG4gICAgfVxuXG4gICAgaWYgKG1hcmtkb3duU3BhY2UoY29kZSkpIHtcbiAgICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxuICAgICAgcmV0dXJuIGNvbXBsZXRlQXR0cmlidXRlVmFsdWVCZWZvcmVcbiAgICB9XG5cbiAgICBtYXJrZXIgPSBudWxsXG4gICAgcmV0dXJuIGNvbXBsZXRlQXR0cmlidXRlVmFsdWVVbnF1b3RlZChjb2RlKVxuICB9XG5cbiAgLyoqIEB0eXBlIHtTdGF0ZX0gKi9cbiAgZnVuY3Rpb24gY29tcGxldGVBdHRyaWJ1dGVWYWx1ZVF1b3RlZChjb2RlKSB7XG4gICAgaWYgKGNvZGUgPT09IGNvZGVzLmVvZiB8fCBtYXJrZG93bkxpbmVFbmRpbmcoY29kZSkpIHtcbiAgICAgIHJldHVybiBub2soY29kZSlcbiAgICB9XG5cbiAgICBpZiAoY29kZSA9PT0gbWFya2VyKSB7XG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcbiAgICAgIHJldHVybiBjb21wbGV0ZUF0dHJpYnV0ZVZhbHVlUXVvdGVkQWZ0ZXJcbiAgICB9XG5cbiAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcbiAgICByZXR1cm4gY29tcGxldGVBdHRyaWJ1dGVWYWx1ZVF1b3RlZFxuICB9XG5cbiAgLyoqIEB0eXBlIHtTdGF0ZX0gKi9cbiAgZnVuY3Rpb24gY29tcGxldGVBdHRyaWJ1dGVWYWx1ZVVucXVvdGVkKGNvZGUpIHtcbiAgICBpZiAoXG4gICAgICBjb2RlID09PSBjb2Rlcy5lb2YgfHxcbiAgICAgIGNvZGUgPT09IGNvZGVzLnF1b3RhdGlvbk1hcmsgfHxcbiAgICAgIGNvZGUgPT09IGNvZGVzLmFwb3N0cm9waGUgfHxcbiAgICAgIGNvZGUgPT09IGNvZGVzLmxlc3NUaGFuIHx8XG4gICAgICBjb2RlID09PSBjb2Rlcy5lcXVhbHNUbyB8fFxuICAgICAgY29kZSA9PT0gY29kZXMuZ3JlYXRlclRoYW4gfHxcbiAgICAgIGNvZGUgPT09IGNvZGVzLmdyYXZlQWNjZW50IHx8XG4gICAgICBtYXJrZG93bkxpbmVFbmRpbmdPclNwYWNlKGNvZGUpXG4gICAgKSB7XG4gICAgICByZXR1cm4gY29tcGxldGVBdHRyaWJ1dGVOYW1lQWZ0ZXIoY29kZSlcbiAgICB9XG5cbiAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcbiAgICByZXR1cm4gY29tcGxldGVBdHRyaWJ1dGVWYWx1ZVVucXVvdGVkXG4gIH1cblxuICAvKiogQHR5cGUge1N0YXRlfSAqL1xuICBmdW5jdGlvbiBjb21wbGV0ZUF0dHJpYnV0ZVZhbHVlUXVvdGVkQWZ0ZXIoY29kZSkge1xuICAgIGlmIChcbiAgICAgIGNvZGUgPT09IGNvZGVzLnNsYXNoIHx8XG4gICAgICBjb2RlID09PSBjb2Rlcy5ncmVhdGVyVGhhbiB8fFxuICAgICAgbWFya2Rvd25TcGFjZShjb2RlKVxuICAgICkge1xuICAgICAgcmV0dXJuIGNvbXBsZXRlQXR0cmlidXRlTmFtZUJlZm9yZShjb2RlKVxuICAgIH1cblxuICAgIHJldHVybiBub2soY29kZSlcbiAgfVxuXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXG4gIGZ1bmN0aW9uIGNvbXBsZXRlRW5kKGNvZGUpIHtcbiAgICBpZiAoY29kZSA9PT0gY29kZXMuZ3JlYXRlclRoYW4pIHtcbiAgICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxuICAgICAgcmV0dXJuIGNvbXBsZXRlQWZ0ZXJcbiAgICB9XG5cbiAgICByZXR1cm4gbm9rKGNvZGUpXG4gIH1cblxuICAvKiogQHR5cGUge1N0YXRlfSAqL1xuICBmdW5jdGlvbiBjb21wbGV0ZUFmdGVyKGNvZGUpIHtcbiAgICBpZiAobWFya2Rvd25TcGFjZShjb2RlKSkge1xuICAgICAgZWZmZWN0cy5jb25zdW1lKGNvZGUpXG4gICAgICByZXR1cm4gY29tcGxldGVBZnRlclxuICAgIH1cblxuICAgIHJldHVybiBjb2RlID09PSBjb2Rlcy5lb2YgfHwgbWFya2Rvd25MaW5lRW5kaW5nKGNvZGUpXG4gICAgICA/IGNvbnRpbnVhdGlvbihjb2RlKVxuICAgICAgOiBub2soY29kZSlcbiAgfVxuXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXG4gIGZ1bmN0aW9uIGNvbnRpbnVhdGlvbihjb2RlKSB7XG4gICAgaWYgKGNvZGUgPT09IGNvZGVzLmRhc2ggJiYga2luZCA9PT0gY29uc3RhbnRzLmh0bWxDb21tZW50KSB7XG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcbiAgICAgIHJldHVybiBjb250aW51YXRpb25Db21tZW50SW5zaWRlXG4gICAgfVxuXG4gICAgaWYgKGNvZGUgPT09IGNvZGVzLmxlc3NUaGFuICYmIGtpbmQgPT09IGNvbnN0YW50cy5odG1sUmF3KSB7XG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcbiAgICAgIHJldHVybiBjb250aW51YXRpb25SYXdUYWdPcGVuXG4gICAgfVxuXG4gICAgaWYgKGNvZGUgPT09IGNvZGVzLmdyZWF0ZXJUaGFuICYmIGtpbmQgPT09IGNvbnN0YW50cy5odG1sRGVjbGFyYXRpb24pIHtcbiAgICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxuICAgICAgcmV0dXJuIGNvbnRpbnVhdGlvbkNsb3NlXG4gICAgfVxuXG4gICAgaWYgKGNvZGUgPT09IGNvZGVzLnF1ZXN0aW9uTWFyayAmJiBraW5kID09PSBjb25zdGFudHMuaHRtbEluc3RydWN0aW9uKSB7XG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcbiAgICAgIHJldHVybiBjb250aW51YXRpb25EZWNsYXJhdGlvbkluc2lkZVxuICAgIH1cblxuICAgIGlmIChjb2RlID09PSBjb2Rlcy5yaWdodFNxdWFyZUJyYWNrZXQgJiYga2luZCA9PT0gY29uc3RhbnRzLmh0bWxDZGF0YSkge1xuICAgICAgZWZmZWN0cy5jb25zdW1lKGNvZGUpXG4gICAgICByZXR1cm4gY29udGludWF0aW9uQ2hhcmFjdGVyRGF0YUluc2lkZVxuICAgIH1cblxuICAgIGlmIChcbiAgICAgIG1hcmtkb3duTGluZUVuZGluZyhjb2RlKSAmJlxuICAgICAgKGtpbmQgPT09IGNvbnN0YW50cy5odG1sQmFzaWMgfHwga2luZCA9PT0gY29uc3RhbnRzLmh0bWxDb21wbGV0ZSlcbiAgICApIHtcbiAgICAgIHJldHVybiBlZmZlY3RzLmNoZWNrKFxuICAgICAgICBuZXh0QmxhbmtDb25zdHJ1Y3QsXG4gICAgICAgIGNvbnRpbnVhdGlvbkNsb3NlLFxuICAgICAgICBjb250aW51YXRpb25BdExpbmVFbmRpbmdcbiAgICAgICkoY29kZSlcbiAgICB9XG5cbiAgICBpZiAoY29kZSA9PT0gY29kZXMuZW9mIHx8IG1hcmtkb3duTGluZUVuZGluZyhjb2RlKSkge1xuICAgICAgcmV0dXJuIGNvbnRpbnVhdGlvbkF0TGluZUVuZGluZyhjb2RlKVxuICAgIH1cblxuICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxuICAgIHJldHVybiBjb250aW51YXRpb25cbiAgfVxuXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXG4gIGZ1bmN0aW9uIGNvbnRpbnVhdGlvbkF0TGluZUVuZGluZyhjb2RlKSB7XG4gICAgZWZmZWN0cy5leGl0KHR5cGVzLmh0bWxGbG93RGF0YSlcbiAgICByZXR1cm4gaHRtbENvbnRpbnVlU3RhcnQoY29kZSlcbiAgfVxuXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXG4gIGZ1bmN0aW9uIGh0bWxDb250aW51ZVN0YXJ0KGNvZGUpIHtcbiAgICBpZiAoY29kZSA9PT0gY29kZXMuZW9mKSB7XG4gICAgICByZXR1cm4gZG9uZShjb2RlKVxuICAgIH1cblxuICAgIGlmIChtYXJrZG93bkxpbmVFbmRpbmcoY29kZSkpIHtcbiAgICAgIHJldHVybiBlZmZlY3RzLmF0dGVtcHQoXG4gICAgICAgIHt0b2tlbml6ZTogaHRtbExpbmVFbmQsIHBhcnRpYWw6IHRydWV9LFxuICAgICAgICBodG1sQ29udGludWVTdGFydCxcbiAgICAgICAgZG9uZVxuICAgICAgKShjb2RlKVxuICAgIH1cblxuICAgIGVmZmVjdHMuZW50ZXIodHlwZXMuaHRtbEZsb3dEYXRhKVxuICAgIHJldHVybiBjb250aW51YXRpb24oY29kZSlcbiAgfVxuXG4gIC8qKiBAdHlwZSB7VG9rZW5pemVyfSAqL1xuICBmdW5jdGlvbiBodG1sTGluZUVuZChlZmZlY3RzLCBvaywgbm9rKSB7XG4gICAgcmV0dXJuIHN0YXJ0XG5cbiAgICAvKiogQHR5cGUge1N0YXRlfSAqL1xuICAgIGZ1bmN0aW9uIHN0YXJ0KGNvZGUpIHtcbiAgICAgIGFzc2VydChtYXJrZG93bkxpbmVFbmRpbmcoY29kZSksICdleHBlY3RlZCBlb2wnKVxuICAgICAgZWZmZWN0cy5lbnRlcih0eXBlcy5saW5lRW5kaW5nKVxuICAgICAgZWZmZWN0cy5jb25zdW1lKGNvZGUpXG4gICAgICBlZmZlY3RzLmV4aXQodHlwZXMubGluZUVuZGluZylcbiAgICAgIHJldHVybiBsaW5lU3RhcnRcbiAgICB9XG5cbiAgICAvKiogQHR5cGUge1N0YXRlfSAqL1xuICAgIGZ1bmN0aW9uIGxpbmVTdGFydChjb2RlKSB7XG4gICAgICByZXR1cm4gc2VsZi5wYXJzZXIubGF6eVtzZWxmLm5vdygpLmxpbmVdID8gbm9rKGNvZGUpIDogb2soY29kZSlcbiAgICB9XG4gIH1cblxuICAvKiogQHR5cGUge1N0YXRlfSAqL1xuICBmdW5jdGlvbiBjb250aW51YXRpb25Db21tZW50SW5zaWRlKGNvZGUpIHtcbiAgICBpZiAoY29kZSA9PT0gY29kZXMuZGFzaCkge1xuICAgICAgZWZmZWN0cy5jb25zdW1lKGNvZGUpXG4gICAgICByZXR1cm4gY29udGludWF0aW9uRGVjbGFyYXRpb25JbnNpZGVcbiAgICB9XG5cbiAgICByZXR1cm4gY29udGludWF0aW9uKGNvZGUpXG4gIH1cblxuICAvKiogQHR5cGUge1N0YXRlfSAqL1xuICBmdW5jdGlvbiBjb250aW51YXRpb25SYXdUYWdPcGVuKGNvZGUpIHtcbiAgICBpZiAoY29kZSA9PT0gY29kZXMuc2xhc2gpIHtcbiAgICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxuICAgICAgYnVmZmVyID0gJydcbiAgICAgIHJldHVybiBjb250aW51YXRpb25SYXdFbmRUYWdcbiAgICB9XG5cbiAgICByZXR1cm4gY29udGludWF0aW9uKGNvZGUpXG4gIH1cblxuICAvKiogQHR5cGUge1N0YXRlfSAqL1xuICBmdW5jdGlvbiBjb250aW51YXRpb25SYXdFbmRUYWcoY29kZSkge1xuICAgIGlmIChcbiAgICAgIGNvZGUgPT09IGNvZGVzLmdyZWF0ZXJUaGFuICYmXG4gICAgICBodG1sUmF3TmFtZXMuaW5jbHVkZXMoYnVmZmVyLnRvTG93ZXJDYXNlKCkpXG4gICAgKSB7XG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcbiAgICAgIHJldHVybiBjb250aW51YXRpb25DbG9zZVxuICAgIH1cblxuICAgIGlmIChhc2NpaUFscGhhKGNvZGUpICYmIGJ1ZmZlci5sZW5ndGggPCBjb25zdGFudHMuaHRtbFJhd1NpemVNYXgpIHtcbiAgICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxuICAgICAgYnVmZmVyICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoY29kZSlcbiAgICAgIHJldHVybiBjb250aW51YXRpb25SYXdFbmRUYWdcbiAgICB9XG5cbiAgICByZXR1cm4gY29udGludWF0aW9uKGNvZGUpXG4gIH1cblxuICAvKiogQHR5cGUge1N0YXRlfSAqL1xuICBmdW5jdGlvbiBjb250aW51YXRpb25DaGFyYWN0ZXJEYXRhSW5zaWRlKGNvZGUpIHtcbiAgICBpZiAoY29kZSA9PT0gY29kZXMucmlnaHRTcXVhcmVCcmFja2V0KSB7XG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcbiAgICAgIHJldHVybiBjb250aW51YXRpb25EZWNsYXJhdGlvbkluc2lkZVxuICAgIH1cblxuICAgIHJldHVybiBjb250aW51YXRpb24oY29kZSlcbiAgfVxuXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXG4gIGZ1bmN0aW9uIGNvbnRpbnVhdGlvbkRlY2xhcmF0aW9uSW5zaWRlKGNvZGUpIHtcbiAgICBpZiAoY29kZSA9PT0gY29kZXMuZ3JlYXRlclRoYW4pIHtcbiAgICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxuICAgICAgcmV0dXJuIGNvbnRpbnVhdGlvbkNsb3NlXG4gICAgfVxuXG4gICAgLy8gTW9yZSBkYXNoZXMuXG4gICAgaWYgKGNvZGUgPT09IGNvZGVzLmRhc2ggJiYga2luZCA9PT0gY29uc3RhbnRzLmh0bWxDb21tZW50KSB7XG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcbiAgICAgIHJldHVybiBjb250aW51YXRpb25EZWNsYXJhdGlvbkluc2lkZVxuICAgIH1cblxuICAgIHJldHVybiBjb250aW51YXRpb24oY29kZSlcbiAgfVxuXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXG4gIGZ1bmN0aW9uIGNvbnRpbnVhdGlvbkNsb3NlKGNvZGUpIHtcbiAgICBpZiAoY29kZSA9PT0gY29kZXMuZW9mIHx8IG1hcmtkb3duTGluZUVuZGluZyhjb2RlKSkge1xuICAgICAgZWZmZWN0cy5leGl0KHR5cGVzLmh0bWxGbG93RGF0YSlcbiAgICAgIHJldHVybiBkb25lKGNvZGUpXG4gICAgfVxuXG4gICAgZWZmZWN0cy5jb25zdW1lKGNvZGUpXG4gICAgcmV0dXJuIGNvbnRpbnVhdGlvbkNsb3NlXG4gIH1cblxuICAvKiogQHR5cGUge1N0YXRlfSAqL1xuICBmdW5jdGlvbiBkb25lKGNvZGUpIHtcbiAgICBlZmZlY3RzLmV4aXQodHlwZXMuaHRtbEZsb3cpXG4gICAgcmV0dXJuIG9rKGNvZGUpXG4gIH1cbn1cblxuLyoqIEB0eXBlIHtUb2tlbml6ZXJ9ICovXG5mdW5jdGlvbiB0b2tlbml6ZU5leHRCbGFuayhlZmZlY3RzLCBvaywgbm9rKSB7XG4gIHJldHVybiBzdGFydFxuXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXG4gIGZ1bmN0aW9uIHN0YXJ0KGNvZGUpIHtcbiAgICBhc3NlcnQobWFya2Rvd25MaW5lRW5kaW5nKGNvZGUpLCAnZXhwZWN0ZWQgYSBsaW5lIGVuZGluZycpXG4gICAgZWZmZWN0cy5leGl0KHR5cGVzLmh0bWxGbG93RGF0YSlcbiAgICBlZmZlY3RzLmVudGVyKHR5cGVzLmxpbmVFbmRpbmdCbGFuaylcbiAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcbiAgICBlZmZlY3RzLmV4aXQodHlwZXMubGluZUVuZGluZ0JsYW5rKVxuICAgIHJldHVybiBlZmZlY3RzLmF0dGVtcHQoYmxhbmtMaW5lLCBvaywgbm9rKVxuICB9XG59XG4iXSwibmFtZXMiOlsib2siLCJhc3NlcnQiLCJhc2NpaUFscGhhIiwiYXNjaWlBbHBoYW51bWVyaWMiLCJtYXJrZG93bkxpbmVFbmRpbmciLCJtYXJrZG93bkxpbmVFbmRpbmdPclNwYWNlIiwibWFya2Rvd25TcGFjZSIsImh0bWxCbG9ja05hbWVzIiwiaHRtbFJhd05hbWVzIiwiY29kZXMiLCJjb25zdGFudHMiLCJ0eXBlcyIsImJsYW5rTGluZSIsImh0bWxGbG93IiwibmFtZSIsInRva2VuaXplIiwidG9rZW5pemVIdG1sRmxvdyIsInJlc29sdmVUbyIsInJlc29sdmVUb0h0bWxGbG93IiwiY29uY3JldGUiLCJuZXh0QmxhbmtDb25zdHJ1Y3QiLCJ0b2tlbml6ZU5leHRCbGFuayIsInBhcnRpYWwiLCJldmVudHMiLCJpbmRleCIsImxlbmd0aCIsInR5cGUiLCJsaW5lUHJlZml4Iiwic3RhcnQiLCJzcGxpY2UiLCJlZmZlY3RzIiwibm9rIiwic2VsZiIsImtpbmQiLCJzdGFydFRhZyIsImJ1ZmZlciIsIm1hcmtlciIsImNvZGUiLCJsZXNzVGhhbiIsImVudGVyIiwiaHRtbEZsb3dEYXRhIiwiY29uc3VtZSIsIm9wZW4iLCJleGNsYW1hdGlvbk1hcmsiLCJkZWNsYXJhdGlvblN0YXJ0Iiwic2xhc2giLCJ0YWdDbG9zZVN0YXJ0IiwicXVlc3Rpb25NYXJrIiwiaHRtbEluc3RydWN0aW9uIiwiaW50ZXJydXB0IiwiY29udGludWF0aW9uRGVjbGFyYXRpb25JbnNpZGUiLCJTdHJpbmciLCJmcm9tQ2hhckNvZGUiLCJ0YWdOYW1lIiwiZGFzaCIsImh0bWxDb21tZW50IiwiY29tbWVudE9wZW5JbnNpZGUiLCJsZWZ0U3F1YXJlQnJhY2tldCIsImh0bWxDZGF0YSIsImNkYXRhT3BlbmluZ1N0cmluZyIsImNkYXRhT3Blbkluc2lkZSIsImh0bWxEZWNsYXJhdGlvbiIsImNoYXJDb2RlQXQiLCJjb250aW51YXRpb24iLCJlb2YiLCJncmVhdGVyVGhhbiIsImluY2x1ZGVzIiwidG9Mb3dlckNhc2UiLCJodG1sUmF3IiwiaHRtbEJhc2ljIiwiYmFzaWNTZWxmQ2xvc2luZyIsImh0bWxDb21wbGV0ZSIsInBhcnNlciIsImxhenkiLCJub3ciLCJsaW5lIiwiY29tcGxldGVBdHRyaWJ1dGVOYW1lQmVmb3JlIiwiY29tcGxldGVDbG9zaW5nVGFnQWZ0ZXIiLCJjb21wbGV0ZUVuZCIsImNvbG9uIiwidW5kZXJzY29yZSIsImNvbXBsZXRlQXR0cmlidXRlTmFtZSIsImRvdCIsImNvbXBsZXRlQXR0cmlidXRlTmFtZUFmdGVyIiwiZXF1YWxzVG8iLCJjb21wbGV0ZUF0dHJpYnV0ZVZhbHVlQmVmb3JlIiwiZ3JhdmVBY2NlbnQiLCJxdW90YXRpb25NYXJrIiwiYXBvc3Ryb3BoZSIsImNvbXBsZXRlQXR0cmlidXRlVmFsdWVRdW90ZWQiLCJjb21wbGV0ZUF0dHJpYnV0ZVZhbHVlVW5xdW90ZWQiLCJjb21wbGV0ZUF0dHJpYnV0ZVZhbHVlUXVvdGVkQWZ0ZXIiLCJjb21wbGV0ZUFmdGVyIiwiY29udGludWF0aW9uQ29tbWVudEluc2lkZSIsImNvbnRpbnVhdGlvblJhd1RhZ09wZW4iLCJjb250aW51YXRpb25DbG9zZSIsInJpZ2h0U3F1YXJlQnJhY2tldCIsImNvbnRpbnVhdGlvbkNoYXJhY3RlckRhdGFJbnNpZGUiLCJjaGVjayIsImNvbnRpbnVhdGlvbkF0TGluZUVuZGluZyIsImV4aXQiLCJodG1sQ29udGludWVTdGFydCIsImRvbmUiLCJhdHRlbXB0IiwiaHRtbExpbmVFbmQiLCJsaW5lRW5kaW5nIiwibGluZVN0YXJ0IiwiY29udGludWF0aW9uUmF3RW5kVGFnIiwiaHRtbFJhd1NpemVNYXgiLCJsaW5lRW5kaW5nQmxhbmsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/html-flow.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/html-text.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/html-text.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   htmlText: () => (/* binding */ htmlText)\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"(rsc)/./node_modules/.pnpm/uvu@0.5.6/node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-factory-space */ \"(rsc)/./node_modules/.pnpm/micromark-factory-space@1.0.0/node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-character */ \"(rsc)/./node_modules/.pnpm/micromark-util-character@1.1.0/node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/types.js\");\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */ \n\n\n\n\n\n/** @type {Construct} */ const htmlText = {\n    name: \"htmlText\",\n    tokenize: tokenizeHtmlText\n};\n/** @type {Tokenizer} */ function tokenizeHtmlText(effects, ok, nok) {\n    const self = this;\n    /** @type {NonNullable<Code>|undefined} */ let marker;\n    /** @type {string} */ let buffer;\n    /** @type {number} */ let index;\n    /** @type {State} */ let returnState;\n    return start;\n    /** @type {State} */ function start(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.lessThan, \"expected `<`\");\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.htmlText);\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.htmlTextData);\n        effects.consume(code);\n        return open;\n    }\n    /** @type {State} */ function open(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.exclamationMark) {\n            effects.consume(code);\n            return declarationOpen;\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.slash) {\n            effects.consume(code);\n            return tagCloseStart;\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.questionMark) {\n            effects.consume(code);\n            return instruction;\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiAlpha)(code)) {\n            effects.consume(code);\n            return tagOpen;\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function declarationOpen(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash) {\n            effects.consume(code);\n            return commentOpen;\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.leftSquareBracket) {\n            effects.consume(code);\n            buffer = micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_4__.constants.cdataOpeningString;\n            index = 0;\n            return cdataOpen;\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiAlpha)(code)) {\n            effects.consume(code);\n            return declaration;\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function commentOpen(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash) {\n            effects.consume(code);\n            return commentStart;\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function commentStart(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.greaterThan) {\n            return nok(code);\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash) {\n            effects.consume(code);\n            return commentStartDash;\n        }\n        return comment(code);\n    }\n    /** @type {State} */ function commentStartDash(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.greaterThan) {\n            return nok(code);\n        }\n        return comment(code);\n    }\n    /** @type {State} */ function comment(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof) {\n            return nok(code);\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash) {\n            effects.consume(code);\n            return commentClose;\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\n            returnState = comment;\n            return atLineEnding(code);\n        }\n        effects.consume(code);\n        return comment;\n    }\n    /** @type {State} */ function commentClose(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash) {\n            effects.consume(code);\n            return end;\n        }\n        return comment(code);\n    }\n    /** @type {State} */ function cdataOpen(code) {\n        if (code === buffer.charCodeAt(index++)) {\n            effects.consume(code);\n            return index === buffer.length ? cdata : cdataOpen;\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function cdata(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof) {\n            return nok(code);\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.rightSquareBracket) {\n            effects.consume(code);\n            return cdataClose;\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\n            returnState = cdata;\n            return atLineEnding(code);\n        }\n        effects.consume(code);\n        return cdata;\n    }\n    /** @type {State} */ function cdataClose(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.rightSquareBracket) {\n            effects.consume(code);\n            return cdataEnd;\n        }\n        return cdata(code);\n    }\n    /** @type {State} */ function cdataEnd(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.greaterThan) {\n            return end(code);\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.rightSquareBracket) {\n            effects.consume(code);\n            return cdataEnd;\n        }\n        return cdata(code);\n    }\n    /** @type {State} */ function declaration(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.greaterThan) {\n            return end(code);\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\n            returnState = declaration;\n            return atLineEnding(code);\n        }\n        effects.consume(code);\n        return declaration;\n    }\n    /** @type {State} */ function instruction(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof) {\n            return nok(code);\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.questionMark) {\n            effects.consume(code);\n            return instructionClose;\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\n            returnState = instruction;\n            return atLineEnding(code);\n        }\n        effects.consume(code);\n        return instruction;\n    }\n    /** @type {State} */ function instructionClose(code) {\n        return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.greaterThan ? end(code) : instruction(code);\n    }\n    /** @type {State} */ function tagCloseStart(code) {\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiAlpha)(code)) {\n            effects.consume(code);\n            return tagClose;\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function tagClose(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiAlphanumeric)(code)) {\n            effects.consume(code);\n            return tagClose;\n        }\n        return tagCloseBetween(code);\n    }\n    /** @type {State} */ function tagCloseBetween(code) {\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\n            returnState = tagCloseBetween;\n            return atLineEnding(code);\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownSpace)(code)) {\n            effects.consume(code);\n            return tagCloseBetween;\n        }\n        return end(code);\n    }\n    /** @type {State} */ function tagOpen(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiAlphanumeric)(code)) {\n            effects.consume(code);\n            return tagOpen;\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.slash || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.greaterThan || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEndingOrSpace)(code)) {\n            return tagOpenBetween(code);\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function tagOpenBetween(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.slash) {\n            effects.consume(code);\n            return end;\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.colon || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.underscore || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiAlpha)(code)) {\n            effects.consume(code);\n            return tagOpenAttributeName;\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\n            returnState = tagOpenBetween;\n            return atLineEnding(code);\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownSpace)(code)) {\n            effects.consume(code);\n            return tagOpenBetween;\n        }\n        return end(code);\n    }\n    /** @type {State} */ function tagOpenAttributeName(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dot || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.colon || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.underscore || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiAlphanumeric)(code)) {\n            effects.consume(code);\n            return tagOpenAttributeName;\n        }\n        return tagOpenAttributeNameAfter(code);\n    }\n    /** @type {State} */ function tagOpenAttributeNameAfter(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.equalsTo) {\n            effects.consume(code);\n            return tagOpenAttributeValueBefore;\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\n            returnState = tagOpenAttributeNameAfter;\n            return atLineEnding(code);\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownSpace)(code)) {\n            effects.consume(code);\n            return tagOpenAttributeNameAfter;\n        }\n        return tagOpenBetween(code);\n    }\n    /** @type {State} */ function tagOpenAttributeValueBefore(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.lessThan || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.equalsTo || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.greaterThan || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.graveAccent) {\n            return nok(code);\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.quotationMark || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.apostrophe) {\n            effects.consume(code);\n            marker = code;\n            return tagOpenAttributeValueQuoted;\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\n            returnState = tagOpenAttributeValueBefore;\n            return atLineEnding(code);\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownSpace)(code)) {\n            effects.consume(code);\n            return tagOpenAttributeValueBefore;\n        }\n        effects.consume(code);\n        marker = undefined;\n        return tagOpenAttributeValueUnquoted;\n    }\n    /** @type {State} */ function tagOpenAttributeValueQuoted(code) {\n        if (code === marker) {\n            effects.consume(code);\n            return tagOpenAttributeValueQuotedAfter;\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof) {\n            return nok(code);\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\n            returnState = tagOpenAttributeValueQuoted;\n            return atLineEnding(code);\n        }\n        effects.consume(code);\n        return tagOpenAttributeValueQuoted;\n    }\n    /** @type {State} */ function tagOpenAttributeValueQuotedAfter(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.greaterThan || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.slash || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEndingOrSpace)(code)) {\n            return tagOpenBetween(code);\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function tagOpenAttributeValueUnquoted(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.quotationMark || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.apostrophe || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.lessThan || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.equalsTo || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.graveAccent) {\n            return nok(code);\n        }\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.greaterThan || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEndingOrSpace)(code)) {\n            return tagOpenBetween(code);\n        }\n        effects.consume(code);\n        return tagOpenAttributeValueUnquoted;\n    }\n    // We can’t have blank lines in content, so no need to worry about empty\n    // tokens.\n    /** @type {State} */ function atLineEnding(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(returnState, \"expected return state\");\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code), \"expected eol\");\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.htmlTextData);\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.lineEnding);\n        effects.consume(code);\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.lineEnding);\n        return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_5__.factorySpace)(effects, afterPrefix, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.linePrefix, self.parser.constructs.disable.null.includes(\"codeIndented\") ? undefined : micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_4__.constants.tabSize);\n    }\n    /** @type {State} */ function afterPrefix(code) {\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.htmlTextData);\n        return returnState(code);\n    }\n    /** @type {State} */ function end(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.greaterThan) {\n            effects.consume(code);\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.htmlTextData);\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.htmlText);\n            return ok;\n        }\n        return nok(code);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/html-text.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/label-end.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/label-end.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   labelEnd: () => (/* binding */ labelEnd)\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"(rsc)/./node_modules/.pnpm/uvu@0.5.6/node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var micromark_factory_destination__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! micromark-factory-destination */ \"(rsc)/./node_modules/.pnpm/micromark-factory-destination@1.0.0/node_modules/micromark-factory-destination/dev/index.js\");\n/* harmony import */ var micromark_factory_label__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! micromark-factory-label */ \"(rsc)/./node_modules/.pnpm/micromark-factory-label@1.0.2/node_modules/micromark-factory-label/dev/index.js\");\n/* harmony import */ var micromark_factory_title__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! micromark-factory-title */ \"(rsc)/./node_modules/.pnpm/micromark-factory-title@1.0.2/node_modules/micromark-factory-title/dev/index.js\");\n/* harmony import */ var micromark_factory_whitespace__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! micromark-factory-whitespace */ \"(rsc)/./node_modules/.pnpm/micromark-factory-whitespace@1.0.0/node_modules/micromark-factory-whitespace/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! micromark-util-character */ \"(rsc)/./node_modules/.pnpm/micromark-util-character@1.1.0/node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-chunked */ \"(rsc)/./node_modules/.pnpm/micromark-util-chunked@1.0.0/node_modules/micromark-util-chunked/dev/index.js\");\n/* harmony import */ var micromark_util_normalize_identifier__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-util-normalize-identifier */ \"(rsc)/./node_modules/.pnpm/micromark-util-normalize-identifier@1.0.0/node_modules/micromark-util-normalize-identifier/dev/index.js\");\n/* harmony import */ var micromark_util_resolve_all__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-resolve-all */ \"(rsc)/./node_modules/.pnpm/micromark-util-resolve-all@1.0.0/node_modules/micromark-util-resolve-all/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/types.js\");\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */ \n\n\n\n\n\n\n\n\n\n\n\n/** @type {Construct} */ const labelEnd = {\n    name: \"labelEnd\",\n    tokenize: tokenizeLabelEnd,\n    resolveTo: resolveToLabelEnd,\n    resolveAll: resolveAllLabelEnd\n};\n/** @type {Construct} */ const resourceConstruct = {\n    tokenize: tokenizeResource\n};\n/** @type {Construct} */ const fullReferenceConstruct = {\n    tokenize: tokenizeFullReference\n};\n/** @type {Construct} */ const collapsedReferenceConstruct = {\n    tokenize: tokenizeCollapsedReference\n};\n/** @type {Resolver} */ function resolveAllLabelEnd(events) {\n    let index = -1;\n    /** @type {Token} */ let token;\n    while(++index < events.length){\n        token = events[index][1];\n        if (token.type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelImage || token.type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelLink || token.type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelEnd) {\n            // Remove the marker.\n            events.splice(index + 1, token.type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelImage ? 4 : 2);\n            token.type = micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.data;\n            index++;\n        }\n    }\n    return events;\n}\n/** @type {Resolver} */ function resolveToLabelEnd(events, context) {\n    let index = events.length;\n    let offset = 0;\n    /** @type {Token} */ let token;\n    /** @type {number|undefined} */ let open;\n    /** @type {number|undefined} */ let close;\n    /** @type {Event[]} */ let media;\n    // Find an opening.\n    while(index--){\n        token = events[index][1];\n        if (open) {\n            // If we see another link, or inactive link label, we’ve been here before.\n            if (token.type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.link || token.type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelLink && token._inactive) {\n                break;\n            }\n            // Mark other link openings as inactive, as we can’t have links in\n            // links.\n            if (events[index][0] === \"enter\" && token.type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelLink) {\n                token._inactive = true;\n            }\n        } else if (close) {\n            if (events[index][0] === \"enter\" && (token.type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelImage || token.type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelLink) && !token._balanced) {\n                open = index;\n                if (token.type !== micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelLink) {\n                    offset = 2;\n                    break;\n                }\n            }\n        } else if (token.type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelEnd) {\n            close = index;\n        }\n    }\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(open !== undefined, \"`open` is supposed to be found\");\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(close !== undefined, \"`close` is supposed to be found\");\n    const group = {\n        type: events[open][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelLink ? micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.link : micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.image,\n        start: Object.assign({}, events[open][1].start),\n        end: Object.assign({}, events[events.length - 1][1].end)\n    };\n    const label = {\n        type: micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.label,\n        start: Object.assign({}, events[open][1].start),\n        end: Object.assign({}, events[close][1].end)\n    };\n    const text = {\n        type: micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelText,\n        start: Object.assign({}, events[open + offset + 2][1].end),\n        end: Object.assign({}, events[close - 2][1].start)\n    };\n    media = [\n        [\n            \"enter\",\n            group,\n            context\n        ],\n        [\n            \"enter\",\n            label,\n            context\n        ]\n    ];\n    // Opening marker.\n    media = (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.push)(media, events.slice(open + 1, open + offset + 3));\n    // Text open.\n    media = (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.push)(media, [\n        [\n            \"enter\",\n            text,\n            context\n        ]\n    ]);\n    // Between.\n    media = (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.push)(media, (0,micromark_util_resolve_all__WEBPACK_IMPORTED_MODULE_3__.resolveAll)(context.parser.constructs.insideSpan.null, events.slice(open + offset + 4, close - 3), context));\n    // Text close, marker close, label close.\n    media = (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.push)(media, [\n        [\n            \"exit\",\n            text,\n            context\n        ],\n        events[close - 2],\n        events[close - 1],\n        [\n            \"exit\",\n            label,\n            context\n        ]\n    ]);\n    // Reference, resource, or so.\n    media = (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.push)(media, events.slice(close + 1));\n    // Media close.\n    media = (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.push)(media, [\n        [\n            \"exit\",\n            group,\n            context\n        ]\n    ]);\n    (0,micromark_util_chunked__WEBPACK_IMPORTED_MODULE_2__.splice)(events, open, events.length, media);\n    return events;\n}\n/** @type {Tokenizer} */ function tokenizeLabelEnd(effects, ok, nok) {\n    const self = this;\n    let index = self.events.length;\n    /** @type {Token} */ let labelStart;\n    /** @type {boolean} */ let defined;\n    // Find an opening.\n    while(index--){\n        if ((self.events[index][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelImage || self.events[index][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelLink) && !self.events[index][1]._balanced) {\n            labelStart = self.events[index][1];\n            break;\n        }\n    }\n    return start;\n    /** @type {State} */ function start(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.rightSquareBracket, \"expected `]`\");\n        if (!labelStart) {\n            return nok(code);\n        }\n        // It’s a balanced bracket, but contains a link.\n        if (labelStart._inactive) return balanced(code);\n        defined = self.parser.defined.includes((0,micromark_util_normalize_identifier__WEBPACK_IMPORTED_MODULE_5__.normalizeIdentifier)(self.sliceSerialize({\n            start: labelStart.end,\n            end: self.now()\n        })));\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelEnd);\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelMarker);\n        effects.consume(code);\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelMarker);\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.labelEnd);\n        return afterLabelEnd;\n    }\n    /** @type {State} */ function afterLabelEnd(code) {\n        // Resource: `[asd](fgh)`.\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.leftParenthesis) {\n            return effects.attempt(resourceConstruct, ok, defined ? ok : balanced)(code);\n        }\n        // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.leftSquareBracket) {\n            return effects.attempt(fullReferenceConstruct, ok, defined ? effects.attempt(collapsedReferenceConstruct, ok, balanced) : balanced)(code);\n        }\n        // Shortcut reference: `[asd]`?\n        return defined ? ok(code) : balanced(code);\n    }\n    /** @type {State} */ function balanced(code) {\n        labelStart._balanced = true;\n        return nok(code);\n    }\n}\n/** @type {Tokenizer} */ function tokenizeResource(effects, ok, nok) {\n    return start;\n    /** @type {State} */ function start(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.leftParenthesis, \"expected left paren\");\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.resource);\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.resourceMarker);\n        effects.consume(code);\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.resourceMarker);\n        return (0,micromark_factory_whitespace__WEBPACK_IMPORTED_MODULE_6__.factoryWhitespace)(effects, open);\n    }\n    /** @type {State} */ function open(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.rightParenthesis) {\n            return end(code);\n        }\n        return (0,micromark_factory_destination__WEBPACK_IMPORTED_MODULE_7__.factoryDestination)(effects, destinationAfter, nok, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.resourceDestination, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.resourceDestinationLiteral, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.resourceDestinationLiteralMarker, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.resourceDestinationRaw, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.resourceDestinationString, micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_8__.constants.linkResourceDestinationBalanceMax)(code);\n    }\n    /** @type {State} */ function destinationAfter(code) {\n        return (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_9__.markdownLineEndingOrSpace)(code) ? (0,micromark_factory_whitespace__WEBPACK_IMPORTED_MODULE_6__.factoryWhitespace)(effects, between)(code) : end(code);\n    }\n    /** @type {State} */ function between(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.quotationMark || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.apostrophe || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.leftParenthesis) {\n            return (0,micromark_factory_title__WEBPACK_IMPORTED_MODULE_10__.factoryTitle)(effects, (0,micromark_factory_whitespace__WEBPACK_IMPORTED_MODULE_6__.factoryWhitespace)(effects, end), nok, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.resourceTitle, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.resourceTitleMarker, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.resourceTitleString)(code);\n        }\n        return end(code);\n    }\n    /** @type {State} */ function end(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.rightParenthesis) {\n            effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.resourceMarker);\n            effects.consume(code);\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.resourceMarker);\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.resource);\n            return ok;\n        }\n        return nok(code);\n    }\n}\n/** @type {Tokenizer} */ function tokenizeFullReference(effects, ok, nok) {\n    const self = this;\n    return start;\n    /** @type {State} */ function start(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.leftSquareBracket, \"expected left bracket\");\n        return micromark_factory_label__WEBPACK_IMPORTED_MODULE_11__.factoryLabel.call(self, effects, afterLabel, nok, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.reference, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.referenceMarker, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.referenceString)(code);\n    }\n    /** @type {State} */ function afterLabel(code) {\n        return self.parser.defined.includes((0,micromark_util_normalize_identifier__WEBPACK_IMPORTED_MODULE_5__.normalizeIdentifier)(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1))) ? ok(code) : nok(code);\n    }\n}\n/** @type {Tokenizer} */ function tokenizeCollapsedReference(effects, ok, nok) {\n    return start;\n    /** @type {State} */ function start(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.leftSquareBracket, \"expected left bracket\");\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.reference);\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.referenceMarker);\n        effects.consume(code);\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.referenceMarker);\n        return open;\n    }\n    /** @type {State} */ function open(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_4__.codes.rightSquareBracket) {\n            effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.referenceMarker);\n            effects.consume(code);\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.referenceMarker);\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.reference);\n            return ok;\n        }\n        return nok(code);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/label-end.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/label-start-image.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/label-start-image.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   labelStartImage: () => (/* binding */ labelStartImage)\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"(rsc)/./node_modules/.pnpm/uvu@0.5.6/node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var _label_end_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./label-end.js */ \"(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/label-end.js\");\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */ \n\n\n\n/** @type {Construct} */ const labelStartImage = {\n    name: \"labelStartImage\",\n    tokenize: tokenizeLabelStartImage,\n    resolveAll: _label_end_js__WEBPACK_IMPORTED_MODULE_1__.labelEnd.resolveAll\n};\n/** @type {Tokenizer} */ function tokenizeLabelStartImage(effects, ok, nok) {\n    const self = this;\n    return start;\n    /** @type {State} */ function start(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.exclamationMark, \"expected `!`\");\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.labelImage);\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.labelImageMarker);\n        effects.consume(code);\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.labelImageMarker);\n        return open;\n    }\n    /** @type {State} */ function open(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.leftSquareBracket) {\n            effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.labelMarker);\n            effects.consume(code);\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.labelMarker);\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.labelImage);\n            return after;\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function after(code) {\n        /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */ /* Hidden footnotes hook */ /* c8 ignore next 3 */ return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.caret && \"_hiddenFootnoteSupport\" in self.parser.constructs ? nok(code) : ok(code);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbWljcm9tYXJrLWNvcmUtY29tbW9ubWFya0AxLjAuNi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWNvcmUtY29tbW9ubWFyay9kZXYvbGliL2xhYmVsLXN0YXJ0LWltYWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7Q0FJQyxHQUVzQztBQUNhO0FBQ0E7QUFDYjtBQUV2QyxzQkFBc0IsR0FDZixNQUFNSyxrQkFBa0I7SUFDN0JDLE1BQU07SUFDTkMsVUFBVUM7SUFDVkMsWUFBWUwsbURBQVFBLENBQUNLLFVBQVU7QUFDakMsRUFBQztBQUVELHNCQUFzQixHQUN0QixTQUFTRCx3QkFBd0JFLE9BQU8sRUFBRVYsRUFBRSxFQUFFVyxHQUFHO0lBQy9DLE1BQU1DLE9BQU8sSUFBSTtJQUVqQixPQUFPQztJQUVQLGtCQUFrQixHQUNsQixTQUFTQSxNQUFNQyxJQUFJO1FBQ2pCYiw4Q0FBTUEsQ0FBQ2EsU0FBU1osaUVBQUtBLENBQUNhLGVBQWUsRUFBRTtRQUN2Q0wsUUFBUU0sS0FBSyxDQUFDYixpRUFBS0EsQ0FBQ2MsVUFBVTtRQUM5QlAsUUFBUU0sS0FBSyxDQUFDYixpRUFBS0EsQ0FBQ2UsZ0JBQWdCO1FBQ3BDUixRQUFRUyxPQUFPLENBQUNMO1FBQ2hCSixRQUFRVSxJQUFJLENBQUNqQixpRUFBS0EsQ0FBQ2UsZ0JBQWdCO1FBQ25DLE9BQU9HO0lBQ1Q7SUFFQSxrQkFBa0IsR0FDbEIsU0FBU0EsS0FBS1AsSUFBSTtRQUNoQixJQUFJQSxTQUFTWixpRUFBS0EsQ0FBQ29CLGlCQUFpQixFQUFFO1lBQ3BDWixRQUFRTSxLQUFLLENBQUNiLGlFQUFLQSxDQUFDb0IsV0FBVztZQUMvQmIsUUFBUVMsT0FBTyxDQUFDTDtZQUNoQkosUUFBUVUsSUFBSSxDQUFDakIsaUVBQUtBLENBQUNvQixXQUFXO1lBQzlCYixRQUFRVSxJQUFJLENBQUNqQixpRUFBS0EsQ0FBQ2MsVUFBVTtZQUM3QixPQUFPTztRQUNUO1FBRUEsT0FBT2IsSUFBSUc7SUFDYjtJQUVBLGtCQUFrQixHQUNsQixTQUFTVSxNQUFNVixJQUFJO1FBQ2pCOzsrQkFFMkIsR0FDM0IseUJBQXlCLEdBQ3pCLG9CQUFvQixHQUNwQixPQUFPQSxTQUFTWixpRUFBS0EsQ0FBQ3VCLEtBQUssSUFDekIsNEJBQTRCYixLQUFLYyxNQUFNLENBQUNDLFVBQVUsR0FDaERoQixJQUFJRyxRQUNKZCxHQUFHYztJQUNUO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy8ucG5wbS9taWNyb21hcmstY29yZS1jb21tb25tYXJrQDEuMC42L25vZGVfbW9kdWxlcy9taWNyb21hcmstY29yZS1jb21tb25tYXJrL2Rldi9saWIvbGFiZWwtc3RhcnQtaW1hZ2UuanM/NTc0OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuQ29uc3RydWN0fSBDb25zdHJ1Y3RcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuVG9rZW5pemVyfSBUb2tlbml6ZXJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuU3RhdGV9IFN0YXRlXG4gKi9cblxuaW1wb3J0IHtvayBhcyBhc3NlcnR9IGZyb20gJ3V2dS9hc3NlcnQnXG5pbXBvcnQge2NvZGVzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvY29kZXMuanMnXG5pbXBvcnQge3R5cGVzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvdHlwZXMuanMnXG5pbXBvcnQge2xhYmVsRW5kfSBmcm9tICcuL2xhYmVsLWVuZC5qcydcblxuLyoqIEB0eXBlIHtDb25zdHJ1Y3R9ICovXG5leHBvcnQgY29uc3QgbGFiZWxTdGFydEltYWdlID0ge1xuICBuYW1lOiAnbGFiZWxTdGFydEltYWdlJyxcbiAgdG9rZW5pemU6IHRva2VuaXplTGFiZWxTdGFydEltYWdlLFxuICByZXNvbHZlQWxsOiBsYWJlbEVuZC5yZXNvbHZlQWxsXG59XG5cbi8qKiBAdHlwZSB7VG9rZW5pemVyfSAqL1xuZnVuY3Rpb24gdG9rZW5pemVMYWJlbFN0YXJ0SW1hZ2UoZWZmZWN0cywgb2ssIG5vaykge1xuICBjb25zdCBzZWxmID0gdGhpc1xuXG4gIHJldHVybiBzdGFydFxuXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXG4gIGZ1bmN0aW9uIHN0YXJ0KGNvZGUpIHtcbiAgICBhc3NlcnQoY29kZSA9PT0gY29kZXMuZXhjbGFtYXRpb25NYXJrLCAnZXhwZWN0ZWQgYCFgJylcbiAgICBlZmZlY3RzLmVudGVyKHR5cGVzLmxhYmVsSW1hZ2UpXG4gICAgZWZmZWN0cy5lbnRlcih0eXBlcy5sYWJlbEltYWdlTWFya2VyKVxuICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxuICAgIGVmZmVjdHMuZXhpdCh0eXBlcy5sYWJlbEltYWdlTWFya2VyKVxuICAgIHJldHVybiBvcGVuXG4gIH1cblxuICAvKiogQHR5cGUge1N0YXRlfSAqL1xuICBmdW5jdGlvbiBvcGVuKGNvZGUpIHtcbiAgICBpZiAoY29kZSA9PT0gY29kZXMubGVmdFNxdWFyZUJyYWNrZXQpIHtcbiAgICAgIGVmZmVjdHMuZW50ZXIodHlwZXMubGFiZWxNYXJrZXIpXG4gICAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcbiAgICAgIGVmZmVjdHMuZXhpdCh0eXBlcy5sYWJlbE1hcmtlcilcbiAgICAgIGVmZmVjdHMuZXhpdCh0eXBlcy5sYWJlbEltYWdlKVxuICAgICAgcmV0dXJuIGFmdGVyXG4gICAgfVxuXG4gICAgcmV0dXJuIG5vayhjb2RlKVxuICB9XG5cbiAgLyoqIEB0eXBlIHtTdGF0ZX0gKi9cbiAgZnVuY3Rpb24gYWZ0ZXIoY29kZSkge1xuICAgIC8qIFRvIGRvOiByZW1vdmUgaW4gdGhlIGZ1dHVyZSBvbmNlIHdl4oCZdmUgc3dpdGNoZWQgZnJvbVxuICAgICAqIGBtaWNyb21hcmstZXh0ZW5zaW9uLWZvb3Rub3RlYCB0byBgbWljcm9tYXJrLWV4dGVuc2lvbi1nZm0tZm9vdG5vdGVgLFxuICAgICAqIHdoaWNoIGRvZXNu4oCZdCBuZWVkIHRoaXMgKi9cbiAgICAvKiBIaWRkZW4gZm9vdG5vdGVzIGhvb2sgKi9cbiAgICAvKiBjOCBpZ25vcmUgbmV4dCAzICovXG4gICAgcmV0dXJuIGNvZGUgPT09IGNvZGVzLmNhcmV0ICYmXG4gICAgICAnX2hpZGRlbkZvb3Rub3RlU3VwcG9ydCcgaW4gc2VsZi5wYXJzZXIuY29uc3RydWN0c1xuICAgICAgPyBub2soY29kZSlcbiAgICAgIDogb2soY29kZSlcbiAgfVxufVxuIl0sIm5hbWVzIjpbIm9rIiwiYXNzZXJ0IiwiY29kZXMiLCJ0eXBlcyIsImxhYmVsRW5kIiwibGFiZWxTdGFydEltYWdlIiwibmFtZSIsInRva2VuaXplIiwidG9rZW5pemVMYWJlbFN0YXJ0SW1hZ2UiLCJyZXNvbHZlQWxsIiwiZWZmZWN0cyIsIm5vayIsInNlbGYiLCJzdGFydCIsImNvZGUiLCJleGNsYW1hdGlvbk1hcmsiLCJlbnRlciIsImxhYmVsSW1hZ2UiLCJsYWJlbEltYWdlTWFya2VyIiwiY29uc3VtZSIsImV4aXQiLCJvcGVuIiwibGVmdFNxdWFyZUJyYWNrZXQiLCJsYWJlbE1hcmtlciIsImFmdGVyIiwiY2FyZXQiLCJwYXJzZXIiLCJjb25zdHJ1Y3RzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/label-start-image.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/label-start-link.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/label-start-link.js ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   labelStartLink: () => (/* binding */ labelStartLink)\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"(rsc)/./node_modules/.pnpm/uvu@0.5.6/node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var _label_end_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./label-end.js */ \"(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/label-end.js\");\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */ \n\n\n\n/** @type {Construct} */ const labelStartLink = {\n    name: \"labelStartLink\",\n    tokenize: tokenizeLabelStartLink,\n    resolveAll: _label_end_js__WEBPACK_IMPORTED_MODULE_1__.labelEnd.resolveAll\n};\n/** @type {Tokenizer} */ function tokenizeLabelStartLink(effects, ok, nok) {\n    const self = this;\n    return start;\n    /** @type {State} */ function start(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.leftSquareBracket, \"expected `[`\");\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.labelLink);\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.labelMarker);\n        effects.consume(code);\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.labelMarker);\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_3__.types.labelLink);\n        return after;\n    }\n    /** @type {State} */ function after(code) {\n        /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */ /* Hidden footnotes hook. */ /* c8 ignore next 3 */ return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.caret && \"_hiddenFootnoteSupport\" in self.parser.constructs ? nok(code) : ok(code);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbWljcm9tYXJrLWNvcmUtY29tbW9ubWFya0AxLjAuNi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWNvcmUtY29tbW9ubWFyay9kZXYvbGliL2xhYmVsLXN0YXJ0LWxpbmsuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7OztDQUlDLEdBRXNDO0FBQ2E7QUFDQTtBQUNiO0FBRXZDLHNCQUFzQixHQUNmLE1BQU1LLGlCQUFpQjtJQUM1QkMsTUFBTTtJQUNOQyxVQUFVQztJQUNWQyxZQUFZTCxtREFBUUEsQ0FBQ0ssVUFBVTtBQUNqQyxFQUFDO0FBRUQsc0JBQXNCLEdBQ3RCLFNBQVNELHVCQUF1QkUsT0FBTyxFQUFFVixFQUFFLEVBQUVXLEdBQUc7SUFDOUMsTUFBTUMsT0FBTyxJQUFJO0lBRWpCLE9BQU9DO0lBRVAsa0JBQWtCLEdBQ2xCLFNBQVNBLE1BQU1DLElBQUk7UUFDakJiLDhDQUFNQSxDQUFDYSxTQUFTWixpRUFBS0EsQ0FBQ2EsaUJBQWlCLEVBQUU7UUFDekNMLFFBQVFNLEtBQUssQ0FBQ2IsaUVBQUtBLENBQUNjLFNBQVM7UUFDN0JQLFFBQVFNLEtBQUssQ0FBQ2IsaUVBQUtBLENBQUNlLFdBQVc7UUFDL0JSLFFBQVFTLE9BQU8sQ0FBQ0w7UUFDaEJKLFFBQVFVLElBQUksQ0FBQ2pCLGlFQUFLQSxDQUFDZSxXQUFXO1FBQzlCUixRQUFRVSxJQUFJLENBQUNqQixpRUFBS0EsQ0FBQ2MsU0FBUztRQUM1QixPQUFPSTtJQUNUO0lBRUEsa0JBQWtCLEdBQ2xCLFNBQVNBLE1BQU1QLElBQUk7UUFDakI7OytCQUUyQixHQUMzQiwwQkFBMEIsR0FDMUIsb0JBQW9CLEdBQ3BCLE9BQU9BLFNBQVNaLGlFQUFLQSxDQUFDb0IsS0FBSyxJQUN6Qiw0QkFBNEJWLEtBQUtXLE1BQU0sQ0FBQ0MsVUFBVSxHQUNoRGIsSUFBSUcsUUFDSmQsR0FBR2M7SUFDVDtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvLnBucG0vbWljcm9tYXJrLWNvcmUtY29tbW9ubWFya0AxLjAuNi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWNvcmUtY29tbW9ubWFyay9kZXYvbGliL2xhYmVsLXN0YXJ0LWxpbmsuanM/MTcwMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuQ29uc3RydWN0fSBDb25zdHJ1Y3RcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuVG9rZW5pemVyfSBUb2tlbml6ZXJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21pY3JvbWFyay11dGlsLXR5cGVzJykuU3RhdGV9IFN0YXRlXG4gKi9cblxuaW1wb3J0IHtvayBhcyBhc3NlcnR9IGZyb20gJ3V2dS9hc3NlcnQnXG5pbXBvcnQge2NvZGVzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvY29kZXMuanMnXG5pbXBvcnQge3R5cGVzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvdHlwZXMuanMnXG5pbXBvcnQge2xhYmVsRW5kfSBmcm9tICcuL2xhYmVsLWVuZC5qcydcblxuLyoqIEB0eXBlIHtDb25zdHJ1Y3R9ICovXG5leHBvcnQgY29uc3QgbGFiZWxTdGFydExpbmsgPSB7XG4gIG5hbWU6ICdsYWJlbFN0YXJ0TGluaycsXG4gIHRva2VuaXplOiB0b2tlbml6ZUxhYmVsU3RhcnRMaW5rLFxuICByZXNvbHZlQWxsOiBsYWJlbEVuZC5yZXNvbHZlQWxsXG59XG5cbi8qKiBAdHlwZSB7VG9rZW5pemVyfSAqL1xuZnVuY3Rpb24gdG9rZW5pemVMYWJlbFN0YXJ0TGluayhlZmZlY3RzLCBvaywgbm9rKSB7XG4gIGNvbnN0IHNlbGYgPSB0aGlzXG5cbiAgcmV0dXJuIHN0YXJ0XG5cbiAgLyoqIEB0eXBlIHtTdGF0ZX0gKi9cbiAgZnVuY3Rpb24gc3RhcnQoY29kZSkge1xuICAgIGFzc2VydChjb2RlID09PSBjb2Rlcy5sZWZ0U3F1YXJlQnJhY2tldCwgJ2V4cGVjdGVkIGBbYCcpXG4gICAgZWZmZWN0cy5lbnRlcih0eXBlcy5sYWJlbExpbmspXG4gICAgZWZmZWN0cy5lbnRlcih0eXBlcy5sYWJlbE1hcmtlcilcbiAgICBlZmZlY3RzLmNvbnN1bWUoY29kZSlcbiAgICBlZmZlY3RzLmV4aXQodHlwZXMubGFiZWxNYXJrZXIpXG4gICAgZWZmZWN0cy5leGl0KHR5cGVzLmxhYmVsTGluaylcbiAgICByZXR1cm4gYWZ0ZXJcbiAgfVxuXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXG4gIGZ1bmN0aW9uIGFmdGVyKGNvZGUpIHtcbiAgICAvKiBUbyBkbzogcmVtb3ZlIGluIHRoZSBmdXR1cmUgb25jZSB3ZeKAmXZlIHN3aXRjaGVkIGZyb21cbiAgICAgKiBgbWljcm9tYXJrLWV4dGVuc2lvbi1mb290bm90ZWAgdG8gYG1pY3JvbWFyay1leHRlbnNpb24tZ2ZtLWZvb3Rub3RlYCxcbiAgICAgKiB3aGljaCBkb2VzbuKAmXQgbmVlZCB0aGlzICovXG4gICAgLyogSGlkZGVuIGZvb3Rub3RlcyBob29rLiAqL1xuICAgIC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cbiAgICByZXR1cm4gY29kZSA9PT0gY29kZXMuY2FyZXQgJiZcbiAgICAgICdfaGlkZGVuRm9vdG5vdGVTdXBwb3J0JyBpbiBzZWxmLnBhcnNlci5jb25zdHJ1Y3RzXG4gICAgICA/IG5vayhjb2RlKVxuICAgICAgOiBvayhjb2RlKVxuICB9XG59XG4iXSwibmFtZXMiOlsib2siLCJhc3NlcnQiLCJjb2RlcyIsInR5cGVzIiwibGFiZWxFbmQiLCJsYWJlbFN0YXJ0TGluayIsIm5hbWUiLCJ0b2tlbml6ZSIsInRva2VuaXplTGFiZWxTdGFydExpbmsiLCJyZXNvbHZlQWxsIiwiZWZmZWN0cyIsIm5vayIsInNlbGYiLCJzdGFydCIsImNvZGUiLCJsZWZ0U3F1YXJlQnJhY2tldCIsImVudGVyIiwibGFiZWxMaW5rIiwibGFiZWxNYXJrZXIiLCJjb25zdW1lIiwiZXhpdCIsImFmdGVyIiwiY2FyZXQiLCJwYXJzZXIiLCJjb25zdHJ1Y3RzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/label-start-link.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/line-ending.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/line-ending.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   lineEnding: () => (/* binding */ lineEnding)\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"(rsc)/./node_modules/.pnpm/uvu@0.5.6/node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-factory-space */ \"(rsc)/./node_modules/.pnpm/micromark-factory-space@1.0.0/node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-character */ \"(rsc)/./node_modules/.pnpm/micromark-util-character@1.1.0/node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/types.js\");\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */ \n\n\n\n/** @type {Construct} */ const lineEnding = {\n    name: \"lineEnding\",\n    tokenize: tokenizeLineEnding\n};\n/** @type {Tokenizer} */ function tokenizeLineEnding(effects, ok) {\n    return start;\n    /** @type {State} */ function start(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.markdownLineEnding)(code), \"expected eol\");\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.lineEnding);\n        effects.consume(code);\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.lineEnding);\n        return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_3__.factorySpace)(effects, ok, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.linePrefix);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbWljcm9tYXJrLWNvcmUtY29tbW9ubWFya0AxLjAuNi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWNvcmUtY29tbW9ubWFyay9kZXYvbGliL2xpbmUtZW5kaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7Q0FJQyxHQUVzQztBQUNhO0FBQ087QUFDUDtBQUVwRCxzQkFBc0IsR0FDZixNQUFNSyxhQUFhO0lBQUNDLE1BQU07SUFBY0MsVUFBVUM7QUFBa0IsRUFBQztBQUU1RSxzQkFBc0IsR0FDdEIsU0FBU0EsbUJBQW1CQyxPQUFPLEVBQUVULEVBQUU7SUFDckMsT0FBT1U7SUFFUCxrQkFBa0IsR0FDbEIsU0FBU0EsTUFBTUMsSUFBSTtRQUNqQlYsOENBQU1BLENBQUNFLDRFQUFrQkEsQ0FBQ1EsT0FBTztRQUNqQ0YsUUFBUUcsS0FBSyxDQUFDUixpRUFBS0EsQ0FBQ0MsVUFBVTtRQUM5QkksUUFBUUksT0FBTyxDQUFDRjtRQUNoQkYsUUFBUUssSUFBSSxDQUFDVixpRUFBS0EsQ0FBQ0MsVUFBVTtRQUM3QixPQUFPSCxxRUFBWUEsQ0FBQ08sU0FBU1QsSUFBSUksaUVBQUtBLENBQUNXLFVBQVU7SUFDbkQ7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL21pY3JvbWFyay1jb3JlLWNvbW1vbm1hcmtAMS4wLjYvbm9kZV9tb2R1bGVzL21pY3JvbWFyay1jb3JlLWNvbW1vbm1hcmsvZGV2L2xpYi9saW5lLWVuZGluZy5qcz8wYzk1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5Db25zdHJ1Y3R9IENvbnN0cnVjdFxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5Ub2tlbml6ZXJ9IFRva2VuaXplclxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5TdGF0ZX0gU3RhdGVcbiAqL1xuXG5pbXBvcnQge29rIGFzIGFzc2VydH0gZnJvbSAndXZ1L2Fzc2VydCdcbmltcG9ydCB7ZmFjdG9yeVNwYWNlfSBmcm9tICdtaWNyb21hcmstZmFjdG9yeS1zcGFjZSdcbmltcG9ydCB7bWFya2Rvd25MaW5lRW5kaW5nfSBmcm9tICdtaWNyb21hcmstdXRpbC1jaGFyYWN0ZXInXG5pbXBvcnQge3R5cGVzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvdHlwZXMuanMnXG5cbi8qKiBAdHlwZSB7Q29uc3RydWN0fSAqL1xuZXhwb3J0IGNvbnN0IGxpbmVFbmRpbmcgPSB7bmFtZTogJ2xpbmVFbmRpbmcnLCB0b2tlbml6ZTogdG9rZW5pemVMaW5lRW5kaW5nfVxuXG4vKiogQHR5cGUge1Rva2VuaXplcn0gKi9cbmZ1bmN0aW9uIHRva2VuaXplTGluZUVuZGluZyhlZmZlY3RzLCBvaykge1xuICByZXR1cm4gc3RhcnRcblxuICAvKiogQHR5cGUge1N0YXRlfSAqL1xuICBmdW5jdGlvbiBzdGFydChjb2RlKSB7XG4gICAgYXNzZXJ0KG1hcmtkb3duTGluZUVuZGluZyhjb2RlKSwgJ2V4cGVjdGVkIGVvbCcpXG4gICAgZWZmZWN0cy5lbnRlcih0eXBlcy5saW5lRW5kaW5nKVxuICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxuICAgIGVmZmVjdHMuZXhpdCh0eXBlcy5saW5lRW5kaW5nKVxuICAgIHJldHVybiBmYWN0b3J5U3BhY2UoZWZmZWN0cywgb2ssIHR5cGVzLmxpbmVQcmVmaXgpXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJvayIsImFzc2VydCIsImZhY3RvcnlTcGFjZSIsIm1hcmtkb3duTGluZUVuZGluZyIsInR5cGVzIiwibGluZUVuZGluZyIsIm5hbWUiLCJ0b2tlbml6ZSIsInRva2VuaXplTGluZUVuZGluZyIsImVmZmVjdHMiLCJzdGFydCIsImNvZGUiLCJlbnRlciIsImNvbnN1bWUiLCJleGl0IiwibGluZVByZWZpeCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/line-ending.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/list.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/list.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   list: () => (/* binding */ list)\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"(rsc)/./node_modules/.pnpm/uvu@0.5.6/node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! micromark-factory-space */ \"(rsc)/./node_modules/.pnpm/micromark-factory-space@1.0.0/node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-character */ \"(rsc)/./node_modules/.pnpm/micromark-util-character@1.1.0/node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/types.js\");\n/* harmony import */ var _blank_line_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./blank-line.js */ \"(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/blank-line.js\");\n/* harmony import */ var _thematic_break_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./thematic-break.js */ \"(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/thematic-break.js\");\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */ /**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */ \n\n\n\n\n\n\n\n/** @type {Construct} */ const list = {\n    name: \"list\",\n    tokenize: tokenizeListStart,\n    continuation: {\n        tokenize: tokenizeListContinuation\n    },\n    exit: tokenizeListEnd\n};\n/** @type {Construct} */ const listItemPrefixWhitespaceConstruct = {\n    tokenize: tokenizeListItemPrefixWhitespace,\n    partial: true\n};\n/** @type {Construct} */ const indentConstruct = {\n    tokenize: tokenizeIndent,\n    partial: true\n};\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */ function tokenizeListStart(effects, ok, nok) {\n    const self = this;\n    const tail = self.events[self.events.length - 1];\n    let initialSize = tail && tail[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.linePrefix ? tail[2].sliceSerialize(tail[1], true).length : 0;\n    let size = 0;\n    return start;\n    /** @type {State} */ function start(code) {\n        const kind = self.containerState.type || (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.asterisk || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.plusSign || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.dash ? micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listUnordered : micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listOrdered);\n        if (kind === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listUnordered ? !self.containerState.marker || code === self.containerState.marker : (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiDigit)(code)) {\n            if (!self.containerState.type) {\n                self.containerState.type = kind;\n                effects.enter(kind, {\n                    _container: true\n                });\n            }\n            if (kind === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listUnordered) {\n                effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listItemPrefix);\n                return code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.asterisk || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.dash ? effects.check(_thematic_break_js__WEBPACK_IMPORTED_MODULE_4__.thematicBreak, nok, atMarker)(code) : atMarker(code);\n            }\n            if (!self.interrupt || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.digit1) {\n                effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listItemPrefix);\n                effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listItemValue);\n                return inside(code);\n            }\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function inside(code) {\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.asciiDigit)(code) && ++size < micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_5__.constants.listItemValueSizeMax) {\n            effects.consume(code);\n            return inside;\n        }\n        if ((!self.interrupt || size < 2) && (self.containerState.marker ? code === self.containerState.marker : code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.rightParenthesis || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.dot)) {\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listItemValue);\n            return atMarker(code);\n        }\n        return nok(code);\n    }\n    /**\n   * @type {State}\n   **/ function atMarker(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code !== micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof, \"eof (`null`) is not a marker\");\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listItemMarker);\n        effects.consume(code);\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listItemMarker);\n        self.containerState.marker = self.containerState.marker || code;\n        return effects.check(_blank_line_js__WEBPACK_IMPORTED_MODULE_6__.blankLine, // Can’t be empty when interrupting.\n        self.interrupt ? nok : onBlank, effects.attempt(listItemPrefixWhitespaceConstruct, endOfPrefix, otherPrefix));\n    }\n    /** @type {State} */ function onBlank(code) {\n        self.containerState.initialBlankLine = true;\n        initialSize++;\n        return endOfPrefix(code);\n    }\n    /** @type {State} */ function otherPrefix(code) {\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownSpace)(code)) {\n            effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listItemPrefixWhitespace);\n            effects.consume(code);\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listItemPrefixWhitespace);\n            return endOfPrefix;\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function endOfPrefix(code) {\n        self.containerState.size = initialSize + self.sliceSerialize(effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listItemPrefix), true).length;\n        return ok(code);\n    }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */ function tokenizeListContinuation(effects, ok, nok) {\n    const self = this;\n    self.containerState._closeFlow = undefined;\n    return effects.check(_blank_line_js__WEBPACK_IMPORTED_MODULE_6__.blankLine, onBlank, notBlank);\n    /** @type {State} */ function onBlank(code) {\n        self.containerState.furtherBlankLines = self.containerState.furtherBlankLines || self.containerState.initialBlankLine;\n        // We have a blank line.\n        // Still, try to consume at most the items size.\n        return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_7__.factorySpace)(effects, ok, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listItemIndent, self.containerState.size + 1)(code);\n    }\n    /** @type {State} */ function notBlank(code) {\n        if (self.containerState.furtherBlankLines || !(0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownSpace)(code)) {\n            self.containerState.furtherBlankLines = undefined;\n            self.containerState.initialBlankLine = undefined;\n            return notInCurrentItem(code);\n        }\n        self.containerState.furtherBlankLines = undefined;\n        self.containerState.initialBlankLine = undefined;\n        return effects.attempt(indentConstruct, ok, notInCurrentItem)(code);\n    }\n    /** @type {State} */ function notInCurrentItem(code) {\n        // While we do continue, we signal that the flow should be closed.\n        self.containerState._closeFlow = true;\n        // As we’re closing flow, we’re no longer interrupting.\n        self.interrupt = undefined;\n        return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_7__.factorySpace)(effects, effects.attempt(list, ok, nok), micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.linePrefix, self.parser.constructs.disable.null.includes(\"codeIndented\") ? undefined : micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_5__.constants.tabSize)(code);\n    }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */ function tokenizeIndent(effects, ok, nok) {\n    const self = this;\n    return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_7__.factorySpace)(effects, afterPrefix, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listItemIndent, self.containerState.size + 1);\n    /** @type {State} */ function afterPrefix(code) {\n        const tail = self.events[self.events.length - 1];\n        return tail && tail[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listItemIndent && tail[2].sliceSerialize(tail[1], true).length === self.containerState.size ? ok(code) : nok(code);\n    }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */ function tokenizeListEnd(effects) {\n    effects.exit(this.containerState.type);\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */ function tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n    const self = this;\n    return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_7__.factorySpace)(effects, afterPrefix, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listItemPrefixWhitespace, self.parser.constructs.disable.null.includes(\"codeIndented\") ? undefined : micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_5__.constants.tabSize + 1);\n    /** @type {State} */ function afterPrefix(code) {\n        const tail = self.events[self.events.length - 1];\n        return !(0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownSpace)(code) && tail && tail[1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.listItemPrefixWhitespace ? ok(code) : nok(code);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/list.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/setext-underline.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/setext-underline.js ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setextUnderline: () => (/* binding */ setextUnderline)\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"(rsc)/./node_modules/.pnpm/uvu@0.5.6/node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-factory-space */ \"(rsc)/./node_modules/.pnpm/micromark-factory-space@1.0.0/node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-util-character */ \"(rsc)/./node_modules/.pnpm/micromark-util-character@1.1.0/node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/types.js\");\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */ \n\n\n\n\n/** @type {Construct} */ const setextUnderline = {\n    name: \"setextUnderline\",\n    tokenize: tokenizeSetextUnderline,\n    resolveTo: resolveToSetextUnderline\n};\n/** @type {Resolver} */ function resolveToSetextUnderline(events, context) {\n    let index = events.length;\n    /** @type {number|undefined} */ let content;\n    /** @type {number|undefined} */ let text;\n    /** @type {number|undefined} */ let definition;\n    // Find the opening of the content.\n    // It’ll always exist: we don’t tokenize if it isn’t there.\n    while(index--){\n        if (events[index][0] === \"enter\") {\n            if (events[index][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.content) {\n                content = index;\n                break;\n            }\n            if (events[index][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.paragraph) {\n                text = index;\n            }\n        } else {\n            if (events[index][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.content) {\n                // Remove the content end (if needed we’ll add it later)\n                events.splice(index, 1);\n            }\n            if (!definition && events[index][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.definition) {\n                definition = index;\n            }\n        }\n    }\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(text !== undefined, \"expected a `text` index to be found\");\n    (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(content !== undefined, \"expected a `text` index to be found\");\n    const heading = {\n        type: micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.setextHeading,\n        start: Object.assign({}, events[text][1].start),\n        end: Object.assign({}, events[events.length - 1][1].end)\n    };\n    // Change the paragraph to setext heading text.\n    events[text][1].type = micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.setextHeadingText;\n    // If we have definitions in the content, we’ll keep on having content,\n    // but we need move it.\n    if (definition) {\n        events.splice(text, 0, [\n            \"enter\",\n            heading,\n            context\n        ]);\n        events.splice(definition + 1, 0, [\n            \"exit\",\n            events[content][1],\n            context\n        ]);\n        events[content][1].end = Object.assign({}, events[definition][1].end);\n    } else {\n        events[content][1] = heading;\n    }\n    // Add the heading exit at the end.\n    events.push([\n        \"exit\",\n        heading,\n        context\n    ]);\n    return events;\n}\n/** @type {Tokenizer} */ function tokenizeSetextUnderline(effects, ok, nok) {\n    const self = this;\n    let index = self.events.length;\n    /** @type {NonNullable<Code>} */ let marker;\n    /** @type {boolean} */ let paragraph;\n    // Find an opening.\n    while(index--){\n        // Skip enter/exit of line ending, line prefix, and content.\n        // We can now either have a definition or a paragraph.\n        if (self.events[index][1].type !== micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineEnding && self.events[index][1].type !== micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.linePrefix && self.events[index][1].type !== micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.content) {\n            paragraph = self.events[index][1].type === micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.paragraph;\n            break;\n        }\n    }\n    return start;\n    /** @type {State} */ function start(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.dash || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.equalsTo, \"expected `=` or `-`\");\n        if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n            effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.setextHeadingLine);\n            effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.setextHeadingLineSequence);\n            marker = code;\n            return closingSequence(code);\n        }\n        return nok(code);\n    }\n    /** @type {State} */ function closingSequence(code) {\n        if (code === marker) {\n            effects.consume(code);\n            return closingSequence;\n        }\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.setextHeadingLineSequence);\n        return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_3__.factorySpace)(effects, closingSequenceEnd, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.lineSuffix)(code);\n    }\n    /** @type {State} */ function closingSequenceEnd(code) {\n        if (code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_2__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_4__.markdownLineEnding)(code)) {\n            effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_1__.types.setextHeadingLine);\n            return ok(code);\n        }\n        return nok(code);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/setext-underline.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/thematic-break.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/thematic-break.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   thematicBreak: () => (/* binding */ thematicBreak)\n/* harmony export */ });\n/* harmony import */ var uvu_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uvu/assert */ \"(rsc)/./node_modules/.pnpm/uvu@0.5.6/node_modules/uvu/assert/index.mjs\");\n/* harmony import */ var micromark_factory_space__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! micromark-factory-space */ \"(rsc)/./node_modules/.pnpm/micromark-factory-space@1.0.0/node_modules/micromark-factory-space/dev/index.js\");\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-character */ \"(rsc)/./node_modules/.pnpm/micromark-util-character@1.1.0/node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-symbol/codes.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/codes.js\");\n/* harmony import */ var micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! micromark-util-symbol/constants.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/constants.js\");\n/* harmony import */ var micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol/types.js */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@1.0.1/node_modules/micromark-util-symbol/types.js\");\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */ \n\n\n\n\n\n/** @type {Construct} */ const thematicBreak = {\n    name: \"thematicBreak\",\n    tokenize: tokenizeThematicBreak\n};\n/** @type {Tokenizer} */ function tokenizeThematicBreak(effects, ok, nok) {\n    let size = 0;\n    /** @type {NonNullable<Code>} */ let marker;\n    return start;\n    /** @type {State} */ function start(code) {\n        (0,uvu_assert__WEBPACK_IMPORTED_MODULE_0__.ok)(code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.asterisk || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.dash || code === micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.underscore, \"expected `*`, `-`, or `_`\");\n        effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.thematicBreak);\n        marker = code;\n        return atBreak(code);\n    }\n    /** @type {State} */ function atBreak(code) {\n        if (code === marker) {\n            effects.enter(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.thematicBreakSequence);\n            return sequence(code);\n        }\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownSpace)(code)) {\n            return (0,micromark_factory_space__WEBPACK_IMPORTED_MODULE_4__.factorySpace)(effects, atBreak, micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.whitespace)(code);\n        }\n        if (size < micromark_util_symbol_constants_js__WEBPACK_IMPORTED_MODULE_5__.constants.thematicBreakMarkerCountMin || code !== micromark_util_symbol_codes_js__WEBPACK_IMPORTED_MODULE_1__.codes.eof && !(0,micromark_util_character__WEBPACK_IMPORTED_MODULE_3__.markdownLineEnding)(code)) {\n            return nok(code);\n        }\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.thematicBreak);\n        return ok(code);\n    }\n    /** @type {State} */ function sequence(code) {\n        if (code === marker) {\n            effects.consume(code);\n            size++;\n            return sequence;\n        }\n        effects.exit(micromark_util_symbol_types_js__WEBPACK_IMPORTED_MODULE_2__.types.thematicBreakSequence);\n        return atBreak(code);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbWljcm9tYXJrLWNvcmUtY29tbW9ubWFya0AxLjAuNi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWNvcmUtY29tbW9ubWFyay9kZXYvbGliL3RoZW1hdGljLWJyZWFrLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7Ozs7Q0FLQyxHQUVzQztBQUNhO0FBQ3NCO0FBQ3RCO0FBQ1E7QUFDUjtBQUVwRCxzQkFBc0IsR0FDZixNQUFNUSxnQkFBZ0I7SUFDM0JDLE1BQU07SUFDTkMsVUFBVUM7QUFDWixFQUFDO0FBRUQsc0JBQXNCLEdBQ3RCLFNBQVNBLHNCQUFzQkMsT0FBTyxFQUFFWixFQUFFLEVBQUVhLEdBQUc7SUFDN0MsSUFBSUMsT0FBTztJQUNYLDhCQUE4QixHQUM5QixJQUFJQztJQUVKLE9BQU9DO0lBRVAsa0JBQWtCLEdBQ2xCLFNBQVNBLE1BQU1DLElBQUk7UUFDakJoQiw4Q0FBTUEsQ0FDSmdCLFNBQVNaLGlFQUFLQSxDQUFDYSxRQUFRLElBQ3JCRCxTQUFTWixpRUFBS0EsQ0FBQ2MsSUFBSSxJQUNuQkYsU0FBU1osaUVBQUtBLENBQUNlLFVBQVUsRUFDM0I7UUFHRlIsUUFBUVMsS0FBSyxDQUFDZCxpRUFBS0EsQ0FBQ0MsYUFBYTtRQUNqQ08sU0FBU0U7UUFDVCxPQUFPSyxRQUFRTDtJQUNqQjtJQUVBLGtCQUFrQixHQUNsQixTQUFTSyxRQUFRTCxJQUFJO1FBQ25CLElBQUlBLFNBQVNGLFFBQVE7WUFDbkJILFFBQVFTLEtBQUssQ0FBQ2QsaUVBQUtBLENBQUNnQixxQkFBcUI7WUFDekMsT0FBT0MsU0FBU1A7UUFDbEI7UUFFQSxJQUFJYix1RUFBYUEsQ0FBQ2EsT0FBTztZQUN2QixPQUFPZixxRUFBWUEsQ0FBQ1UsU0FBU1UsU0FBU2YsaUVBQUtBLENBQUNrQixVQUFVLEVBQUVSO1FBQzFEO1FBRUEsSUFDRUgsT0FBT1IseUVBQVNBLENBQUNvQiwyQkFBMkIsSUFDM0NULFNBQVNaLGlFQUFLQSxDQUFDc0IsR0FBRyxJQUFJLENBQUN4Qiw0RUFBa0JBLENBQUNjLE9BQzNDO1lBQ0EsT0FBT0osSUFBSUk7UUFDYjtRQUVBTCxRQUFRZ0IsSUFBSSxDQUFDckIsaUVBQUtBLENBQUNDLGFBQWE7UUFDaEMsT0FBT1IsR0FBR2lCO0lBQ1o7SUFFQSxrQkFBa0IsR0FDbEIsU0FBU08sU0FBU1AsSUFBSTtRQUNwQixJQUFJQSxTQUFTRixRQUFRO1lBQ25CSCxRQUFRaUIsT0FBTyxDQUFDWjtZQUNoQkg7WUFDQSxPQUFPVTtRQUNUO1FBRUFaLFFBQVFnQixJQUFJLENBQUNyQixpRUFBS0EsQ0FBQ2dCLHFCQUFxQjtRQUN4QyxPQUFPRCxRQUFRTDtJQUNqQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvLnBucG0vbWljcm9tYXJrLWNvcmUtY29tbW9ubWFya0AxLjAuNi9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWNvcmUtY29tbW9ubWFyay9kZXYvbGliL3RoZW1hdGljLWJyZWFrLmpzP2M3ZjgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLkNvbnN0cnVjdH0gQ29uc3RydWN0XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlRva2VuaXplcn0gVG9rZW5pemVyXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtaWNyb21hcmstdXRpbC10eXBlcycpLlN0YXRlfSBTdGF0ZVxuICogQHR5cGVkZWYge2ltcG9ydCgnbWljcm9tYXJrLXV0aWwtdHlwZXMnKS5Db2RlfSBDb2RlXG4gKi9cblxuaW1wb3J0IHtvayBhcyBhc3NlcnR9IGZyb20gJ3V2dS9hc3NlcnQnXG5pbXBvcnQge2ZhY3RvcnlTcGFjZX0gZnJvbSAnbWljcm9tYXJrLWZhY3Rvcnktc3BhY2UnXG5pbXBvcnQge21hcmtkb3duTGluZUVuZGluZywgbWFya2Rvd25TcGFjZX0gZnJvbSAnbWljcm9tYXJrLXV0aWwtY2hhcmFjdGVyJ1xuaW1wb3J0IHtjb2Rlc30gZnJvbSAnbWljcm9tYXJrLXV0aWwtc3ltYm9sL2NvZGVzLmpzJ1xuaW1wb3J0IHtjb25zdGFudHN9IGZyb20gJ21pY3JvbWFyay11dGlsLXN5bWJvbC9jb25zdGFudHMuanMnXG5pbXBvcnQge3R5cGVzfSBmcm9tICdtaWNyb21hcmstdXRpbC1zeW1ib2wvdHlwZXMuanMnXG5cbi8qKiBAdHlwZSB7Q29uc3RydWN0fSAqL1xuZXhwb3J0IGNvbnN0IHRoZW1hdGljQnJlYWsgPSB7XG4gIG5hbWU6ICd0aGVtYXRpY0JyZWFrJyxcbiAgdG9rZW5pemU6IHRva2VuaXplVGhlbWF0aWNCcmVha1xufVxuXG4vKiogQHR5cGUge1Rva2VuaXplcn0gKi9cbmZ1bmN0aW9uIHRva2VuaXplVGhlbWF0aWNCcmVhayhlZmZlY3RzLCBvaywgbm9rKSB7XG4gIGxldCBzaXplID0gMFxuICAvKiogQHR5cGUge05vbk51bGxhYmxlPENvZGU+fSAqL1xuICBsZXQgbWFya2VyXG5cbiAgcmV0dXJuIHN0YXJ0XG5cbiAgLyoqIEB0eXBlIHtTdGF0ZX0gKi9cbiAgZnVuY3Rpb24gc3RhcnQoY29kZSkge1xuICAgIGFzc2VydChcbiAgICAgIGNvZGUgPT09IGNvZGVzLmFzdGVyaXNrIHx8XG4gICAgICAgIGNvZGUgPT09IGNvZGVzLmRhc2ggfHxcbiAgICAgICAgY29kZSA9PT0gY29kZXMudW5kZXJzY29yZSxcbiAgICAgICdleHBlY3RlZCBgKmAsIGAtYCwgb3IgYF9gJ1xuICAgIClcblxuICAgIGVmZmVjdHMuZW50ZXIodHlwZXMudGhlbWF0aWNCcmVhaylcbiAgICBtYXJrZXIgPSBjb2RlXG4gICAgcmV0dXJuIGF0QnJlYWsoY29kZSlcbiAgfVxuXG4gIC8qKiBAdHlwZSB7U3RhdGV9ICovXG4gIGZ1bmN0aW9uIGF0QnJlYWsoY29kZSkge1xuICAgIGlmIChjb2RlID09PSBtYXJrZXIpIHtcbiAgICAgIGVmZmVjdHMuZW50ZXIodHlwZXMudGhlbWF0aWNCcmVha1NlcXVlbmNlKVxuICAgICAgcmV0dXJuIHNlcXVlbmNlKGNvZGUpXG4gICAgfVxuXG4gICAgaWYgKG1hcmtkb3duU3BhY2UoY29kZSkpIHtcbiAgICAgIHJldHVybiBmYWN0b3J5U3BhY2UoZWZmZWN0cywgYXRCcmVhaywgdHlwZXMud2hpdGVzcGFjZSkoY29kZSlcbiAgICB9XG5cbiAgICBpZiAoXG4gICAgICBzaXplIDwgY29uc3RhbnRzLnRoZW1hdGljQnJlYWtNYXJrZXJDb3VudE1pbiB8fFxuICAgICAgKGNvZGUgIT09IGNvZGVzLmVvZiAmJiAhbWFya2Rvd25MaW5lRW5kaW5nKGNvZGUpKVxuICAgICkge1xuICAgICAgcmV0dXJuIG5vayhjb2RlKVxuICAgIH1cblxuICAgIGVmZmVjdHMuZXhpdCh0eXBlcy50aGVtYXRpY0JyZWFrKVxuICAgIHJldHVybiBvayhjb2RlKVxuICB9XG5cbiAgLyoqIEB0eXBlIHtTdGF0ZX0gKi9cbiAgZnVuY3Rpb24gc2VxdWVuY2UoY29kZSkge1xuICAgIGlmIChjb2RlID09PSBtYXJrZXIpIHtcbiAgICAgIGVmZmVjdHMuY29uc3VtZShjb2RlKVxuICAgICAgc2l6ZSsrXG4gICAgICByZXR1cm4gc2VxdWVuY2VcbiAgICB9XG5cbiAgICBlZmZlY3RzLmV4aXQodHlwZXMudGhlbWF0aWNCcmVha1NlcXVlbmNlKVxuICAgIHJldHVybiBhdEJyZWFrKGNvZGUpXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJvayIsImFzc2VydCIsImZhY3RvcnlTcGFjZSIsIm1hcmtkb3duTGluZUVuZGluZyIsIm1hcmtkb3duU3BhY2UiLCJjb2RlcyIsImNvbnN0YW50cyIsInR5cGVzIiwidGhlbWF0aWNCcmVhayIsIm5hbWUiLCJ0b2tlbml6ZSIsInRva2VuaXplVGhlbWF0aWNCcmVhayIsImVmZmVjdHMiLCJub2siLCJzaXplIiwibWFya2VyIiwic3RhcnQiLCJjb2RlIiwiYXN0ZXJpc2siLCJkYXNoIiwidW5kZXJzY29yZSIsImVudGVyIiwiYXRCcmVhayIsInRoZW1hdGljQnJlYWtTZXF1ZW5jZSIsInNlcXVlbmNlIiwid2hpdGVzcGFjZSIsInRoZW1hdGljQnJlYWtNYXJrZXJDb3VudE1pbiIsImVvZiIsImV4aXQiLCJjb25zdW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/micromark-core-commonmark@1.0.6/node_modules/micromark-core-commonmark/dev/lib/thematic-break.js\n");

/***/ })

};
;