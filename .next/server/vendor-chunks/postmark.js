"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/postmark";
exports.ids = ["vendor-chunks/postmark"];
exports.modules = {

/***/ "(rsc)/./node_modules/postmark/dist/client/AccountClient.js":
/*!************************************************************!*\
  !*** ./node_modules/postmark/dist/client/AccountClient.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar BaseClient_1 = __webpack_require__(/*! ./BaseClient */ \"(rsc)/./node_modules/postmark/dist/client/BaseClient.js\");\nvar models_1 = __webpack_require__(/*! ./models */ \"(rsc)/./node_modules/postmark/dist/client/models/index.js\");\nvar models_2 = __webpack_require__(/*! ./models */ \"(rsc)/./node_modules/postmark/dist/client/models/index.js\");\nvar AccountClient = /** @class */ function(_super) {\n    __extends(AccountClient, _super);\n    /**\n     * Create a new AccountClient\n     * @param accountToken The account token that should be used with requests.\n     * @param configOptions Various options to customize client behavior.\n     */ function AccountClient(accountToken, configOptions) {\n        return _super.call(this, accountToken, models_1.ClientOptions.AuthHeaderNames.ACCOUNT_TOKEN, configOptions) || this;\n    }\n    /**\n     * Retrieve a list of Servers.\n     *\n     * @param filter - An optional filter for which data is retrieved.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.getServers = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new models_2.ServerFilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.GET, \"/servers\", filter, callback);\n    };\n    /**\n     * Retrieve a single server by ID.\n     *\n     * @param id - The ID of the Server for which you wish to retrieve details.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.getServer = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.GET, \"/servers/\".concat(id), {}, callback);\n    };\n    /**\n     * Create a new Server.\n     *\n     * @param options - The options to be used to create new Server.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.createServer = function(options, callback) {\n        return this.processRequestWithBody(models_1.ClientOptions.HttpMethod.POST, \"/servers\", options, callback);\n    };\n    /**\n     * Modify the Server associated with this Client.\n     *\n     * @param id - The ID of the Server you wish to update.\n     * @param options - The options to be used to create new Server.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.editServer = function(id, options, callback) {\n        return this.processRequestWithBody(models_1.ClientOptions.HttpMethod.PUT, \"/servers/\".concat(id), options, callback);\n    };\n    /**\n     * Modify the Server associated with this Client.\n     *\n     * @param id - The ID of the Domain you wish to delete.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.deleteServer = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.DELETE, \"/servers/\".concat(id), {}, callback);\n    };\n    /**\n     * Retrieve a batch of Domains.\n     *\n     * @param filter - An optional filter for which data is retrieved.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.getDomains = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new models_1.FilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.GET, \"/domains\", filter, callback);\n    };\n    /**\n     * Retrieve a single Domain by ID.\n     *\n     * @param id - The ID of the Domain for which you wish to retrieve details.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.getDomain = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.GET, \"/domains/\".concat(id), {}, callback);\n    };\n    /**\n     * Create a new Domain.\n     *\n     * @param options - The options to be used to create new Domain.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.createDomain = function(options, callback) {\n        return this.processRequestWithBody(models_1.ClientOptions.HttpMethod.POST, \"/domains/\", options, callback);\n    };\n    /**\n     * Update a Domain.\n     *\n     * @param id - The ID of the Domain you wish to update.\n     * @param domain - The values on the Domain you wish to update.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.editDomain = function(id, options, callback) {\n        return this.processRequestWithBody(models_1.ClientOptions.HttpMethod.PUT, \"/domains/\".concat(id), options, callback);\n    };\n    /**\n     * Delete a Domain.\n     *\n     * @param id - The ID of the Domain you wish to delete.\n     * @param options - The options to be used in create Domain.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.deleteDomain = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.DELETE, \"/domains/\".concat(id), {}, callback);\n    };\n    /**\n     * Trigger Domain DKIM key verification.\n     *\n     * @param id - The ID of the Domain you wish to trigger DKIM verification for.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.verifyDomainDKIM = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.PUT, \"/domains/\".concat(id, \"/verifyDKIM\"), {}, callback);\n    };\n    /**\n     * Trigger Domain DKIM key verification.\n     *\n     * @param id - The ID of the Domain you wish to trigger DKIM verification for.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.verifyDomainReturnPath = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.PUT, \"/domains/\".concat(id, \"/verifyReturnPath\"), {}, callback);\n    };\n    /**\n     * Trigger Domain DKIM key verification.\n     *\n     * @param id - The ID of the Domain you wish to trigger DKIM verification for.\n     * @param callback If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.verifyDomainSPF = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.POST, \"/domains/\".concat(id, \"/verifySPF\"), {}, callback);\n    };\n    /**\n     * Trigger Domain DKIM key verification.\n     *\n     * @param id - The ID of the Domain you wish to trigger DKIM verification for.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.rotateDomainDKIM = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.POST, \"/domains/\".concat(id, \"/rotateDKIM\"), {}, callback);\n    };\n    /**\n     * Retrieve a single Sender Signature by ID.\n     *\n     * @param id - The ID of the Sender Signature for which you wish to retrieve details.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.getSenderSignature = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.GET, \"/senders/\".concat(id), {}, callback);\n    };\n    /**\n     * Retrieve a batch of Sender Signatures.\n     *\n     * @param filter - An optional filter for which data is retrieved.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.getSenderSignatures = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new models_1.FilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.GET, \"/senders\", filter, callback);\n    };\n    /**\n     * Create a new Sender Signature.\n     *\n     * @param options - The options to be used to create new Sender Signature.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.createSenderSignature = function(options, callback) {\n        return this.processRequestWithBody(models_1.ClientOptions.HttpMethod.POST, \"/senders/\", options, callback);\n    };\n    /**\n     * Update a Sender Signature.\n     *\n     * @param id - The ID of the Sender Signature for which you wish to update.\n     * @param options - The values on the Sender Signature you wish to update.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.editSenderSignature = function(id, options, callback) {\n        return this.processRequestWithBody(models_1.ClientOptions.HttpMethod.PUT, \"/senders/\".concat(id), options, callback);\n    };\n    /**\n     * Delete a Domain.\n     *\n     * @param id - The ID of the Domain you wish to delete.\n     * @param options - The options to be used in create Domain.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.deleteSenderSignature = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.DELETE, \"/senders/\".concat(id), {}, callback);\n    };\n    /**\n     * Request a new confirmation email to be sent to the email address associated with a Sender Signature.\n     *\n     * @param id - The ID of the Sender Signature.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.resendSenderSignatureConfirmation = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.POST, \"/senders/\".concat(id, \"/resend\"), {}, callback);\n    };\n    /**\n     * Request that the SPF records for Sender Signature be verified.\n     *\n     * @param id - The ID of the Sender Signature.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.verifySenderSignatureSPF = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.POST, \"/senders/\".concat(id, \"/verifySpf\"), {}, callback);\n    };\n    /**\n     * Request that the SPF records for Sender Signature be verified.\n     *\n     * @param id - The ID of the Sender Signature.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.requestNewDKIMForSenderSignature = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.POST, \"/senders/\".concat(id, \"/requestNewDkim\"), {}, callback);\n    };\n    /**\n     * Request a push of templates from one server to another.\n     *\n     * @param options - details for pushing templates from one place to another.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.pushTemplates = function(options, callback) {\n        return this.processRequestWithBody(models_1.ClientOptions.HttpMethod.PUT, \"/templates/push\", options, callback);\n    };\n    /**\n     * Request a data removal.\n     *\n     * @param options - details for creating data removal request\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.requestDataRemoval = function(options, callback) {\n        return this.processRequestWithBody(models_1.ClientOptions.HttpMethod.POST, \"/data-removals\", options, callback);\n    };\n    /**\n     * Retrieve a single data removal status by ID.\n     *\n     * @param id - The ID of the DataRemoval for which you wish to retrieve details.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ AccountClient.prototype.getDataRemovalStatus = function(id, callback) {\n        return this.processRequestWithoutBody(models_1.ClientOptions.HttpMethod.GET, \"/data-removals/\".concat(id), {}, callback);\n    };\n    return AccountClient;\n}(BaseClient_1.default);\nexports[\"default\"] = AccountClient; //# sourceMappingURL=AccountClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/AccountClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/BaseClient.js":
/*!*********************************************************!*\
  !*** ./node_modules/postmark/dist/client/BaseClient.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar ErrorHandler_1 = __webpack_require__(/*! ./errors/ErrorHandler */ \"(rsc)/./node_modules/postmark/dist/client/errors/ErrorHandler.js\");\nvar HttpClient_1 = __webpack_require__(/*! ./HttpClient */ \"(rsc)/./node_modules/postmark/dist/client/HttpClient.js\");\nvar packageJson = __webpack_require__(/*! ../../package.json */ \"(rsc)/./node_modules/postmark/package.json\");\nvar CLIENT_VERSION = packageJson.version;\n/**\n * Base client class from which client classes can be implemented, in our case, AccountClient and ServerClient classes.\n * This class is NOT intended to be instantiated directly.\n */ var BaseClient = /** @class */ function() {\n    function BaseClient(token, authHeader, configOptions) {\n        this.errorHandler = new ErrorHandler_1.ErrorHandler();\n        this.verifyToken(token);\n        this.token = token.trim();\n        this.authHeader = authHeader;\n        this.clientVersion = CLIENT_VERSION;\n        this.httpClient = new HttpClient_1.AxiosHttpClient(configOptions);\n    }\n    BaseClient.prototype.setClientOptions = function(configOptions) {\n        this.httpClient.initHttpClient(configOptions);\n    };\n    BaseClient.prototype.getClientOptions = function() {\n        return this.httpClient.clientOptions;\n    };\n    /**\n     * Process http request with sending body - data.\n     *\n     * @see processRequest for more details.\n     */ BaseClient.prototype.processRequestWithBody = function(method, path, body, callback) {\n        return this.processRequest(method, path, {}, body, callback);\n    };\n    /**\n     * Process http request without sending body - data.\n     *\n     * @see processRequest for more details.\n     */ BaseClient.prototype.processRequestWithoutBody = function(method, path, queryParameters, callback) {\n        if (queryParameters === void 0) {\n            queryParameters = {};\n        }\n        return this.processRequest(method, path, queryParameters, null, callback);\n    };\n    /**\n     * Process request for Postmark ClientOptions.\n     *\n     * @param method - see processHttpRequest for details\n     * @param path - see processHttpRequest for details\n     * @param queryParameters - see processHttpRequest for details\n     * @param body - see processHttpRequest for details\n     * @param callback - callback function to be executed.\n     *\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ BaseClient.prototype.processRequest = function(method, path, queryParameters, body, callback) {\n        var httpRequest = this.processHttpRequest(method, path, queryParameters, body);\n        this.processCallbackRequest(httpRequest, callback);\n        return httpRequest;\n    };\n    /**\n     * Process HTTP request.\n     *\n     * @param method - Which type of http request will be executed.\n     * @param path - API URL endpoint.\n     * @param queryParameters - Querystring parameters used for http request.\n     * @param body - Data sent with http request.\n     *\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ BaseClient.prototype.processHttpRequest = function(method, path, queryParameters, body) {\n        return this.httpClient.httpRequest(method, path, queryParameters, body, this.getComposedHttpRequestHeaders()).then(function(response) {\n            return response;\n        }).catch(function(error) {\n            return Promise.reject(error);\n        });\n    };\n    /**\n     * Process callback function for HTTP request.\n     *\n     * @param httpRequest - HTTP request for which callback will be executed\n     * @param callback - callback function to be executed.\n     */ BaseClient.prototype.processCallbackRequest = function(httpRequest, callback) {\n        if (callback) {\n            httpRequest.then(function(response) {\n                return callback(null, response);\n            }).catch(function(error) {\n                return callback(error, null);\n            });\n        }\n    };\n    /**\n     * JSON object with default headers sent by HTTP request.\n     */ BaseClient.prototype.getComposedHttpRequestHeaders = function() {\n        var _a;\n        return _a = {}, _a[this.authHeader] = this.token, _a[\"Accept\"] = \"application/json\", _a[\"Content-Type\"] = \"application/json\", _a[\"User-Agent\"] = \"Postmark.JS - \".concat(this.clientVersion), _a;\n    };\n    /**\n     * Token can't be empty.\n     *\n     * @param {string} token - HTTP request token\n     */ BaseClient.prototype.verifyToken = function(token) {\n        if (!token || token.trim() === \"\") {\n            throw this.errorHandler.buildError(\"A valid API token must be provided.\");\n        }\n    };\n    /**\n     * Set default values for count and offset when doing filtering with API requests if they are not specified by filter.\n     */ BaseClient.prototype.setDefaultPaginationValues = function(filter) {\n        filter.count = filter.count || 100;\n        filter.offset = filter.offset || 0;\n    };\n    return BaseClient;\n}();\nexports[\"default\"] = BaseClient; //# sourceMappingURL=BaseClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/BaseClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/HttpClient.js":
/*!*********************************************************!*\
  !*** ./node_modules/postmark/dist/client/HttpClient.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.AxiosHttpClient = void 0;\nvar axios_1 = __webpack_require__(/*! axios */ \"(rsc)/./node_modules/axios/dist/node/axios.cjs\");\nvar models_1 = __webpack_require__(/*! ./models */ \"(rsc)/./node_modules/postmark/dist/client/models/index.js\");\nvar index_1 = __webpack_require__(/*! ./errors/index */ \"(rsc)/./node_modules/postmark/dist/client/errors/index.js\");\nvar AxiosHttpClient = /** @class */ function(_super) {\n    __extends(AxiosHttpClient, _super);\n    function AxiosHttpClient(configOptions) {\n        var _this = _super.call(this, configOptions) || this;\n        _this.errorHandler = new index_1.ErrorHandler();\n        return _this;\n    }\n    /**\n     * Create http client instance with default settings.\n     *\n     * @return {AxiosInstance}\n     */ AxiosHttpClient.prototype.initHttpClient = function(configOptions) {\n        this.clientOptions = __assign(__assign({}, models_1.HttpClient.DefaultOptions), configOptions);\n        var httpClient = axios_1.default.create({\n            baseURL: this.getBaseHttpRequestURL(),\n            timeout: this.getRequestTimeoutInMilliseconds(),\n            responseType: \"json\",\n            maxContentLength: Infinity,\n            maxBodyLength: Infinity,\n            validateStatus: function(status) {\n                return status >= 200 && status < 300;\n            }\n        });\n        httpClient.interceptors.response.use(function(response) {\n            return response.data;\n        });\n        this.client = httpClient;\n    };\n    /**\n     * Process http request.\n     *\n     * @param method - Which type of http request will be executed.\n     * @param path - API URL endpoint.\n     * @param queryParameters - Querystring parameters used for http request.\n     * @param body - Data sent with http request.\n     */ AxiosHttpClient.prototype.httpRequest = function(method, path, queryParameters, body, requestHeaders) {\n        var _this = this;\n        return this.client.request({\n            method: method,\n            url: path,\n            data: body,\n            headers: requestHeaders,\n            params: queryParameters\n        }).catch(function(errorThrown) {\n            return Promise.reject(_this.transformError(errorThrown));\n        });\n    };\n    /**\n     * Process callback function for HTTP request.\n     *\n     * @param error - request error that needs to be transformed to proper Postmark error.\n     *\n     * @return {PostmarkError} - formatted Postmark error\n     */ AxiosHttpClient.prototype.transformError = function(errorThrown) {\n        var response = errorThrown.response;\n        if (response !== undefined) {\n            var status_1 = this.adjustValue(0, response.status);\n            var errorCode = this.adjustValue(0, response.data.ErrorCode);\n            var message = this.adjustValue(errorThrown.message, response.data.Message);\n            return this.errorHandler.buildError(message, errorCode, status_1);\n        } else if (errorThrown.message !== undefined) {\n            return this.errorHandler.buildError(errorThrown.message);\n        } else {\n            return this.errorHandler.buildError(JSON.stringify(errorThrown, Object.getOwnPropertyNames(errorThrown)));\n        }\n    };\n    /**\n     * Timeout in seconds is adjusted to Axios format.\n     *\n     * @private\n     */ AxiosHttpClient.prototype.getRequestTimeoutInMilliseconds = function() {\n        return (this.clientOptions.timeout || 60) * 1000;\n    };\n    AxiosHttpClient.prototype.adjustValue = function(defaultValue, data) {\n        return data === undefined ? defaultValue : data;\n    };\n    return AxiosHttpClient;\n}(models_1.HttpClient);\nexports.AxiosHttpClient = AxiosHttpClient; //# sourceMappingURL=HttpClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/HttpClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/ServerClient.js":
/*!***********************************************************!*\
  !*** ./node_modules/postmark/dist/client/ServerClient.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar BaseClient_1 = __webpack_require__(/*! ./BaseClient */ \"(rsc)/./node_modules/postmark/dist/client/BaseClient.js\");\nvar index_1 = __webpack_require__(/*! ./models/index */ \"(rsc)/./node_modules/postmark/dist/client/models/index.js\");\nvar index_2 = __webpack_require__(/*! ./models/index */ \"(rsc)/./node_modules/postmark/dist/client/models/index.js\");\n/**\n * Server client class that can be used to interact with an individual Postmark Server.\n */ var ServerClient = /** @class */ function(_super) {\n    __extends(ServerClient, _super);\n    /**\n     * Create a client.\n     *\n     * @param serverToken - The token for the server that you wish to interact with.\n     * @param configOptions - Options to customize the behavior of the this client.\n     */ function ServerClient(serverToken, configOptions) {\n        return _super.call(this, serverToken, index_1.ClientOptions.AuthHeaderNames.SERVER_TOKEN, configOptions) || this;\n    }\n    /** Send a single email message.\n     *\n     * @param email - Email message to send.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.sendEmail = function(email, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/email\", email, callback);\n    };\n    /**\n     * Send a batch of email messages.\n     *\n     * @param emails - An array of messages to send.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.sendEmailBatch = function(emails, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/email/batch\", emails, callback);\n    };\n    /**\n     * Send a message using a template.\n     *\n     * @param template - Message you wish to send.\n     * @param callback If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.sendEmailWithTemplate = function(template, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/email/withTemplate\", template, callback);\n    };\n    /**\n     * Send a batch of template email messages.\n     *\n     * @param templates - An array of templated messages you wish to send using this Client.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.sendEmailBatchWithTemplates = function(templates, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/email/batchWithTemplates\", {\n            Messages: templates\n        }, callback);\n    };\n    /**\n     * Get bounce statistic information for the associated Server.\n     *\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getDeliveryStatistics = function(callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/deliveryStats\", {}, callback);\n    };\n    /**\n     * Get a batch of bounces.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getBounces = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.BounceFilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/bounces\", filter, callback);\n    };\n    /**\n     * Get details for a specific Bounce.\n     *\n     * @param id - The ID of the Bounce you wish to retrieve.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getBounce = function(id, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/bounces/\".concat(id), {}, callback);\n    };\n    /**\n     * Get a Bounce Dump for a specific Bounce.\n     *\n     * @param id - The ID of the Bounce for which you wish to retrieve Bounce Dump.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getBounceDump = function(id, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/bounces/\".concat(id, \"/dump\"), {}, callback);\n    };\n    /**\n     * Activate email address that was deactivated due to a Bounce.\n     *\n     * @param id - The ID of the Bounce for which you wish to activate the associated email.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.activateBounce = function(id, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.PUT, \"/bounces/\".concat(id, \"/activate\"), {}, callback);\n    };\n    /**\n     * Get the list of templates associated with this server.\n     *\n     * @param filter - Optional filtering options.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getTemplates = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.TemplateFilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/templates\", filter, callback);\n    };\n    /**\n     * Get the a specific template associated with this server.\n     *\n     * @param idOrAlias - ID or alias for the template you wish to retrieve.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getTemplate = function(idOrAlias, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/templates/\".concat(idOrAlias), {}, callback);\n    };\n    /**\n     * Delete a template associated with this server.\n     *\n     * @param idOrAlias - ID or template alias you wish to delete.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.deleteTemplate = function(idOrAlias, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.DELETE, \"/templates/\".concat(idOrAlias), {}, callback);\n    };\n    /**\n     * Create a new template on the associated server.\n     *\n     * @param options - Configuration options to be used to create the Template.\n     * @param callback If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.createTemplate = function(options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/templates/\", options, callback);\n    };\n    /**\n     * Update a template on the associated server.\n     *\n     * @param idOrAlias - Id or alias of the template you wish to update.\n     * @param options - Template options you wish to update.\n     * @param callback If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.editTemplate = function(idOrAlias, options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.PUT, \"/templates/\".concat(idOrAlias), options, callback);\n    };\n    /**\n     * Validate template markup to verify that it will be parsed. Also provides a recommended template\n     * model to be used when sending using the specified template content.\n     *\n     * @param options - The template content you wish to validate.\n     * @param callback If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.validateTemplate = function(options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/templates/validate\", options, callback);\n    };\n    /**\n     * Get the information for the Server associated with this Client.\n     *\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getServer = function(callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/server\", {}, callback);\n    };\n    /**\n     * Modify the Server associated with this Client.\n     *\n     * @param options - The options you wish to modify.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.editServer = function(options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.PUT, \"/server\", options, callback);\n    };\n    /**\n     * Get a batch of Outbound Messages.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getOutboundMessages = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.OutboundMessagesFilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/messages/outbound\", filter, callback);\n    };\n    /**\n     * Get details for a specific Outbound Message.\n     *\n     * @param messageId - The ID of the OutboundMessage you wish to retrieve.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getOutboundMessageDetails = function(messageId, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/messages/outbound/\".concat(messageId), {}, callback);\n    };\n    /**\n     * Get details for a specific Outbound Message.\n     *\n     * @param messageId - The ID of the OutboundMessage you wish to retrieve.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getOutboundMessageDump = function(messageId, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/messages/outbound/\".concat(messageId, \"/dump\"), {}, callback);\n    };\n    /**\n     * Get a batch of Inbound Messages.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getInboundMessages = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.InboundMessagesFilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/messages/inbound\", filter, callback);\n    };\n    /**\n     * Get details for a specific Inbound Message.\n     *\n     * @param messageId - The ID of the Inbound Message you wish to retrieve.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getInboundMessageDetails = function(messageId, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/messages/inbound/\".concat(messageId, \"/details\"), {}, callback);\n    };\n    /**\n     * Cause an Inbound Message to bypass filtering rules defined on this Client's associated Server.\n     *\n     * @param messageId - The ID of the Inbound Message for which you wish to bypass the filtering rules.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.bypassBlockedInboundMessage = function(messageId, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.PUT, \"/messages/inbound/\".concat(messageId, \"/bypass\"), {}, callback);\n    };\n    /**\n     * Request that Postmark retry POSTing to the Inbound Hook for the specified message.\n     *\n     * @param messageId - The ID of the Inbound Message for which you wish to retry the inbound hook.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.retryInboundHookForMessage = function(messageId, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.PUT, \"/messages/inbound/\".concat(messageId, \"/retry\"), {}, callback);\n    };\n    /**\n     * Get the Opens for Outbound Messages.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getMessageOpens = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.OutboundMessageOpensFilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/messages/outbound/opens\", filter, callback);\n    };\n    /**\n     * Get details of Opens for specific Outbound Message.\n     *\n     * @param messageId - Message ID of the message for which you wish to retrieve Opens.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getMessageOpensForSingleMessage = function(messageId, filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.OutboundMessageOpensFilteringParameters(50, 0);\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/messages/outbound/opens/\".concat(messageId), filter, callback);\n    };\n    /**\n     * Get the Clicks for Outbound Messages.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getMessageClicks = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.OutboundMessageClicksFilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/messages/outbound/clicks\", filter, callback);\n    };\n    /**\n     * Get Click information for a single Outbound Message.\n     *\n     * @param messageId - The MessageID for which clicks should be retrieved.\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getMessageClicksForSingleMessage = function(messageId, filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.OutboundMessageClicksFilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/messages/outbound/clicks/\".concat(messageId), filter, callback);\n    };\n    /**\n     * Get overview statistics on Outbound Messages sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getOutboundOverview = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound\", filter, callback);\n    };\n    /**\n     * Get statistics on email sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getSentCounts = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/sends\", filter, callback);\n    };\n    /**\n     * Get statistiscs on emails that bounced after being sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getBounceCounts = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/bounces\", filter, callback);\n    };\n    /**\n     * Get SPAM complaint statistics for email sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getSpamComplaintsCounts = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/spam\", filter, callback);\n    };\n    /**\n     * Get email tracking statistics for messages sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getTrackedEmailCounts = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/tracked\", filter, callback);\n    };\n    /**\n     * Get Open statistics for messages sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getEmailOpenCounts = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/opens\", filter, callback);\n    };\n    /**\n     * Get Email Client Platform statistics for messages sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getEmailOpenPlatformUsage = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/opens/platforms\", filter, callback);\n    };\n    /**\n     * Get statistics on which Email Clients were used to open messages sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getEmailOpenClientUsage = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/opens/emailClients\", filter, callback);\n    };\n    /**\n     * Get Read Time statistics for messages sent from the Server associated with this Client.\n     * @param filter Optional filtering parameters.\n     * @param callback If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getEmailOpenReadTimes = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/opens/readTimes\", filter, callback);\n    };\n    /**\n     * Get total clicks statistics for tracked links for messages sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getClickCounts = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/clicks\", filter, callback);\n    };\n    /**\n     * Get browser family statistics for tracked links for messages sent from the Server associated with this Client.\n     * @param filter Optional filtering parameters.\n     * @param callback If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getClickBrowserUsage = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/clicks/browserFamilies\", filter, callback);\n    };\n    /**\n     * Get browser platform statistics for tracked links for messages sent from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getClickPlatformUsage = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/clicks/platforms\", filter, callback);\n    };\n    /**\n     * Get click location (in HTML or Text body of the email) statistics for tracked links for messages sent\n     * from the Server associated with this Client.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getClickLocation = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.StatisticsFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/stats/outbound/clicks/location\", filter, callback);\n    };\n    /**\n     * Create an Inbound Rule Trigger.\n     *\n     * @param options - Configuration options to be used when creating this Trigger.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.createInboundRuleTrigger = function(options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/triggers/inboundRules\", options, callback);\n    };\n    /**\n     * Delete an Inbound Rule Trigger.\n     *\n     * @param id - The ID of the Inbound Rule Trigger you wish to delete.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.deleteInboundRuleTrigger = function(id, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.DELETE, \"/triggers/inboundRules/\".concat(id), {}, callback);\n    };\n    /**\n     * Get a list of Inbound Rule Triggers.\n     *\n     * @param filter - Optional filtering parameters.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getInboundRuleTriggers = function(filter, callback) {\n        if (filter === void 0) {\n            filter = new index_1.FilteringParameters();\n        }\n        this.setDefaultPaginationValues(filter);\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/triggers/inboundRules\", filter, callback);\n    };\n    /**\n     * Get the list of Webhooks for specific server.\n     *\n     * @param filter - Optional filtering parameters\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getWebhooks = function(filter, callback) {\n        if (filter === void 0) {\n            filter = {};\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/webhooks\", filter, callback);\n    };\n    /**\n     * Get details for a specific Webhook.\n     *\n     * @param id - The ID of the Webhook you wish to retrieve.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getWebhook = function(id, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/webhooks/\".concat(id), {}, callback);\n    };\n    /**\n     * Create a Webhook on the associated server.\n     *\n     * @param options - Configuration options to be used when creating Webhook trigger.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.createWebhook = function(options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/webhooks\", options, callback);\n    };\n    /**\n     * Update Webhook on the associated server.\n     *\n     * @param id - Id of the webhook you wish to update.\n     * @param options - Webhook options you wish to update.\n     * @param callback If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.editWebhook = function(id, options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.PUT, \"/webhooks/\".concat(id), options, callback);\n    };\n    /**\n     * Delete an existing Webhook.\n     *\n     * @param id - The ID of the Webhook you wish to delete.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.deleteWebhook = function(id, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.DELETE, \"/webhooks/\".concat(id), {}, callback);\n    };\n    /**\n     * Get the list of message streams on a server.\n     *\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getMessageStreams = function(filter, callback) {\n        if (filter === void 0) {\n            filter = {};\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/message-streams\", filter, callback);\n    };\n    /**\n     * Get details for a specific message stream on a server.\n     *\n     * @param id - The ID of the message stream you wish to retrieve.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getMessageStream = function(id, callback) {\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/message-streams/\".concat(id), {}, callback);\n    };\n    /**\n     * Update message stream on the associated server.\n     *\n     * @param id - Id of the webhook you wish to update.\n     * @param options - Webhook options you wish to update.\n     * @param callback If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.editMessageStream = function(id, options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.PATCH, \"/message-streams/\".concat(id), options, callback);\n    };\n    /**\n     * Create a message stream on the associated server.\n     *\n     * @param options - Configuration options to be used when creating message stream on the server.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.createMessageStream = function(options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/message-streams\", options, callback);\n    };\n    /**\n     * Archive a message stream on the associated server.\n     *\n     * @param options - Configuration options to be used when creating message stream on the server.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.archiveMessageStream = function(id, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/message-streams/\".concat(id, \"/archive\"), {}, callback);\n    };\n    /**\n     * Unarchive a message stream on the associated server.\n     *\n     * @param options - Configuration options to be used when creating message stream on the server.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.unarchiveMessageStream = function(id, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/message-streams/\".concat(id, \"/unarchive\"), {}, callback);\n    };\n    /**\n     * Get the list of suppressions for a message stream on a server.\n     *\n     * @param messageStream - Select message stream\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.getSuppressions = function(messageStream, filter, callback) {\n        if (filter === void 0) {\n            filter = new index_2.SuppressionFilteringParameters();\n        }\n        return this.processRequestWithoutBody(index_1.ClientOptions.HttpMethod.GET, \"/message-streams/\".concat(messageStream, \"/suppressions/dump\"), filter, callback);\n    };\n    /**\n     * Add email addresses to a suppressions list on a message stream on a server.\n     *\n     * @param messageStream - Select message stream\n     * @param options - Suppressions you wish to add.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.createSuppressions = function(messageStream, options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/message-streams/\".concat(messageStream, \"/suppressions\"), options, callback);\n    };\n    /**\n     * Delete email addresses from a suppressions list on a message stream on a server.\n     *\n     * @param messageStream - Select message stream\n     * @param options - Suppressions you wish to delete.\n     * @param callback - If the callback is provided, it will be passed to the resulting promise as a continuation.\n     * @returns A promise that will complete when the API responds (or an error occurs).\n     */ ServerClient.prototype.deleteSuppressions = function(messageStream, options, callback) {\n        return this.processRequestWithBody(index_1.ClientOptions.HttpMethod.POST, \"/message-streams/\".concat(messageStream, \"/suppressions/delete\"), options, callback);\n    };\n    return ServerClient;\n}(BaseClient_1.default);\nexports[\"default\"] = ServerClient; //# sourceMappingURL=ServerClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/ServerClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/errors/ErrorHandler.js":
/*!******************************************************************!*\
  !*** ./node_modules/postmark/dist/client/errors/ErrorHandler.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ErrorHandler = void 0;\nvar Errors = __webpack_require__(/*! ./Errors */ \"(rsc)/./node_modules/postmark/dist/client/errors/Errors.js\");\n/**\n * Handles general errors and all client request errors.\n * Client response errors are classified so that proper response error is generated.\n */ var ErrorHandler = /** @class */ function() {\n    function ErrorHandler() {}\n    /**\n     * Build general Postmark error.\n     *\n     * @param errorMessage - error message that needs to be identified and transformed to proper Postmark error.\n     *\n     * @returns properly formatted Postmark error.\n     */ ErrorHandler.prototype.buildError = function(errorMessage, code, statusCode) {\n        if (code === void 0) {\n            code = 0;\n        }\n        if (statusCode === void 0) {\n            statusCode = 0;\n        }\n        if (statusCode === 0 && code === 0) {\n            return new Errors.PostmarkError(errorMessage);\n        } else {\n            return this.buildErrorByHttpStatusCode(errorMessage, code, statusCode);\n        }\n    };\n    /**\n     * Build Postmark error based on HTTP request status.\n     *\n     * @param error - http request library error, that will be transformed to Postmark error.\n     *\n     * @returns properly formatted Postmark error.\n     */ ErrorHandler.prototype.buildErrorByHttpStatusCode = function(errorMessage, errorCode, errorStatusCode) {\n        switch(errorStatusCode){\n            case 401:\n                return new Errors.InvalidAPIKeyError(errorMessage, errorCode, errorStatusCode);\n            case 404:\n                return new Errors.PostmarkError(errorMessage, errorCode, errorStatusCode);\n            case 422:\n                return Errors.ApiInputError.buildSpecificError(errorMessage, errorCode, errorStatusCode);\n            case 429:\n                return new Errors.RateLimitExceededError(errorMessage, errorCode, errorStatusCode);\n            case 500:\n                return new Errors.InternalServerError(errorMessage, errorCode, errorStatusCode);\n            case 503:\n                return new Errors.ServiceUnavailablerError(errorMessage, errorCode, errorStatusCode);\n            default:\n                return new Errors.UnknownError(errorMessage, errorCode, errorStatusCode);\n        }\n    };\n    return ErrorHandler;\n}();\nexports.ErrorHandler = ErrorHandler; //# sourceMappingURL=ErrorHandler.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvZXJyb3JzL0Vycm9ySGFuZGxlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsb0JBQW9CLEdBQUcsS0FBSztBQUM1QixJQUFJRyxTQUFTQyxtQkFBT0EsQ0FBQyw0RUFBVTtBQUMvQjs7O0NBR0MsR0FDRCxJQUFJRixlQUFlLFdBQVcsR0FBSTtJQUM5QixTQUFTQSxnQkFDVDtJQUNBOzs7Ozs7S0FNQyxHQUNEQSxhQUFhRyxTQUFTLENBQUNDLFVBQVUsR0FBRyxTQUFVQyxZQUFZLEVBQUVDLElBQUksRUFBRUMsVUFBVTtRQUN4RSxJQUFJRCxTQUFTLEtBQUssR0FBRztZQUFFQSxPQUFPO1FBQUc7UUFDakMsSUFBSUMsZUFBZSxLQUFLLEdBQUc7WUFBRUEsYUFBYTtRQUFHO1FBQzdDLElBQUlBLGVBQWUsS0FBS0QsU0FBUyxHQUFHO1lBQ2hDLE9BQU8sSUFBSUwsT0FBT08sYUFBYSxDQUFDSDtRQUNwQyxPQUNLO1lBQ0QsT0FBTyxJQUFJLENBQUNJLDBCQUEwQixDQUFDSixjQUFjQyxNQUFNQztRQUMvRDtJQUNKO0lBQ0E7Ozs7OztLQU1DLEdBQ0RQLGFBQWFHLFNBQVMsQ0FBQ00sMEJBQTBCLEdBQUcsU0FBVUosWUFBWSxFQUFFSyxTQUFTLEVBQUVDLGVBQWU7UUFDbEcsT0FBUUE7WUFDSixLQUFLO2dCQUNELE9BQU8sSUFBSVYsT0FBT1csa0JBQWtCLENBQUNQLGNBQWNLLFdBQVdDO1lBQ2xFLEtBQUs7Z0JBQ0QsT0FBTyxJQUFJVixPQUFPTyxhQUFhLENBQUNILGNBQWNLLFdBQVdDO1lBQzdELEtBQUs7Z0JBQ0QsT0FBT1YsT0FBT1ksYUFBYSxDQUFDQyxrQkFBa0IsQ0FBQ1QsY0FBY0ssV0FBV0M7WUFDNUUsS0FBSztnQkFDRCxPQUFPLElBQUlWLE9BQU9jLHNCQUFzQixDQUFDVixjQUFjSyxXQUFXQztZQUN0RSxLQUFLO2dCQUNELE9BQU8sSUFBSVYsT0FBT2UsbUJBQW1CLENBQUNYLGNBQWNLLFdBQVdDO1lBQ25FLEtBQUs7Z0JBQ0QsT0FBTyxJQUFJVixPQUFPZ0Isd0JBQXdCLENBQUNaLGNBQWNLLFdBQVdDO1lBQ3hFO2dCQUNJLE9BQU8sSUFBSVYsT0FBT2lCLFlBQVksQ0FBQ2IsY0FBY0ssV0FBV0M7UUFDaEU7SUFDSjtJQUNBLE9BQU9YO0FBQ1g7QUFDQUYsb0JBQW9CLEdBQUdFLGNBQ3ZCLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L2Vycm9ycy9FcnJvckhhbmRsZXIuanM/YTA0MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRXJyb3JIYW5kbGVyID0gdm9pZCAwO1xudmFyIEVycm9ycyA9IHJlcXVpcmUoXCIuL0Vycm9yc1wiKTtcbi8qKlxuICogSGFuZGxlcyBnZW5lcmFsIGVycm9ycyBhbmQgYWxsIGNsaWVudCByZXF1ZXN0IGVycm9ycy5cbiAqIENsaWVudCByZXNwb25zZSBlcnJvcnMgYXJlIGNsYXNzaWZpZWQgc28gdGhhdCBwcm9wZXIgcmVzcG9uc2UgZXJyb3IgaXMgZ2VuZXJhdGVkLlxuICovXG52YXIgRXJyb3JIYW5kbGVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEVycm9ySGFuZGxlcigpIHtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQnVpbGQgZ2VuZXJhbCBQb3N0bWFyayBlcnJvci5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBlcnJvck1lc3NhZ2UgLSBlcnJvciBtZXNzYWdlIHRoYXQgbmVlZHMgdG8gYmUgaWRlbnRpZmllZCBhbmQgdHJhbnNmb3JtZWQgdG8gcHJvcGVyIFBvc3RtYXJrIGVycm9yLlxuICAgICAqXG4gICAgICogQHJldHVybnMgcHJvcGVybHkgZm9ybWF0dGVkIFBvc3RtYXJrIGVycm9yLlxuICAgICAqL1xuICAgIEVycm9ySGFuZGxlci5wcm90b3R5cGUuYnVpbGRFcnJvciA9IGZ1bmN0aW9uIChlcnJvck1lc3NhZ2UsIGNvZGUsIHN0YXR1c0NvZGUpIHtcbiAgICAgICAgaWYgKGNvZGUgPT09IHZvaWQgMCkgeyBjb2RlID0gMDsgfVxuICAgICAgICBpZiAoc3RhdHVzQ29kZSA9PT0gdm9pZCAwKSB7IHN0YXR1c0NvZGUgPSAwOyB9XG4gICAgICAgIGlmIChzdGF0dXNDb2RlID09PSAwICYmIGNvZGUgPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgRXJyb3JzLlBvc3RtYXJrRXJyb3IoZXJyb3JNZXNzYWdlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmJ1aWxkRXJyb3JCeUh0dHBTdGF0dXNDb2RlKGVycm9yTWVzc2FnZSwgY29kZSwgc3RhdHVzQ29kZSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIC8qKlxuICAgICAqIEJ1aWxkIFBvc3RtYXJrIGVycm9yIGJhc2VkIG9uIEhUVFAgcmVxdWVzdCBzdGF0dXMuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZXJyb3IgLSBodHRwIHJlcXVlc3QgbGlicmFyeSBlcnJvciwgdGhhdCB3aWxsIGJlIHRyYW5zZm9ybWVkIHRvIFBvc3RtYXJrIGVycm9yLlxuICAgICAqXG4gICAgICogQHJldHVybnMgcHJvcGVybHkgZm9ybWF0dGVkIFBvc3RtYXJrIGVycm9yLlxuICAgICAqL1xuICAgIEVycm9ySGFuZGxlci5wcm90b3R5cGUuYnVpbGRFcnJvckJ5SHR0cFN0YXR1c0NvZGUgPSBmdW5jdGlvbiAoZXJyb3JNZXNzYWdlLCBlcnJvckNvZGUsIGVycm9yU3RhdHVzQ29kZSkge1xuICAgICAgICBzd2l0Y2ggKGVycm9yU3RhdHVzQ29kZSkge1xuICAgICAgICAgICAgY2FzZSA0MDE6XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBFcnJvcnMuSW52YWxpZEFQSUtleUVycm9yKGVycm9yTWVzc2FnZSwgZXJyb3JDb2RlLCBlcnJvclN0YXR1c0NvZGUpO1xuICAgICAgICAgICAgY2FzZSA0MDQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBFcnJvcnMuUG9zdG1hcmtFcnJvcihlcnJvck1lc3NhZ2UsIGVycm9yQ29kZSwgZXJyb3JTdGF0dXNDb2RlKTtcbiAgICAgICAgICAgIGNhc2UgNDIyOlxuICAgICAgICAgICAgICAgIHJldHVybiBFcnJvcnMuQXBpSW5wdXRFcnJvci5idWlsZFNwZWNpZmljRXJyb3IoZXJyb3JNZXNzYWdlLCBlcnJvckNvZGUsIGVycm9yU3RhdHVzQ29kZSk7XG4gICAgICAgICAgICBjYXNlIDQyOTpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IEVycm9ycy5SYXRlTGltaXRFeGNlZWRlZEVycm9yKGVycm9yTWVzc2FnZSwgZXJyb3JDb2RlLCBlcnJvclN0YXR1c0NvZGUpO1xuICAgICAgICAgICAgY2FzZSA1MDA6XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBFcnJvcnMuSW50ZXJuYWxTZXJ2ZXJFcnJvcihlcnJvck1lc3NhZ2UsIGVycm9yQ29kZSwgZXJyb3JTdGF0dXNDb2RlKTtcbiAgICAgICAgICAgIGNhc2UgNTAzOlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgRXJyb3JzLlNlcnZpY2VVbmF2YWlsYWJsZXJFcnJvcihlcnJvck1lc3NhZ2UsIGVycm9yQ29kZSwgZXJyb3JTdGF0dXNDb2RlKTtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBFcnJvcnMuVW5rbm93bkVycm9yKGVycm9yTWVzc2FnZSwgZXJyb3JDb2RlLCBlcnJvclN0YXR1c0NvZGUpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gRXJyb3JIYW5kbGVyO1xufSgpKTtcbmV4cG9ydHMuRXJyb3JIYW5kbGVyID0gRXJyb3JIYW5kbGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RXJyb3JIYW5kbGVyLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkVycm9ySGFuZGxlciIsIkVycm9ycyIsInJlcXVpcmUiLCJwcm90b3R5cGUiLCJidWlsZEVycm9yIiwiZXJyb3JNZXNzYWdlIiwiY29kZSIsInN0YXR1c0NvZGUiLCJQb3N0bWFya0Vycm9yIiwiYnVpbGRFcnJvckJ5SHR0cFN0YXR1c0NvZGUiLCJlcnJvckNvZGUiLCJlcnJvclN0YXR1c0NvZGUiLCJJbnZhbGlkQVBJS2V5RXJyb3IiLCJBcGlJbnB1dEVycm9yIiwiYnVpbGRTcGVjaWZpY0Vycm9yIiwiUmF0ZUxpbWl0RXhjZWVkZWRFcnJvciIsIkludGVybmFsU2VydmVyRXJyb3IiLCJTZXJ2aWNlVW5hdmFpbGFibGVyRXJyb3IiLCJVbmtub3duRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/errors/ErrorHandler.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/errors/Errors.js":
/*!************************************************************!*\
  !*** ./node_modules/postmark/dist/client/errors/Errors.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.InvalidEmailRequestError = exports.InactiveRecipientsError = exports.ApiInputError = exports.UnknownError = exports.RateLimitExceededError = exports.ServiceUnavailablerError = exports.InternalServerError = exports.InvalidAPIKeyError = exports.HttpError = exports.PostmarkError = void 0;\n/**\n * Standard Postmark error on which all sub-errors are based.\n */ var PostmarkError = /** @class */ function(_super) {\n    __extends(PostmarkError, _super);\n    function PostmarkError(message, code, statusCode) {\n        if (code === void 0) {\n            code = 0;\n        }\n        if (statusCode === void 0) {\n            statusCode = 0;\n        }\n        var _this = _super.call(this, message) || this;\n        _this.statusCode = statusCode;\n        _this.code = code;\n        // this is mandatory due:\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(_this, PostmarkError.prototype);\n        _this.setUpStackTrace();\n        return _this;\n    }\n    PostmarkError.prototype.setUpStackTrace = function() {\n        this.name = this.constructor.name;\n        Error.captureStackTrace(this, this.constructor);\n    };\n    return PostmarkError;\n}(Error);\nexports.PostmarkError = PostmarkError;\nvar HttpError = /** @class */ function(_super) {\n    __extends(HttpError, _super);\n    function HttpError(message, code, statusCode) {\n        var _this = _super.call(this, message, code, statusCode) || this;\n        Object.setPrototypeOf(_this, HttpError.prototype);\n        _this.setUpStackTrace();\n        return _this;\n    }\n    return HttpError;\n}(PostmarkError);\nexports.HttpError = HttpError;\nvar InvalidAPIKeyError = /** @class */ function(_super) {\n    __extends(InvalidAPIKeyError, _super);\n    function InvalidAPIKeyError(message, code, statusCode) {\n        var _this = _super.call(this, message, code, statusCode) || this;\n        Object.setPrototypeOf(_this, InvalidAPIKeyError.prototype);\n        _this.setUpStackTrace();\n        return _this;\n    }\n    return InvalidAPIKeyError;\n}(HttpError);\nexports.InvalidAPIKeyError = InvalidAPIKeyError;\nvar InternalServerError = /** @class */ function(_super) {\n    __extends(InternalServerError, _super);\n    function InternalServerError(message, code, statusCode) {\n        var _this = _super.call(this, message, code, statusCode) || this;\n        Object.setPrototypeOf(_this, InternalServerError.prototype);\n        _this.setUpStackTrace();\n        return _this;\n    }\n    return InternalServerError;\n}(HttpError);\nexports.InternalServerError = InternalServerError;\nvar ServiceUnavailablerError = /** @class */ function(_super) {\n    __extends(ServiceUnavailablerError, _super);\n    function ServiceUnavailablerError(message, code, statusCode) {\n        var _this = _super.call(this, message, code, statusCode) || this;\n        Object.setPrototypeOf(_this, ServiceUnavailablerError.prototype);\n        _this.setUpStackTrace();\n        return _this;\n    }\n    return ServiceUnavailablerError;\n}(HttpError);\nexports.ServiceUnavailablerError = ServiceUnavailablerError;\nvar RateLimitExceededError = /** @class */ function(_super) {\n    __extends(RateLimitExceededError, _super);\n    function RateLimitExceededError(message, code, statusCode) {\n        var _this = _super.call(this, message, code, statusCode) || this;\n        Object.setPrototypeOf(_this, RateLimitExceededError.prototype);\n        _this.setUpStackTrace();\n        return _this;\n    }\n    return RateLimitExceededError;\n}(HttpError);\nexports.RateLimitExceededError = RateLimitExceededError;\nvar UnknownError = /** @class */ function(_super) {\n    __extends(UnknownError, _super);\n    function UnknownError(message, code, statusCode) {\n        var _this = _super.call(this, message, code, statusCode) || this;\n        Object.setPrototypeOf(_this, UnknownError.prototype);\n        _this.setUpStackTrace();\n        return _this;\n    }\n    return UnknownError;\n}(HttpError);\nexports.UnknownError = UnknownError;\nvar ApiInputError = /** @class */ function(_super) {\n    __extends(ApiInputError, _super);\n    function ApiInputError(message, code, statusCode) {\n        var _this = _super.call(this, message, code, statusCode) || this;\n        Object.setPrototypeOf(_this, ApiInputError.prototype);\n        _this.setUpStackTrace();\n        return _this;\n    }\n    ApiInputError.buildSpecificError = function(message, code, statusCode) {\n        switch(code){\n            case this.ERROR_CODES.inactiveRecipient:\n                return new InactiveRecipientsError(message, code, statusCode);\n            case this.ERROR_CODES.invalidEmailRequest:\n                return new InvalidEmailRequestError(message, code, statusCode);\n            default:\n                return new ApiInputError(message, code, statusCode);\n        }\n    };\n    ApiInputError.ERROR_CODES = {\n        inactiveRecipient: 406,\n        invalidEmailRequest: 300\n    };\n    return ApiInputError;\n}(HttpError);\nexports.ApiInputError = ApiInputError;\nvar InactiveRecipientsError = /** @class */ function(_super) {\n    __extends(InactiveRecipientsError, _super);\n    function InactiveRecipientsError(message, code, statusCode) {\n        var _this = _super.call(this, message, code, statusCode) || this;\n        Object.setPrototypeOf(_this, InactiveRecipientsError.prototype);\n        _this.setUpStackTrace();\n        _this.recipients = InactiveRecipientsError.parseInactiveRecipients(message);\n        return _this;\n    }\n    InactiveRecipientsError.parseInactiveRecipients = function(message) {\n        var result = [];\n        this.inactiveRecipientsPatterns.some(function(pattern) {\n            var regexResult = message.match(pattern);\n            if (regexResult !== null) {\n                result = regexResult[1].split(\",\").map(function(element) {\n                    return element.trim();\n                });\n                return result;\n            } else {\n                result = [];\n            }\n        });\n        return result;\n    };\n    InactiveRecipientsError.inactiveRecipientsPatterns = [\n        /Found inactive addresses: (.+?)\\.? Inactive/,\n        /these inactive addresses: (.+?)\\.?$/\n    ];\n    return InactiveRecipientsError;\n}(ApiInputError);\nexports.InactiveRecipientsError = InactiveRecipientsError;\nvar InvalidEmailRequestError = /** @class */ function(_super) {\n    __extends(InvalidEmailRequestError, _super);\n    function InvalidEmailRequestError(message, code, statusCode) {\n        var _this = _super.call(this, message, code, statusCode) || this;\n        Object.setPrototypeOf(_this, InvalidEmailRequestError.prototype);\n        _this.setUpStackTrace();\n        return _this;\n    }\n    return InvalidEmailRequestError;\n}(ApiInputError);\nexports.InvalidEmailRequestError = InvalidEmailRequestError; //# sourceMappingURL=Errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/errors/Errors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/errors/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/postmark/dist/client/errors/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./ErrorHandler */ \"(rsc)/./node_modules/postmark/dist/client/errors/ErrorHandler.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Errors */ \"(rsc)/./node_modules/postmark/dist/client/errors/Errors.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvZXJyb3JzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsa0JBQWtCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsZUFBZSxJQUFNQyxDQUFBQSxPQUFPQyxNQUFNLEdBQUksU0FBU0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUMxRixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQixJQUFJRyxPQUFPUCxPQUFPUSx3QkFBd0IsQ0FBQ0wsR0FBR0M7SUFDOUMsSUFBSSxDQUFDRyxRQUFTLFVBQVNBLE9BQU8sQ0FBQ0osRUFBRU0sVUFBVSxHQUFHRixLQUFLRyxRQUFRLElBQUlILEtBQUtJLFlBQVksR0FBRztRQUNqRkosT0FBTztZQUFFSyxZQUFZO1lBQU1DLEtBQUs7Z0JBQWEsT0FBT1YsQ0FBQyxDQUFDQyxFQUFFO1lBQUU7UUFBRTtJQUM5RDtJQUNBSixPQUFPYyxjQUFjLENBQUNaLEdBQUdHLElBQUlFO0FBQ2pDLElBQU0sU0FBU0wsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUN0QixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkYsQ0FBQyxDQUFDRyxHQUFHLEdBQUdGLENBQUMsQ0FBQ0MsRUFBRTtBQUNoQixDQUFDO0FBQ0QsSUFBSVcsZUFBZSxDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLFlBQVksSUFBSyxTQUFTWixDQUFDLEVBQUVhLFFBQU87SUFDakUsSUFBSyxJQUFJQyxLQUFLZCxFQUFHLElBQUljLE1BQU0sYUFBYSxDQUFDakIsT0FBT2tCLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNKLFVBQVNDLElBQUlsQixnQkFBZ0JpQixVQUFTYixHQUFHYztBQUMzSDtBQUNBakIsOENBQTZDO0lBQUVxQixPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdETixhQUFhTyxtQkFBT0EsQ0FBQyx3RkFBZ0IsR0FBR047QUFDeENELGFBQWFPLG1CQUFPQSxDQUFDLDRFQUFVLEdBQUdOLFVBQ2xDLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L2Vycm9ycy9pbmRleC5qcz9mMDEyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vRXJyb3JIYW5kbGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9FcnJvcnNcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIl9fY3JlYXRlQmluZGluZyIsIk9iamVjdCIsImNyZWF0ZSIsIm8iLCJtIiwiayIsImsyIiwidW5kZWZpbmVkIiwiZGVzYyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIl9fZXNNb2R1bGUiLCJ3cml0YWJsZSIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJnZXQiLCJkZWZpbmVQcm9wZXJ0eSIsIl9fZXhwb3J0U3RhciIsImV4cG9ydHMiLCJwIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwidmFsdWUiLCJyZXF1aXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/errors/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/bounces/Bounce.js":
/*!********************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/bounces/Bounce.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.BounceTypeCode = exports.BounceType = void 0;\nvar BounceType;\n(function(BounceType) {\n    BounceType[\"HardBounce\"] = \"HardBounce\";\n    BounceType[\"Transient\"] = \"Transient\";\n    BounceType[\"Unsubscribe\"] = \"Unsubscribe\";\n    BounceType[\"Subscribe\"] = \"Subscribe\";\n    BounceType[\"AutoResponder\"] = \"AutoResponder\";\n    BounceType[\"AddressChange\"] = \"AddressChange\";\n    BounceType[\"DnsError\"] = \"DnsError\";\n    BounceType[\"SpamNotification\"] = \"SpamNotification\";\n    BounceType[\"OpenRelayTest\"] = \"OpenRelayTest\";\n    BounceType[\"Unknown\"] = \"Unknown\";\n    BounceType[\"SoftBounce\"] = \"SoftBounce\";\n    BounceType[\"VirusNotification\"] = \"VirusNotification\";\n    BounceType[\"ChallengeVerification\"] = \"ChallengeVerification\";\n    BounceType[\"BadEmailAddress\"] = \"BadEmailAddress\";\n    BounceType[\"SpamComplaint\"] = \"SpamComplaint\";\n    BounceType[\"ManuallyDeactivated\"] = \"ManuallyDeactivated\";\n    BounceType[\"Unconfirmed\"] = \"Unconfirmed\";\n    BounceType[\"Blocked\"] = \"Blocked\";\n    BounceType[\"SMTPApiError\"] = \"SMTPApiError\";\n    BounceType[\"InboundError\"] = \"InboundError\";\n    BounceType[\"DMARCPolicy\"] = \"DMARCPolicy\";\n    BounceType[\"TemplateRenderingFailed\"] = \"TemplateRenderingFailed\";\n})(BounceType = exports.BounceType || (exports.BounceType = {}));\nvar BounceTypeCode;\n(function(BounceTypeCode) {\n    BounceTypeCode[BounceTypeCode[\"HardBounce\"] = 1] = \"HardBounce\";\n    BounceTypeCode[BounceTypeCode[\"Transient\"] = 2] = \"Transient\";\n    BounceTypeCode[BounceTypeCode[\"Unsubscribe\"] = 16] = \"Unsubscribe\";\n    BounceTypeCode[BounceTypeCode[\"Subscribe\"] = 32] = \"Subscribe\";\n    BounceTypeCode[BounceTypeCode[\"AutoResponder\"] = 64] = \"AutoResponder\";\n    BounceTypeCode[BounceTypeCode[\"AddressChange\"] = 128] = \"AddressChange\";\n    BounceTypeCode[BounceTypeCode[\"DnsError\"] = 256] = \"DnsError\";\n    BounceTypeCode[BounceTypeCode[\"SpamNotification\"] = 512] = \"SpamNotification\";\n    BounceTypeCode[BounceTypeCode[\"OpenRelayTest\"] = 1024] = \"OpenRelayTest\";\n    BounceTypeCode[BounceTypeCode[\"Unknown\"] = 2048] = \"Unknown\";\n    BounceTypeCode[BounceTypeCode[\"SoftBounce\"] = 4096] = \"SoftBounce\";\n    BounceTypeCode[BounceTypeCode[\"VirusNotification\"] = 8192] = \"VirusNotification\";\n    BounceTypeCode[BounceTypeCode[\"ChallengeVerification\"] = 16384] = \"ChallengeVerification\";\n    BounceTypeCode[BounceTypeCode[\"BadEmailAddress\"] = 100000] = \"BadEmailAddress\";\n    BounceTypeCode[BounceTypeCode[\"SpamComplaint\"] = 100001] = \"SpamComplaint\";\n    BounceTypeCode[BounceTypeCode[\"ManuallyDeactivated\"] = 100002] = \"ManuallyDeactivated\";\n    BounceTypeCode[BounceTypeCode[\"Unconfirmed\"] = 100003] = \"Unconfirmed\";\n    BounceTypeCode[BounceTypeCode[\"Blocked\"] = 100006] = \"Blocked\";\n    BounceTypeCode[BounceTypeCode[\"SMTPApiError\"] = 100007] = \"SMTPApiError\";\n    BounceTypeCode[BounceTypeCode[\"InboundError\"] = 100008] = \"InboundError\";\n    BounceTypeCode[BounceTypeCode[\"DMARCPolicy\"] = 100009] = \"DMARCPolicy\";\n    BounceTypeCode[BounceTypeCode[\"TemplateRenderingFailed\"] = 100010] = \"TemplateRenderingFailed\";\n})(BounceTypeCode = exports.BounceTypeCode || (exports.BounceTypeCode = {})); //# sourceMappingURL=Bounce.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2JvdW5jZXMvQm91bmNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxzQkFBc0IsR0FBR0Esa0JBQWtCLEdBQUcsS0FBSztBQUNuRCxJQUFJRztBQUNILFVBQVVBLFVBQVU7SUFDakJBLFVBQVUsQ0FBQyxhQUFhLEdBQUc7SUFDM0JBLFVBQVUsQ0FBQyxZQUFZLEdBQUc7SUFDMUJBLFVBQVUsQ0FBQyxjQUFjLEdBQUc7SUFDNUJBLFVBQVUsQ0FBQyxZQUFZLEdBQUc7SUFDMUJBLFVBQVUsQ0FBQyxnQkFBZ0IsR0FBRztJQUM5QkEsVUFBVSxDQUFDLGdCQUFnQixHQUFHO0lBQzlCQSxVQUFVLENBQUMsV0FBVyxHQUFHO0lBQ3pCQSxVQUFVLENBQUMsbUJBQW1CLEdBQUc7SUFDakNBLFVBQVUsQ0FBQyxnQkFBZ0IsR0FBRztJQUM5QkEsVUFBVSxDQUFDLFVBQVUsR0FBRztJQUN4QkEsVUFBVSxDQUFDLGFBQWEsR0FBRztJQUMzQkEsVUFBVSxDQUFDLG9CQUFvQixHQUFHO0lBQ2xDQSxVQUFVLENBQUMsd0JBQXdCLEdBQUc7SUFDdENBLFVBQVUsQ0FBQyxrQkFBa0IsR0FBRztJQUNoQ0EsVUFBVSxDQUFDLGdCQUFnQixHQUFHO0lBQzlCQSxVQUFVLENBQUMsc0JBQXNCLEdBQUc7SUFDcENBLFVBQVUsQ0FBQyxjQUFjLEdBQUc7SUFDNUJBLFVBQVUsQ0FBQyxVQUFVLEdBQUc7SUFDeEJBLFVBQVUsQ0FBQyxlQUFlLEdBQUc7SUFDN0JBLFVBQVUsQ0FBQyxlQUFlLEdBQUc7SUFDN0JBLFVBQVUsQ0FBQyxjQUFjLEdBQUc7SUFDNUJBLFVBQVUsQ0FBQywwQkFBMEIsR0FBRztBQUM1QyxHQUFHQSxhQUFhSCxRQUFRRyxVQUFVLElBQUtILENBQUFBLGtCQUFrQixHQUFHLENBQUM7QUFDN0QsSUFBSUU7QUFDSCxVQUFVQSxjQUFjO0lBQ3JCQSxjQUFjLENBQUNBLGNBQWMsQ0FBQyxhQUFhLEdBQUcsRUFBRSxHQUFHO0lBQ25EQSxjQUFjLENBQUNBLGNBQWMsQ0FBQyxZQUFZLEdBQUcsRUFBRSxHQUFHO0lBQ2xEQSxjQUFjLENBQUNBLGNBQWMsQ0FBQyxjQUFjLEdBQUcsR0FBRyxHQUFHO0lBQ3JEQSxjQUFjLENBQUNBLGNBQWMsQ0FBQyxZQUFZLEdBQUcsR0FBRyxHQUFHO0lBQ25EQSxjQUFjLENBQUNBLGNBQWMsQ0FBQyxnQkFBZ0IsR0FBRyxHQUFHLEdBQUc7SUFDdkRBLGNBQWMsQ0FBQ0EsY0FBYyxDQUFDLGdCQUFnQixHQUFHLElBQUksR0FBRztJQUN4REEsY0FBYyxDQUFDQSxjQUFjLENBQUMsV0FBVyxHQUFHLElBQUksR0FBRztJQUNuREEsY0FBYyxDQUFDQSxjQUFjLENBQUMsbUJBQW1CLEdBQUcsSUFBSSxHQUFHO0lBQzNEQSxjQUFjLENBQUNBLGNBQWMsQ0FBQyxnQkFBZ0IsR0FBRyxLQUFLLEdBQUc7SUFDekRBLGNBQWMsQ0FBQ0EsY0FBYyxDQUFDLFVBQVUsR0FBRyxLQUFLLEdBQUc7SUFDbkRBLGNBQWMsQ0FBQ0EsY0FBYyxDQUFDLGFBQWEsR0FBRyxLQUFLLEdBQUc7SUFDdERBLGNBQWMsQ0FBQ0EsY0FBYyxDQUFDLG9CQUFvQixHQUFHLEtBQUssR0FBRztJQUM3REEsY0FBYyxDQUFDQSxjQUFjLENBQUMsd0JBQXdCLEdBQUcsTUFBTSxHQUFHO0lBQ2xFQSxjQUFjLENBQUNBLGNBQWMsQ0FBQyxrQkFBa0IsR0FBRyxPQUFPLEdBQUc7SUFDN0RBLGNBQWMsQ0FBQ0EsY0FBYyxDQUFDLGdCQUFnQixHQUFHLE9BQU8sR0FBRztJQUMzREEsY0FBYyxDQUFDQSxjQUFjLENBQUMsc0JBQXNCLEdBQUcsT0FBTyxHQUFHO0lBQ2pFQSxjQUFjLENBQUNBLGNBQWMsQ0FBQyxjQUFjLEdBQUcsT0FBTyxHQUFHO0lBQ3pEQSxjQUFjLENBQUNBLGNBQWMsQ0FBQyxVQUFVLEdBQUcsT0FBTyxHQUFHO0lBQ3JEQSxjQUFjLENBQUNBLGNBQWMsQ0FBQyxlQUFlLEdBQUcsT0FBTyxHQUFHO0lBQzFEQSxjQUFjLENBQUNBLGNBQWMsQ0FBQyxlQUFlLEdBQUcsT0FBTyxHQUFHO0lBQzFEQSxjQUFjLENBQUNBLGNBQWMsQ0FBQyxjQUFjLEdBQUcsT0FBTyxHQUFHO0lBQ3pEQSxjQUFjLENBQUNBLGNBQWMsQ0FBQywwQkFBMEIsR0FBRyxPQUFPLEdBQUc7QUFDekUsR0FBR0EsaUJBQWlCRixRQUFRRSxjQUFjLElBQUtGLENBQUFBLHNCQUFzQixHQUFHLENBQUMsS0FDekUsa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2JvdW5jZXMvQm91bmNlLmpzPzFjYjkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkJvdW5jZVR5cGVDb2RlID0gZXhwb3J0cy5Cb3VuY2VUeXBlID0gdm9pZCAwO1xudmFyIEJvdW5jZVR5cGU7XG4oZnVuY3Rpb24gKEJvdW5jZVR5cGUpIHtcbiAgICBCb3VuY2VUeXBlW1wiSGFyZEJvdW5jZVwiXSA9IFwiSGFyZEJvdW5jZVwiO1xuICAgIEJvdW5jZVR5cGVbXCJUcmFuc2llbnRcIl0gPSBcIlRyYW5zaWVudFwiO1xuICAgIEJvdW5jZVR5cGVbXCJVbnN1YnNjcmliZVwiXSA9IFwiVW5zdWJzY3JpYmVcIjtcbiAgICBCb3VuY2VUeXBlW1wiU3Vic2NyaWJlXCJdID0gXCJTdWJzY3JpYmVcIjtcbiAgICBCb3VuY2VUeXBlW1wiQXV0b1Jlc3BvbmRlclwiXSA9IFwiQXV0b1Jlc3BvbmRlclwiO1xuICAgIEJvdW5jZVR5cGVbXCJBZGRyZXNzQ2hhbmdlXCJdID0gXCJBZGRyZXNzQ2hhbmdlXCI7XG4gICAgQm91bmNlVHlwZVtcIkRuc0Vycm9yXCJdID0gXCJEbnNFcnJvclwiO1xuICAgIEJvdW5jZVR5cGVbXCJTcGFtTm90aWZpY2F0aW9uXCJdID0gXCJTcGFtTm90aWZpY2F0aW9uXCI7XG4gICAgQm91bmNlVHlwZVtcIk9wZW5SZWxheVRlc3RcIl0gPSBcIk9wZW5SZWxheVRlc3RcIjtcbiAgICBCb3VuY2VUeXBlW1wiVW5rbm93blwiXSA9IFwiVW5rbm93blwiO1xuICAgIEJvdW5jZVR5cGVbXCJTb2Z0Qm91bmNlXCJdID0gXCJTb2Z0Qm91bmNlXCI7XG4gICAgQm91bmNlVHlwZVtcIlZpcnVzTm90aWZpY2F0aW9uXCJdID0gXCJWaXJ1c05vdGlmaWNhdGlvblwiO1xuICAgIEJvdW5jZVR5cGVbXCJDaGFsbGVuZ2VWZXJpZmljYXRpb25cIl0gPSBcIkNoYWxsZW5nZVZlcmlmaWNhdGlvblwiO1xuICAgIEJvdW5jZVR5cGVbXCJCYWRFbWFpbEFkZHJlc3NcIl0gPSBcIkJhZEVtYWlsQWRkcmVzc1wiO1xuICAgIEJvdW5jZVR5cGVbXCJTcGFtQ29tcGxhaW50XCJdID0gXCJTcGFtQ29tcGxhaW50XCI7XG4gICAgQm91bmNlVHlwZVtcIk1hbnVhbGx5RGVhY3RpdmF0ZWRcIl0gPSBcIk1hbnVhbGx5RGVhY3RpdmF0ZWRcIjtcbiAgICBCb3VuY2VUeXBlW1wiVW5jb25maXJtZWRcIl0gPSBcIlVuY29uZmlybWVkXCI7XG4gICAgQm91bmNlVHlwZVtcIkJsb2NrZWRcIl0gPSBcIkJsb2NrZWRcIjtcbiAgICBCb3VuY2VUeXBlW1wiU01UUEFwaUVycm9yXCJdID0gXCJTTVRQQXBpRXJyb3JcIjtcbiAgICBCb3VuY2VUeXBlW1wiSW5ib3VuZEVycm9yXCJdID0gXCJJbmJvdW5kRXJyb3JcIjtcbiAgICBCb3VuY2VUeXBlW1wiRE1BUkNQb2xpY3lcIl0gPSBcIkRNQVJDUG9saWN5XCI7XG4gICAgQm91bmNlVHlwZVtcIlRlbXBsYXRlUmVuZGVyaW5nRmFpbGVkXCJdID0gXCJUZW1wbGF0ZVJlbmRlcmluZ0ZhaWxlZFwiO1xufSkoQm91bmNlVHlwZSA9IGV4cG9ydHMuQm91bmNlVHlwZSB8fCAoZXhwb3J0cy5Cb3VuY2VUeXBlID0ge30pKTtcbnZhciBCb3VuY2VUeXBlQ29kZTtcbihmdW5jdGlvbiAoQm91bmNlVHlwZUNvZGUpIHtcbiAgICBCb3VuY2VUeXBlQ29kZVtCb3VuY2VUeXBlQ29kZVtcIkhhcmRCb3VuY2VcIl0gPSAxXSA9IFwiSGFyZEJvdW5jZVwiO1xuICAgIEJvdW5jZVR5cGVDb2RlW0JvdW5jZVR5cGVDb2RlW1wiVHJhbnNpZW50XCJdID0gMl0gPSBcIlRyYW5zaWVudFwiO1xuICAgIEJvdW5jZVR5cGVDb2RlW0JvdW5jZVR5cGVDb2RlW1wiVW5zdWJzY3JpYmVcIl0gPSAxNl0gPSBcIlVuc3Vic2NyaWJlXCI7XG4gICAgQm91bmNlVHlwZUNvZGVbQm91bmNlVHlwZUNvZGVbXCJTdWJzY3JpYmVcIl0gPSAzMl0gPSBcIlN1YnNjcmliZVwiO1xuICAgIEJvdW5jZVR5cGVDb2RlW0JvdW5jZVR5cGVDb2RlW1wiQXV0b1Jlc3BvbmRlclwiXSA9IDY0XSA9IFwiQXV0b1Jlc3BvbmRlclwiO1xuICAgIEJvdW5jZVR5cGVDb2RlW0JvdW5jZVR5cGVDb2RlW1wiQWRkcmVzc0NoYW5nZVwiXSA9IDEyOF0gPSBcIkFkZHJlc3NDaGFuZ2VcIjtcbiAgICBCb3VuY2VUeXBlQ29kZVtCb3VuY2VUeXBlQ29kZVtcIkRuc0Vycm9yXCJdID0gMjU2XSA9IFwiRG5zRXJyb3JcIjtcbiAgICBCb3VuY2VUeXBlQ29kZVtCb3VuY2VUeXBlQ29kZVtcIlNwYW1Ob3RpZmljYXRpb25cIl0gPSA1MTJdID0gXCJTcGFtTm90aWZpY2F0aW9uXCI7XG4gICAgQm91bmNlVHlwZUNvZGVbQm91bmNlVHlwZUNvZGVbXCJPcGVuUmVsYXlUZXN0XCJdID0gMTAyNF0gPSBcIk9wZW5SZWxheVRlc3RcIjtcbiAgICBCb3VuY2VUeXBlQ29kZVtCb3VuY2VUeXBlQ29kZVtcIlVua25vd25cIl0gPSAyMDQ4XSA9IFwiVW5rbm93blwiO1xuICAgIEJvdW5jZVR5cGVDb2RlW0JvdW5jZVR5cGVDb2RlW1wiU29mdEJvdW5jZVwiXSA9IDQwOTZdID0gXCJTb2Z0Qm91bmNlXCI7XG4gICAgQm91bmNlVHlwZUNvZGVbQm91bmNlVHlwZUNvZGVbXCJWaXJ1c05vdGlmaWNhdGlvblwiXSA9IDgxOTJdID0gXCJWaXJ1c05vdGlmaWNhdGlvblwiO1xuICAgIEJvdW5jZVR5cGVDb2RlW0JvdW5jZVR5cGVDb2RlW1wiQ2hhbGxlbmdlVmVyaWZpY2F0aW9uXCJdID0gMTYzODRdID0gXCJDaGFsbGVuZ2VWZXJpZmljYXRpb25cIjtcbiAgICBCb3VuY2VUeXBlQ29kZVtCb3VuY2VUeXBlQ29kZVtcIkJhZEVtYWlsQWRkcmVzc1wiXSA9IDEwMDAwMF0gPSBcIkJhZEVtYWlsQWRkcmVzc1wiO1xuICAgIEJvdW5jZVR5cGVDb2RlW0JvdW5jZVR5cGVDb2RlW1wiU3BhbUNvbXBsYWludFwiXSA9IDEwMDAwMV0gPSBcIlNwYW1Db21wbGFpbnRcIjtcbiAgICBCb3VuY2VUeXBlQ29kZVtCb3VuY2VUeXBlQ29kZVtcIk1hbnVhbGx5RGVhY3RpdmF0ZWRcIl0gPSAxMDAwMDJdID0gXCJNYW51YWxseURlYWN0aXZhdGVkXCI7XG4gICAgQm91bmNlVHlwZUNvZGVbQm91bmNlVHlwZUNvZGVbXCJVbmNvbmZpcm1lZFwiXSA9IDEwMDAwM10gPSBcIlVuY29uZmlybWVkXCI7XG4gICAgQm91bmNlVHlwZUNvZGVbQm91bmNlVHlwZUNvZGVbXCJCbG9ja2VkXCJdID0gMTAwMDA2XSA9IFwiQmxvY2tlZFwiO1xuICAgIEJvdW5jZVR5cGVDb2RlW0JvdW5jZVR5cGVDb2RlW1wiU01UUEFwaUVycm9yXCJdID0gMTAwMDA3XSA9IFwiU01UUEFwaUVycm9yXCI7XG4gICAgQm91bmNlVHlwZUNvZGVbQm91bmNlVHlwZUNvZGVbXCJJbmJvdW5kRXJyb3JcIl0gPSAxMDAwMDhdID0gXCJJbmJvdW5kRXJyb3JcIjtcbiAgICBCb3VuY2VUeXBlQ29kZVtCb3VuY2VUeXBlQ29kZVtcIkRNQVJDUG9saWN5XCJdID0gMTAwMDA5XSA9IFwiRE1BUkNQb2xpY3lcIjtcbiAgICBCb3VuY2VUeXBlQ29kZVtCb3VuY2VUeXBlQ29kZVtcIlRlbXBsYXRlUmVuZGVyaW5nRmFpbGVkXCJdID0gMTAwMDEwXSA9IFwiVGVtcGxhdGVSZW5kZXJpbmdGYWlsZWRcIjtcbn0pKEJvdW5jZVR5cGVDb2RlID0gZXhwb3J0cy5Cb3VuY2VUeXBlQ29kZSB8fCAoZXhwb3J0cy5Cb3VuY2VUeXBlQ29kZSA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Cb3VuY2UuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQm91bmNlVHlwZUNvZGUiLCJCb3VuY2VUeXBlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/bounces/Bounce.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/bounces/BounceFilteringParameters.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/bounces/BounceFilteringParameters.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.BounceFilteringParameters = void 0;\nvar FilteringParameters_1 = __webpack_require__(/*! ../client/FilteringParameters */ \"(rsc)/./node_modules/postmark/dist/client/models/client/FilteringParameters.js\");\n/**\n * Describes filtering parameters that can be used when retrieving bounces.\n * When pagination parameters are not specified, default values are set.\n */ var BounceFilteringParameters = /** @class */ function(_super) {\n    __extends(BounceFilteringParameters, _super);\n    function BounceFilteringParameters(count, offset, type, inactive, emailFilter, tag, messageID, fromDate, toDate, messageStream) {\n        if (count === void 0) {\n            count = 100;\n        }\n        if (offset === void 0) {\n            offset = 0;\n        }\n        var _this = _super.call(this, count, offset) || this;\n        _this.type = type;\n        _this.inactive = inactive;\n        _this.emailFilter = emailFilter;\n        _this.tag = tag;\n        _this.messageID = messageID;\n        _this.fromDate = fromDate;\n        _this.toDate = toDate;\n        _this.messageStream = messageStream;\n        return _this;\n    }\n    return BounceFilteringParameters;\n}(FilteringParameters_1.FilteringParameters);\nexports.BounceFilteringParameters = BounceFilteringParameters; //# sourceMappingURL=BounceFilteringParameters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2JvdW5jZXMvQm91bmNlRmlsdGVyaW5nUGFyYW1ldGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLFlBQVksQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxTQUFTLElBQUs7SUFDeEMsSUFBSUMsZ0JBQWdCLFNBQVVDLENBQUMsRUFBRUMsQ0FBQztRQUM5QkYsZ0JBQWdCRyxPQUFPQyxjQUFjLElBQ2hDO1lBQUVDLFdBQVcsRUFBRTtRQUFDLGNBQWFDLFNBQVMsU0FBVUwsQ0FBQyxFQUFFQyxDQUFDO1lBQUlELEVBQUVJLFNBQVMsR0FBR0g7UUFBRyxLQUMxRSxTQUFVRCxDQUFDLEVBQUVDLENBQUM7WUFBSSxJQUFLLElBQUlLLEtBQUtMLEVBQUcsSUFBSUMsT0FBT0ssU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ1IsR0FBR0ssSUFBSU4sQ0FBQyxDQUFDTSxFQUFFLEdBQUdMLENBQUMsQ0FBQ0ssRUFBRTtRQUFFO1FBQ3BHLE9BQU9QLGNBQWNDLEdBQUdDO0lBQzVCO0lBQ0EsT0FBTyxTQUFVRCxDQUFDLEVBQUVDLENBQUM7UUFDakIsSUFBSSxPQUFPQSxNQUFNLGNBQWNBLE1BQU0sTUFDakMsTUFBTSxJQUFJUyxVQUFVLHlCQUF5QkMsT0FBT1YsS0FBSztRQUM3REYsY0FBY0MsR0FBR0M7UUFDakIsU0FBU1c7WUFBTyxJQUFJLENBQUNDLFdBQVcsR0FBR2I7UUFBRztRQUN0Q0EsRUFBRU8sU0FBUyxHQUFHTixNQUFNLE9BQU9DLE9BQU9ZLE1BQU0sQ0FBQ2IsS0FBTVcsQ0FBQUEsR0FBR0wsU0FBUyxHQUFHTixFQUFFTSxTQUFTLEVBQUUsSUFBSUssSUFBRztJQUN0RjtBQUNKO0FBQ0FWLDhDQUE2QztJQUFFZSxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxpQ0FBaUMsR0FBRyxLQUFLO0FBQ3pDLElBQUlHLHdCQUF3QkMsbUJBQU9BLENBQUMscUhBQStCO0FBQ25FOzs7Q0FHQyxHQUNELElBQUlGLDRCQUE0QixXQUFXLEdBQUksU0FBVUcsTUFBTTtJQUMzRHZCLFVBQVVvQiwyQkFBMkJHO0lBQ3JDLFNBQVNILDBCQUEwQkksS0FBSyxFQUFFQyxNQUFNLEVBQUVDLElBQUksRUFBRUMsUUFBUSxFQUFFQyxXQUFXLEVBQUVDLEdBQUcsRUFBRUMsU0FBUyxFQUFFQyxRQUFRLEVBQUVDLE1BQU0sRUFBRUMsYUFBYTtRQUMxSCxJQUFJVCxVQUFVLEtBQUssR0FBRztZQUFFQSxRQUFRO1FBQUs7UUFDckMsSUFBSUMsV0FBVyxLQUFLLEdBQUc7WUFBRUEsU0FBUztRQUFHO1FBQ3JDLElBQUlTLFFBQVFYLE9BQU9aLElBQUksQ0FBQyxJQUFJLEVBQUVhLE9BQU9DLFdBQVcsSUFBSTtRQUNwRFMsTUFBTVIsSUFBSSxHQUFHQTtRQUNiUSxNQUFNUCxRQUFRLEdBQUdBO1FBQ2pCTyxNQUFNTixXQUFXLEdBQUdBO1FBQ3BCTSxNQUFNTCxHQUFHLEdBQUdBO1FBQ1pLLE1BQU1KLFNBQVMsR0FBR0E7UUFDbEJJLE1BQU1ILFFBQVEsR0FBR0E7UUFDakJHLE1BQU1GLE1BQU0sR0FBR0E7UUFDZkUsTUFBTUQsYUFBYSxHQUFHQTtRQUN0QixPQUFPQztJQUNYO0lBQ0EsT0FBT2Q7QUFDWCxFQUFFQyxzQkFBc0JjLG1CQUFtQjtBQUMzQ2pCLGlDQUFpQyxHQUFHRSwyQkFDcEMscURBQXFEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2JvdW5jZXMvQm91bmNlRmlsdGVyaW5nUGFyYW1ldGVycy5qcz81MjE5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBiICE9PSBcImZ1bmN0aW9uXCIgJiYgYiAhPT0gbnVsbClcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQm91bmNlRmlsdGVyaW5nUGFyYW1ldGVycyA9IHZvaWQgMDtcbnZhciBGaWx0ZXJpbmdQYXJhbWV0ZXJzXzEgPSByZXF1aXJlKFwiLi4vY2xpZW50L0ZpbHRlcmluZ1BhcmFtZXRlcnNcIik7XG4vKipcbiAqIERlc2NyaWJlcyBmaWx0ZXJpbmcgcGFyYW1ldGVycyB0aGF0IGNhbiBiZSB1c2VkIHdoZW4gcmV0cmlldmluZyBib3VuY2VzLlxuICogV2hlbiBwYWdpbmF0aW9uIHBhcmFtZXRlcnMgYXJlIG5vdCBzcGVjaWZpZWQsIGRlZmF1bHQgdmFsdWVzIGFyZSBzZXQuXG4gKi9cbnZhciBCb3VuY2VGaWx0ZXJpbmdQYXJhbWV0ZXJzID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhCb3VuY2VGaWx0ZXJpbmdQYXJhbWV0ZXJzLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEJvdW5jZUZpbHRlcmluZ1BhcmFtZXRlcnMoY291bnQsIG9mZnNldCwgdHlwZSwgaW5hY3RpdmUsIGVtYWlsRmlsdGVyLCB0YWcsIG1lc3NhZ2VJRCwgZnJvbURhdGUsIHRvRGF0ZSwgbWVzc2FnZVN0cmVhbSkge1xuICAgICAgICBpZiAoY291bnQgPT09IHZvaWQgMCkgeyBjb3VudCA9IDEwMDsgfVxuICAgICAgICBpZiAob2Zmc2V0ID09PSB2b2lkIDApIHsgb2Zmc2V0ID0gMDsgfVxuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBjb3VudCwgb2Zmc2V0KSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy50eXBlID0gdHlwZTtcbiAgICAgICAgX3RoaXMuaW5hY3RpdmUgPSBpbmFjdGl2ZTtcbiAgICAgICAgX3RoaXMuZW1haWxGaWx0ZXIgPSBlbWFpbEZpbHRlcjtcbiAgICAgICAgX3RoaXMudGFnID0gdGFnO1xuICAgICAgICBfdGhpcy5tZXNzYWdlSUQgPSBtZXNzYWdlSUQ7XG4gICAgICAgIF90aGlzLmZyb21EYXRlID0gZnJvbURhdGU7XG4gICAgICAgIF90aGlzLnRvRGF0ZSA9IHRvRGF0ZTtcbiAgICAgICAgX3RoaXMubWVzc2FnZVN0cmVhbSA9IG1lc3NhZ2VTdHJlYW07XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgcmV0dXJuIEJvdW5jZUZpbHRlcmluZ1BhcmFtZXRlcnM7XG59KEZpbHRlcmluZ1BhcmFtZXRlcnNfMS5GaWx0ZXJpbmdQYXJhbWV0ZXJzKSk7XG5leHBvcnRzLkJvdW5jZUZpbHRlcmluZ1BhcmFtZXRlcnMgPSBCb3VuY2VGaWx0ZXJpbmdQYXJhbWV0ZXJzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Qm91bmNlRmlsdGVyaW5nUGFyYW1ldGVycy5qcy5tYXAiXSwibmFtZXMiOlsiX19leHRlbmRzIiwiZXh0ZW5kU3RhdGljcyIsImQiLCJiIiwiT2JqZWN0Iiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJBcnJheSIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJUeXBlRXJyb3IiLCJTdHJpbmciLCJfXyIsImNvbnN0cnVjdG9yIiwiY3JlYXRlIiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJCb3VuY2VGaWx0ZXJpbmdQYXJhbWV0ZXJzIiwiRmlsdGVyaW5nUGFyYW1ldGVyc18xIiwicmVxdWlyZSIsIl9zdXBlciIsImNvdW50Iiwib2Zmc2V0IiwidHlwZSIsImluYWN0aXZlIiwiZW1haWxGaWx0ZXIiLCJ0YWciLCJtZXNzYWdlSUQiLCJmcm9tRGF0ZSIsInRvRGF0ZSIsIm1lc3NhZ2VTdHJlYW0iLCJfdGhpcyIsIkZpbHRlcmluZ1BhcmFtZXRlcnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/bounces/BounceFilteringParameters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/client/Callback.js":
/*!*********************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/client/Callback.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=Callback.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2NsaWVudC9DYWxsYmFjay5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQyxFQUM3RCxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvY2xpZW50L0NhbGxiYWNrLmpzP2NiOGYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DYWxsYmFjay5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/client/Callback.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/client/ClientOptions.js":
/*!**************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/client/ClientOptions.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ClientOptions = void 0;\nvar ClientOptions;\n(function(ClientOptions) {\n    var Configuration = /** @class */ function() {\n        function Configuration(useHttps, requestHost, timeout) {\n            this.useHttps = useHttps;\n            this.requestHost = requestHost;\n            this.timeout = timeout;\n        }\n        return Configuration;\n    }();\n    ClientOptions.Configuration = Configuration;\n    var HttpMethod;\n    (function(HttpMethod) {\n        HttpMethod[\"GET\"] = \"GET\";\n        HttpMethod[\"POST\"] = \"POST\";\n        HttpMethod[\"DELETE\"] = \"DELETE\";\n        HttpMethod[\"PUT\"] = \"PUT\";\n        HttpMethod[\"OPTIONS\"] = \"OPTIONS\";\n        HttpMethod[\"HEAD\"] = \"HEAD\";\n        HttpMethod[\"PATCH\"] = \"PATCH\";\n    })(HttpMethod = ClientOptions.HttpMethod || (ClientOptions.HttpMethod = {}));\n    var AuthHeaderNames;\n    (function(AuthHeaderNames) {\n        AuthHeaderNames[\"SERVER_TOKEN\"] = \"X-Postmark-Server-Token\";\n        AuthHeaderNames[\"ACCOUNT_TOKEN\"] = \"X-Postmark-Account-Token\";\n    })(AuthHeaderNames = ClientOptions.AuthHeaderNames || (ClientOptions.AuthHeaderNames = {}));\n})(ClientOptions = exports.ClientOptions || (exports.ClientOptions = {})); //# sourceMappingURL=ClientOptions.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2NsaWVudC9DbGllbnRPcHRpb25zLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxxQkFBcUIsR0FBRyxLQUFLO0FBQzdCLElBQUlFO0FBQ0gsVUFBVUEsYUFBYTtJQUNwQixJQUFJQyxnQkFBZ0IsV0FBVyxHQUFJO1FBQy9CLFNBQVNBLGNBQWNDLFFBQVEsRUFBRUMsV0FBVyxFQUFFQyxPQUFPO1lBQ2pELElBQUksQ0FBQ0YsUUFBUSxHQUFHQTtZQUNoQixJQUFJLENBQUNDLFdBQVcsR0FBR0E7WUFDbkIsSUFBSSxDQUFDQyxPQUFPLEdBQUdBO1FBQ25CO1FBQ0EsT0FBT0g7SUFDWDtJQUNBRCxjQUFjQyxhQUFhLEdBQUdBO0lBQzlCLElBQUlJO0lBQ0gsVUFBVUEsVUFBVTtRQUNqQkEsVUFBVSxDQUFDLE1BQU0sR0FBRztRQUNwQkEsVUFBVSxDQUFDLE9BQU8sR0FBRztRQUNyQkEsVUFBVSxDQUFDLFNBQVMsR0FBRztRQUN2QkEsVUFBVSxDQUFDLE1BQU0sR0FBRztRQUNwQkEsVUFBVSxDQUFDLFVBQVUsR0FBRztRQUN4QkEsVUFBVSxDQUFDLE9BQU8sR0FBRztRQUNyQkEsVUFBVSxDQUFDLFFBQVEsR0FBRztJQUMxQixHQUFHQSxhQUFhTCxjQUFjSyxVQUFVLElBQUtMLENBQUFBLGNBQWNLLFVBQVUsR0FBRyxDQUFDO0lBQ3pFLElBQUlDO0lBQ0gsVUFBVUEsZUFBZTtRQUN0QkEsZUFBZSxDQUFDLGVBQWUsR0FBRztRQUNsQ0EsZUFBZSxDQUFDLGdCQUFnQixHQUFHO0lBQ3ZDLEdBQUdBLGtCQUFrQk4sY0FBY00sZUFBZSxJQUFLTixDQUFBQSxjQUFjTSxlQUFlLEdBQUcsQ0FBQztBQUM1RixHQUFHTixnQkFBZ0JGLFFBQVFFLGFBQWEsSUFBS0YsQ0FBQUEscUJBQXFCLEdBQUcsQ0FBQyxLQUN0RSx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvY2xpZW50L0NsaWVudE9wdGlvbnMuanM/OTJhMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ2xpZW50T3B0aW9ucyA9IHZvaWQgMDtcbnZhciBDbGllbnRPcHRpb25zO1xuKGZ1bmN0aW9uIChDbGllbnRPcHRpb25zKSB7XG4gICAgdmFyIENvbmZpZ3VyYXRpb24gPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZ1bmN0aW9uIENvbmZpZ3VyYXRpb24odXNlSHR0cHMsIHJlcXVlc3RIb3N0LCB0aW1lb3V0KSB7XG4gICAgICAgICAgICB0aGlzLnVzZUh0dHBzID0gdXNlSHR0cHM7XG4gICAgICAgICAgICB0aGlzLnJlcXVlc3RIb3N0ID0gcmVxdWVzdEhvc3Q7XG4gICAgICAgICAgICB0aGlzLnRpbWVvdXQgPSB0aW1lb3V0O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBDb25maWd1cmF0aW9uO1xuICAgIH0oKSk7XG4gICAgQ2xpZW50T3B0aW9ucy5Db25maWd1cmF0aW9uID0gQ29uZmlndXJhdGlvbjtcbiAgICB2YXIgSHR0cE1ldGhvZDtcbiAgICAoZnVuY3Rpb24gKEh0dHBNZXRob2QpIHtcbiAgICAgICAgSHR0cE1ldGhvZFtcIkdFVFwiXSA9IFwiR0VUXCI7XG4gICAgICAgIEh0dHBNZXRob2RbXCJQT1NUXCJdID0gXCJQT1NUXCI7XG4gICAgICAgIEh0dHBNZXRob2RbXCJERUxFVEVcIl0gPSBcIkRFTEVURVwiO1xuICAgICAgICBIdHRwTWV0aG9kW1wiUFVUXCJdID0gXCJQVVRcIjtcbiAgICAgICAgSHR0cE1ldGhvZFtcIk9QVElPTlNcIl0gPSBcIk9QVElPTlNcIjtcbiAgICAgICAgSHR0cE1ldGhvZFtcIkhFQURcIl0gPSBcIkhFQURcIjtcbiAgICAgICAgSHR0cE1ldGhvZFtcIlBBVENIXCJdID0gXCJQQVRDSFwiO1xuICAgIH0pKEh0dHBNZXRob2QgPSBDbGllbnRPcHRpb25zLkh0dHBNZXRob2QgfHwgKENsaWVudE9wdGlvbnMuSHR0cE1ldGhvZCA9IHt9KSk7XG4gICAgdmFyIEF1dGhIZWFkZXJOYW1lcztcbiAgICAoZnVuY3Rpb24gKEF1dGhIZWFkZXJOYW1lcykge1xuICAgICAgICBBdXRoSGVhZGVyTmFtZXNbXCJTRVJWRVJfVE9LRU5cIl0gPSBcIlgtUG9zdG1hcmstU2VydmVyLVRva2VuXCI7XG4gICAgICAgIEF1dGhIZWFkZXJOYW1lc1tcIkFDQ09VTlRfVE9LRU5cIl0gPSBcIlgtUG9zdG1hcmstQWNjb3VudC1Ub2tlblwiO1xuICAgIH0pKEF1dGhIZWFkZXJOYW1lcyA9IENsaWVudE9wdGlvbnMuQXV0aEhlYWRlck5hbWVzIHx8IChDbGllbnRPcHRpb25zLkF1dGhIZWFkZXJOYW1lcyA9IHt9KSk7XG59KShDbGllbnRPcHRpb25zID0gZXhwb3J0cy5DbGllbnRPcHRpb25zIHx8IChleHBvcnRzLkNsaWVudE9wdGlvbnMgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2xpZW50T3B0aW9ucy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJDbGllbnRPcHRpb25zIiwiQ29uZmlndXJhdGlvbiIsInVzZUh0dHBzIiwicmVxdWVzdEhvc3QiLCJ0aW1lb3V0IiwiSHR0cE1ldGhvZCIsIkF1dGhIZWFkZXJOYW1lcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/client/ClientOptions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/client/DefaultResponse.js":
/*!****************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/client/DefaultResponse.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=DefaultResponse.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2NsaWVudC9EZWZhdWx0UmVzcG9uc2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUMsRUFDN0QsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2NsaWVudC9EZWZhdWx0UmVzcG9uc2UuanM/MjY3OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPURlZmF1bHRSZXNwb25zZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/client/DefaultResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/client/FilteringParameters.js":
/*!********************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/client/FilteringParameters.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.FilteringParameters = void 0;\n/**\n * Describes default filtering parameters that can be used.\n * When pagination parameters are not specified, default values are set.\n */ var FilteringParameters = /** @class */ function() {\n    function FilteringParameters(count, offset) {\n        if (count === void 0) {\n            count = 100;\n        }\n        if (offset === void 0) {\n            offset = 0;\n        }\n        this.count = count;\n        this.offset = offset;\n    }\n    return FilteringParameters;\n}();\nexports.FilteringParameters = FilteringParameters; //# sourceMappingURL=FilteringParameters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2NsaWVudC9GaWx0ZXJpbmdQYXJhbWV0ZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCwyQkFBMkIsR0FBRyxLQUFLO0FBQ25DOzs7Q0FHQyxHQUNELElBQUlFLHNCQUFzQixXQUFXLEdBQUk7SUFDckMsU0FBU0Esb0JBQW9CQyxLQUFLLEVBQUVDLE1BQU07UUFDdEMsSUFBSUQsVUFBVSxLQUFLLEdBQUc7WUFBRUEsUUFBUTtRQUFLO1FBQ3JDLElBQUlDLFdBQVcsS0FBSyxHQUFHO1lBQUVBLFNBQVM7UUFBRztRQUNyQyxJQUFJLENBQUNELEtBQUssR0FBR0E7UUFDYixJQUFJLENBQUNDLE1BQU0sR0FBR0E7SUFDbEI7SUFDQSxPQUFPRjtBQUNYO0FBQ0FGLDJCQUEyQixHQUFHRSxxQkFDOUIsK0NBQStDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2NsaWVudC9GaWx0ZXJpbmdQYXJhbWV0ZXJzLmpzPzViYmUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkZpbHRlcmluZ1BhcmFtZXRlcnMgPSB2b2lkIDA7XG4vKipcbiAqIERlc2NyaWJlcyBkZWZhdWx0IGZpbHRlcmluZyBwYXJhbWV0ZXJzIHRoYXQgY2FuIGJlIHVzZWQuXG4gKiBXaGVuIHBhZ2luYXRpb24gcGFyYW1ldGVycyBhcmUgbm90IHNwZWNpZmllZCwgZGVmYXVsdCB2YWx1ZXMgYXJlIHNldC5cbiAqL1xudmFyIEZpbHRlcmluZ1BhcmFtZXRlcnMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gRmlsdGVyaW5nUGFyYW1ldGVycyhjb3VudCwgb2Zmc2V0KSB7XG4gICAgICAgIGlmIChjb3VudCA9PT0gdm9pZCAwKSB7IGNvdW50ID0gMTAwOyB9XG4gICAgICAgIGlmIChvZmZzZXQgPT09IHZvaWQgMCkgeyBvZmZzZXQgPSAwOyB9XG4gICAgICAgIHRoaXMuY291bnQgPSBjb3VudDtcbiAgICAgICAgdGhpcy5vZmZzZXQgPSBvZmZzZXQ7XG4gICAgfVxuICAgIHJldHVybiBGaWx0ZXJpbmdQYXJhbWV0ZXJzO1xufSgpKTtcbmV4cG9ydHMuRmlsdGVyaW5nUGFyYW1ldGVycyA9IEZpbHRlcmluZ1BhcmFtZXRlcnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1GaWx0ZXJpbmdQYXJhbWV0ZXJzLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkZpbHRlcmluZ1BhcmFtZXRlcnMiLCJjb3VudCIsIm9mZnNldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/client/FilteringParameters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/client/HttpClient.js":
/*!***********************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/client/HttpClient.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.HttpClient = void 0;\nvar HttpClient = /** @class */ function() {\n    function HttpClient(configOptions) {\n        this.clientOptions = __assign(__assign({}, HttpClient.DefaultOptions), configOptions);\n        this.initHttpClient(this.clientOptions);\n    }\n    HttpClient.prototype.getBaseHttpRequestURL = function() {\n        var scheme = this.clientOptions.useHttps ? \"https\" : \"http\";\n        return \"\".concat(scheme, \"://\").concat(this.clientOptions.requestHost);\n    };\n    /**\n     * Http Client connection configuration options.\n     * You may modify these values and new clients will use them.\n     * Any values provided to a Client constructor will override default options.\n     */ HttpClient.DefaultOptions = {\n        useHttps: true,\n        requestHost: \"api.postmarkapp.com\",\n        timeout: 180\n    };\n    return HttpClient;\n}();\nexports.HttpClient = HttpClient; //# sourceMappingURL=HttpClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2NsaWVudC9IdHRwQ2xpZW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsV0FBVyxDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLFFBQVEsSUFBSztJQUN0Q0EsV0FBV0MsT0FBT0MsTUFBTSxJQUFJLFNBQVNDLENBQUM7UUFDbEMsSUFBSyxJQUFJQyxHQUFHQyxJQUFJLEdBQUdDLElBQUlDLFVBQVVDLE1BQU0sRUFBRUgsSUFBSUMsR0FBR0QsSUFBSztZQUNqREQsSUFBSUcsU0FBUyxDQUFDRixFQUFFO1lBQ2hCLElBQUssSUFBSUksS0FBS0wsRUFBRyxJQUFJSCxPQUFPUyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDUixHQUFHSyxJQUN6RE4sQ0FBQyxDQUFDTSxFQUFFLEdBQUdMLENBQUMsQ0FBQ0ssRUFBRTtRQUNuQjtRQUNBLE9BQU9OO0lBQ1g7SUFDQSxPQUFPSCxTQUFTYSxLQUFLLENBQUMsSUFBSSxFQUFFTjtBQUNoQztBQUNBTiw4Q0FBNkM7SUFBRWUsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsa0JBQWtCLEdBQUcsS0FBSztBQUMxQixJQUFJRSxhQUFhLFdBQVcsR0FBSTtJQUM1QixTQUFTQSxXQUFXQyxhQUFhO1FBQzdCLElBQUksQ0FBQ0MsYUFBYSxHQUFHbkIsU0FBU0EsU0FBUyxDQUFDLEdBQUdpQixXQUFXRyxjQUFjLEdBQUdGO1FBQ3ZFLElBQUksQ0FBQ0csY0FBYyxDQUFDLElBQUksQ0FBQ0YsYUFBYTtJQUMxQztJQUNBRixXQUFXUCxTQUFTLENBQUNZLHFCQUFxQixHQUFHO1FBQ3pDLElBQUlDLFNBQVMsSUFBSSxDQUFDSixhQUFhLENBQUNLLFFBQVEsR0FBRyxVQUFVO1FBQ3JELE9BQU8sR0FBR0MsTUFBTSxDQUFDRixRQUFRLE9BQU9FLE1BQU0sQ0FBQyxJQUFJLENBQUNOLGFBQWEsQ0FBQ08sV0FBVztJQUN6RTtJQUNBOzs7O0tBSUMsR0FDRFQsV0FBV0csY0FBYyxHQUFHO1FBQ3hCSSxVQUFVO1FBQ1ZFLGFBQWE7UUFDYkMsU0FBUztJQUNiO0lBQ0EsT0FBT1Y7QUFDWDtBQUNBRixrQkFBa0IsR0FBR0UsWUFDckIsc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2NsaWVudC9IdHRwQ2xpZW50LmpzPzAyYTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5IdHRwQ2xpZW50ID0gdm9pZCAwO1xudmFyIEh0dHBDbGllbnQgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gSHR0cENsaWVudChjb25maWdPcHRpb25zKSB7XG4gICAgICAgIHRoaXMuY2xpZW50T3B0aW9ucyA9IF9fYXNzaWduKF9fYXNzaWduKHt9LCBIdHRwQ2xpZW50LkRlZmF1bHRPcHRpb25zKSwgY29uZmlnT3B0aW9ucyk7XG4gICAgICAgIHRoaXMuaW5pdEh0dHBDbGllbnQodGhpcy5jbGllbnRPcHRpb25zKTtcbiAgICB9XG4gICAgSHR0cENsaWVudC5wcm90b3R5cGUuZ2V0QmFzZUh0dHBSZXF1ZXN0VVJMID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgc2NoZW1lID0gdGhpcy5jbGllbnRPcHRpb25zLnVzZUh0dHBzID8gXCJodHRwc1wiIDogXCJodHRwXCI7XG4gICAgICAgIHJldHVybiBcIlwiLmNvbmNhdChzY2hlbWUsIFwiOi8vXCIpLmNvbmNhdCh0aGlzLmNsaWVudE9wdGlvbnMucmVxdWVzdEhvc3QpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogSHR0cCBDbGllbnQgY29ubmVjdGlvbiBjb25maWd1cmF0aW9uIG9wdGlvbnMuXG4gICAgICogWW91IG1heSBtb2RpZnkgdGhlc2UgdmFsdWVzIGFuZCBuZXcgY2xpZW50cyB3aWxsIHVzZSB0aGVtLlxuICAgICAqIEFueSB2YWx1ZXMgcHJvdmlkZWQgdG8gYSBDbGllbnQgY29uc3RydWN0b3Igd2lsbCBvdmVycmlkZSBkZWZhdWx0IG9wdGlvbnMuXG4gICAgICovXG4gICAgSHR0cENsaWVudC5EZWZhdWx0T3B0aW9ucyA9IHtcbiAgICAgICAgdXNlSHR0cHM6IHRydWUsXG4gICAgICAgIHJlcXVlc3RIb3N0OiBcImFwaS5wb3N0bWFya2FwcC5jb21cIixcbiAgICAgICAgdGltZW91dDogMTgwLFxuICAgIH07XG4gICAgcmV0dXJuIEh0dHBDbGllbnQ7XG59KCkpO1xuZXhwb3J0cy5IdHRwQ2xpZW50ID0gSHR0cENsaWVudDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUh0dHBDbGllbnQuanMubWFwIl0sIm5hbWVzIjpbIl9fYXNzaWduIiwiT2JqZWN0IiwiYXNzaWduIiwidCIsInMiLCJpIiwibiIsImFyZ3VtZW50cyIsImxlbmd0aCIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJhcHBseSIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiSHR0cENsaWVudCIsImNvbmZpZ09wdGlvbnMiLCJjbGllbnRPcHRpb25zIiwiRGVmYXVsdE9wdGlvbnMiLCJpbml0SHR0cENsaWVudCIsImdldEJhc2VIdHRwUmVxdWVzdFVSTCIsInNjaGVtZSIsInVzZUh0dHBzIiwiY29uY2F0IiwicmVxdWVzdEhvc3QiLCJ0aW1lb3V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/client/HttpClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/client/SupportingTypes.js":
/*!****************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/client/SupportingTypes.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=SupportingTypes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2NsaWVudC9TdXBwb3J0aW5nVHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUMsRUFDN0QsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2NsaWVudC9TdXBwb3J0aW5nVHlwZXMuanM/ZDUzZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVN1cHBvcnRpbmdUeXBlcy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/client/SupportingTypes.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/data_removal/DataRemovals.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/data_removal/DataRemovals.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.DataRemovalRequest = exports.DataRemovalStatusTypes = void 0;\nvar DataRemovalStatusTypes;\n(function(DataRemovalStatusTypes) {\n    DataRemovalStatusTypes[\"Pending\"] = \"Pending\";\n    DataRemovalStatusTypes[\"Done\"] = \"Done\";\n})(DataRemovalStatusTypes = exports.DataRemovalStatusTypes || (exports.DataRemovalStatusTypes = {}));\nvar DataRemovalRequest = /** @class */ function() {\n    function DataRemovalRequest(requestedBy, requestedFor, notifyWhenCompleted) {\n        this.RequestedBy = requestedBy;\n        this.RequestedFor = requestedFor;\n        this.NotifyWhenCompleted = notifyWhenCompleted;\n    }\n    return DataRemovalRequest;\n}();\nexports.DataRemovalRequest = DataRemovalRequest; //# sourceMappingURL=DataRemovals.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2RhdGFfcmVtb3ZhbC9EYXRhUmVtb3ZhbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELDBCQUEwQixHQUFHQSw4QkFBOEIsR0FBRyxLQUFLO0FBQ25FLElBQUlHO0FBQ0gsVUFBVUEsc0JBQXNCO0lBQzdCQSxzQkFBc0IsQ0FBQyxVQUFVLEdBQUc7SUFDcENBLHNCQUFzQixDQUFDLE9BQU8sR0FBRztBQUNyQyxHQUFHQSx5QkFBeUJILFFBQVFHLHNCQUFzQixJQUFLSCxDQUFBQSw4QkFBOEIsR0FBRyxDQUFDO0FBQ2pHLElBQUlFLHFCQUFxQixXQUFXLEdBQUk7SUFDcEMsU0FBU0EsbUJBQW1CRSxXQUFXLEVBQUVDLFlBQVksRUFBRUMsbUJBQW1CO1FBQ3RFLElBQUksQ0FBQ0MsV0FBVyxHQUFHSDtRQUNuQixJQUFJLENBQUNJLFlBQVksR0FBR0g7UUFDcEIsSUFBSSxDQUFDSSxtQkFBbUIsR0FBR0g7SUFDL0I7SUFDQSxPQUFPSjtBQUNYO0FBQ0FGLDBCQUEwQixHQUFHRSxvQkFDN0Isd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2RhdGFfcmVtb3ZhbC9EYXRhUmVtb3ZhbHMuanM/ZWFkYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRGF0YVJlbW92YWxSZXF1ZXN0ID0gZXhwb3J0cy5EYXRhUmVtb3ZhbFN0YXR1c1R5cGVzID0gdm9pZCAwO1xudmFyIERhdGFSZW1vdmFsU3RhdHVzVHlwZXM7XG4oZnVuY3Rpb24gKERhdGFSZW1vdmFsU3RhdHVzVHlwZXMpIHtcbiAgICBEYXRhUmVtb3ZhbFN0YXR1c1R5cGVzW1wiUGVuZGluZ1wiXSA9IFwiUGVuZGluZ1wiO1xuICAgIERhdGFSZW1vdmFsU3RhdHVzVHlwZXNbXCJEb25lXCJdID0gXCJEb25lXCI7XG59KShEYXRhUmVtb3ZhbFN0YXR1c1R5cGVzID0gZXhwb3J0cy5EYXRhUmVtb3ZhbFN0YXR1c1R5cGVzIHx8IChleHBvcnRzLkRhdGFSZW1vdmFsU3RhdHVzVHlwZXMgPSB7fSkpO1xudmFyIERhdGFSZW1vdmFsUmVxdWVzdCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBEYXRhUmVtb3ZhbFJlcXVlc3QocmVxdWVzdGVkQnksIHJlcXVlc3RlZEZvciwgbm90aWZ5V2hlbkNvbXBsZXRlZCkge1xuICAgICAgICB0aGlzLlJlcXVlc3RlZEJ5ID0gcmVxdWVzdGVkQnk7XG4gICAgICAgIHRoaXMuUmVxdWVzdGVkRm9yID0gcmVxdWVzdGVkRm9yO1xuICAgICAgICB0aGlzLk5vdGlmeVdoZW5Db21wbGV0ZWQgPSBub3RpZnlXaGVuQ29tcGxldGVkO1xuICAgIH1cbiAgICByZXR1cm4gRGF0YVJlbW92YWxSZXF1ZXN0O1xufSgpKTtcbmV4cG9ydHMuRGF0YVJlbW92YWxSZXF1ZXN0ID0gRGF0YVJlbW92YWxSZXF1ZXN0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RGF0YVJlbW92YWxzLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkRhdGFSZW1vdmFsUmVxdWVzdCIsIkRhdGFSZW1vdmFsU3RhdHVzVHlwZXMiLCJyZXF1ZXN0ZWRCeSIsInJlcXVlc3RlZEZvciIsIm5vdGlmeVdoZW5Db21wbGV0ZWQiLCJSZXF1ZXN0ZWRCeSIsIlJlcXVlc3RlZEZvciIsIk5vdGlmeVdoZW5Db21wbGV0ZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/data_removal/DataRemovals.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/domains/Domain.js":
/*!********************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/domains/Domain.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UpdateDomainRequest = exports.CreateDomainRequest = void 0;\nvar CreateDomainRequest = /** @class */ function() {\n    function CreateDomainRequest(Name, ReturnPathDomain) {\n        this.Name = Name;\n        this.ReturnPathDomain = ReturnPathDomain;\n    }\n    return CreateDomainRequest;\n}();\nexports.CreateDomainRequest = CreateDomainRequest;\nvar UpdateDomainRequest = /** @class */ function() {\n    function UpdateDomainRequest(ReturnPathDomain) {\n        this.ReturnPathDomain = ReturnPathDomain;\n    }\n    return UpdateDomainRequest;\n}();\nexports.UpdateDomainRequest = UpdateDomainRequest; //# sourceMappingURL=Domain.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL2RvbWFpbnMvRG9tYWluLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCwyQkFBMkIsR0FBR0EsMkJBQTJCLEdBQUcsS0FBSztBQUNqRSxJQUFJRyxzQkFBc0IsV0FBVyxHQUFJO0lBQ3JDLFNBQVNBLG9CQUFvQkMsSUFBSSxFQUFFQyxnQkFBZ0I7UUFDL0MsSUFBSSxDQUFDRCxJQUFJLEdBQUdBO1FBQ1osSUFBSSxDQUFDQyxnQkFBZ0IsR0FBR0E7SUFDNUI7SUFDQSxPQUFPRjtBQUNYO0FBQ0FILDJCQUEyQixHQUFHRztBQUM5QixJQUFJRCxzQkFBc0IsV0FBVyxHQUFJO0lBQ3JDLFNBQVNBLG9CQUFvQkcsZ0JBQWdCO1FBQ3pDLElBQUksQ0FBQ0EsZ0JBQWdCLEdBQUdBO0lBQzVCO0lBQ0EsT0FBT0g7QUFDWDtBQUNBRiwyQkFBMkIsR0FBR0UscUJBQzlCLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9kb21haW5zL0RvbWFpbi5qcz83MTM2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5VcGRhdGVEb21haW5SZXF1ZXN0ID0gZXhwb3J0cy5DcmVhdGVEb21haW5SZXF1ZXN0ID0gdm9pZCAwO1xudmFyIENyZWF0ZURvbWFpblJlcXVlc3QgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQ3JlYXRlRG9tYWluUmVxdWVzdChOYW1lLCBSZXR1cm5QYXRoRG9tYWluKSB7XG4gICAgICAgIHRoaXMuTmFtZSA9IE5hbWU7XG4gICAgICAgIHRoaXMuUmV0dXJuUGF0aERvbWFpbiA9IFJldHVyblBhdGhEb21haW47XG4gICAgfVxuICAgIHJldHVybiBDcmVhdGVEb21haW5SZXF1ZXN0O1xufSgpKTtcbmV4cG9ydHMuQ3JlYXRlRG9tYWluUmVxdWVzdCA9IENyZWF0ZURvbWFpblJlcXVlc3Q7XG52YXIgVXBkYXRlRG9tYWluUmVxdWVzdCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBVcGRhdGVEb21haW5SZXF1ZXN0KFJldHVyblBhdGhEb21haW4pIHtcbiAgICAgICAgdGhpcy5SZXR1cm5QYXRoRG9tYWluID0gUmV0dXJuUGF0aERvbWFpbjtcbiAgICB9XG4gICAgcmV0dXJuIFVwZGF0ZURvbWFpblJlcXVlc3Q7XG59KCkpO1xuZXhwb3J0cy5VcGRhdGVEb21haW5SZXF1ZXN0ID0gVXBkYXRlRG9tYWluUmVxdWVzdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPURvbWFpbi5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJVcGRhdGVEb21haW5SZXF1ZXN0IiwiQ3JlYXRlRG9tYWluUmVxdWVzdCIsIk5hbWUiLCJSZXR1cm5QYXRoRG9tYWluIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/domains/Domain.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./client/ClientOptions */ \"(rsc)/./node_modules/postmark/dist/client/models/client/ClientOptions.js\"), exports);\n__exportStar(__webpack_require__(/*! ./client/SupportingTypes */ \"(rsc)/./node_modules/postmark/dist/client/models/client/SupportingTypes.js\"), exports);\n__exportStar(__webpack_require__(/*! ./client/HttpClient */ \"(rsc)/./node_modules/postmark/dist/client/models/client/HttpClient.js\"), exports);\n__exportStar(__webpack_require__(/*! ./client/Callback */ \"(rsc)/./node_modules/postmark/dist/client/models/client/Callback.js\"), exports);\n__exportStar(__webpack_require__(/*! ./client/DefaultResponse */ \"(rsc)/./node_modules/postmark/dist/client/models/client/DefaultResponse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./client/FilteringParameters */ \"(rsc)/./node_modules/postmark/dist/client/models/client/FilteringParameters.js\"), exports);\n__exportStar(__webpack_require__(/*! ./bounces/Bounce */ \"(rsc)/./node_modules/postmark/dist/client/models/bounces/Bounce.js\"), exports);\n__exportStar(__webpack_require__(/*! ./bounces/BounceFilteringParameters */ \"(rsc)/./node_modules/postmark/dist/client/models/bounces/BounceFilteringParameters.js\"), exports);\n__exportStar(__webpack_require__(/*! ./message/Message */ \"(rsc)/./node_modules/postmark/dist/client/models/message/Message.js\"), exports);\n__exportStar(__webpack_require__(/*! ./message/SupportingTypes */ \"(rsc)/./node_modules/postmark/dist/client/models/message/SupportingTypes.js\"), exports);\n__exportStar(__webpack_require__(/*! ./messages/OutboundMessage */ \"(rsc)/./node_modules/postmark/dist/client/models/messages/OutboundMessage.js\"), exports);\n__exportStar(__webpack_require__(/*! ./messages/OutboundMessageOpen */ \"(rsc)/./node_modules/postmark/dist/client/models/messages/OutboundMessageOpen.js\"), exports);\n__exportStar(__webpack_require__(/*! ./messages/OutboundMessageClick */ \"(rsc)/./node_modules/postmark/dist/client/models/messages/OutboundMessageClick.js\"), exports);\n__exportStar(__webpack_require__(/*! ./messages/InboundMessage */ \"(rsc)/./node_modules/postmark/dist/client/models/messages/InboundMessage.js\"), exports);\n__exportStar(__webpack_require__(/*! ./messages/MessageFilteringParameters */ \"(rsc)/./node_modules/postmark/dist/client/models/messages/MessageFilteringParameters.js\"), exports);\n__exportStar(__webpack_require__(/*! ./templates/Template */ \"(rsc)/./node_modules/postmark/dist/client/models/templates/Template.js\"), exports);\n__exportStar(__webpack_require__(/*! ./server/Server */ \"(rsc)/./node_modules/postmark/dist/client/models/server/Server.js\"), exports);\n__exportStar(__webpack_require__(/*! ./server/Servers */ \"(rsc)/./node_modules/postmark/dist/client/models/server/Servers.js\"), exports);\n__exportStar(__webpack_require__(/*! ./server/ServerFilteringParameters */ \"(rsc)/./node_modules/postmark/dist/client/models/server/ServerFilteringParameters.js\"), exports);\n__exportStar(__webpack_require__(/*! ./domains/Domain */ \"(rsc)/./node_modules/postmark/dist/client/models/domains/Domain.js\"), exports);\n__exportStar(__webpack_require__(/*! ./senders/Signature */ \"(rsc)/./node_modules/postmark/dist/client/models/senders/Signature.js\"), exports);\n__exportStar(__webpack_require__(/*! ./suppressions/Suppression */ \"(rsc)/./node_modules/postmark/dist/client/models/suppressions/Suppression.js\"), exports);\n__exportStar(__webpack_require__(/*! ./stats/Stats */ \"(rsc)/./node_modules/postmark/dist/client/models/stats/Stats.js\"), exports);\n__exportStar(__webpack_require__(/*! ./stats/StatsFilteringParameters */ \"(rsc)/./node_modules/postmark/dist/client/models/stats/StatsFilteringParameters.js\"), exports);\n__exportStar(__webpack_require__(/*! ./triggers/InboundRule */ \"(rsc)/./node_modules/postmark/dist/client/models/triggers/InboundRule.js\"), exports);\n__exportStar(__webpack_require__(/*! ./webhooks/Webhooks */ \"(rsc)/./node_modules/postmark/dist/client/models/webhooks/Webhooks.js\"), exports);\n__exportStar(__webpack_require__(/*! ./webhooks/Webhook */ \"(rsc)/./node_modules/postmark/dist/client/models/webhooks/Webhook.js\"), exports);\n__exportStar(__webpack_require__(/*! ./webhooks/WebhookFilteringParameters */ \"(rsc)/./node_modules/postmark/dist/client/models/webhooks/WebhookFilteringParameters.js\"), exports);\n__exportStar(__webpack_require__(/*! ./webhooks/payload/BounceWebhook */ \"(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/BounceWebhook.js\"), exports);\n__exportStar(__webpack_require__(/*! ./webhooks/payload/DeliveryWebhook */ \"(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/DeliveryWebhook.js\"), exports);\n__exportStar(__webpack_require__(/*! ./webhooks/payload/SpamComplaintWebhook */ \"(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/SpamComplaintWebhook.js\"), exports);\n__exportStar(__webpack_require__(/*! ./webhooks/payload/ClickWebhook */ \"(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/ClickWebhook.js\"), exports);\n__exportStar(__webpack_require__(/*! ./webhooks/payload/OpenWebhook */ \"(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/OpenWebhook.js\"), exports);\n__exportStar(__webpack_require__(/*! ./webhooks/payload/SubscriptionChangeWebhook */ \"(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/SubscriptionChangeWebhook.js\"), exports);\n__exportStar(__webpack_require__(/*! ./webhooks/payload/InboundWebhook */ \"(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/InboundWebhook.js\"), exports);\n__exportStar(__webpack_require__(/*! ./suppressions/Suppression */ \"(rsc)/./node_modules/postmark/dist/client/models/suppressions/Suppression.js\"), exports);\n__exportStar(__webpack_require__(/*! ./suppressions/SuppressionFilteringParameters */ \"(rsc)/./node_modules/postmark/dist/client/models/suppressions/SuppressionFilteringParameters.js\"), exports);\n__exportStar(__webpack_require__(/*! ./streams/MessageStream */ \"(rsc)/./node_modules/postmark/dist/client/models/streams/MessageStream.js\"), exports);\n__exportStar(__webpack_require__(/*! ./streams/MessageStreamsFilteringParameters */ \"(rsc)/./node_modules/postmark/dist/client/models/streams/MessageStreamsFilteringParameters.js\"), exports);\n__exportStar(__webpack_require__(/*! ./data_removal/DataRemovals */ \"(rsc)/./node_modules/postmark/dist/client/models/data_removal/DataRemovals.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/message/Message.js":
/*!*********************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/message/Message.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Message = void 0;\nvar Message = /** @class */ function() {\n    function Message(From, Subject, HtmlBody, TextBody, To, Cc, Bcc, ReplyTo, Tag, TrackOpens, TrackLinks, Headers, Attachments, Metadata) {\n        this.From = From;\n        this.To = To;\n        this.Cc = Cc;\n        this.Bcc = Bcc;\n        this.Subject = Subject;\n        this.ReplyTo = ReplyTo;\n        this.HtmlBody = HtmlBody;\n        this.TextBody = TextBody;\n        this.Tag = Tag;\n        this.TrackOpens = TrackOpens;\n        this.TrackLinks = TrackLinks;\n        this.Headers = Headers;\n        this.Attachments = Attachments;\n        this.Metadata = Metadata;\n    }\n    return Message;\n}();\nexports.Message = Message; //# sourceMappingURL=Message.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL21lc3NhZ2UvTWVzc2FnZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsZUFBZSxHQUFHLEtBQUs7QUFDdkIsSUFBSUUsVUFBVSxXQUFXLEdBQUk7SUFDekIsU0FBU0EsUUFBUUMsSUFBSSxFQUFFQyxPQUFPLEVBQUVDLFFBQVEsRUFBRUMsUUFBUSxFQUFFQyxFQUFFLEVBQUVDLEVBQUUsRUFBRUMsR0FBRyxFQUFFQyxPQUFPLEVBQUVDLEdBQUcsRUFBRUMsVUFBVSxFQUFFQyxVQUFVLEVBQUVDLE9BQU8sRUFBRUMsV0FBVyxFQUFFQyxRQUFRO1FBQ2pJLElBQUksQ0FBQ2IsSUFBSSxHQUFHQTtRQUNaLElBQUksQ0FBQ0ksRUFBRSxHQUFHQTtRQUNWLElBQUksQ0FBQ0MsRUFBRSxHQUFHQTtRQUNWLElBQUksQ0FBQ0MsR0FBRyxHQUFHQTtRQUNYLElBQUksQ0FBQ0wsT0FBTyxHQUFHQTtRQUNmLElBQUksQ0FBQ00sT0FBTyxHQUFHQTtRQUNmLElBQUksQ0FBQ0wsUUFBUSxHQUFHQTtRQUNoQixJQUFJLENBQUNDLFFBQVEsR0FBR0E7UUFDaEIsSUFBSSxDQUFDSyxHQUFHLEdBQUdBO1FBQ1gsSUFBSSxDQUFDQyxVQUFVLEdBQUdBO1FBQ2xCLElBQUksQ0FBQ0MsVUFBVSxHQUFHQTtRQUNsQixJQUFJLENBQUNDLE9BQU8sR0FBR0E7UUFDZixJQUFJLENBQUNDLFdBQVcsR0FBR0E7UUFDbkIsSUFBSSxDQUFDQyxRQUFRLEdBQUdBO0lBQ3BCO0lBQ0EsT0FBT2Q7QUFDWDtBQUNBRixlQUFlLEdBQUdFLFNBQ2xCLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9tZXNzYWdlL01lc3NhZ2UuanM/ODRkNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTWVzc2FnZSA9IHZvaWQgMDtcbnZhciBNZXNzYWdlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIE1lc3NhZ2UoRnJvbSwgU3ViamVjdCwgSHRtbEJvZHksIFRleHRCb2R5LCBUbywgQ2MsIEJjYywgUmVwbHlUbywgVGFnLCBUcmFja09wZW5zLCBUcmFja0xpbmtzLCBIZWFkZXJzLCBBdHRhY2htZW50cywgTWV0YWRhdGEpIHtcbiAgICAgICAgdGhpcy5Gcm9tID0gRnJvbTtcbiAgICAgICAgdGhpcy5UbyA9IFRvO1xuICAgICAgICB0aGlzLkNjID0gQ2M7XG4gICAgICAgIHRoaXMuQmNjID0gQmNjO1xuICAgICAgICB0aGlzLlN1YmplY3QgPSBTdWJqZWN0O1xuICAgICAgICB0aGlzLlJlcGx5VG8gPSBSZXBseVRvO1xuICAgICAgICB0aGlzLkh0bWxCb2R5ID0gSHRtbEJvZHk7XG4gICAgICAgIHRoaXMuVGV4dEJvZHkgPSBUZXh0Qm9keTtcbiAgICAgICAgdGhpcy5UYWcgPSBUYWc7XG4gICAgICAgIHRoaXMuVHJhY2tPcGVucyA9IFRyYWNrT3BlbnM7XG4gICAgICAgIHRoaXMuVHJhY2tMaW5rcyA9IFRyYWNrTGlua3M7XG4gICAgICAgIHRoaXMuSGVhZGVycyA9IEhlYWRlcnM7XG4gICAgICAgIHRoaXMuQXR0YWNobWVudHMgPSBBdHRhY2htZW50cztcbiAgICAgICAgdGhpcy5NZXRhZGF0YSA9IE1ldGFkYXRhO1xuICAgIH1cbiAgICByZXR1cm4gTWVzc2FnZTtcbn0oKSk7XG5leHBvcnRzLk1lc3NhZ2UgPSBNZXNzYWdlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TWVzc2FnZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJNZXNzYWdlIiwiRnJvbSIsIlN1YmplY3QiLCJIdG1sQm9keSIsIlRleHRCb2R5IiwiVG8iLCJDYyIsIkJjYyIsIlJlcGx5VG8iLCJUYWciLCJUcmFja09wZW5zIiwiVHJhY2tMaW5rcyIsIkhlYWRlcnMiLCJBdHRhY2htZW50cyIsIk1ldGFkYXRhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/message/Message.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/message/SupportingTypes.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/message/SupportingTypes.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Attachment = exports.Header = exports.ServerDeliveryTypes = exports.LinkClickLocation = exports.LinkTrackingOptions = void 0;\nvar LinkTrackingOptions;\n(function(LinkTrackingOptions) {\n    LinkTrackingOptions[\"TextOnly\"] = \"TextOnly\";\n    LinkTrackingOptions[\"HtmlOnly\"] = \"HtmlOnly\";\n    LinkTrackingOptions[\"HtmlAndText\"] = \"HtmlAndText\";\n    LinkTrackingOptions[\"None\"] = \"None\";\n})(LinkTrackingOptions = exports.LinkTrackingOptions || (exports.LinkTrackingOptions = {}));\nvar LinkClickLocation;\n(function(LinkClickLocation) {\n    LinkClickLocation[\"HTML\"] = \"HTML\";\n    LinkClickLocation[\"Text\"] = \"Text\";\n})(LinkClickLocation = exports.LinkClickLocation || (exports.LinkClickLocation = {}));\nvar ServerDeliveryTypes;\n(function(ServerDeliveryTypes) {\n    ServerDeliveryTypes[\"Live\"] = \"Live\";\n    ServerDeliveryTypes[\"Sandbox\"] = \"Sandbox\";\n})(ServerDeliveryTypes = exports.ServerDeliveryTypes || (exports.ServerDeliveryTypes = {}));\nvar Header = /** @class */ function() {\n    function Header(Name, Value) {\n        this.Name = Name;\n        this.Value = Value;\n    }\n    return Header;\n}();\nexports.Header = Header;\n/**\n * Attachment content\n *\n * @param Name - name of the attachment, for example book.pdf\n * @param Content - Base64 encoded content, for example: fs.readFileSync('/Folder/book.pdf').toString('base64')\n * @param ContentID - id of the attachment, in case we are referencing it, for example: cid:123book.pdf\n * @param ContentType - content type (json, image, etc)\n * @param ContentLength - length of the message\n */ var Attachment = /** @class */ function() {\n    function Attachment(Name, Content, ContentType, ContentID, ContentLength, Disposition) {\n        if (ContentID === void 0) {\n            ContentID = null;\n        }\n        this.Name = Name;\n        this.Content = Content;\n        this.ContentType = ContentType;\n        this.ContentID = ContentID;\n        this.ContentLength = ContentLength;\n        this.Disposition = Disposition;\n    }\n    return Attachment;\n}();\nexports.Attachment = Attachment; //# sourceMappingURL=SupportingTypes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL21lc3NhZ2UvU3VwcG9ydGluZ1R5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxrQkFBa0IsR0FBR0EsY0FBYyxHQUFHQSwyQkFBMkIsR0FBR0EseUJBQXlCLEdBQUdBLDJCQUEyQixHQUFHLEtBQUs7QUFDbkksSUFBSU07QUFDSCxVQUFVQSxtQkFBbUI7SUFDMUJBLG1CQUFtQixDQUFDLFdBQVcsR0FBRztJQUNsQ0EsbUJBQW1CLENBQUMsV0FBVyxHQUFHO0lBQ2xDQSxtQkFBbUIsQ0FBQyxjQUFjLEdBQUc7SUFDckNBLG1CQUFtQixDQUFDLE9BQU8sR0FBRztBQUNsQyxHQUFHQSxzQkFBc0JOLFFBQVFNLG1CQUFtQixJQUFLTixDQUFBQSwyQkFBMkIsR0FBRyxDQUFDO0FBQ3hGLElBQUlLO0FBQ0gsVUFBVUEsaUJBQWlCO0lBQ3hCQSxpQkFBaUIsQ0FBQyxPQUFPLEdBQUc7SUFDNUJBLGlCQUFpQixDQUFDLE9BQU8sR0FBRztBQUNoQyxHQUFHQSxvQkFBb0JMLFFBQVFLLGlCQUFpQixJQUFLTCxDQUFBQSx5QkFBeUIsR0FBRyxDQUFDO0FBQ2xGLElBQUlJO0FBQ0gsVUFBVUEsbUJBQW1CO0lBQzFCQSxtQkFBbUIsQ0FBQyxPQUFPLEdBQUc7SUFDOUJBLG1CQUFtQixDQUFDLFVBQVUsR0FBRztBQUNyQyxHQUFHQSxzQkFBc0JKLFFBQVFJLG1CQUFtQixJQUFLSixDQUFBQSwyQkFBMkIsR0FBRyxDQUFDO0FBQ3hGLElBQUlHLFNBQVMsV0FBVyxHQUFJO0lBQ3hCLFNBQVNBLE9BQU9JLElBQUksRUFBRUMsS0FBSztRQUN2QixJQUFJLENBQUNELElBQUksR0FBR0E7UUFDWixJQUFJLENBQUNDLEtBQUssR0FBR0E7SUFDakI7SUFDQSxPQUFPTDtBQUNYO0FBQ0FILGNBQWMsR0FBR0c7QUFDakI7Ozs7Ozs7O0NBUUMsR0FDRCxJQUFJRCxhQUFhLFdBQVcsR0FBSTtJQUM1QixTQUFTQSxXQUFXSyxJQUFJLEVBQUVFLE9BQU8sRUFBRUMsV0FBVyxFQUFFQyxTQUFTLEVBQUVDLGFBQWEsRUFBRUMsV0FBVztRQUNqRixJQUFJRixjQUFjLEtBQUssR0FBRztZQUFFQSxZQUFZO1FBQU07UUFDOUMsSUFBSSxDQUFDSixJQUFJLEdBQUdBO1FBQ1osSUFBSSxDQUFDRSxPQUFPLEdBQUdBO1FBQ2YsSUFBSSxDQUFDQyxXQUFXLEdBQUdBO1FBQ25CLElBQUksQ0FBQ0MsU0FBUyxHQUFHQTtRQUNqQixJQUFJLENBQUNDLGFBQWEsR0FBR0E7UUFDckIsSUFBSSxDQUFDQyxXQUFXLEdBQUdBO0lBQ3ZCO0lBQ0EsT0FBT1g7QUFDWDtBQUNBRixrQkFBa0IsR0FBR0UsWUFDckIsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL21lc3NhZ2UvU3VwcG9ydGluZ1R5cGVzLmpzP2QxYmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkF0dGFjaG1lbnQgPSBleHBvcnRzLkhlYWRlciA9IGV4cG9ydHMuU2VydmVyRGVsaXZlcnlUeXBlcyA9IGV4cG9ydHMuTGlua0NsaWNrTG9jYXRpb24gPSBleHBvcnRzLkxpbmtUcmFja2luZ09wdGlvbnMgPSB2b2lkIDA7XG52YXIgTGlua1RyYWNraW5nT3B0aW9ucztcbihmdW5jdGlvbiAoTGlua1RyYWNraW5nT3B0aW9ucykge1xuICAgIExpbmtUcmFja2luZ09wdGlvbnNbXCJUZXh0T25seVwiXSA9IFwiVGV4dE9ubHlcIjtcbiAgICBMaW5rVHJhY2tpbmdPcHRpb25zW1wiSHRtbE9ubHlcIl0gPSBcIkh0bWxPbmx5XCI7XG4gICAgTGlua1RyYWNraW5nT3B0aW9uc1tcIkh0bWxBbmRUZXh0XCJdID0gXCJIdG1sQW5kVGV4dFwiO1xuICAgIExpbmtUcmFja2luZ09wdGlvbnNbXCJOb25lXCJdID0gXCJOb25lXCI7XG59KShMaW5rVHJhY2tpbmdPcHRpb25zID0gZXhwb3J0cy5MaW5rVHJhY2tpbmdPcHRpb25zIHx8IChleHBvcnRzLkxpbmtUcmFja2luZ09wdGlvbnMgPSB7fSkpO1xudmFyIExpbmtDbGlja0xvY2F0aW9uO1xuKGZ1bmN0aW9uIChMaW5rQ2xpY2tMb2NhdGlvbikge1xuICAgIExpbmtDbGlja0xvY2F0aW9uW1wiSFRNTFwiXSA9IFwiSFRNTFwiO1xuICAgIExpbmtDbGlja0xvY2F0aW9uW1wiVGV4dFwiXSA9IFwiVGV4dFwiO1xufSkoTGlua0NsaWNrTG9jYXRpb24gPSBleHBvcnRzLkxpbmtDbGlja0xvY2F0aW9uIHx8IChleHBvcnRzLkxpbmtDbGlja0xvY2F0aW9uID0ge30pKTtcbnZhciBTZXJ2ZXJEZWxpdmVyeVR5cGVzO1xuKGZ1bmN0aW9uIChTZXJ2ZXJEZWxpdmVyeVR5cGVzKSB7XG4gICAgU2VydmVyRGVsaXZlcnlUeXBlc1tcIkxpdmVcIl0gPSBcIkxpdmVcIjtcbiAgICBTZXJ2ZXJEZWxpdmVyeVR5cGVzW1wiU2FuZGJveFwiXSA9IFwiU2FuZGJveFwiO1xufSkoU2VydmVyRGVsaXZlcnlUeXBlcyA9IGV4cG9ydHMuU2VydmVyRGVsaXZlcnlUeXBlcyB8fCAoZXhwb3J0cy5TZXJ2ZXJEZWxpdmVyeVR5cGVzID0ge30pKTtcbnZhciBIZWFkZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gSGVhZGVyKE5hbWUsIFZhbHVlKSB7XG4gICAgICAgIHRoaXMuTmFtZSA9IE5hbWU7XG4gICAgICAgIHRoaXMuVmFsdWUgPSBWYWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIEhlYWRlcjtcbn0oKSk7XG5leHBvcnRzLkhlYWRlciA9IEhlYWRlcjtcbi8qKlxuICogQXR0YWNobWVudCBjb250ZW50XG4gKlxuICogQHBhcmFtIE5hbWUgLSBuYW1lIG9mIHRoZSBhdHRhY2htZW50LCBmb3IgZXhhbXBsZSBib29rLnBkZlxuICogQHBhcmFtIENvbnRlbnQgLSBCYXNlNjQgZW5jb2RlZCBjb250ZW50LCBmb3IgZXhhbXBsZTogZnMucmVhZEZpbGVTeW5jKCcvRm9sZGVyL2Jvb2sucGRmJykudG9TdHJpbmcoJ2Jhc2U2NCcpXG4gKiBAcGFyYW0gQ29udGVudElEIC0gaWQgb2YgdGhlIGF0dGFjaG1lbnQsIGluIGNhc2Ugd2UgYXJlIHJlZmVyZW5jaW5nIGl0LCBmb3IgZXhhbXBsZTogY2lkOjEyM2Jvb2sucGRmXG4gKiBAcGFyYW0gQ29udGVudFR5cGUgLSBjb250ZW50IHR5cGUgKGpzb24sIGltYWdlLCBldGMpXG4gKiBAcGFyYW0gQ29udGVudExlbmd0aCAtIGxlbmd0aCBvZiB0aGUgbWVzc2FnZVxuICovXG52YXIgQXR0YWNobWVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBBdHRhY2htZW50KE5hbWUsIENvbnRlbnQsIENvbnRlbnRUeXBlLCBDb250ZW50SUQsIENvbnRlbnRMZW5ndGgsIERpc3Bvc2l0aW9uKSB7XG4gICAgICAgIGlmIChDb250ZW50SUQgPT09IHZvaWQgMCkgeyBDb250ZW50SUQgPSBudWxsOyB9XG4gICAgICAgIHRoaXMuTmFtZSA9IE5hbWU7XG4gICAgICAgIHRoaXMuQ29udGVudCA9IENvbnRlbnQ7XG4gICAgICAgIHRoaXMuQ29udGVudFR5cGUgPSBDb250ZW50VHlwZTtcbiAgICAgICAgdGhpcy5Db250ZW50SUQgPSBDb250ZW50SUQ7XG4gICAgICAgIHRoaXMuQ29udGVudExlbmd0aCA9IENvbnRlbnRMZW5ndGg7XG4gICAgICAgIHRoaXMuRGlzcG9zaXRpb24gPSBEaXNwb3NpdGlvbjtcbiAgICB9XG4gICAgcmV0dXJuIEF0dGFjaG1lbnQ7XG59KCkpO1xuZXhwb3J0cy5BdHRhY2htZW50ID0gQXR0YWNobWVudDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVN1cHBvcnRpbmdUeXBlcy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJBdHRhY2htZW50IiwiSGVhZGVyIiwiU2VydmVyRGVsaXZlcnlUeXBlcyIsIkxpbmtDbGlja0xvY2F0aW9uIiwiTGlua1RyYWNraW5nT3B0aW9ucyIsIk5hbWUiLCJWYWx1ZSIsIkNvbnRlbnQiLCJDb250ZW50VHlwZSIsIkNvbnRlbnRJRCIsIkNvbnRlbnRMZW5ndGgiLCJEaXNwb3NpdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/message/SupportingTypes.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/messages/InboundMessage.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/messages/InboundMessage.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=InboundMessage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL21lc3NhZ2VzL0luYm91bmRNZXNzYWdlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDLEVBQzdELDBDQUEwQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9tZXNzYWdlcy9JbmJvdW5kTWVzc2FnZS5qcz9kNDZlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SW5ib3VuZE1lc3NhZ2UuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/messages/InboundMessage.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/messages/MessageFilteringParameters.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/messages/MessageFilteringParameters.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.OutboundMessageClicksFilteringParameters = exports.OutboundMessageOpensFilteringParameters = exports.OutboundMessageTrackingFilteringParameters = exports.InboundMessagesFilteringParameters = exports.OutboundMessagesFilteringParameters = exports.InboundMessageStatus = exports.OutboundMessageStatus = void 0;\nvar FilteringParameters_1 = __webpack_require__(/*! ../client/FilteringParameters */ \"(rsc)/./node_modules/postmark/dist/client/models/client/FilteringParameters.js\");\nvar OutboundMessageStatus;\n(function(OutboundMessageStatus) {\n    OutboundMessageStatus[\"Queued\"] = \"queued\";\n    OutboundMessageStatus[\"Sent\"] = \"sent\";\n    OutboundMessageStatus[\"Processed\"] = \"processed\";\n})(OutboundMessageStatus = exports.OutboundMessageStatus || (exports.OutboundMessageStatus = {}));\nvar InboundMessageStatus;\n(function(InboundMessageStatus) {\n    InboundMessageStatus[\"Queued\"] = \"queued\";\n    InboundMessageStatus[\"Sent\"] = \"sent\";\n    InboundMessageStatus[\"Processed\"] = \"processed\";\n    InboundMessageStatus[\"Blocked\"] = \"blocked\";\n    InboundMessageStatus[\"Failed\"] = \"failed\";\n    InboundMessageStatus[\"Scheduled\"] = \"scheduled\";\n})(InboundMessageStatus = exports.InboundMessageStatus || (exports.InboundMessageStatus = {}));\n/**\n * Describes filtering parameters that can be used when retrieving outbound messages.\n * When pagination parameters are not specified, default values are set.\n */ var OutboundMessagesFilteringParameters = /** @class */ function(_super) {\n    __extends(OutboundMessagesFilteringParameters, _super);\n    function OutboundMessagesFilteringParameters(count, offset, recipient, fromEmail, tag, status, fromDate, toDate, subject, messageStream) {\n        if (count === void 0) {\n            count = 100;\n        }\n        if (offset === void 0) {\n            offset = 0;\n        }\n        var _this = _super.call(this, count, offset) || this;\n        _this.recipient = recipient;\n        _this.fromEmail = fromEmail;\n        _this.tag = tag;\n        _this.status = status;\n        _this.fromDate = fromDate;\n        _this.toDate = toDate;\n        _this.subject = subject;\n        _this.messageStream = messageStream;\n        return _this;\n    }\n    return OutboundMessagesFilteringParameters;\n}(FilteringParameters_1.FilteringParameters);\nexports.OutboundMessagesFilteringParameters = OutboundMessagesFilteringParameters;\n/**\n * Describes filtering parameters that can be used when retrieving inbound messages.\n * When pagination parameters are not specified, default values are set.\n */ var InboundMessagesFilteringParameters = /** @class */ function(_super) {\n    __extends(InboundMessagesFilteringParameters, _super);\n    function InboundMessagesFilteringParameters(count, offset, mailboxHash, recipient, fromEmail, tag, status, fromDate, toDate, subject) {\n        if (count === void 0) {\n            count = 100;\n        }\n        if (offset === void 0) {\n            offset = 0;\n        }\n        var _this = _super.call(this, count, offset) || this;\n        _this.status = status;\n        _this.mailboxHash = mailboxHash;\n        _this.recipient = recipient;\n        _this.fromEmail = fromEmail;\n        _this.tag = tag;\n        _this.fromDate = fromDate;\n        _this.toDate = toDate;\n        _this.subject = subject;\n        return _this;\n    }\n    return InboundMessagesFilteringParameters;\n}(FilteringParameters_1.FilteringParameters);\nexports.InboundMessagesFilteringParameters = InboundMessagesFilteringParameters;\n/**\n * Describes filtering parameters that can be used when retrieving tracked outbound messages.\n * When pagination parameters are not specified, default values are set.\n */ var OutboundMessageTrackingFilteringParameters = /** @class */ function(_super) {\n    __extends(OutboundMessageTrackingFilteringParameters, _super);\n    function OutboundMessageTrackingFilteringParameters(count, offset, recipient, tag, client_name, client_company, client_family, os_name, os_family, os_company, platform, country, region, city, messageStream) {\n        if (count === void 0) {\n            count = 100;\n        }\n        if (offset === void 0) {\n            offset = 0;\n        }\n        var _this = _super.call(this, count, offset) || this;\n        _this.recipient = recipient;\n        _this.tag = tag;\n        _this.client_name = client_name;\n        _this.client_company = client_company;\n        _this.client_family = client_family;\n        _this.os_name = os_name;\n        _this.os_family = os_family;\n        _this.os_company = os_company;\n        _this.platform = platform;\n        _this.country = country;\n        _this.region = region;\n        _this.city = city;\n        _this.messageStream = messageStream;\n        return _this;\n    }\n    return OutboundMessageTrackingFilteringParameters;\n}(FilteringParameters_1.FilteringParameters);\nexports.OutboundMessageTrackingFilteringParameters = OutboundMessageTrackingFilteringParameters;\nvar OutboundMessageOpensFilteringParameters = /** @class */ function(_super) {\n    __extends(OutboundMessageOpensFilteringParameters, _super);\n    function OutboundMessageOpensFilteringParameters() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return OutboundMessageOpensFilteringParameters;\n}(OutboundMessageTrackingFilteringParameters);\nexports.OutboundMessageOpensFilteringParameters = OutboundMessageOpensFilteringParameters;\nvar OutboundMessageClicksFilteringParameters = /** @class */ function(_super) {\n    __extends(OutboundMessageClicksFilteringParameters, _super);\n    function OutboundMessageClicksFilteringParameters() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return OutboundMessageClicksFilteringParameters;\n}(OutboundMessageTrackingFilteringParameters);\nexports.OutboundMessageClicksFilteringParameters = OutboundMessageClicksFilteringParameters; //# sourceMappingURL=MessageFilteringParameters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL21lc3NhZ2VzL01lc3NhZ2VGaWx0ZXJpbmdQYXJhbWV0ZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsWUFBWSxDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLFNBQVMsSUFBSztJQUN4QyxJQUFJQyxnQkFBZ0IsU0FBVUMsQ0FBQyxFQUFFQyxDQUFDO1FBQzlCRixnQkFBZ0JHLE9BQU9DLGNBQWMsSUFDaEM7WUFBRUMsV0FBVyxFQUFFO1FBQUMsY0FBYUMsU0FBUyxTQUFVTCxDQUFDLEVBQUVDLENBQUM7WUFBSUQsRUFBRUksU0FBUyxHQUFHSDtRQUFHLEtBQzFFLFNBQVVELENBQUMsRUFBRUMsQ0FBQztZQUFJLElBQUssSUFBSUssS0FBS0wsRUFBRyxJQUFJQyxPQUFPSyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDUixHQUFHSyxJQUFJTixDQUFDLENBQUNNLEVBQUUsR0FBR0wsQ0FBQyxDQUFDSyxFQUFFO1FBQUU7UUFDcEcsT0FBT1AsY0FBY0MsR0FBR0M7SUFDNUI7SUFDQSxPQUFPLFNBQVVELENBQUMsRUFBRUMsQ0FBQztRQUNqQixJQUFJLE9BQU9BLE1BQU0sY0FBY0EsTUFBTSxNQUNqQyxNQUFNLElBQUlTLFVBQVUseUJBQXlCQyxPQUFPVixLQUFLO1FBQzdERixjQUFjQyxHQUFHQztRQUNqQixTQUFTVztZQUFPLElBQUksQ0FBQ0MsV0FBVyxHQUFHYjtRQUFHO1FBQ3RDQSxFQUFFTyxTQUFTLEdBQUdOLE1BQU0sT0FBT0MsT0FBT1ksTUFBTSxDQUFDYixLQUFNVyxDQUFBQSxHQUFHTCxTQUFTLEdBQUdOLEVBQUVNLFNBQVMsRUFBRSxJQUFJSyxJQUFHO0lBQ3RGO0FBQ0o7QUFDQVYsOENBQTZDO0lBQUVlLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGdEQUFnRCxHQUFHQSwrQ0FBK0MsR0FBR0Esa0RBQWtELEdBQUdBLDBDQUEwQyxHQUFHQSwyQ0FBMkMsR0FBR0EsNEJBQTRCLEdBQUdBLDZCQUE2QixHQUFHLEtBQUs7QUFDelQsSUFBSVMsd0JBQXdCQyxtQkFBT0EsQ0FBQyxxSEFBK0I7QUFDbkUsSUFBSUY7QUFDSCxVQUFVQSxxQkFBcUI7SUFDNUJBLHFCQUFxQixDQUFDLFNBQVMsR0FBRztJQUNsQ0EscUJBQXFCLENBQUMsT0FBTyxHQUFHO0lBQ2hDQSxxQkFBcUIsQ0FBQyxZQUFZLEdBQUc7QUFDekMsR0FBR0Esd0JBQXdCUixRQUFRUSxxQkFBcUIsSUFBS1IsQ0FBQUEsNkJBQTZCLEdBQUcsQ0FBQztBQUM5RixJQUFJTztBQUNILFVBQVVBLG9CQUFvQjtJQUMzQkEsb0JBQW9CLENBQUMsU0FBUyxHQUFHO0lBQ2pDQSxvQkFBb0IsQ0FBQyxPQUFPLEdBQUc7SUFDL0JBLG9CQUFvQixDQUFDLFlBQVksR0FBRztJQUNwQ0Esb0JBQW9CLENBQUMsVUFBVSxHQUFHO0lBQ2xDQSxvQkFBb0IsQ0FBQyxTQUFTLEdBQUc7SUFDakNBLG9CQUFvQixDQUFDLFlBQVksR0FBRztBQUN4QyxHQUFHQSx1QkFBdUJQLFFBQVFPLG9CQUFvQixJQUFLUCxDQUFBQSw0QkFBNEIsR0FBRyxDQUFDO0FBQzNGOzs7Q0FHQyxHQUNELElBQUlNLHNDQUFzQyxXQUFXLEdBQUksU0FBVUssTUFBTTtJQUNyRTdCLFVBQVV3QixxQ0FBcUNLO0lBQy9DLFNBQVNMLG9DQUFvQ00sS0FBSyxFQUFFQyxNQUFNLEVBQUVDLFNBQVMsRUFBRUMsU0FBUyxFQUFFQyxHQUFHLEVBQUVDLE1BQU0sRUFBRUMsUUFBUSxFQUFFQyxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsYUFBYTtRQUNuSSxJQUFJVCxVQUFVLEtBQUssR0FBRztZQUFFQSxRQUFRO1FBQUs7UUFDckMsSUFBSUMsV0FBVyxLQUFLLEdBQUc7WUFBRUEsU0FBUztRQUFHO1FBQ3JDLElBQUlTLFFBQVFYLE9BQU9sQixJQUFJLENBQUMsSUFBSSxFQUFFbUIsT0FBT0MsV0FBVyxJQUFJO1FBQ3BEUyxNQUFNUixTQUFTLEdBQUdBO1FBQ2xCUSxNQUFNUCxTQUFTLEdBQUdBO1FBQ2xCTyxNQUFNTixHQUFHLEdBQUdBO1FBQ1pNLE1BQU1MLE1BQU0sR0FBR0E7UUFDZkssTUFBTUosUUFBUSxHQUFHQTtRQUNqQkksTUFBTUgsTUFBTSxHQUFHQTtRQUNmRyxNQUFNRixPQUFPLEdBQUdBO1FBQ2hCRSxNQUFNRCxhQUFhLEdBQUdBO1FBQ3RCLE9BQU9DO0lBQ1g7SUFDQSxPQUFPaEI7QUFDWCxFQUFFRyxzQkFBc0JjLG1CQUFtQjtBQUMzQ3ZCLDJDQUEyQyxHQUFHTTtBQUM5Qzs7O0NBR0MsR0FDRCxJQUFJRCxxQ0FBcUMsV0FBVyxHQUFJLFNBQVVNLE1BQU07SUFDcEU3QixVQUFVdUIsb0NBQW9DTTtJQUM5QyxTQUFTTixtQ0FBbUNPLEtBQUssRUFBRUMsTUFBTSxFQUFFVyxXQUFXLEVBQUVWLFNBQVMsRUFBRUMsU0FBUyxFQUFFQyxHQUFHLEVBQUVDLE1BQU0sRUFBRUMsUUFBUSxFQUFFQyxNQUFNLEVBQUVDLE9BQU87UUFDaEksSUFBSVIsVUFBVSxLQUFLLEdBQUc7WUFBRUEsUUFBUTtRQUFLO1FBQ3JDLElBQUlDLFdBQVcsS0FBSyxHQUFHO1lBQUVBLFNBQVM7UUFBRztRQUNyQyxJQUFJUyxRQUFRWCxPQUFPbEIsSUFBSSxDQUFDLElBQUksRUFBRW1CLE9BQU9DLFdBQVcsSUFBSTtRQUNwRFMsTUFBTUwsTUFBTSxHQUFHQTtRQUNmSyxNQUFNRSxXQUFXLEdBQUdBO1FBQ3BCRixNQUFNUixTQUFTLEdBQUdBO1FBQ2xCUSxNQUFNUCxTQUFTLEdBQUdBO1FBQ2xCTyxNQUFNTixHQUFHLEdBQUdBO1FBQ1pNLE1BQU1KLFFBQVEsR0FBR0E7UUFDakJJLE1BQU1ILE1BQU0sR0FBR0E7UUFDZkcsTUFBTUYsT0FBTyxHQUFHQTtRQUNoQixPQUFPRTtJQUNYO0lBQ0EsT0FBT2pCO0FBQ1gsRUFBRUksc0JBQXNCYyxtQkFBbUI7QUFDM0N2QiwwQ0FBMEMsR0FBR0s7QUFDN0M7OztDQUdDLEdBQ0QsSUFBSUQsNkNBQTZDLFdBQVcsR0FBSSxTQUFVTyxNQUFNO0lBQzVFN0IsVUFBVXNCLDRDQUE0Q087SUFDdEQsU0FBU1AsMkNBQTJDUSxLQUFLLEVBQUVDLE1BQU0sRUFBRUMsU0FBUyxFQUFFRSxHQUFHLEVBQUVTLFdBQVcsRUFBRUMsY0FBYyxFQUFFQyxhQUFhLEVBQUVDLE9BQU8sRUFBRUMsU0FBUyxFQUFFQyxVQUFVLEVBQUVDLFFBQVEsRUFBRUMsT0FBTyxFQUFFQyxNQUFNLEVBQUVDLElBQUksRUFBRWIsYUFBYTtRQUN6TSxJQUFJVCxVQUFVLEtBQUssR0FBRztZQUFFQSxRQUFRO1FBQUs7UUFDckMsSUFBSUMsV0FBVyxLQUFLLEdBQUc7WUFBRUEsU0FBUztRQUFHO1FBQ3JDLElBQUlTLFFBQVFYLE9BQU9sQixJQUFJLENBQUMsSUFBSSxFQUFFbUIsT0FBT0MsV0FBVyxJQUFJO1FBQ3BEUyxNQUFNUixTQUFTLEdBQUdBO1FBQ2xCUSxNQUFNTixHQUFHLEdBQUdBO1FBQ1pNLE1BQU1HLFdBQVcsR0FBR0E7UUFDcEJILE1BQU1JLGNBQWMsR0FBR0E7UUFDdkJKLE1BQU1LLGFBQWEsR0FBR0E7UUFDdEJMLE1BQU1NLE9BQU8sR0FBR0E7UUFDaEJOLE1BQU1PLFNBQVMsR0FBR0E7UUFDbEJQLE1BQU1RLFVBQVUsR0FBR0E7UUFDbkJSLE1BQU1TLFFBQVEsR0FBR0E7UUFDakJULE1BQU1VLE9BQU8sR0FBR0E7UUFDaEJWLE1BQU1XLE1BQU0sR0FBR0E7UUFDZlgsTUFBTVksSUFBSSxHQUFHQTtRQUNiWixNQUFNRCxhQUFhLEdBQUdBO1FBQ3RCLE9BQU9DO0lBQ1g7SUFDQSxPQUFPbEI7QUFDWCxFQUFFSyxzQkFBc0JjLG1CQUFtQjtBQUMzQ3ZCLGtEQUFrRCxHQUFHSTtBQUNyRCxJQUFJRCwwQ0FBMEMsV0FBVyxHQUFJLFNBQVVRLE1BQU07SUFDekU3QixVQUFVcUIseUNBQXlDUTtJQUNuRCxTQUFTUjtRQUNMLE9BQU9RLFdBQVcsUUFBUUEsT0FBT3dCLEtBQUssQ0FBQyxJQUFJLEVBQUVDLGNBQWMsSUFBSTtJQUNuRTtJQUNBLE9BQU9qQztBQUNYLEVBQUVDO0FBQ0ZKLCtDQUErQyxHQUFHRztBQUNsRCxJQUFJRCwyQ0FBMkMsV0FBVyxHQUFJLFNBQVVTLE1BQU07SUFDMUU3QixVQUFVb0IsMENBQTBDUztJQUNwRCxTQUFTVDtRQUNMLE9BQU9TLFdBQVcsUUFBUUEsT0FBT3dCLEtBQUssQ0FBQyxJQUFJLEVBQUVDLGNBQWMsSUFBSTtJQUNuRTtJQUNBLE9BQU9sQztBQUNYLEVBQUVFO0FBQ0ZKLGdEQUFnRCxHQUFHRSwwQ0FDbkQsc0RBQXNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL21lc3NhZ2VzL01lc3NhZ2VGaWx0ZXJpbmdQYXJhbWV0ZXJzLmpzPzU0YmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwgcCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIgKyBTdHJpbmcoYikgKyBcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5PdXRib3VuZE1lc3NhZ2VDbGlja3NGaWx0ZXJpbmdQYXJhbWV0ZXJzID0gZXhwb3J0cy5PdXRib3VuZE1lc3NhZ2VPcGVuc0ZpbHRlcmluZ1BhcmFtZXRlcnMgPSBleHBvcnRzLk91dGJvdW5kTWVzc2FnZVRyYWNraW5nRmlsdGVyaW5nUGFyYW1ldGVycyA9IGV4cG9ydHMuSW5ib3VuZE1lc3NhZ2VzRmlsdGVyaW5nUGFyYW1ldGVycyA9IGV4cG9ydHMuT3V0Ym91bmRNZXNzYWdlc0ZpbHRlcmluZ1BhcmFtZXRlcnMgPSBleHBvcnRzLkluYm91bmRNZXNzYWdlU3RhdHVzID0gZXhwb3J0cy5PdXRib3VuZE1lc3NhZ2VTdGF0dXMgPSB2b2lkIDA7XG52YXIgRmlsdGVyaW5nUGFyYW1ldGVyc18xID0gcmVxdWlyZShcIi4uL2NsaWVudC9GaWx0ZXJpbmdQYXJhbWV0ZXJzXCIpO1xudmFyIE91dGJvdW5kTWVzc2FnZVN0YXR1cztcbihmdW5jdGlvbiAoT3V0Ym91bmRNZXNzYWdlU3RhdHVzKSB7XG4gICAgT3V0Ym91bmRNZXNzYWdlU3RhdHVzW1wiUXVldWVkXCJdID0gXCJxdWV1ZWRcIjtcbiAgICBPdXRib3VuZE1lc3NhZ2VTdGF0dXNbXCJTZW50XCJdID0gXCJzZW50XCI7XG4gICAgT3V0Ym91bmRNZXNzYWdlU3RhdHVzW1wiUHJvY2Vzc2VkXCJdID0gXCJwcm9jZXNzZWRcIjtcbn0pKE91dGJvdW5kTWVzc2FnZVN0YXR1cyA9IGV4cG9ydHMuT3V0Ym91bmRNZXNzYWdlU3RhdHVzIHx8IChleHBvcnRzLk91dGJvdW5kTWVzc2FnZVN0YXR1cyA9IHt9KSk7XG52YXIgSW5ib3VuZE1lc3NhZ2VTdGF0dXM7XG4oZnVuY3Rpb24gKEluYm91bmRNZXNzYWdlU3RhdHVzKSB7XG4gICAgSW5ib3VuZE1lc3NhZ2VTdGF0dXNbXCJRdWV1ZWRcIl0gPSBcInF1ZXVlZFwiO1xuICAgIEluYm91bmRNZXNzYWdlU3RhdHVzW1wiU2VudFwiXSA9IFwic2VudFwiO1xuICAgIEluYm91bmRNZXNzYWdlU3RhdHVzW1wiUHJvY2Vzc2VkXCJdID0gXCJwcm9jZXNzZWRcIjtcbiAgICBJbmJvdW5kTWVzc2FnZVN0YXR1c1tcIkJsb2NrZWRcIl0gPSBcImJsb2NrZWRcIjtcbiAgICBJbmJvdW5kTWVzc2FnZVN0YXR1c1tcIkZhaWxlZFwiXSA9IFwiZmFpbGVkXCI7XG4gICAgSW5ib3VuZE1lc3NhZ2VTdGF0dXNbXCJTY2hlZHVsZWRcIl0gPSBcInNjaGVkdWxlZFwiO1xufSkoSW5ib3VuZE1lc3NhZ2VTdGF0dXMgPSBleHBvcnRzLkluYm91bmRNZXNzYWdlU3RhdHVzIHx8IChleHBvcnRzLkluYm91bmRNZXNzYWdlU3RhdHVzID0ge30pKTtcbi8qKlxuICogRGVzY3JpYmVzIGZpbHRlcmluZyBwYXJhbWV0ZXJzIHRoYXQgY2FuIGJlIHVzZWQgd2hlbiByZXRyaWV2aW5nIG91dGJvdW5kIG1lc3NhZ2VzLlxuICogV2hlbiBwYWdpbmF0aW9uIHBhcmFtZXRlcnMgYXJlIG5vdCBzcGVjaWZpZWQsIGRlZmF1bHQgdmFsdWVzIGFyZSBzZXQuXG4gKi9cbnZhciBPdXRib3VuZE1lc3NhZ2VzRmlsdGVyaW5nUGFyYW1ldGVycyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoT3V0Ym91bmRNZXNzYWdlc0ZpbHRlcmluZ1BhcmFtZXRlcnMsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gT3V0Ym91bmRNZXNzYWdlc0ZpbHRlcmluZ1BhcmFtZXRlcnMoY291bnQsIG9mZnNldCwgcmVjaXBpZW50LCBmcm9tRW1haWwsIHRhZywgc3RhdHVzLCBmcm9tRGF0ZSwgdG9EYXRlLCBzdWJqZWN0LCBtZXNzYWdlU3RyZWFtKSB7XG4gICAgICAgIGlmIChjb3VudCA9PT0gdm9pZCAwKSB7IGNvdW50ID0gMTAwOyB9XG4gICAgICAgIGlmIChvZmZzZXQgPT09IHZvaWQgMCkgeyBvZmZzZXQgPSAwOyB9XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIGNvdW50LCBvZmZzZXQpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLnJlY2lwaWVudCA9IHJlY2lwaWVudDtcbiAgICAgICAgX3RoaXMuZnJvbUVtYWlsID0gZnJvbUVtYWlsO1xuICAgICAgICBfdGhpcy50YWcgPSB0YWc7XG4gICAgICAgIF90aGlzLnN0YXR1cyA9IHN0YXR1cztcbiAgICAgICAgX3RoaXMuZnJvbURhdGUgPSBmcm9tRGF0ZTtcbiAgICAgICAgX3RoaXMudG9EYXRlID0gdG9EYXRlO1xuICAgICAgICBfdGhpcy5zdWJqZWN0ID0gc3ViamVjdDtcbiAgICAgICAgX3RoaXMubWVzc2FnZVN0cmVhbSA9IG1lc3NhZ2VTdHJlYW07XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgcmV0dXJuIE91dGJvdW5kTWVzc2FnZXNGaWx0ZXJpbmdQYXJhbWV0ZXJzO1xufShGaWx0ZXJpbmdQYXJhbWV0ZXJzXzEuRmlsdGVyaW5nUGFyYW1ldGVycykpO1xuZXhwb3J0cy5PdXRib3VuZE1lc3NhZ2VzRmlsdGVyaW5nUGFyYW1ldGVycyA9IE91dGJvdW5kTWVzc2FnZXNGaWx0ZXJpbmdQYXJhbWV0ZXJzO1xuLyoqXG4gKiBEZXNjcmliZXMgZmlsdGVyaW5nIHBhcmFtZXRlcnMgdGhhdCBjYW4gYmUgdXNlZCB3aGVuIHJldHJpZXZpbmcgaW5ib3VuZCBtZXNzYWdlcy5cbiAqIFdoZW4gcGFnaW5hdGlvbiBwYXJhbWV0ZXJzIGFyZSBub3Qgc3BlY2lmaWVkLCBkZWZhdWx0IHZhbHVlcyBhcmUgc2V0LlxuICovXG52YXIgSW5ib3VuZE1lc3NhZ2VzRmlsdGVyaW5nUGFyYW1ldGVycyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoSW5ib3VuZE1lc3NhZ2VzRmlsdGVyaW5nUGFyYW1ldGVycywgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBJbmJvdW5kTWVzc2FnZXNGaWx0ZXJpbmdQYXJhbWV0ZXJzKGNvdW50LCBvZmZzZXQsIG1haWxib3hIYXNoLCByZWNpcGllbnQsIGZyb21FbWFpbCwgdGFnLCBzdGF0dXMsIGZyb21EYXRlLCB0b0RhdGUsIHN1YmplY3QpIHtcbiAgICAgICAgaWYgKGNvdW50ID09PSB2b2lkIDApIHsgY291bnQgPSAxMDA7IH1cbiAgICAgICAgaWYgKG9mZnNldCA9PT0gdm9pZCAwKSB7IG9mZnNldCA9IDA7IH1cbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgY291bnQsIG9mZnNldCkgfHwgdGhpcztcbiAgICAgICAgX3RoaXMuc3RhdHVzID0gc3RhdHVzO1xuICAgICAgICBfdGhpcy5tYWlsYm94SGFzaCA9IG1haWxib3hIYXNoO1xuICAgICAgICBfdGhpcy5yZWNpcGllbnQgPSByZWNpcGllbnQ7XG4gICAgICAgIF90aGlzLmZyb21FbWFpbCA9IGZyb21FbWFpbDtcbiAgICAgICAgX3RoaXMudGFnID0gdGFnO1xuICAgICAgICBfdGhpcy5mcm9tRGF0ZSA9IGZyb21EYXRlO1xuICAgICAgICBfdGhpcy50b0RhdGUgPSB0b0RhdGU7XG4gICAgICAgIF90aGlzLnN1YmplY3QgPSBzdWJqZWN0O1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIHJldHVybiBJbmJvdW5kTWVzc2FnZXNGaWx0ZXJpbmdQYXJhbWV0ZXJzO1xufShGaWx0ZXJpbmdQYXJhbWV0ZXJzXzEuRmlsdGVyaW5nUGFyYW1ldGVycykpO1xuZXhwb3J0cy5JbmJvdW5kTWVzc2FnZXNGaWx0ZXJpbmdQYXJhbWV0ZXJzID0gSW5ib3VuZE1lc3NhZ2VzRmlsdGVyaW5nUGFyYW1ldGVycztcbi8qKlxuICogRGVzY3JpYmVzIGZpbHRlcmluZyBwYXJhbWV0ZXJzIHRoYXQgY2FuIGJlIHVzZWQgd2hlbiByZXRyaWV2aW5nIHRyYWNrZWQgb3V0Ym91bmQgbWVzc2FnZXMuXG4gKiBXaGVuIHBhZ2luYXRpb24gcGFyYW1ldGVycyBhcmUgbm90IHNwZWNpZmllZCwgZGVmYXVsdCB2YWx1ZXMgYXJlIHNldC5cbiAqL1xudmFyIE91dGJvdW5kTWVzc2FnZVRyYWNraW5nRmlsdGVyaW5nUGFyYW1ldGVycyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoT3V0Ym91bmRNZXNzYWdlVHJhY2tpbmdGaWx0ZXJpbmdQYXJhbWV0ZXJzLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIE91dGJvdW5kTWVzc2FnZVRyYWNraW5nRmlsdGVyaW5nUGFyYW1ldGVycyhjb3VudCwgb2Zmc2V0LCByZWNpcGllbnQsIHRhZywgY2xpZW50X25hbWUsIGNsaWVudF9jb21wYW55LCBjbGllbnRfZmFtaWx5LCBvc19uYW1lLCBvc19mYW1pbHksIG9zX2NvbXBhbnksIHBsYXRmb3JtLCBjb3VudHJ5LCByZWdpb24sIGNpdHksIG1lc3NhZ2VTdHJlYW0pIHtcbiAgICAgICAgaWYgKGNvdW50ID09PSB2b2lkIDApIHsgY291bnQgPSAxMDA7IH1cbiAgICAgICAgaWYgKG9mZnNldCA9PT0gdm9pZCAwKSB7IG9mZnNldCA9IDA7IH1cbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgY291bnQsIG9mZnNldCkgfHwgdGhpcztcbiAgICAgICAgX3RoaXMucmVjaXBpZW50ID0gcmVjaXBpZW50O1xuICAgICAgICBfdGhpcy50YWcgPSB0YWc7XG4gICAgICAgIF90aGlzLmNsaWVudF9uYW1lID0gY2xpZW50X25hbWU7XG4gICAgICAgIF90aGlzLmNsaWVudF9jb21wYW55ID0gY2xpZW50X2NvbXBhbnk7XG4gICAgICAgIF90aGlzLmNsaWVudF9mYW1pbHkgPSBjbGllbnRfZmFtaWx5O1xuICAgICAgICBfdGhpcy5vc19uYW1lID0gb3NfbmFtZTtcbiAgICAgICAgX3RoaXMub3NfZmFtaWx5ID0gb3NfZmFtaWx5O1xuICAgICAgICBfdGhpcy5vc19jb21wYW55ID0gb3NfY29tcGFueTtcbiAgICAgICAgX3RoaXMucGxhdGZvcm0gPSBwbGF0Zm9ybTtcbiAgICAgICAgX3RoaXMuY291bnRyeSA9IGNvdW50cnk7XG4gICAgICAgIF90aGlzLnJlZ2lvbiA9IHJlZ2lvbjtcbiAgICAgICAgX3RoaXMuY2l0eSA9IGNpdHk7XG4gICAgICAgIF90aGlzLm1lc3NhZ2VTdHJlYW0gPSBtZXNzYWdlU3RyZWFtO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIHJldHVybiBPdXRib3VuZE1lc3NhZ2VUcmFja2luZ0ZpbHRlcmluZ1BhcmFtZXRlcnM7XG59KEZpbHRlcmluZ1BhcmFtZXRlcnNfMS5GaWx0ZXJpbmdQYXJhbWV0ZXJzKSk7XG5leHBvcnRzLk91dGJvdW5kTWVzc2FnZVRyYWNraW5nRmlsdGVyaW5nUGFyYW1ldGVycyA9IE91dGJvdW5kTWVzc2FnZVRyYWNraW5nRmlsdGVyaW5nUGFyYW1ldGVycztcbnZhciBPdXRib3VuZE1lc3NhZ2VPcGVuc0ZpbHRlcmluZ1BhcmFtZXRlcnMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKE91dGJvdW5kTWVzc2FnZU9wZW5zRmlsdGVyaW5nUGFyYW1ldGVycywgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBPdXRib3VuZE1lc3NhZ2VPcGVuc0ZpbHRlcmluZ1BhcmFtZXRlcnMoKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICB9XG4gICAgcmV0dXJuIE91dGJvdW5kTWVzc2FnZU9wZW5zRmlsdGVyaW5nUGFyYW1ldGVycztcbn0oT3V0Ym91bmRNZXNzYWdlVHJhY2tpbmdGaWx0ZXJpbmdQYXJhbWV0ZXJzKSk7XG5leHBvcnRzLk91dGJvdW5kTWVzc2FnZU9wZW5zRmlsdGVyaW5nUGFyYW1ldGVycyA9IE91dGJvdW5kTWVzc2FnZU9wZW5zRmlsdGVyaW5nUGFyYW1ldGVycztcbnZhciBPdXRib3VuZE1lc3NhZ2VDbGlja3NGaWx0ZXJpbmdQYXJhbWV0ZXJzID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhPdXRib3VuZE1lc3NhZ2VDbGlja3NGaWx0ZXJpbmdQYXJhbWV0ZXJzLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIE91dGJvdW5kTWVzc2FnZUNsaWNrc0ZpbHRlcmluZ1BhcmFtZXRlcnMoKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICB9XG4gICAgcmV0dXJuIE91dGJvdW5kTWVzc2FnZUNsaWNrc0ZpbHRlcmluZ1BhcmFtZXRlcnM7XG59KE91dGJvdW5kTWVzc2FnZVRyYWNraW5nRmlsdGVyaW5nUGFyYW1ldGVycykpO1xuZXhwb3J0cy5PdXRib3VuZE1lc3NhZ2VDbGlja3NGaWx0ZXJpbmdQYXJhbWV0ZXJzID0gT3V0Ym91bmRNZXNzYWdlQ2xpY2tzRmlsdGVyaW5nUGFyYW1ldGVycztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU1lc3NhZ2VGaWx0ZXJpbmdQYXJhbWV0ZXJzLmpzLm1hcCJdLCJuYW1lcyI6WyJfX2V4dGVuZHMiLCJleHRlbmRTdGF0aWNzIiwiZCIsImIiLCJPYmplY3QiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIkFycmF5IiwicCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIlR5cGVFcnJvciIsIlN0cmluZyIsIl9fIiwiY29uc3RydWN0b3IiLCJjcmVhdGUiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIk91dGJvdW5kTWVzc2FnZUNsaWNrc0ZpbHRlcmluZ1BhcmFtZXRlcnMiLCJPdXRib3VuZE1lc3NhZ2VPcGVuc0ZpbHRlcmluZ1BhcmFtZXRlcnMiLCJPdXRib3VuZE1lc3NhZ2VUcmFja2luZ0ZpbHRlcmluZ1BhcmFtZXRlcnMiLCJJbmJvdW5kTWVzc2FnZXNGaWx0ZXJpbmdQYXJhbWV0ZXJzIiwiT3V0Ym91bmRNZXNzYWdlc0ZpbHRlcmluZ1BhcmFtZXRlcnMiLCJJbmJvdW5kTWVzc2FnZVN0YXR1cyIsIk91dGJvdW5kTWVzc2FnZVN0YXR1cyIsIkZpbHRlcmluZ1BhcmFtZXRlcnNfMSIsInJlcXVpcmUiLCJfc3VwZXIiLCJjb3VudCIsIm9mZnNldCIsInJlY2lwaWVudCIsImZyb21FbWFpbCIsInRhZyIsInN0YXR1cyIsImZyb21EYXRlIiwidG9EYXRlIiwic3ViamVjdCIsIm1lc3NhZ2VTdHJlYW0iLCJfdGhpcyIsIkZpbHRlcmluZ1BhcmFtZXRlcnMiLCJtYWlsYm94SGFzaCIsImNsaWVudF9uYW1lIiwiY2xpZW50X2NvbXBhbnkiLCJjbGllbnRfZmFtaWx5Iiwib3NfbmFtZSIsIm9zX2ZhbWlseSIsIm9zX2NvbXBhbnkiLCJwbGF0Zm9ybSIsImNvdW50cnkiLCJyZWdpb24iLCJjaXR5IiwiYXBwbHkiLCJhcmd1bWVudHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/messages/MessageFilteringParameters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/messages/OutboundMessage.js":
/*!******************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/messages/OutboundMessage.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=OutboundMessage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL21lc3NhZ2VzL091dGJvdW5kTWVzc2FnZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQyxFQUM3RCwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvbWVzc2FnZXMvT3V0Ym91bmRNZXNzYWdlLmpzP2M2NzUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1PdXRib3VuZE1lc3NhZ2UuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/messages/OutboundMessage.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/messages/OutboundMessageClick.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/messages/OutboundMessageClick.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=OutboundMessageClick.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL21lc3NhZ2VzL091dGJvdW5kTWVzc2FnZUNsaWNrLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDLEVBQzdELGdEQUFnRCIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9tZXNzYWdlcy9PdXRib3VuZE1lc3NhZ2VDbGljay5qcz8wZGM4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9T3V0Ym91bmRNZXNzYWdlQ2xpY2suanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/messages/OutboundMessageClick.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/messages/OutboundMessageOpen.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/messages/OutboundMessageOpen.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=OutboundMessageOpen.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL21lc3NhZ2VzL091dGJvdW5kTWVzc2FnZU9wZW4uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUMsRUFDN0QsK0NBQStDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL21lc3NhZ2VzL091dGJvdW5kTWVzc2FnZU9wZW4uanM/NzFjNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU91dGJvdW5kTWVzc2FnZU9wZW4uanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/messages/OutboundMessageOpen.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/senders/Signature.js":
/*!***********************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/senders/Signature.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateSignatureRequest = exports.UpdateSignatureRequest = void 0;\nvar UpdateSignatureRequest = /** @class */ function() {\n    function UpdateSignatureRequest(Name, ReplyToEmail, ReturnPathDomain, ConfirmationPersonalNote) {\n        this.Name = Name;\n        this.ReplyToEmail = ReplyToEmail;\n        this.ReturnPathDomain = ReturnPathDomain;\n        this.ConfirmationPersonalNote = ConfirmationPersonalNote;\n    }\n    return UpdateSignatureRequest;\n}();\nexports.UpdateSignatureRequest = UpdateSignatureRequest;\nvar CreateSignatureRequest = /** @class */ function() {\n    function CreateSignatureRequest(Name, FromEmail, ReplyToEmail, ReturnPathDomain, ConfirmationPersonalNote) {\n        this.Name = Name;\n        this.ReplyToEmail = ReplyToEmail;\n        this.ReturnPathDomain = ReturnPathDomain;\n        this.FromEmail = FromEmail;\n        this.ConfirmationPersonalNote = ConfirmationPersonalNote;\n    }\n    return CreateSignatureRequest;\n}();\nexports.CreateSignatureRequest = CreateSignatureRequest; //# sourceMappingURL=Signature.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3NlbmRlcnMvU2lnbmF0dXJlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCw4QkFBOEIsR0FBR0EsOEJBQThCLEdBQUcsS0FBSztBQUN2RSxJQUFJRyx5QkFBeUIsV0FBVyxHQUFJO0lBQ3hDLFNBQVNBLHVCQUF1QkMsSUFBSSxFQUFFQyxZQUFZLEVBQUVDLGdCQUFnQixFQUFFQyx3QkFBd0I7UUFDMUYsSUFBSSxDQUFDSCxJQUFJLEdBQUdBO1FBQ1osSUFBSSxDQUFDQyxZQUFZLEdBQUdBO1FBQ3BCLElBQUksQ0FBQ0MsZ0JBQWdCLEdBQUdBO1FBQ3hCLElBQUksQ0FBQ0Msd0JBQXdCLEdBQUdBO0lBQ3BDO0lBQ0EsT0FBT0o7QUFDWDtBQUNBSCw4QkFBOEIsR0FBR0c7QUFDakMsSUFBSUQseUJBQXlCLFdBQVcsR0FBSTtJQUN4QyxTQUFTQSx1QkFBdUJFLElBQUksRUFBRUksU0FBUyxFQUFFSCxZQUFZLEVBQUVDLGdCQUFnQixFQUFFQyx3QkFBd0I7UUFDckcsSUFBSSxDQUFDSCxJQUFJLEdBQUdBO1FBQ1osSUFBSSxDQUFDQyxZQUFZLEdBQUdBO1FBQ3BCLElBQUksQ0FBQ0MsZ0JBQWdCLEdBQUdBO1FBQ3hCLElBQUksQ0FBQ0UsU0FBUyxHQUFHQTtRQUNqQixJQUFJLENBQUNELHdCQUF3QixHQUFHQTtJQUNwQztJQUNBLE9BQU9MO0FBQ1g7QUFDQUYsOEJBQThCLEdBQUdFLHdCQUNqQyxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvc2VuZGVycy9TaWduYXR1cmUuanM/MzUxMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ3JlYXRlU2lnbmF0dXJlUmVxdWVzdCA9IGV4cG9ydHMuVXBkYXRlU2lnbmF0dXJlUmVxdWVzdCA9IHZvaWQgMDtcbnZhciBVcGRhdGVTaWduYXR1cmVSZXF1ZXN0ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFVwZGF0ZVNpZ25hdHVyZVJlcXVlc3QoTmFtZSwgUmVwbHlUb0VtYWlsLCBSZXR1cm5QYXRoRG9tYWluLCBDb25maXJtYXRpb25QZXJzb25hbE5vdGUpIHtcbiAgICAgICAgdGhpcy5OYW1lID0gTmFtZTtcbiAgICAgICAgdGhpcy5SZXBseVRvRW1haWwgPSBSZXBseVRvRW1haWw7XG4gICAgICAgIHRoaXMuUmV0dXJuUGF0aERvbWFpbiA9IFJldHVyblBhdGhEb21haW47XG4gICAgICAgIHRoaXMuQ29uZmlybWF0aW9uUGVyc29uYWxOb3RlID0gQ29uZmlybWF0aW9uUGVyc29uYWxOb3RlO1xuICAgIH1cbiAgICByZXR1cm4gVXBkYXRlU2lnbmF0dXJlUmVxdWVzdDtcbn0oKSk7XG5leHBvcnRzLlVwZGF0ZVNpZ25hdHVyZVJlcXVlc3QgPSBVcGRhdGVTaWduYXR1cmVSZXF1ZXN0O1xudmFyIENyZWF0ZVNpZ25hdHVyZVJlcXVlc3QgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQ3JlYXRlU2lnbmF0dXJlUmVxdWVzdChOYW1lLCBGcm9tRW1haWwsIFJlcGx5VG9FbWFpbCwgUmV0dXJuUGF0aERvbWFpbiwgQ29uZmlybWF0aW9uUGVyc29uYWxOb3RlKSB7XG4gICAgICAgIHRoaXMuTmFtZSA9IE5hbWU7XG4gICAgICAgIHRoaXMuUmVwbHlUb0VtYWlsID0gUmVwbHlUb0VtYWlsO1xuICAgICAgICB0aGlzLlJldHVyblBhdGhEb21haW4gPSBSZXR1cm5QYXRoRG9tYWluO1xuICAgICAgICB0aGlzLkZyb21FbWFpbCA9IEZyb21FbWFpbDtcbiAgICAgICAgdGhpcy5Db25maXJtYXRpb25QZXJzb25hbE5vdGUgPSBDb25maXJtYXRpb25QZXJzb25hbE5vdGU7XG4gICAgfVxuICAgIHJldHVybiBDcmVhdGVTaWduYXR1cmVSZXF1ZXN0O1xufSgpKTtcbmV4cG9ydHMuQ3JlYXRlU2lnbmF0dXJlUmVxdWVzdCA9IENyZWF0ZVNpZ25hdHVyZVJlcXVlc3Q7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TaWduYXR1cmUuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQ3JlYXRlU2lnbmF0dXJlUmVxdWVzdCIsIlVwZGF0ZVNpZ25hdHVyZVJlcXVlc3QiLCJOYW1lIiwiUmVwbHlUb0VtYWlsIiwiUmV0dXJuUGF0aERvbWFpbiIsIkNvbmZpcm1hdGlvblBlcnNvbmFsTm90ZSIsIkZyb21FbWFpbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/senders/Signature.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/server/Server.js":
/*!*******************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/server/Server.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateServerRequest = exports.UpdateServerRequest = void 0;\nvar UpdateServerRequest = /** @class */ function() {\n    function UpdateServerRequest(Name, Color, SmtpApiActivated, RawEmailEnabled, InboundHookUrl, BounceHookUrl, OpenHookUrl, DeliveryHookUrl, ClickHookUrl, PostFirstOpenOnly, InboundSpamThreshold, TrackOpens, TrackLinks, IncludeBounceContentInHook, EnableSmtpApiErrorHooks, InboundDomain) {\n        this.Name = Name;\n        this.Color = Color;\n        this.SmtpApiActivated = SmtpApiActivated;\n        this.RawEmailEnabled = RawEmailEnabled;\n        this.InboundHookUrl = InboundHookUrl;\n        this.BounceHookUrl = BounceHookUrl;\n        this.OpenHookUrl = OpenHookUrl;\n        this.DeliveryHookUrl = DeliveryHookUrl;\n        this.ClickHookUrl = ClickHookUrl;\n        this.PostFirstOpenOnly = PostFirstOpenOnly;\n        this.InboundSpamThreshold = InboundSpamThreshold;\n        this.InboundDomain = InboundDomain;\n        this.TrackOpens = TrackOpens;\n        this.TrackLinks = TrackLinks;\n        this.IncludeBounceContentInHook = IncludeBounceContentInHook;\n        this.EnableSmtpApiErrorHooks = EnableSmtpApiErrorHooks;\n    }\n    return UpdateServerRequest;\n}();\nexports.UpdateServerRequest = UpdateServerRequest;\nvar CreateServerRequest = /** @class */ function(_super) {\n    __extends(CreateServerRequest, _super);\n    function CreateServerRequest(Name, Color, SmtpApiActivated, RawEmailEnabled, InboundHookUrl, BounceHookUrl, OpenHookUrl, DeliveryHookUrl, ClickHookUrl, PostFirstOpenOnly, InboundSpamThreshold, TrackOpens, TrackLinks, IncludeBounceContentInHook, EnableSmtpApiErrorHooks, InboundDomain, DeliveryType) {\n        var _this = _super.call(this, Name, Color, SmtpApiActivated, RawEmailEnabled, InboundHookUrl, BounceHookUrl, OpenHookUrl, DeliveryHookUrl, ClickHookUrl, PostFirstOpenOnly, InboundSpamThreshold, TrackOpens, TrackLinks, IncludeBounceContentInHook, EnableSmtpApiErrorHooks, InboundDomain) || this;\n        _this.DeliveryType = DeliveryType;\n        return _this;\n    }\n    return CreateServerRequest;\n}(UpdateServerRequest);\nexports.CreateServerRequest = CreateServerRequest; //# sourceMappingURL=Server.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3NlcnZlci9TZXJ2ZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxZQUFZLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsU0FBUyxJQUFLO0lBQ3hDLElBQUlDLGdCQUFnQixTQUFVQyxDQUFDLEVBQUVDLENBQUM7UUFDOUJGLGdCQUFnQkcsT0FBT0MsY0FBYyxJQUNoQztZQUFFQyxXQUFXLEVBQUU7UUFBQyxjQUFhQyxTQUFTLFNBQVVMLENBQUMsRUFBRUMsQ0FBQztZQUFJRCxFQUFFSSxTQUFTLEdBQUdIO1FBQUcsS0FDMUUsU0FBVUQsQ0FBQyxFQUFFQyxDQUFDO1lBQUksSUFBSyxJQUFJSyxLQUFLTCxFQUFHLElBQUlDLE9BQU9LLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNSLEdBQUdLLElBQUlOLENBQUMsQ0FBQ00sRUFBRSxHQUFHTCxDQUFDLENBQUNLLEVBQUU7UUFBRTtRQUNwRyxPQUFPUCxjQUFjQyxHQUFHQztJQUM1QjtJQUNBLE9BQU8sU0FBVUQsQ0FBQyxFQUFFQyxDQUFDO1FBQ2pCLElBQUksT0FBT0EsTUFBTSxjQUFjQSxNQUFNLE1BQ2pDLE1BQU0sSUFBSVMsVUFBVSx5QkFBeUJDLE9BQU9WLEtBQUs7UUFDN0RGLGNBQWNDLEdBQUdDO1FBQ2pCLFNBQVNXO1lBQU8sSUFBSSxDQUFDQyxXQUFXLEdBQUdiO1FBQUc7UUFDdENBLEVBQUVPLFNBQVMsR0FBR04sTUFBTSxPQUFPQyxPQUFPWSxNQUFNLENBQUNiLEtBQU1XLENBQUFBLEdBQUdMLFNBQVMsR0FBR04sRUFBRU0sU0FBUyxFQUFFLElBQUlLLElBQUc7SUFDdEY7QUFDSjtBQUNBViw4Q0FBNkM7SUFBRWUsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsMkJBQTJCLEdBQUdBLDJCQUEyQixHQUFHLEtBQUs7QUFDakUsSUFBSUcsc0JBQXNCLFdBQVcsR0FBSTtJQUNyQyxTQUFTQSxvQkFBb0JDLElBQUksRUFBRUMsS0FBSyxFQUFFQyxnQkFBZ0IsRUFBRUMsZUFBZSxFQUFFQyxjQUFjLEVBQUVDLGFBQWEsRUFBRUMsV0FBVyxFQUFFQyxlQUFlLEVBQUVDLFlBQVksRUFBRUMsaUJBQWlCLEVBQUVDLG9CQUFvQixFQUFFQyxVQUFVLEVBQUVDLFVBQVUsRUFBRUMsMEJBQTBCLEVBQUVDLHVCQUF1QixFQUFFQyxhQUFhO1FBQ3ZSLElBQUksQ0FBQ2YsSUFBSSxHQUFHQTtRQUNaLElBQUksQ0FBQ0MsS0FBSyxHQUFHQTtRQUNiLElBQUksQ0FBQ0MsZ0JBQWdCLEdBQUdBO1FBQ3hCLElBQUksQ0FBQ0MsZUFBZSxHQUFHQTtRQUN2QixJQUFJLENBQUNDLGNBQWMsR0FBR0E7UUFDdEIsSUFBSSxDQUFDQyxhQUFhLEdBQUdBO1FBQ3JCLElBQUksQ0FBQ0MsV0FBVyxHQUFHQTtRQUNuQixJQUFJLENBQUNDLGVBQWUsR0FBR0E7UUFDdkIsSUFBSSxDQUFDQyxZQUFZLEdBQUdBO1FBQ3BCLElBQUksQ0FBQ0MsaUJBQWlCLEdBQUdBO1FBQ3pCLElBQUksQ0FBQ0Msb0JBQW9CLEdBQUdBO1FBQzVCLElBQUksQ0FBQ0ssYUFBYSxHQUFHQTtRQUNyQixJQUFJLENBQUNKLFVBQVUsR0FBR0E7UUFDbEIsSUFBSSxDQUFDQyxVQUFVLEdBQUdBO1FBQ2xCLElBQUksQ0FBQ0MsMEJBQTBCLEdBQUdBO1FBQ2xDLElBQUksQ0FBQ0MsdUJBQXVCLEdBQUdBO0lBQ25DO0lBQ0EsT0FBT2Y7QUFDWDtBQUNBSCwyQkFBMkIsR0FBR0c7QUFDOUIsSUFBSUQsc0JBQXNCLFdBQVcsR0FBSSxTQUFVa0IsTUFBTTtJQUNyRHRDLFVBQVVvQixxQkFBcUJrQjtJQUMvQixTQUFTbEIsb0JBQW9CRSxJQUFJLEVBQUVDLEtBQUssRUFBRUMsZ0JBQWdCLEVBQUVDLGVBQWUsRUFBRUMsY0FBYyxFQUFFQyxhQUFhLEVBQUVDLFdBQVcsRUFBRUMsZUFBZSxFQUFFQyxZQUFZLEVBQUVDLGlCQUFpQixFQUFFQyxvQkFBb0IsRUFBRUMsVUFBVSxFQUFFQyxVQUFVLEVBQUVDLDBCQUEwQixFQUFFQyx1QkFBdUIsRUFBRUMsYUFBYSxFQUFFRSxZQUFZO1FBQ3JTLElBQUlDLFFBQVFGLE9BQU8zQixJQUFJLENBQUMsSUFBSSxFQUFFVyxNQUFNQyxPQUFPQyxrQkFBa0JDLGlCQUFpQkMsZ0JBQWdCQyxlQUFlQyxhQUFhQyxpQkFBaUJDLGNBQWNDLG1CQUFtQkMsc0JBQXNCQyxZQUFZQyxZQUFZQyw0QkFBNEJDLHlCQUF5QkMsa0JBQWtCLElBQUk7UUFDclNHLE1BQU1ELFlBQVksR0FBR0E7UUFDckIsT0FBT0M7SUFDWDtJQUNBLE9BQU9wQjtBQUNYLEVBQUVDO0FBQ0ZILDJCQUEyQixHQUFHRSxxQkFDOUIsa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3NlcnZlci9TZXJ2ZXIuanM/M2RiNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChiLCBwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgICAgIHJldHVybiBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgIH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgYiAhPT0gXCJmdW5jdGlvblwiICYmIGIgIT09IG51bGwpXG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIiArIFN0cmluZyhiKSArIFwiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNyZWF0ZVNlcnZlclJlcXVlc3QgPSBleHBvcnRzLlVwZGF0ZVNlcnZlclJlcXVlc3QgPSB2b2lkIDA7XG52YXIgVXBkYXRlU2VydmVyUmVxdWVzdCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBVcGRhdGVTZXJ2ZXJSZXF1ZXN0KE5hbWUsIENvbG9yLCBTbXRwQXBpQWN0aXZhdGVkLCBSYXdFbWFpbEVuYWJsZWQsIEluYm91bmRIb29rVXJsLCBCb3VuY2VIb29rVXJsLCBPcGVuSG9va1VybCwgRGVsaXZlcnlIb29rVXJsLCBDbGlja0hvb2tVcmwsIFBvc3RGaXJzdE9wZW5Pbmx5LCBJbmJvdW5kU3BhbVRocmVzaG9sZCwgVHJhY2tPcGVucywgVHJhY2tMaW5rcywgSW5jbHVkZUJvdW5jZUNvbnRlbnRJbkhvb2ssIEVuYWJsZVNtdHBBcGlFcnJvckhvb2tzLCBJbmJvdW5kRG9tYWluKSB7XG4gICAgICAgIHRoaXMuTmFtZSA9IE5hbWU7XG4gICAgICAgIHRoaXMuQ29sb3IgPSBDb2xvcjtcbiAgICAgICAgdGhpcy5TbXRwQXBpQWN0aXZhdGVkID0gU210cEFwaUFjdGl2YXRlZDtcbiAgICAgICAgdGhpcy5SYXdFbWFpbEVuYWJsZWQgPSBSYXdFbWFpbEVuYWJsZWQ7XG4gICAgICAgIHRoaXMuSW5ib3VuZEhvb2tVcmwgPSBJbmJvdW5kSG9va1VybDtcbiAgICAgICAgdGhpcy5Cb3VuY2VIb29rVXJsID0gQm91bmNlSG9va1VybDtcbiAgICAgICAgdGhpcy5PcGVuSG9va1VybCA9IE9wZW5Ib29rVXJsO1xuICAgICAgICB0aGlzLkRlbGl2ZXJ5SG9va1VybCA9IERlbGl2ZXJ5SG9va1VybDtcbiAgICAgICAgdGhpcy5DbGlja0hvb2tVcmwgPSBDbGlja0hvb2tVcmw7XG4gICAgICAgIHRoaXMuUG9zdEZpcnN0T3Blbk9ubHkgPSBQb3N0Rmlyc3RPcGVuT25seTtcbiAgICAgICAgdGhpcy5JbmJvdW5kU3BhbVRocmVzaG9sZCA9IEluYm91bmRTcGFtVGhyZXNob2xkO1xuICAgICAgICB0aGlzLkluYm91bmREb21haW4gPSBJbmJvdW5kRG9tYWluO1xuICAgICAgICB0aGlzLlRyYWNrT3BlbnMgPSBUcmFja09wZW5zO1xuICAgICAgICB0aGlzLlRyYWNrTGlua3MgPSBUcmFja0xpbmtzO1xuICAgICAgICB0aGlzLkluY2x1ZGVCb3VuY2VDb250ZW50SW5Ib29rID0gSW5jbHVkZUJvdW5jZUNvbnRlbnRJbkhvb2s7XG4gICAgICAgIHRoaXMuRW5hYmxlU210cEFwaUVycm9ySG9va3MgPSBFbmFibGVTbXRwQXBpRXJyb3JIb29rcztcbiAgICB9XG4gICAgcmV0dXJuIFVwZGF0ZVNlcnZlclJlcXVlc3Q7XG59KCkpO1xuZXhwb3J0cy5VcGRhdGVTZXJ2ZXJSZXF1ZXN0ID0gVXBkYXRlU2VydmVyUmVxdWVzdDtcbnZhciBDcmVhdGVTZXJ2ZXJSZXF1ZXN0ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhDcmVhdGVTZXJ2ZXJSZXF1ZXN0LCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIENyZWF0ZVNlcnZlclJlcXVlc3QoTmFtZSwgQ29sb3IsIFNtdHBBcGlBY3RpdmF0ZWQsIFJhd0VtYWlsRW5hYmxlZCwgSW5ib3VuZEhvb2tVcmwsIEJvdW5jZUhvb2tVcmwsIE9wZW5Ib29rVXJsLCBEZWxpdmVyeUhvb2tVcmwsIENsaWNrSG9va1VybCwgUG9zdEZpcnN0T3Blbk9ubHksIEluYm91bmRTcGFtVGhyZXNob2xkLCBUcmFja09wZW5zLCBUcmFja0xpbmtzLCBJbmNsdWRlQm91bmNlQ29udGVudEluSG9vaywgRW5hYmxlU210cEFwaUVycm9ySG9va3MsIEluYm91bmREb21haW4sIERlbGl2ZXJ5VHlwZSkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBOYW1lLCBDb2xvciwgU210cEFwaUFjdGl2YXRlZCwgUmF3RW1haWxFbmFibGVkLCBJbmJvdW5kSG9va1VybCwgQm91bmNlSG9va1VybCwgT3Blbkhvb2tVcmwsIERlbGl2ZXJ5SG9va1VybCwgQ2xpY2tIb29rVXJsLCBQb3N0Rmlyc3RPcGVuT25seSwgSW5ib3VuZFNwYW1UaHJlc2hvbGQsIFRyYWNrT3BlbnMsIFRyYWNrTGlua3MsIEluY2x1ZGVCb3VuY2VDb250ZW50SW5Ib29rLCBFbmFibGVTbXRwQXBpRXJyb3JIb29rcywgSW5ib3VuZERvbWFpbikgfHwgdGhpcztcbiAgICAgICAgX3RoaXMuRGVsaXZlcnlUeXBlID0gRGVsaXZlcnlUeXBlO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIHJldHVybiBDcmVhdGVTZXJ2ZXJSZXF1ZXN0O1xufShVcGRhdGVTZXJ2ZXJSZXF1ZXN0KSk7XG5leHBvcnRzLkNyZWF0ZVNlcnZlclJlcXVlc3QgPSBDcmVhdGVTZXJ2ZXJSZXF1ZXN0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2VydmVyLmpzLm1hcCJdLCJuYW1lcyI6WyJfX2V4dGVuZHMiLCJleHRlbmRTdGF0aWNzIiwiZCIsImIiLCJPYmplY3QiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIkFycmF5IiwicCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIlR5cGVFcnJvciIsIlN0cmluZyIsIl9fIiwiY29uc3RydWN0b3IiLCJjcmVhdGUiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkNyZWF0ZVNlcnZlclJlcXVlc3QiLCJVcGRhdGVTZXJ2ZXJSZXF1ZXN0IiwiTmFtZSIsIkNvbG9yIiwiU210cEFwaUFjdGl2YXRlZCIsIlJhd0VtYWlsRW5hYmxlZCIsIkluYm91bmRIb29rVXJsIiwiQm91bmNlSG9va1VybCIsIk9wZW5Ib29rVXJsIiwiRGVsaXZlcnlIb29rVXJsIiwiQ2xpY2tIb29rVXJsIiwiUG9zdEZpcnN0T3Blbk9ubHkiLCJJbmJvdW5kU3BhbVRocmVzaG9sZCIsIlRyYWNrT3BlbnMiLCJUcmFja0xpbmtzIiwiSW5jbHVkZUJvdW5jZUNvbnRlbnRJbkhvb2siLCJFbmFibGVTbXRwQXBpRXJyb3JIb29rcyIsIkluYm91bmREb21haW4iLCJfc3VwZXIiLCJEZWxpdmVyeVR5cGUiLCJfdGhpcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/server/Server.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/server/ServerFilteringParameters.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/server/ServerFilteringParameters.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ServerFilteringParameters = void 0;\nvar FilteringParameters_1 = __webpack_require__(/*! ../client/FilteringParameters */ \"(rsc)/./node_modules/postmark/dist/client/models/client/FilteringParameters.js\");\n/**\n * Describes filtering parameters that can be used when retrieving servers.\n * When pagination parameters are not specified, default values are set.\n */ var ServerFilteringParameters = /** @class */ function(_super) {\n    __extends(ServerFilteringParameters, _super);\n    function ServerFilteringParameters(count, offset, name) {\n        if (count === void 0) {\n            count = 100;\n        }\n        if (offset === void 0) {\n            offset = 0;\n        }\n        var _this = _super.call(this, count, offset) || this;\n        _this.name = name;\n        return _this;\n    }\n    return ServerFilteringParameters;\n}(FilteringParameters_1.FilteringParameters);\nexports.ServerFilteringParameters = ServerFilteringParameters; //# sourceMappingURL=ServerFilteringParameters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3NlcnZlci9TZXJ2ZXJGaWx0ZXJpbmdQYXJhbWV0ZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsWUFBWSxDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLFNBQVMsSUFBSztJQUN4QyxJQUFJQyxnQkFBZ0IsU0FBVUMsQ0FBQyxFQUFFQyxDQUFDO1FBQzlCRixnQkFBZ0JHLE9BQU9DLGNBQWMsSUFDaEM7WUFBRUMsV0FBVyxFQUFFO1FBQUMsY0FBYUMsU0FBUyxTQUFVTCxDQUFDLEVBQUVDLENBQUM7WUFBSUQsRUFBRUksU0FBUyxHQUFHSDtRQUFHLEtBQzFFLFNBQVVELENBQUMsRUFBRUMsQ0FBQztZQUFJLElBQUssSUFBSUssS0FBS0wsRUFBRyxJQUFJQyxPQUFPSyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDUixHQUFHSyxJQUFJTixDQUFDLENBQUNNLEVBQUUsR0FBR0wsQ0FBQyxDQUFDSyxFQUFFO1FBQUU7UUFDcEcsT0FBT1AsY0FBY0MsR0FBR0M7SUFDNUI7SUFDQSxPQUFPLFNBQVVELENBQUMsRUFBRUMsQ0FBQztRQUNqQixJQUFJLE9BQU9BLE1BQU0sY0FBY0EsTUFBTSxNQUNqQyxNQUFNLElBQUlTLFVBQVUseUJBQXlCQyxPQUFPVixLQUFLO1FBQzdERixjQUFjQyxHQUFHQztRQUNqQixTQUFTVztZQUFPLElBQUksQ0FBQ0MsV0FBVyxHQUFHYjtRQUFHO1FBQ3RDQSxFQUFFTyxTQUFTLEdBQUdOLE1BQU0sT0FBT0MsT0FBT1ksTUFBTSxDQUFDYixLQUFNVyxDQUFBQSxHQUFHTCxTQUFTLEdBQUdOLEVBQUVNLFNBQVMsRUFBRSxJQUFJSyxJQUFHO0lBQ3RGO0FBQ0o7QUFDQVYsOENBQTZDO0lBQUVlLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGlDQUFpQyxHQUFHLEtBQUs7QUFDekMsSUFBSUcsd0JBQXdCQyxtQkFBT0EsQ0FBQyxxSEFBK0I7QUFDbkU7OztDQUdDLEdBQ0QsSUFBSUYsNEJBQTRCLFdBQVcsR0FBSSxTQUFVRyxNQUFNO0lBQzNEdkIsVUFBVW9CLDJCQUEyQkc7SUFDckMsU0FBU0gsMEJBQTBCSSxLQUFLLEVBQUVDLE1BQU0sRUFBRUMsSUFBSTtRQUNsRCxJQUFJRixVQUFVLEtBQUssR0FBRztZQUFFQSxRQUFRO1FBQUs7UUFDckMsSUFBSUMsV0FBVyxLQUFLLEdBQUc7WUFBRUEsU0FBUztRQUFHO1FBQ3JDLElBQUlFLFFBQVFKLE9BQU9aLElBQUksQ0FBQyxJQUFJLEVBQUVhLE9BQU9DLFdBQVcsSUFBSTtRQUNwREUsTUFBTUQsSUFBSSxHQUFHQTtRQUNiLE9BQU9DO0lBQ1g7SUFDQSxPQUFPUDtBQUNYLEVBQUVDLHNCQUFzQk8sbUJBQW1CO0FBQzNDVixpQ0FBaUMsR0FBR0UsMkJBQ3BDLHFEQUFxRCIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9zZXJ2ZXIvU2VydmVyRmlsdGVyaW5nUGFyYW1ldGVycy5qcz9mMzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBiICE9PSBcImZ1bmN0aW9uXCIgJiYgYiAhPT0gbnVsbClcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2VydmVyRmlsdGVyaW5nUGFyYW1ldGVycyA9IHZvaWQgMDtcbnZhciBGaWx0ZXJpbmdQYXJhbWV0ZXJzXzEgPSByZXF1aXJlKFwiLi4vY2xpZW50L0ZpbHRlcmluZ1BhcmFtZXRlcnNcIik7XG4vKipcbiAqIERlc2NyaWJlcyBmaWx0ZXJpbmcgcGFyYW1ldGVycyB0aGF0IGNhbiBiZSB1c2VkIHdoZW4gcmV0cmlldmluZyBzZXJ2ZXJzLlxuICogV2hlbiBwYWdpbmF0aW9uIHBhcmFtZXRlcnMgYXJlIG5vdCBzcGVjaWZpZWQsIGRlZmF1bHQgdmFsdWVzIGFyZSBzZXQuXG4gKi9cbnZhciBTZXJ2ZXJGaWx0ZXJpbmdQYXJhbWV0ZXJzID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhTZXJ2ZXJGaWx0ZXJpbmdQYXJhbWV0ZXJzLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIFNlcnZlckZpbHRlcmluZ1BhcmFtZXRlcnMoY291bnQsIG9mZnNldCwgbmFtZSkge1xuICAgICAgICBpZiAoY291bnQgPT09IHZvaWQgMCkgeyBjb3VudCA9IDEwMDsgfVxuICAgICAgICBpZiAob2Zmc2V0ID09PSB2b2lkIDApIHsgb2Zmc2V0ID0gMDsgfVxuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBjb3VudCwgb2Zmc2V0KSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICByZXR1cm4gU2VydmVyRmlsdGVyaW5nUGFyYW1ldGVycztcbn0oRmlsdGVyaW5nUGFyYW1ldGVyc18xLkZpbHRlcmluZ1BhcmFtZXRlcnMpKTtcbmV4cG9ydHMuU2VydmVyRmlsdGVyaW5nUGFyYW1ldGVycyA9IFNlcnZlckZpbHRlcmluZ1BhcmFtZXRlcnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TZXJ2ZXJGaWx0ZXJpbmdQYXJhbWV0ZXJzLmpzLm1hcCJdLCJuYW1lcyI6WyJfX2V4dGVuZHMiLCJleHRlbmRTdGF0aWNzIiwiZCIsImIiLCJPYmplY3QiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIkFycmF5IiwicCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIlR5cGVFcnJvciIsIlN0cmluZyIsIl9fIiwiY29uc3RydWN0b3IiLCJjcmVhdGUiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlNlcnZlckZpbHRlcmluZ1BhcmFtZXRlcnMiLCJGaWx0ZXJpbmdQYXJhbWV0ZXJzXzEiLCJyZXF1aXJlIiwiX3N1cGVyIiwiY291bnQiLCJvZmZzZXQiLCJuYW1lIiwiX3RoaXMiLCJGaWx0ZXJpbmdQYXJhbWV0ZXJzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/server/ServerFilteringParameters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/server/Servers.js":
/*!********************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/server/Servers.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=Servers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3NlcnZlci9TZXJ2ZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDLEVBQzdELG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9zZXJ2ZXIvU2VydmVycy5qcz82MDRjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2VydmVycy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/server/Servers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/stats/Stats.js":
/*!*****************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/stats/Stats.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=Stats.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3N0YXRzL1N0YXRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDLEVBQzdELGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9zdGF0cy9TdGF0cy5qcz81MjgzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3RhdHMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/stats/Stats.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/stats/StatsFilteringParameters.js":
/*!************************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/stats/StatsFilteringParameters.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.StatisticsFilteringParameters = void 0;\nvar StatisticsFilteringParameters = /** @class */ function() {\n    function StatisticsFilteringParameters(tag, fromDate, toDate, messageStream) {\n        this.tag = tag;\n        this.fromDate = fromDate;\n        this.toDate = toDate;\n        this.messageStream = messageStream;\n    }\n    return StatisticsFilteringParameters;\n}();\nexports.StatisticsFilteringParameters = StatisticsFilteringParameters; //# sourceMappingURL=StatsFilteringParameters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3N0YXRzL1N0YXRzRmlsdGVyaW5nUGFyYW1ldGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQscUNBQXFDLEdBQUcsS0FBSztBQUM3QyxJQUFJRSxnQ0FBZ0MsV0FBVyxHQUFJO0lBQy9DLFNBQVNBLDhCQUE4QkMsR0FBRyxFQUFFQyxRQUFRLEVBQUVDLE1BQU0sRUFBRUMsYUFBYTtRQUN2RSxJQUFJLENBQUNILEdBQUcsR0FBR0E7UUFDWCxJQUFJLENBQUNDLFFBQVEsR0FBR0E7UUFDaEIsSUFBSSxDQUFDQyxNQUFNLEdBQUdBO1FBQ2QsSUFBSSxDQUFDQyxhQUFhLEdBQUdBO0lBQ3pCO0lBQ0EsT0FBT0o7QUFDWDtBQUNBRixxQ0FBcUMsR0FBR0UsK0JBQ3hDLG9EQUFvRCIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9zdGF0cy9TdGF0c0ZpbHRlcmluZ1BhcmFtZXRlcnMuanM/NjdjZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU3RhdGlzdGljc0ZpbHRlcmluZ1BhcmFtZXRlcnMgPSB2b2lkIDA7XG52YXIgU3RhdGlzdGljc0ZpbHRlcmluZ1BhcmFtZXRlcnMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gU3RhdGlzdGljc0ZpbHRlcmluZ1BhcmFtZXRlcnModGFnLCBmcm9tRGF0ZSwgdG9EYXRlLCBtZXNzYWdlU3RyZWFtKSB7XG4gICAgICAgIHRoaXMudGFnID0gdGFnO1xuICAgICAgICB0aGlzLmZyb21EYXRlID0gZnJvbURhdGU7XG4gICAgICAgIHRoaXMudG9EYXRlID0gdG9EYXRlO1xuICAgICAgICB0aGlzLm1lc3NhZ2VTdHJlYW0gPSBtZXNzYWdlU3RyZWFtO1xuICAgIH1cbiAgICByZXR1cm4gU3RhdGlzdGljc0ZpbHRlcmluZ1BhcmFtZXRlcnM7XG59KCkpO1xuZXhwb3J0cy5TdGF0aXN0aWNzRmlsdGVyaW5nUGFyYW1ldGVycyA9IFN0YXRpc3RpY3NGaWx0ZXJpbmdQYXJhbWV0ZXJzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3RhdHNGaWx0ZXJpbmdQYXJhbWV0ZXJzLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlN0YXRpc3RpY3NGaWx0ZXJpbmdQYXJhbWV0ZXJzIiwidGFnIiwiZnJvbURhdGUiLCJ0b0RhdGUiLCJtZXNzYWdlU3RyZWFtIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/stats/StatsFilteringParameters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/streams/MessageStream.js":
/*!***************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/streams/MessageStream.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateMessageStreamRequest = exports.UpdateMessageStreamRequest = exports.UnsubscribeHandlingTypes = void 0;\nvar UnsubscribeHandlingTypes;\n(function(UnsubscribeHandlingTypes) {\n    UnsubscribeHandlingTypes[\"None\"] = \"None\";\n    UnsubscribeHandlingTypes[\"Postmark\"] = \"Postmark\";\n    UnsubscribeHandlingTypes[\"Custom\"] = \"Custom\";\n})(UnsubscribeHandlingTypes = exports.UnsubscribeHandlingTypes || (exports.UnsubscribeHandlingTypes = {}));\nvar UpdateMessageStreamRequest = /** @class */ function() {\n    function UpdateMessageStreamRequest(name, description, subscriptionManagementConfiguration) {\n        this.Name = name;\n        this.Description = description;\n        this.SubscriptionManagementConfiguration = subscriptionManagementConfiguration;\n    }\n    return UpdateMessageStreamRequest;\n}();\nexports.UpdateMessageStreamRequest = UpdateMessageStreamRequest;\nvar CreateMessageStreamRequest = /** @class */ function() {\n    function CreateMessageStreamRequest(id, name, messageStreamType, description, subscriptionManagementConfiguration) {\n        this.Name = name;\n        this.Description = description;\n        this.ID = id;\n        this.MessageStreamType = messageStreamType;\n        this.SubscriptionManagementConfiguration = subscriptionManagementConfiguration;\n    }\n    return CreateMessageStreamRequest;\n}();\nexports.CreateMessageStreamRequest = CreateMessageStreamRequest; //# sourceMappingURL=MessageStream.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3N0cmVhbXMvTWVzc2FnZVN0cmVhbS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsa0NBQWtDLEdBQUdBLGtDQUFrQyxHQUFHQSxnQ0FBZ0MsR0FBRyxLQUFLO0FBQ2xILElBQUlJO0FBQ0gsVUFBVUEsd0JBQXdCO0lBQy9CQSx3QkFBd0IsQ0FBQyxPQUFPLEdBQUc7SUFDbkNBLHdCQUF3QixDQUFDLFdBQVcsR0FBRztJQUN2Q0Esd0JBQXdCLENBQUMsU0FBUyxHQUFHO0FBQ3pDLEdBQUdBLDJCQUEyQkosUUFBUUksd0JBQXdCLElBQUtKLENBQUFBLGdDQUFnQyxHQUFHLENBQUM7QUFDdkcsSUFBSUcsNkJBQTZCLFdBQVcsR0FBSTtJQUM1QyxTQUFTQSwyQkFBMkJFLElBQUksRUFBRUMsV0FBVyxFQUFFQyxtQ0FBbUM7UUFDdEYsSUFBSSxDQUFDQyxJQUFJLEdBQUdIO1FBQ1osSUFBSSxDQUFDSSxXQUFXLEdBQUdIO1FBQ25CLElBQUksQ0FBQ0ksbUNBQW1DLEdBQUdIO0lBQy9DO0lBQ0EsT0FBT0o7QUFDWDtBQUNBSCxrQ0FBa0MsR0FBR0c7QUFDckMsSUFBSUQsNkJBQTZCLFdBQVcsR0FBSTtJQUM1QyxTQUFTQSwyQkFBMkJTLEVBQUUsRUFBRU4sSUFBSSxFQUFFTyxpQkFBaUIsRUFBRU4sV0FBVyxFQUFFQyxtQ0FBbUM7UUFDN0csSUFBSSxDQUFDQyxJQUFJLEdBQUdIO1FBQ1osSUFBSSxDQUFDSSxXQUFXLEdBQUdIO1FBQ25CLElBQUksQ0FBQ08sRUFBRSxHQUFHRjtRQUNWLElBQUksQ0FBQ0csaUJBQWlCLEdBQUdGO1FBQ3pCLElBQUksQ0FBQ0YsbUNBQW1DLEdBQUdIO0lBQy9DO0lBQ0EsT0FBT0w7QUFDWDtBQUNBRixrQ0FBa0MsR0FBR0UsNEJBQ3JDLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9zdHJlYW1zL01lc3NhZ2VTdHJlYW0uanM/NDUyOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ3JlYXRlTWVzc2FnZVN0cmVhbVJlcXVlc3QgPSBleHBvcnRzLlVwZGF0ZU1lc3NhZ2VTdHJlYW1SZXF1ZXN0ID0gZXhwb3J0cy5VbnN1YnNjcmliZUhhbmRsaW5nVHlwZXMgPSB2b2lkIDA7XG52YXIgVW5zdWJzY3JpYmVIYW5kbGluZ1R5cGVzO1xuKGZ1bmN0aW9uIChVbnN1YnNjcmliZUhhbmRsaW5nVHlwZXMpIHtcbiAgICBVbnN1YnNjcmliZUhhbmRsaW5nVHlwZXNbXCJOb25lXCJdID0gXCJOb25lXCI7XG4gICAgVW5zdWJzY3JpYmVIYW5kbGluZ1R5cGVzW1wiUG9zdG1hcmtcIl0gPSBcIlBvc3RtYXJrXCI7XG4gICAgVW5zdWJzY3JpYmVIYW5kbGluZ1R5cGVzW1wiQ3VzdG9tXCJdID0gXCJDdXN0b21cIjtcbn0pKFVuc3Vic2NyaWJlSGFuZGxpbmdUeXBlcyA9IGV4cG9ydHMuVW5zdWJzY3JpYmVIYW5kbGluZ1R5cGVzIHx8IChleHBvcnRzLlVuc3Vic2NyaWJlSGFuZGxpbmdUeXBlcyA9IHt9KSk7XG52YXIgVXBkYXRlTWVzc2FnZVN0cmVhbVJlcXVlc3QgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gVXBkYXRlTWVzc2FnZVN0cmVhbVJlcXVlc3QobmFtZSwgZGVzY3JpcHRpb24sIHN1YnNjcmlwdGlvbk1hbmFnZW1lbnRDb25maWd1cmF0aW9uKSB7XG4gICAgICAgIHRoaXMuTmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMuRGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbjtcbiAgICAgICAgdGhpcy5TdWJzY3JpcHRpb25NYW5hZ2VtZW50Q29uZmlndXJhdGlvbiA9IHN1YnNjcmlwdGlvbk1hbmFnZW1lbnRDb25maWd1cmF0aW9uO1xuICAgIH1cbiAgICByZXR1cm4gVXBkYXRlTWVzc2FnZVN0cmVhbVJlcXVlc3Q7XG59KCkpO1xuZXhwb3J0cy5VcGRhdGVNZXNzYWdlU3RyZWFtUmVxdWVzdCA9IFVwZGF0ZU1lc3NhZ2VTdHJlYW1SZXF1ZXN0O1xudmFyIENyZWF0ZU1lc3NhZ2VTdHJlYW1SZXF1ZXN0ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIENyZWF0ZU1lc3NhZ2VTdHJlYW1SZXF1ZXN0KGlkLCBuYW1lLCBtZXNzYWdlU3RyZWFtVHlwZSwgZGVzY3JpcHRpb24sIHN1YnNjcmlwdGlvbk1hbmFnZW1lbnRDb25maWd1cmF0aW9uKSB7XG4gICAgICAgIHRoaXMuTmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMuRGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbjtcbiAgICAgICAgdGhpcy5JRCA9IGlkO1xuICAgICAgICB0aGlzLk1lc3NhZ2VTdHJlYW1UeXBlID0gbWVzc2FnZVN0cmVhbVR5cGU7XG4gICAgICAgIHRoaXMuU3Vic2NyaXB0aW9uTWFuYWdlbWVudENvbmZpZ3VyYXRpb24gPSBzdWJzY3JpcHRpb25NYW5hZ2VtZW50Q29uZmlndXJhdGlvbjtcbiAgICB9XG4gICAgcmV0dXJuIENyZWF0ZU1lc3NhZ2VTdHJlYW1SZXF1ZXN0O1xufSgpKTtcbmV4cG9ydHMuQ3JlYXRlTWVzc2FnZVN0cmVhbVJlcXVlc3QgPSBDcmVhdGVNZXNzYWdlU3RyZWFtUmVxdWVzdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU1lc3NhZ2VTdHJlYW0uanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQ3JlYXRlTWVzc2FnZVN0cmVhbVJlcXVlc3QiLCJVcGRhdGVNZXNzYWdlU3RyZWFtUmVxdWVzdCIsIlVuc3Vic2NyaWJlSGFuZGxpbmdUeXBlcyIsIm5hbWUiLCJkZXNjcmlwdGlvbiIsInN1YnNjcmlwdGlvbk1hbmFnZW1lbnRDb25maWd1cmF0aW9uIiwiTmFtZSIsIkRlc2NyaXB0aW9uIiwiU3Vic2NyaXB0aW9uTWFuYWdlbWVudENvbmZpZ3VyYXRpb24iLCJpZCIsIm1lc3NhZ2VTdHJlYW1UeXBlIiwiSUQiLCJNZXNzYWdlU3RyZWFtVHlwZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/streams/MessageStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/streams/MessageStreamsFilteringParameters.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/streams/MessageStreamsFilteringParameters.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.MessageStreamsFilteringParameters = void 0;\n/**\n * Describes filtering parameters that can be used when retrieving message streams.\n */ var MessageStreamsFilteringParameters = /** @class */ function() {\n    function MessageStreamsFilteringParameters(messageStreamType, includeArchivedStreams) {\n        this.messageStreamType = messageStreamType;\n        this.includeArchivedStreams = includeArchivedStreams;\n    }\n    return MessageStreamsFilteringParameters;\n}();\nexports.MessageStreamsFilteringParameters = MessageStreamsFilteringParameters; //# sourceMappingURL=MessageStreamsFilteringParameters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3N0cmVhbXMvTWVzc2FnZVN0cmVhbXNGaWx0ZXJpbmdQYXJhbWV0ZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCx5Q0FBeUMsR0FBRyxLQUFLO0FBQ2pEOztDQUVDLEdBQ0QsSUFBSUUsb0NBQW9DLFdBQVcsR0FBSTtJQUNuRCxTQUFTQSxrQ0FBa0NDLGlCQUFpQixFQUFFQyxzQkFBc0I7UUFDaEYsSUFBSSxDQUFDRCxpQkFBaUIsR0FBR0E7UUFDekIsSUFBSSxDQUFDQyxzQkFBc0IsR0FBR0E7SUFDbEM7SUFDQSxPQUFPRjtBQUNYO0FBQ0FGLHlDQUF5QyxHQUFHRSxtQ0FDNUMsNkRBQTZEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3N0cmVhbXMvTWVzc2FnZVN0cmVhbXNGaWx0ZXJpbmdQYXJhbWV0ZXJzLmpzPzM5OTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk1lc3NhZ2VTdHJlYW1zRmlsdGVyaW5nUGFyYW1ldGVycyA9IHZvaWQgMDtcbi8qKlxuICogRGVzY3JpYmVzIGZpbHRlcmluZyBwYXJhbWV0ZXJzIHRoYXQgY2FuIGJlIHVzZWQgd2hlbiByZXRyaWV2aW5nIG1lc3NhZ2Ugc3RyZWFtcy5cbiAqL1xudmFyIE1lc3NhZ2VTdHJlYW1zRmlsdGVyaW5nUGFyYW1ldGVycyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBNZXNzYWdlU3RyZWFtc0ZpbHRlcmluZ1BhcmFtZXRlcnMobWVzc2FnZVN0cmVhbVR5cGUsIGluY2x1ZGVBcmNoaXZlZFN0cmVhbXMpIHtcbiAgICAgICAgdGhpcy5tZXNzYWdlU3RyZWFtVHlwZSA9IG1lc3NhZ2VTdHJlYW1UeXBlO1xuICAgICAgICB0aGlzLmluY2x1ZGVBcmNoaXZlZFN0cmVhbXMgPSBpbmNsdWRlQXJjaGl2ZWRTdHJlYW1zO1xuICAgIH1cbiAgICByZXR1cm4gTWVzc2FnZVN0cmVhbXNGaWx0ZXJpbmdQYXJhbWV0ZXJzO1xufSgpKTtcbmV4cG9ydHMuTWVzc2FnZVN0cmVhbXNGaWx0ZXJpbmdQYXJhbWV0ZXJzID0gTWVzc2FnZVN0cmVhbXNGaWx0ZXJpbmdQYXJhbWV0ZXJzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TWVzc2FnZVN0cmVhbXNGaWx0ZXJpbmdQYXJhbWV0ZXJzLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIk1lc3NhZ2VTdHJlYW1zRmlsdGVyaW5nUGFyYW1ldGVycyIsIm1lc3NhZ2VTdHJlYW1UeXBlIiwiaW5jbHVkZUFyY2hpdmVkU3RyZWFtcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/streams/MessageStreamsFilteringParameters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/suppressions/Suppression.js":
/*!******************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/suppressions/Suppression.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=Suppression.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3N1cHByZXNzaW9ucy9TdXBwcmVzc2lvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQyxFQUM3RCx1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvc3VwcHJlc3Npb25zL1N1cHByZXNzaW9uLmpzP2U0ODMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TdXBwcmVzc2lvbi5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/suppressions/Suppression.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/suppressions/SuppressionFilteringParameters.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/suppressions/SuppressionFilteringParameters.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.SuppressionFilteringParameters = exports.SuppressionOrigin = exports.SuppressionReason = void 0;\nvar FilteringParameters_1 = __webpack_require__(/*! ../client/FilteringParameters */ \"(rsc)/./node_modules/postmark/dist/client/models/client/FilteringParameters.js\");\nvar SuppressionReason;\n(function(SuppressionReason) {\n    SuppressionReason[\"HardBounce\"] = \"HardBounce\";\n    SuppressionReason[\"SpamComplaint\"] = \"SpamComplaint\";\n    SuppressionReason[\"ManualSuppression\"] = \"ManualSuppression\";\n})(SuppressionReason = exports.SuppressionReason || (exports.SuppressionReason = {}));\nvar SuppressionOrigin;\n(function(SuppressionOrigin) {\n    SuppressionOrigin[\"Recipient\"] = \"Recipient\";\n    SuppressionOrigin[\"Customer\"] = \"Customer\";\n    SuppressionOrigin[\"Admin\"] = \"Admin\";\n})(SuppressionOrigin = exports.SuppressionOrigin || (exports.SuppressionOrigin = {}));\n/**\n * Describes filtering parameters that can be used when retrieving bounces.\n * When pagination parameters are not specified, default values are set.\n */ var SuppressionFilteringParameters = /** @class */ function(_super) {\n    __extends(SuppressionFilteringParameters, _super);\n    function SuppressionFilteringParameters(count, offset, suppressionReason, origin, emailAddress, fromDate, toDate) {\n        if (count === void 0) {\n            count = 100;\n        }\n        if (offset === void 0) {\n            offset = 0;\n        }\n        var _this = _super.call(this, count, offset) || this;\n        _this.suppressionReason = suppressionReason;\n        _this.origin = origin;\n        _this.emailAddress = emailAddress;\n        _this.fromDate = fromDate;\n        _this.toDate = toDate;\n        return _this;\n    }\n    return SuppressionFilteringParameters;\n}(FilteringParameters_1.FilteringParameters);\nexports.SuppressionFilteringParameters = SuppressionFilteringParameters; //# sourceMappingURL=SuppressionFilteringParameters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3N1cHByZXNzaW9ucy9TdXBwcmVzc2lvbkZpbHRlcmluZ1BhcmFtZXRlcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxZQUFZLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsU0FBUyxJQUFLO0lBQ3hDLElBQUlDLGdCQUFnQixTQUFVQyxDQUFDLEVBQUVDLENBQUM7UUFDOUJGLGdCQUFnQkcsT0FBT0MsY0FBYyxJQUNoQztZQUFFQyxXQUFXLEVBQUU7UUFBQyxjQUFhQyxTQUFTLFNBQVVMLENBQUMsRUFBRUMsQ0FBQztZQUFJRCxFQUFFSSxTQUFTLEdBQUdIO1FBQUcsS0FDMUUsU0FBVUQsQ0FBQyxFQUFFQyxDQUFDO1lBQUksSUFBSyxJQUFJSyxLQUFLTCxFQUFHLElBQUlDLE9BQU9LLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNSLEdBQUdLLElBQUlOLENBQUMsQ0FBQ00sRUFBRSxHQUFHTCxDQUFDLENBQUNLLEVBQUU7UUFBRTtRQUNwRyxPQUFPUCxjQUFjQyxHQUFHQztJQUM1QjtJQUNBLE9BQU8sU0FBVUQsQ0FBQyxFQUFFQyxDQUFDO1FBQ2pCLElBQUksT0FBT0EsTUFBTSxjQUFjQSxNQUFNLE1BQ2pDLE1BQU0sSUFBSVMsVUFBVSx5QkFBeUJDLE9BQU9WLEtBQUs7UUFDN0RGLGNBQWNDLEdBQUdDO1FBQ2pCLFNBQVNXO1lBQU8sSUFBSSxDQUFDQyxXQUFXLEdBQUdiO1FBQUc7UUFDdENBLEVBQUVPLFNBQVMsR0FBR04sTUFBTSxPQUFPQyxPQUFPWSxNQUFNLENBQUNiLEtBQU1XLENBQUFBLEdBQUdMLFNBQVMsR0FBR04sRUFBRU0sU0FBUyxFQUFFLElBQUlLLElBQUc7SUFDdEY7QUFDSjtBQUNBViw4Q0FBNkM7SUFBRWUsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsc0NBQXNDLEdBQUdBLHlCQUF5QixHQUFHQSx5QkFBeUIsR0FBRyxLQUFLO0FBQ3RHLElBQUlLLHdCQUF3QkMsbUJBQU9BLENBQUMscUhBQStCO0FBQ25FLElBQUlGO0FBQ0gsVUFBVUEsaUJBQWlCO0lBQ3hCQSxpQkFBaUIsQ0FBQyxhQUFhLEdBQUc7SUFDbENBLGlCQUFpQixDQUFDLGdCQUFnQixHQUFHO0lBQ3JDQSxpQkFBaUIsQ0FBQyxvQkFBb0IsR0FBRztBQUM3QyxHQUFHQSxvQkFBb0JKLFFBQVFJLGlCQUFpQixJQUFLSixDQUFBQSx5QkFBeUIsR0FBRyxDQUFDO0FBQ2xGLElBQUlHO0FBQ0gsVUFBVUEsaUJBQWlCO0lBQ3hCQSxpQkFBaUIsQ0FBQyxZQUFZLEdBQUc7SUFDakNBLGlCQUFpQixDQUFDLFdBQVcsR0FBRztJQUNoQ0EsaUJBQWlCLENBQUMsUUFBUSxHQUFHO0FBQ2pDLEdBQUdBLG9CQUFvQkgsUUFBUUcsaUJBQWlCLElBQUtILENBQUFBLHlCQUF5QixHQUFHLENBQUM7QUFDbEY7OztDQUdDLEdBQ0QsSUFBSUUsaUNBQWlDLFdBQVcsR0FBSSxTQUFVSyxNQUFNO0lBQ2hFekIsVUFBVW9CLGdDQUFnQ0s7SUFDMUMsU0FBU0wsK0JBQStCTSxLQUFLLEVBQUVDLE1BQU0sRUFBRUMsaUJBQWlCLEVBQUVDLE1BQU0sRUFBRUMsWUFBWSxFQUFFQyxRQUFRLEVBQUVDLE1BQU07UUFDNUcsSUFBSU4sVUFBVSxLQUFLLEdBQUc7WUFBRUEsUUFBUTtRQUFLO1FBQ3JDLElBQUlDLFdBQVcsS0FBSyxHQUFHO1lBQUVBLFNBQVM7UUFBRztRQUNyQyxJQUFJTSxRQUFRUixPQUFPZCxJQUFJLENBQUMsSUFBSSxFQUFFZSxPQUFPQyxXQUFXLElBQUk7UUFDcERNLE1BQU1MLGlCQUFpQixHQUFHQTtRQUMxQkssTUFBTUosTUFBTSxHQUFHQTtRQUNmSSxNQUFNSCxZQUFZLEdBQUdBO1FBQ3JCRyxNQUFNRixRQUFRLEdBQUdBO1FBQ2pCRSxNQUFNRCxNQUFNLEdBQUdBO1FBQ2YsT0FBT0M7SUFDWDtJQUNBLE9BQU9iO0FBQ1gsRUFBRUcsc0JBQXNCVyxtQkFBbUI7QUFDM0NoQixzQ0FBc0MsR0FBR0UsZ0NBQ3pDLDBEQUEwRCIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy9zdXBwcmVzc2lvbnMvU3VwcHJlc3Npb25GaWx0ZXJpbmdQYXJhbWV0ZXJzLmpzPzU3ODYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwgcCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIgKyBTdHJpbmcoYikgKyBcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TdXBwcmVzc2lvbkZpbHRlcmluZ1BhcmFtZXRlcnMgPSBleHBvcnRzLlN1cHByZXNzaW9uT3JpZ2luID0gZXhwb3J0cy5TdXBwcmVzc2lvblJlYXNvbiA9IHZvaWQgMDtcbnZhciBGaWx0ZXJpbmdQYXJhbWV0ZXJzXzEgPSByZXF1aXJlKFwiLi4vY2xpZW50L0ZpbHRlcmluZ1BhcmFtZXRlcnNcIik7XG52YXIgU3VwcHJlc3Npb25SZWFzb247XG4oZnVuY3Rpb24gKFN1cHByZXNzaW9uUmVhc29uKSB7XG4gICAgU3VwcHJlc3Npb25SZWFzb25bXCJIYXJkQm91bmNlXCJdID0gXCJIYXJkQm91bmNlXCI7XG4gICAgU3VwcHJlc3Npb25SZWFzb25bXCJTcGFtQ29tcGxhaW50XCJdID0gXCJTcGFtQ29tcGxhaW50XCI7XG4gICAgU3VwcHJlc3Npb25SZWFzb25bXCJNYW51YWxTdXBwcmVzc2lvblwiXSA9IFwiTWFudWFsU3VwcHJlc3Npb25cIjtcbn0pKFN1cHByZXNzaW9uUmVhc29uID0gZXhwb3J0cy5TdXBwcmVzc2lvblJlYXNvbiB8fCAoZXhwb3J0cy5TdXBwcmVzc2lvblJlYXNvbiA9IHt9KSk7XG52YXIgU3VwcHJlc3Npb25PcmlnaW47XG4oZnVuY3Rpb24gKFN1cHByZXNzaW9uT3JpZ2luKSB7XG4gICAgU3VwcHJlc3Npb25PcmlnaW5bXCJSZWNpcGllbnRcIl0gPSBcIlJlY2lwaWVudFwiO1xuICAgIFN1cHByZXNzaW9uT3JpZ2luW1wiQ3VzdG9tZXJcIl0gPSBcIkN1c3RvbWVyXCI7XG4gICAgU3VwcHJlc3Npb25PcmlnaW5bXCJBZG1pblwiXSA9IFwiQWRtaW5cIjtcbn0pKFN1cHByZXNzaW9uT3JpZ2luID0gZXhwb3J0cy5TdXBwcmVzc2lvbk9yaWdpbiB8fCAoZXhwb3J0cy5TdXBwcmVzc2lvbk9yaWdpbiA9IHt9KSk7XG4vKipcbiAqIERlc2NyaWJlcyBmaWx0ZXJpbmcgcGFyYW1ldGVycyB0aGF0IGNhbiBiZSB1c2VkIHdoZW4gcmV0cmlldmluZyBib3VuY2VzLlxuICogV2hlbiBwYWdpbmF0aW9uIHBhcmFtZXRlcnMgYXJlIG5vdCBzcGVjaWZpZWQsIGRlZmF1bHQgdmFsdWVzIGFyZSBzZXQuXG4gKi9cbnZhciBTdXBwcmVzc2lvbkZpbHRlcmluZ1BhcmFtZXRlcnMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFN1cHByZXNzaW9uRmlsdGVyaW5nUGFyYW1ldGVycywgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBTdXBwcmVzc2lvbkZpbHRlcmluZ1BhcmFtZXRlcnMoY291bnQsIG9mZnNldCwgc3VwcHJlc3Npb25SZWFzb24sIG9yaWdpbiwgZW1haWxBZGRyZXNzLCBmcm9tRGF0ZSwgdG9EYXRlKSB7XG4gICAgICAgIGlmIChjb3VudCA9PT0gdm9pZCAwKSB7IGNvdW50ID0gMTAwOyB9XG4gICAgICAgIGlmIChvZmZzZXQgPT09IHZvaWQgMCkgeyBvZmZzZXQgPSAwOyB9XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIGNvdW50LCBvZmZzZXQpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLnN1cHByZXNzaW9uUmVhc29uID0gc3VwcHJlc3Npb25SZWFzb247XG4gICAgICAgIF90aGlzLm9yaWdpbiA9IG9yaWdpbjtcbiAgICAgICAgX3RoaXMuZW1haWxBZGRyZXNzID0gZW1haWxBZGRyZXNzO1xuICAgICAgICBfdGhpcy5mcm9tRGF0ZSA9IGZyb21EYXRlO1xuICAgICAgICBfdGhpcy50b0RhdGUgPSB0b0RhdGU7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgcmV0dXJuIFN1cHByZXNzaW9uRmlsdGVyaW5nUGFyYW1ldGVycztcbn0oRmlsdGVyaW5nUGFyYW1ldGVyc18xLkZpbHRlcmluZ1BhcmFtZXRlcnMpKTtcbmV4cG9ydHMuU3VwcHJlc3Npb25GaWx0ZXJpbmdQYXJhbWV0ZXJzID0gU3VwcHJlc3Npb25GaWx0ZXJpbmdQYXJhbWV0ZXJzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3VwcHJlc3Npb25GaWx0ZXJpbmdQYXJhbWV0ZXJzLmpzLm1hcCJdLCJuYW1lcyI6WyJfX2V4dGVuZHMiLCJleHRlbmRTdGF0aWNzIiwiZCIsImIiLCJPYmplY3QiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIkFycmF5IiwicCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIlR5cGVFcnJvciIsIlN0cmluZyIsIl9fIiwiY29uc3RydWN0b3IiLCJjcmVhdGUiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlN1cHByZXNzaW9uRmlsdGVyaW5nUGFyYW1ldGVycyIsIlN1cHByZXNzaW9uT3JpZ2luIiwiU3VwcHJlc3Npb25SZWFzb24iLCJGaWx0ZXJpbmdQYXJhbWV0ZXJzXzEiLCJyZXF1aXJlIiwiX3N1cGVyIiwiY291bnQiLCJvZmZzZXQiLCJzdXBwcmVzc2lvblJlYXNvbiIsIm9yaWdpbiIsImVtYWlsQWRkcmVzcyIsImZyb21EYXRlIiwidG9EYXRlIiwiX3RoaXMiLCJGaWx0ZXJpbmdQYXJhbWV0ZXJzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/suppressions/SuppressionFilteringParameters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/templates/Template.js":
/*!************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/templates/Template.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.TemplateFilteringParameters = exports.TemplatedMessage = exports.TemplatesPushRequest = exports.TemplateTypes = exports.TemplateValidationOptions = exports.CreateTemplateRequest = exports.UpdateTemplateRequest = void 0;\nvar FilteringParameters_1 = __webpack_require__(/*! ../client/FilteringParameters */ \"(rsc)/./node_modules/postmark/dist/client/models/client/FilteringParameters.js\");\nvar UpdateTemplateRequest = /** @class */ function() {\n    function UpdateTemplateRequest(Name, Subject, HtmlBody, TextBody, Alias, TemplateType, LayoutTemplate) {\n        this.Name = Name;\n        this.Subject = Subject;\n        this.HtmlBody = HtmlBody;\n        this.TextBody = TextBody;\n        this.Alias = Alias;\n        this.LayoutTemplate = LayoutTemplate;\n        this.TemplateType = TemplateType;\n    }\n    return UpdateTemplateRequest;\n}();\nexports.UpdateTemplateRequest = UpdateTemplateRequest;\nvar CreateTemplateRequest = /** @class */ function(_super) {\n    __extends(CreateTemplateRequest, _super);\n    function CreateTemplateRequest(Name, Subject, HtmlBody, TextBody, Alias, TemplateType, LayoutTemplate) {\n        return _super.call(this, Name, Subject, HtmlBody, TextBody, Alias, TemplateType, LayoutTemplate) || this;\n    }\n    return CreateTemplateRequest;\n}(UpdateTemplateRequest);\nexports.CreateTemplateRequest = CreateTemplateRequest;\nvar TemplateValidationOptions = /** @class */ function() {\n    function TemplateValidationOptions(Subject, HtmlBody, TextBody, TestRenderModel, TemplateType, LayoutTemplate, InlineCssForHtmlTestRender) {\n        this.Subject = Subject;\n        this.HtmlBody = HtmlBody;\n        this.TextBody = TextBody;\n        this.TestRenderModel = TestRenderModel;\n        this.TemplateType = TemplateType;\n        this.LayoutTemplate = LayoutTemplate;\n        this.InlineCssForHtmlTestRender = InlineCssForHtmlTestRender;\n    }\n    return TemplateValidationOptions;\n}();\nexports.TemplateValidationOptions = TemplateValidationOptions;\nvar TemplateTypes;\n(function(TemplateTypes) {\n    TemplateTypes[\"Standard\"] = \"Standard\";\n    TemplateTypes[\"Layout\"] = \"Layout\";\n})(TemplateTypes = exports.TemplateTypes || (exports.TemplateTypes = {}));\nvar TemplatesPushRequest = /** @class */ function() {\n    function TemplatesPushRequest(SourceServerID, DestinationServerID, PerformChanges) {\n        this.SourceServerID = SourceServerID;\n        this.DestinationServerID = DestinationServerID;\n        this.PerformChanges = PerformChanges;\n    }\n    return TemplatesPushRequest;\n}();\nexports.TemplatesPushRequest = TemplatesPushRequest;\nvar TemplatedMessage = /** @class */ function() {\n    function TemplatedMessage(from, templateIdOrAlias, templateModel, to, cc, bcc, replyTo, tag, trackOpens, trackLinks, headers, attachments) {\n        this.From = from;\n        this.TemplateModel = templateModel;\n        if (typeof templateIdOrAlias === \"number\") {\n            this.TemplateId = templateIdOrAlias;\n        } else {\n            this.TemplateAlias = templateIdOrAlias;\n        }\n        this.To = to;\n        this.Cc = cc;\n        this.Bcc = bcc;\n        this.ReplyTo = replyTo;\n        this.Tag = tag;\n        this.TrackOpens = trackOpens;\n        this.TrackLinks = trackLinks;\n        this.Headers = headers;\n        this.Attachments = attachments;\n    }\n    return TemplatedMessage;\n}();\nexports.TemplatedMessage = TemplatedMessage;\n/**\n * Describes filtering parameters that can be used when retrieving templates.\n * When pagination parameters are not specified, default values are set.\n */ var TemplateFilteringParameters = /** @class */ function(_super) {\n    __extends(TemplateFilteringParameters, _super);\n    function TemplateFilteringParameters(count, offset, templateType, layoutTemplate) {\n        if (count === void 0) {\n            count = 100;\n        }\n        if (offset === void 0) {\n            offset = 0;\n        }\n        var _this = _super.call(this, count, offset) || this;\n        _this.templateType = templateType;\n        _this.layoutTemplate = layoutTemplate;\n        return _this;\n    }\n    return TemplateFilteringParameters;\n}(FilteringParameters_1.FilteringParameters);\nexports.TemplateFilteringParameters = TemplateFilteringParameters; //# sourceMappingURL=Template.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/templates/Template.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/triggers/InboundRule.js":
/*!**************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/triggers/InboundRule.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateInboundRuleRequest = void 0;\nvar CreateInboundRuleRequest = /** @class */ function() {\n    function CreateInboundRuleRequest(Rule) {\n        this.Rule = Rule;\n    }\n    return CreateInboundRuleRequest;\n}();\nexports.CreateInboundRuleRequest = CreateInboundRuleRequest; //# sourceMappingURL=InboundRule.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3RyaWdnZXJzL0luYm91bmRSdWxlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxnQ0FBZ0MsR0FBRyxLQUFLO0FBQ3hDLElBQUlFLDJCQUEyQixXQUFXLEdBQUk7SUFDMUMsU0FBU0EseUJBQXlCQyxJQUFJO1FBQ2xDLElBQUksQ0FBQ0EsSUFBSSxHQUFHQTtJQUNoQjtJQUNBLE9BQU9EO0FBQ1g7QUFDQUYsZ0NBQWdDLEdBQUdFLDBCQUNuQyx1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvdHJpZ2dlcnMvSW5ib3VuZFJ1bGUuanM/YzdiNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ3JlYXRlSW5ib3VuZFJ1bGVSZXF1ZXN0ID0gdm9pZCAwO1xudmFyIENyZWF0ZUluYm91bmRSdWxlUmVxdWVzdCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBDcmVhdGVJbmJvdW5kUnVsZVJlcXVlc3QoUnVsZSkge1xuICAgICAgICB0aGlzLlJ1bGUgPSBSdWxlO1xuICAgIH1cbiAgICByZXR1cm4gQ3JlYXRlSW5ib3VuZFJ1bGVSZXF1ZXN0O1xufSgpKTtcbmV4cG9ydHMuQ3JlYXRlSW5ib3VuZFJ1bGVSZXF1ZXN0ID0gQ3JlYXRlSW5ib3VuZFJ1bGVSZXF1ZXN0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SW5ib3VuZFJ1bGUuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQ3JlYXRlSW5ib3VuZFJ1bGVSZXF1ZXN0IiwiUnVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/triggers/InboundRule.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/webhooks/Webhook.js":
/*!**********************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/webhooks/Webhook.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nvar __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CreateWebhookRequest = exports.UpdateWebhookRequest = void 0;\nvar UpdateWebhookRequest = /** @class */ function() {\n    function UpdateWebhookRequest(url, triggers, httpAuth, httpHeaders) {\n        this.Url = url;\n        this.HttpAuth = httpAuth;\n        this.HttpHeaders = httpHeaders;\n        this.Triggers = triggers;\n    }\n    return UpdateWebhookRequest;\n}();\nexports.UpdateWebhookRequest = UpdateWebhookRequest;\nvar CreateWebhookRequest = /** @class */ function(_super) {\n    __extends(CreateWebhookRequest, _super);\n    function CreateWebhookRequest(url, triggers, httpAuth, httpHeaders, messageStream) {\n        var _this = _super.call(this, url, triggers, httpAuth, httpHeaders) || this;\n        _this.MessageStream = messageStream;\n        return _this;\n    }\n    return CreateWebhookRequest;\n}(UpdateWebhookRequest);\nexports.CreateWebhookRequest = CreateWebhookRequest; //# sourceMappingURL=Webhook.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3dlYmhvb2tzL1dlYmhvb2suanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxZQUFZLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsU0FBUyxJQUFLO0lBQ3hDLElBQUlDLGdCQUFnQixTQUFVQyxDQUFDLEVBQUVDLENBQUM7UUFDOUJGLGdCQUFnQkcsT0FBT0MsY0FBYyxJQUNoQztZQUFFQyxXQUFXLEVBQUU7UUFBQyxjQUFhQyxTQUFTLFNBQVVMLENBQUMsRUFBRUMsQ0FBQztZQUFJRCxFQUFFSSxTQUFTLEdBQUdIO1FBQUcsS0FDMUUsU0FBVUQsQ0FBQyxFQUFFQyxDQUFDO1lBQUksSUFBSyxJQUFJSyxLQUFLTCxFQUFHLElBQUlDLE9BQU9LLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNSLEdBQUdLLElBQUlOLENBQUMsQ0FBQ00sRUFBRSxHQUFHTCxDQUFDLENBQUNLLEVBQUU7UUFBRTtRQUNwRyxPQUFPUCxjQUFjQyxHQUFHQztJQUM1QjtJQUNBLE9BQU8sU0FBVUQsQ0FBQyxFQUFFQyxDQUFDO1FBQ2pCLElBQUksT0FBT0EsTUFBTSxjQUFjQSxNQUFNLE1BQ2pDLE1BQU0sSUFBSVMsVUFBVSx5QkFBeUJDLE9BQU9WLEtBQUs7UUFDN0RGLGNBQWNDLEdBQUdDO1FBQ2pCLFNBQVNXO1lBQU8sSUFBSSxDQUFDQyxXQUFXLEdBQUdiO1FBQUc7UUFDdENBLEVBQUVPLFNBQVMsR0FBR04sTUFBTSxPQUFPQyxPQUFPWSxNQUFNLENBQUNiLEtBQU1XLENBQUFBLEdBQUdMLFNBQVMsR0FBR04sRUFBRU0sU0FBUyxFQUFFLElBQUlLLElBQUc7SUFDdEY7QUFDSjtBQUNBViw4Q0FBNkM7SUFBRWUsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsNEJBQTRCLEdBQUdBLDRCQUE0QixHQUFHLEtBQUs7QUFDbkUsSUFBSUcsdUJBQXVCLFdBQVcsR0FBSTtJQUN0QyxTQUFTQSxxQkFBcUJDLEdBQUcsRUFBRUMsUUFBUSxFQUFFQyxRQUFRLEVBQUVDLFdBQVc7UUFDOUQsSUFBSSxDQUFDQyxHQUFHLEdBQUdKO1FBQ1gsSUFBSSxDQUFDSyxRQUFRLEdBQUdIO1FBQ2hCLElBQUksQ0FBQ0ksV0FBVyxHQUFHSDtRQUNuQixJQUFJLENBQUNJLFFBQVEsR0FBR047SUFDcEI7SUFDQSxPQUFPRjtBQUNYO0FBQ0FILDRCQUE0QixHQUFHRztBQUMvQixJQUFJRCx1QkFBdUIsV0FBVyxHQUFJLFNBQVVVLE1BQU07SUFDdEQ5QixVQUFVb0Isc0JBQXNCVTtJQUNoQyxTQUFTVixxQkFBcUJFLEdBQUcsRUFBRUMsUUFBUSxFQUFFQyxRQUFRLEVBQUVDLFdBQVcsRUFBRU0sYUFBYTtRQUM3RSxJQUFJQyxRQUFRRixPQUFPbkIsSUFBSSxDQUFDLElBQUksRUFBRVcsS0FBS0MsVUFBVUMsVUFBVUMsZ0JBQWdCLElBQUk7UUFDM0VPLE1BQU1DLGFBQWEsR0FBR0Y7UUFDdEIsT0FBT0M7SUFDWDtJQUNBLE9BQU9aO0FBQ1gsRUFBRUM7QUFDRkgsNEJBQTRCLEdBQUdFLHNCQUMvQixtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvd2ViaG9va3MvV2ViaG9vay5qcz9hZGY4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBiICE9PSBcImZ1bmN0aW9uXCIgJiYgYiAhPT0gbnVsbClcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ3JlYXRlV2ViaG9va1JlcXVlc3QgPSBleHBvcnRzLlVwZGF0ZVdlYmhvb2tSZXF1ZXN0ID0gdm9pZCAwO1xudmFyIFVwZGF0ZVdlYmhvb2tSZXF1ZXN0ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFVwZGF0ZVdlYmhvb2tSZXF1ZXN0KHVybCwgdHJpZ2dlcnMsIGh0dHBBdXRoLCBodHRwSGVhZGVycykge1xuICAgICAgICB0aGlzLlVybCA9IHVybDtcbiAgICAgICAgdGhpcy5IdHRwQXV0aCA9IGh0dHBBdXRoO1xuICAgICAgICB0aGlzLkh0dHBIZWFkZXJzID0gaHR0cEhlYWRlcnM7XG4gICAgICAgIHRoaXMuVHJpZ2dlcnMgPSB0cmlnZ2VycztcbiAgICB9XG4gICAgcmV0dXJuIFVwZGF0ZVdlYmhvb2tSZXF1ZXN0O1xufSgpKTtcbmV4cG9ydHMuVXBkYXRlV2ViaG9va1JlcXVlc3QgPSBVcGRhdGVXZWJob29rUmVxdWVzdDtcbnZhciBDcmVhdGVXZWJob29rUmVxdWVzdCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoQ3JlYXRlV2ViaG9va1JlcXVlc3QsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gQ3JlYXRlV2ViaG9va1JlcXVlc3QodXJsLCB0cmlnZ2VycywgaHR0cEF1dGgsIGh0dHBIZWFkZXJzLCBtZXNzYWdlU3RyZWFtKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIHVybCwgdHJpZ2dlcnMsIGh0dHBBdXRoLCBodHRwSGVhZGVycykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMuTWVzc2FnZVN0cmVhbSA9IG1lc3NhZ2VTdHJlYW07XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgcmV0dXJuIENyZWF0ZVdlYmhvb2tSZXF1ZXN0O1xufShVcGRhdGVXZWJob29rUmVxdWVzdCkpO1xuZXhwb3J0cy5DcmVhdGVXZWJob29rUmVxdWVzdCA9IENyZWF0ZVdlYmhvb2tSZXF1ZXN0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9V2ViaG9vay5qcy5tYXAiXSwibmFtZXMiOlsiX19leHRlbmRzIiwiZXh0ZW5kU3RhdGljcyIsImQiLCJiIiwiT2JqZWN0Iiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJBcnJheSIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJUeXBlRXJyb3IiLCJTdHJpbmciLCJfXyIsImNvbnN0cnVjdG9yIiwiY3JlYXRlIiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJDcmVhdGVXZWJob29rUmVxdWVzdCIsIlVwZGF0ZVdlYmhvb2tSZXF1ZXN0IiwidXJsIiwidHJpZ2dlcnMiLCJodHRwQXV0aCIsImh0dHBIZWFkZXJzIiwiVXJsIiwiSHR0cEF1dGgiLCJIdHRwSGVhZGVycyIsIlRyaWdnZXJzIiwiX3N1cGVyIiwibWVzc2FnZVN0cmVhbSIsIl90aGlzIiwiTWVzc2FnZVN0cmVhbSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/webhooks/Webhook.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/webhooks/WebhookFilteringParameters.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/webhooks/WebhookFilteringParameters.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.WebhookFilteringParameters = void 0;\n/**\n * Describes filtering parameters that can be used when retrieving webhooks.\n */ var WebhookFilteringParameters = /** @class */ function() {\n    function WebhookFilteringParameters(messageStream) {\n        this.messageStream = messageStream;\n    }\n    return WebhookFilteringParameters;\n}();\nexports.WebhookFilteringParameters = WebhookFilteringParameters; //# sourceMappingURL=WebhookFilteringParameters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3dlYmhvb2tzL1dlYmhvb2tGaWx0ZXJpbmdQYXJhbWV0ZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxrQ0FBa0MsR0FBRyxLQUFLO0FBQzFDOztDQUVDLEdBQ0QsSUFBSUUsNkJBQTZCLFdBQVcsR0FBSTtJQUM1QyxTQUFTQSwyQkFBMkJDLGFBQWE7UUFDN0MsSUFBSSxDQUFDQSxhQUFhLEdBQUdBO0lBQ3pCO0lBQ0EsT0FBT0Q7QUFDWDtBQUNBRixrQ0FBa0MsR0FBR0UsNEJBQ3JDLHNEQUFzRCIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy93ZWJob29rcy9XZWJob29rRmlsdGVyaW5nUGFyYW1ldGVycy5qcz9iMWIxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5XZWJob29rRmlsdGVyaW5nUGFyYW1ldGVycyA9IHZvaWQgMDtcbi8qKlxuICogRGVzY3JpYmVzIGZpbHRlcmluZyBwYXJhbWV0ZXJzIHRoYXQgY2FuIGJlIHVzZWQgd2hlbiByZXRyaWV2aW5nIHdlYmhvb2tzLlxuICovXG52YXIgV2ViaG9va0ZpbHRlcmluZ1BhcmFtZXRlcnMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gV2ViaG9va0ZpbHRlcmluZ1BhcmFtZXRlcnMobWVzc2FnZVN0cmVhbSkge1xuICAgICAgICB0aGlzLm1lc3NhZ2VTdHJlYW0gPSBtZXNzYWdlU3RyZWFtO1xuICAgIH1cbiAgICByZXR1cm4gV2ViaG9va0ZpbHRlcmluZ1BhcmFtZXRlcnM7XG59KCkpO1xuZXhwb3J0cy5XZWJob29rRmlsdGVyaW5nUGFyYW1ldGVycyA9IFdlYmhvb2tGaWx0ZXJpbmdQYXJhbWV0ZXJzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9V2ViaG9va0ZpbHRlcmluZ1BhcmFtZXRlcnMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiV2ViaG9va0ZpbHRlcmluZ1BhcmFtZXRlcnMiLCJtZXNzYWdlU3RyZWFtIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/webhooks/WebhookFilteringParameters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/webhooks/Webhooks.js":
/*!***********************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/webhooks/Webhooks.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=Webhooks.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3dlYmhvb2tzL1dlYmhvb2tzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDLEVBQzdELG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy93ZWJob29rcy9XZWJob29rcy5qcz9jZGQ5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9V2ViaG9va3MuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/webhooks/Webhooks.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/BounceWebhook.js":
/*!************************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/webhooks/payload/BounceWebhook.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=BounceWebhook.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3dlYmhvb2tzL3BheWxvYWQvQm91bmNlV2ViaG9vay5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQyxFQUM3RCx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvd2ViaG9va3MvcGF5bG9hZC9Cb3VuY2VXZWJob29rLmpzPzAwZTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Cb3VuY2VXZWJob29rLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/BounceWebhook.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/ClickWebhook.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/webhooks/payload/ClickWebhook.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=ClickWebhook.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3dlYmhvb2tzL3BheWxvYWQvQ2xpY2tXZWJob29rLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDLEVBQzdELHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy93ZWJob29rcy9wYXlsb2FkL0NsaWNrV2ViaG9vay5qcz8zYjBkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2xpY2tXZWJob29rLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/ClickWebhook.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/DeliveryWebhook.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/webhooks/payload/DeliveryWebhook.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=DeliveryWebhook.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3dlYmhvb2tzL3BheWxvYWQvRGVsaXZlcnlXZWJob29rLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDLEVBQzdELDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvY2xpZW50L21vZGVscy93ZWJob29rcy9wYXlsb2FkL0RlbGl2ZXJ5V2ViaG9vay5qcz9lYmJhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RGVsaXZlcnlXZWJob29rLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/DeliveryWebhook.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/InboundWebhook.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/webhooks/payload/InboundWebhook.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=InboundWebhook.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3dlYmhvb2tzL3BheWxvYWQvSW5ib3VuZFdlYmhvb2suanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUMsRUFDN0QsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3dlYmhvb2tzL3BheWxvYWQvSW5ib3VuZFdlYmhvb2suanM/Mzg4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUluYm91bmRXZWJob29rLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/InboundWebhook.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/OpenWebhook.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/webhooks/payload/OpenWebhook.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=OpenWebhook.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3dlYmhvb2tzL3BheWxvYWQvT3BlbldlYmhvb2suanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUMsRUFDN0QsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3dlYmhvb2tzL3BheWxvYWQvT3BlbldlYmhvb2suanM/N2VkZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU9wZW5XZWJob29rLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/OpenWebhook.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/SpamComplaintWebhook.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/webhooks/payload/SpamComplaintWebhook.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=SpamComplaintWebhook.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3dlYmhvb2tzL3BheWxvYWQvU3BhbUNvbXBsYWludFdlYmhvb2suanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUMsRUFDN0QsZ0RBQWdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF4b25vbXkvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3dlYmhvb2tzL3BheWxvYWQvU3BhbUNvbXBsYWludFdlYmhvb2suanM/MmE2MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNwYW1Db21wbGFpbnRXZWJob29rLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/SpamComplaintWebhook.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/SubscriptionChangeWebhook.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/postmark/dist/client/models/webhooks/payload/SubscriptionChangeWebhook.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=SubscriptionChangeWebhook.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9jbGllbnQvbW9kZWxzL3dlYmhvb2tzL3BheWxvYWQvU3Vic2NyaXB0aW9uQ2hhbmdlV2ViaG9vay5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQyxFQUM3RCxxREFBcUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXhvbm9teS8uL25vZGVfbW9kdWxlcy9wb3N0bWFyay9kaXN0L2NsaWVudC9tb2RlbHMvd2ViaG9va3MvcGF5bG9hZC9TdWJzY3JpcHRpb25DaGFuZ2VXZWJob29rLmpzP2I5MWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TdWJzY3JpcHRpb25DaGFuZ2VXZWJob29rLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/client/models/webhooks/payload/SubscriptionChangeWebhook.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/dist/index.js":
/*!*********************************************!*\
  !*** ./node_modules/postmark/dist/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Header = exports.Attachment = exports.TemplatedMessage = exports.Message = exports.Errors = exports.Models = exports.AdminClient = exports.AccountClient = exports.Client = exports.ServerClient = void 0;\nvar AccountClient_1 = __webpack_require__(/*! ./client/AccountClient */ \"(rsc)/./node_modules/postmark/dist/client/AccountClient.js\");\nexports.AccountClient = AccountClient_1.default;\nexports.AdminClient = AccountClient_1.default;\nvar ServerClient_1 = __webpack_require__(/*! ./client/ServerClient */ \"(rsc)/./node_modules/postmark/dist/client/ServerClient.js\");\nexports.ServerClient = ServerClient_1.default;\nexports.Client = ServerClient_1.default;\nvar Models = __webpack_require__(/*! ./client/models */ \"(rsc)/./node_modules/postmark/dist/client/models/index.js\");\nexports.Models = Models;\nvar Errors = __webpack_require__(/*! ./client/errors/Errors */ \"(rsc)/./node_modules/postmark/dist/client/errors/Errors.js\");\nexports.Errors = Errors;\n// Essential types are exposed directly\n// to make working with common requests simpler.\nvar models_1 = __webpack_require__(/*! ./client/models */ \"(rsc)/./node_modules/postmark/dist/client/models/index.js\");\nObject.defineProperty(exports, \"Message\", ({\n    enumerable: true,\n    get: function() {\n        return models_1.Message;\n    }\n}));\nvar models_2 = __webpack_require__(/*! ./client/models */ \"(rsc)/./node_modules/postmark/dist/client/models/index.js\");\nObject.defineProperty(exports, \"TemplatedMessage\", ({\n    enumerable: true,\n    get: function() {\n        return models_2.TemplatedMessage;\n    }\n}));\nvar models_3 = __webpack_require__(/*! ./client/models */ \"(rsc)/./node_modules/postmark/dist/client/models/index.js\");\nObject.defineProperty(exports, \"Attachment\", ({\n    enumerable: true,\n    get: function() {\n        return models_3.Attachment;\n    }\n}));\nvar models_4 = __webpack_require__(/*! ./client/models */ \"(rsc)/./node_modules/postmark/dist/client/models/index.js\");\nObject.defineProperty(exports, \"Header\", ({\n    enumerable: true,\n    get: function() {\n        return models_4.Header;\n    }\n})); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdG1hcmsvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsY0FBYyxHQUFHQSxrQkFBa0IsR0FBR0Esd0JBQXdCLEdBQUdBLGVBQWUsR0FBR0EsY0FBYyxHQUFHQSxjQUFjLEdBQUdBLG1CQUFtQixHQUFHQSxxQkFBcUIsR0FBR0EsY0FBYyxHQUFHQSxvQkFBb0IsR0FBRyxLQUFLO0FBQ2hOLElBQUlZLGtCQUFrQkMsbUJBQU9BLENBQUMsMEZBQXdCO0FBQ3REYixxQkFBcUIsR0FBR1ksZ0JBQWdCRSxPQUFPO0FBQy9DZCxtQkFBbUIsR0FBR1ksZ0JBQWdCRSxPQUFPO0FBQzdDLElBQUlDLGlCQUFpQkYsbUJBQU9BLENBQUMsd0ZBQXVCO0FBQ3BEYixvQkFBb0IsR0FBR2UsZUFBZUQsT0FBTztBQUM3Q2QsY0FBYyxHQUFHZSxlQUFlRCxPQUFPO0FBQ3ZDLElBQUlQLFNBQVNNLG1CQUFPQSxDQUFDLGtGQUFpQjtBQUN0Q2IsY0FBYyxHQUFHTztBQUNqQixJQUFJRCxTQUFTTyxtQkFBT0EsQ0FBQywwRkFBd0I7QUFDN0NiLGNBQWMsR0FBR007QUFDakIsdUNBQXVDO0FBQ3ZDLGdEQUFnRDtBQUNoRCxJQUFJVSxXQUFXSCxtQkFBT0EsQ0FBQyxrRkFBaUI7QUFDeENmLDJDQUEwQztJQUFFbUIsWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT0YsU0FBU1gsT0FBTztJQUFFO0FBQUUsQ0FBQyxFQUFDO0FBQzlHLElBQUljLFdBQVdOLG1CQUFPQSxDQUFDLGtGQUFpQjtBQUN4Q2Ysb0RBQW1EO0lBQUVtQixZQUFZO0lBQU1DLEtBQUs7UUFBYyxPQUFPQyxTQUFTZixnQkFBZ0I7SUFBRTtBQUFFLENBQUMsRUFBQztBQUNoSSxJQUFJZ0IsV0FBV1AsbUJBQU9BLENBQUMsa0ZBQWlCO0FBQ3hDZiw4Q0FBNkM7SUFBRW1CLFlBQVk7SUFBTUMsS0FBSztRQUFjLE9BQU9FLFNBQVNqQixVQUFVO0lBQUU7QUFBRSxDQUFDLEVBQUM7QUFDcEgsSUFBSWtCLFdBQVdSLG1CQUFPQSxDQUFDLGtGQUFpQjtBQUN4Q2YsMENBQXlDO0lBQUVtQixZQUFZO0lBQU1DLEtBQUs7UUFBYyxPQUFPRyxTQUFTbkIsTUFBTTtJQUFFO0FBQUUsQ0FBQyxFQUFDLEVBQzVHLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzL3Bvc3RtYXJrL2Rpc3QvaW5kZXguanM/Mzk0OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSGVhZGVyID0gZXhwb3J0cy5BdHRhY2htZW50ID0gZXhwb3J0cy5UZW1wbGF0ZWRNZXNzYWdlID0gZXhwb3J0cy5NZXNzYWdlID0gZXhwb3J0cy5FcnJvcnMgPSBleHBvcnRzLk1vZGVscyA9IGV4cG9ydHMuQWRtaW5DbGllbnQgPSBleHBvcnRzLkFjY291bnRDbGllbnQgPSBleHBvcnRzLkNsaWVudCA9IGV4cG9ydHMuU2VydmVyQ2xpZW50ID0gdm9pZCAwO1xudmFyIEFjY291bnRDbGllbnRfMSA9IHJlcXVpcmUoXCIuL2NsaWVudC9BY2NvdW50Q2xpZW50XCIpO1xuZXhwb3J0cy5BY2NvdW50Q2xpZW50ID0gQWNjb3VudENsaWVudF8xLmRlZmF1bHQ7XG5leHBvcnRzLkFkbWluQ2xpZW50ID0gQWNjb3VudENsaWVudF8xLmRlZmF1bHQ7XG52YXIgU2VydmVyQ2xpZW50XzEgPSByZXF1aXJlKFwiLi9jbGllbnQvU2VydmVyQ2xpZW50XCIpO1xuZXhwb3J0cy5TZXJ2ZXJDbGllbnQgPSBTZXJ2ZXJDbGllbnRfMS5kZWZhdWx0O1xuZXhwb3J0cy5DbGllbnQgPSBTZXJ2ZXJDbGllbnRfMS5kZWZhdWx0O1xudmFyIE1vZGVscyA9IHJlcXVpcmUoXCIuL2NsaWVudC9tb2RlbHNcIik7XG5leHBvcnRzLk1vZGVscyA9IE1vZGVscztcbnZhciBFcnJvcnMgPSByZXF1aXJlKFwiLi9jbGllbnQvZXJyb3JzL0Vycm9yc1wiKTtcbmV4cG9ydHMuRXJyb3JzID0gRXJyb3JzO1xuLy8gRXNzZW50aWFsIHR5cGVzIGFyZSBleHBvc2VkIGRpcmVjdGx5XG4vLyB0byBtYWtlIHdvcmtpbmcgd2l0aCBjb21tb24gcmVxdWVzdHMgc2ltcGxlci5cbnZhciBtb2RlbHNfMSA9IHJlcXVpcmUoXCIuL2NsaWVudC9tb2RlbHNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJNZXNzYWdlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBtb2RlbHNfMS5NZXNzYWdlOyB9IH0pO1xudmFyIG1vZGVsc18yID0gcmVxdWlyZShcIi4vY2xpZW50L21vZGVsc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlRlbXBsYXRlZE1lc3NhZ2VcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZGVsc18yLlRlbXBsYXRlZE1lc3NhZ2U7IH0gfSk7XG52YXIgbW9kZWxzXzMgPSByZXF1aXJlKFwiLi9jbGllbnQvbW9kZWxzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQXR0YWNobWVudFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbW9kZWxzXzMuQXR0YWNobWVudDsgfSB9KTtcbnZhciBtb2RlbHNfNCA9IHJlcXVpcmUoXCIuL2NsaWVudC9tb2RlbHNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJIZWFkZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZGVsc180LkhlYWRlcjsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkhlYWRlciIsIkF0dGFjaG1lbnQiLCJUZW1wbGF0ZWRNZXNzYWdlIiwiTWVzc2FnZSIsIkVycm9ycyIsIk1vZGVscyIsIkFkbWluQ2xpZW50IiwiQWNjb3VudENsaWVudCIsIkNsaWVudCIsIlNlcnZlckNsaWVudCIsIkFjY291bnRDbGllbnRfMSIsInJlcXVpcmUiLCJkZWZhdWx0IiwiU2VydmVyQ2xpZW50XzEiLCJtb2RlbHNfMSIsImVudW1lcmFibGUiLCJnZXQiLCJtb2RlbHNfMiIsIm1vZGVsc18zIiwibW9kZWxzXzQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postmark/dist/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/postmark/package.json":
/*!********************************************!*\
  !*** ./node_modules/postmark/package.json ***!
  \********************************************/
/***/ ((module) => {

module.exports = JSON.parse('{"name":"postmark","description":"Official Node.js client library for the Postmark HTTP API - https://www.postmarkapp.com","license":"MIT","tags":["email","utility","postmark","sending","transactional"],"version":"4.0.5","author":"Igor Balos","contributors":["Igor Balos","Andrew Theken","Aaron Blum","Aleksey Aleksandrov","Alex Shepard","Antony Jones","Ben Burwell","Ben Williamson","Chris Williams","Jakub Borys","Mark Nguyen","Matt","Matthew Blackshaw","Matthew Conlen","Ryan Kirkman","Scott Anderson","Sebastien Chopin","Theophane RUPIN","codesplicer","francescoRubini","Matthew Reff"],"main":"./dist/index.js","types":"./dist/index.d.ts","directories":{"lib":"./dist/index.js"},"scripts":{"compile":"rm -r -f ./dist && node_modules/.bin/tsc","test":"node_modules/.bin/mocha --timeout 30000 --retries 1 -r ts-node/register test/**/*test.ts","unittest":"node_modules/.bin/mocha --timeout 30000 --retries 1 -r ts-node/register test/unit/**/*test.ts","watchtests":"node_modules/.bin/mocha --timeout 30000 --retries 1 -r ts-node/register -R list -w --recursive -G test/**/*test.ts","lint":"npx eslint src --ext ts --ignore-pattern \'src/*test*\'; exit 0","lintfix":"npx eslint src --ext ts --fix --ignore-pattern \'src/test*.ts\'; exit 0","compile-docs":"echo \'Generating docs...\' && mkdir -p ./docs && rm -r ./docs && node_modules/.bin/typedoc --options typedoc.json && git add -A ./docs && echo \'Generated docs!\'"},"homepage":"http://ActiveCampaign.github.io/postmark.js","repository":{"type":"git","url":"https://github.com/ActiveCampaign/postmark.js.git"},"bugs":{"url":"https://github.com/ActiveCampaign/postmark.js/issues"},"precommit":["compile","lint","test","compile-docs"],"devDependencies":{"@types/chai":"^4.3.11","@types/mocha":"^10.0.6","@types/node":"^12.12.6","@types/sinon":"^17.0.2","@typescript-eslint/eslint-plugin":"^5.40.1","@typescript-eslint/parser":"^5.40.1","chai":"^4.3.10","dotenv":"^16.3.1","eslint":"^8.54.0","mocha":"^10.2.0","pre-commit":"^1.2.2","sinon":"^17.0.1","ts-node":"^10.9.1","typedoc":"^0.25.4","typescript":"^4.7.4"},"dependencies":{"axios":"^1.7.4"}}');

/***/ })

};
;