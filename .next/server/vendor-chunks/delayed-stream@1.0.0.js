"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/delayed-stream@1.0.0";
exports.ids = ["vendor-chunks/delayed-stream@1.0.0"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/delayed-stream@1.0.0/node_modules/delayed-stream/lib/delayed_stream.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/delayed-stream@1.0.0/node_modules/delayed-stream/lib/delayed_stream.js ***!
  \***************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar Stream = (__webpack_require__(/*! stream */ \"stream\").Stream);\nvar util = __webpack_require__(/*! util */ \"util\");\nmodule.exports = DelayedStream;\nfunction DelayedStream() {\n    this.source = null;\n    this.dataSize = 0;\n    this.maxDataSize = 1024 * 1024;\n    this.pauseStream = true;\n    this._maxDataSizeExceeded = false;\n    this._released = false;\n    this._bufferedEvents = [];\n}\nutil.inherits(DelayedStream, Stream);\nDelayedStream.create = function(source, options) {\n    var delayedStream = new this();\n    options = options || {};\n    for(var option in options){\n        delayedStream[option] = options[option];\n    }\n    delayedStream.source = source;\n    var realEmit = source.emit;\n    source.emit = function() {\n        delayedStream._handleEmit(arguments);\n        return realEmit.apply(source, arguments);\n    };\n    source.on(\"error\", function() {});\n    if (delayedStream.pauseStream) {\n        source.pause();\n    }\n    return delayedStream;\n};\nObject.defineProperty(DelayedStream.prototype, \"readable\", {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n        return this.source.readable;\n    }\n});\nDelayedStream.prototype.setEncoding = function() {\n    return this.source.setEncoding.apply(this.source, arguments);\n};\nDelayedStream.prototype.resume = function() {\n    if (!this._released) {\n        this.release();\n    }\n    this.source.resume();\n};\nDelayedStream.prototype.pause = function() {\n    this.source.pause();\n};\nDelayedStream.prototype.release = function() {\n    this._released = true;\n    this._bufferedEvents.forEach((function(args) {\n        this.emit.apply(this, args);\n    }).bind(this));\n    this._bufferedEvents = [];\n};\nDelayedStream.prototype.pipe = function() {\n    var r = Stream.prototype.pipe.apply(this, arguments);\n    this.resume();\n    return r;\n};\nDelayedStream.prototype._handleEmit = function(args) {\n    if (this._released) {\n        this.emit.apply(this, args);\n        return;\n    }\n    if (args[0] === \"data\") {\n        this.dataSize += args[1].length;\n        this._checkIfMaxDataSizeExceeded();\n    }\n    this._bufferedEvents.push(args);\n};\nDelayedStream.prototype._checkIfMaxDataSizeExceeded = function() {\n    if (this._maxDataSizeExceeded) {\n        return;\n    }\n    if (this.dataSize <= this.maxDataSize) {\n        return;\n    }\n    this._maxDataSizeExceeded = true;\n    var message = \"DelayedStream#maxDataSize of \" + this.maxDataSize + \" bytes exceeded.\";\n    this.emit(\"error\", new Error(message));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vZGVsYXllZC1zdHJlYW1AMS4wLjAvbm9kZV9tb2R1bGVzL2RlbGF5ZWQtc3RyZWFtL2xpYi9kZWxheWVkX3N0cmVhbS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsU0FBU0Msb0RBQXdCO0FBQ3JDLElBQUlDLE9BQU9ELG1CQUFPQSxDQUFDO0FBRW5CRSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCLFNBQVNBO0lBQ1AsSUFBSSxDQUFDQyxNQUFNLEdBQUc7SUFDZCxJQUFJLENBQUNDLFFBQVEsR0FBRztJQUNoQixJQUFJLENBQUNDLFdBQVcsR0FBRyxPQUFPO0lBQzFCLElBQUksQ0FBQ0MsV0FBVyxHQUFHO0lBRW5CLElBQUksQ0FBQ0Msb0JBQW9CLEdBQUc7SUFDNUIsSUFBSSxDQUFDQyxTQUFTLEdBQUc7SUFDakIsSUFBSSxDQUFDQyxlQUFlLEdBQUcsRUFBRTtBQUMzQjtBQUNBVixLQUFLVyxRQUFRLENBQUNSLGVBQWVMO0FBRTdCSyxjQUFjUyxNQUFNLEdBQUcsU0FBU1IsTUFBTSxFQUFFUyxPQUFPO0lBQzdDLElBQUlDLGdCQUFnQixJQUFJLElBQUk7SUFFNUJELFVBQVVBLFdBQVcsQ0FBQztJQUN0QixJQUFLLElBQUlFLFVBQVVGLFFBQVM7UUFDMUJDLGFBQWEsQ0FBQ0MsT0FBTyxHQUFHRixPQUFPLENBQUNFLE9BQU87SUFDekM7SUFFQUQsY0FBY1YsTUFBTSxHQUFHQTtJQUV2QixJQUFJWSxXQUFXWixPQUFPYSxJQUFJO0lBQzFCYixPQUFPYSxJQUFJLEdBQUc7UUFDWkgsY0FBY0ksV0FBVyxDQUFDQztRQUMxQixPQUFPSCxTQUFTSSxLQUFLLENBQUNoQixRQUFRZTtJQUNoQztJQUVBZixPQUFPaUIsRUFBRSxDQUFDLFNBQVMsWUFBWTtJQUMvQixJQUFJUCxjQUFjUCxXQUFXLEVBQUU7UUFDN0JILE9BQU9rQixLQUFLO0lBQ2Q7SUFFQSxPQUFPUjtBQUNUO0FBRUFTLE9BQU9DLGNBQWMsQ0FBQ3JCLGNBQWNzQixTQUFTLEVBQUUsWUFBWTtJQUN6REMsY0FBYztJQUNkQyxZQUFZO0lBQ1pDLEtBQUs7UUFDSCxPQUFPLElBQUksQ0FBQ3hCLE1BQU0sQ0FBQ3lCLFFBQVE7SUFDN0I7QUFDRjtBQUVBMUIsY0FBY3NCLFNBQVMsQ0FBQ0ssV0FBVyxHQUFHO0lBQ3BDLE9BQU8sSUFBSSxDQUFDMUIsTUFBTSxDQUFDMEIsV0FBVyxDQUFDVixLQUFLLENBQUMsSUFBSSxDQUFDaEIsTUFBTSxFQUFFZTtBQUNwRDtBQUVBaEIsY0FBY3NCLFNBQVMsQ0FBQ00sTUFBTSxHQUFHO0lBQy9CLElBQUksQ0FBQyxJQUFJLENBQUN0QixTQUFTLEVBQUU7UUFDbkIsSUFBSSxDQUFDdUIsT0FBTztJQUNkO0lBRUEsSUFBSSxDQUFDNUIsTUFBTSxDQUFDMkIsTUFBTTtBQUNwQjtBQUVBNUIsY0FBY3NCLFNBQVMsQ0FBQ0gsS0FBSyxHQUFHO0lBQzlCLElBQUksQ0FBQ2xCLE1BQU0sQ0FBQ2tCLEtBQUs7QUFDbkI7QUFFQW5CLGNBQWNzQixTQUFTLENBQUNPLE9BQU8sR0FBRztJQUNoQyxJQUFJLENBQUN2QixTQUFTLEdBQUc7SUFFakIsSUFBSSxDQUFDQyxlQUFlLENBQUN1QixPQUFPLENBQUMsVUFBU0MsSUFBSTtRQUN4QyxJQUFJLENBQUNqQixJQUFJLENBQUNHLEtBQUssQ0FBQyxJQUFJLEVBQUVjO0lBQ3hCLEdBQUVDLElBQUksQ0FBQyxJQUFJO0lBQ1gsSUFBSSxDQUFDekIsZUFBZSxHQUFHLEVBQUU7QUFDM0I7QUFFQVAsY0FBY3NCLFNBQVMsQ0FBQ1csSUFBSSxHQUFHO0lBQzdCLElBQUlDLElBQUl2QyxPQUFPMkIsU0FBUyxDQUFDVyxJQUFJLENBQUNoQixLQUFLLENBQUMsSUFBSSxFQUFFRDtJQUMxQyxJQUFJLENBQUNZLE1BQU07SUFDWCxPQUFPTTtBQUNUO0FBRUFsQyxjQUFjc0IsU0FBUyxDQUFDUCxXQUFXLEdBQUcsU0FBU2dCLElBQUk7SUFDakQsSUFBSSxJQUFJLENBQUN6QixTQUFTLEVBQUU7UUFDbEIsSUFBSSxDQUFDUSxJQUFJLENBQUNHLEtBQUssQ0FBQyxJQUFJLEVBQUVjO1FBQ3RCO0lBQ0Y7SUFFQSxJQUFJQSxJQUFJLENBQUMsRUFBRSxLQUFLLFFBQVE7UUFDdEIsSUFBSSxDQUFDN0IsUUFBUSxJQUFJNkIsSUFBSSxDQUFDLEVBQUUsQ0FBQ0ksTUFBTTtRQUMvQixJQUFJLENBQUNDLDJCQUEyQjtJQUNsQztJQUVBLElBQUksQ0FBQzdCLGVBQWUsQ0FBQzhCLElBQUksQ0FBQ047QUFDNUI7QUFFQS9CLGNBQWNzQixTQUFTLENBQUNjLDJCQUEyQixHQUFHO0lBQ3BELElBQUksSUFBSSxDQUFDL0Isb0JBQW9CLEVBQUU7UUFDN0I7SUFDRjtJQUVBLElBQUksSUFBSSxDQUFDSCxRQUFRLElBQUksSUFBSSxDQUFDQyxXQUFXLEVBQUU7UUFDckM7SUFDRjtJQUVBLElBQUksQ0FBQ0Usb0JBQW9CLEdBQUc7SUFDNUIsSUFBSWlDLFVBQ0Ysa0NBQWtDLElBQUksQ0FBQ25DLFdBQVcsR0FBRztJQUN2RCxJQUFJLENBQUNXLElBQUksQ0FBQyxTQUFTLElBQUl5QixNQUFNRDtBQUMvQiIsInNvdXJjZXMiOlsid2VicGFjazovL3RheG9ub215Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL2RlbGF5ZWQtc3RyZWFtQDEuMC4wL25vZGVfbW9kdWxlcy9kZWxheWVkLXN0cmVhbS9saWIvZGVsYXllZF9zdHJlYW0uanM/YzQyMSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgU3RyZWFtID0gcmVxdWlyZSgnc3RyZWFtJykuU3RyZWFtO1xudmFyIHV0aWwgPSByZXF1aXJlKCd1dGlsJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gRGVsYXllZFN0cmVhbTtcbmZ1bmN0aW9uIERlbGF5ZWRTdHJlYW0oKSB7XG4gIHRoaXMuc291cmNlID0gbnVsbDtcbiAgdGhpcy5kYXRhU2l6ZSA9IDA7XG4gIHRoaXMubWF4RGF0YVNpemUgPSAxMDI0ICogMTAyNDtcbiAgdGhpcy5wYXVzZVN0cmVhbSA9IHRydWU7XG5cbiAgdGhpcy5fbWF4RGF0YVNpemVFeGNlZWRlZCA9IGZhbHNlO1xuICB0aGlzLl9yZWxlYXNlZCA9IGZhbHNlO1xuICB0aGlzLl9idWZmZXJlZEV2ZW50cyA9IFtdO1xufVxudXRpbC5pbmhlcml0cyhEZWxheWVkU3RyZWFtLCBTdHJlYW0pO1xuXG5EZWxheWVkU3RyZWFtLmNyZWF0ZSA9IGZ1bmN0aW9uKHNvdXJjZSwgb3B0aW9ucykge1xuICB2YXIgZGVsYXllZFN0cmVhbSA9IG5ldyB0aGlzKCk7XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGZvciAodmFyIG9wdGlvbiBpbiBvcHRpb25zKSB7XG4gICAgZGVsYXllZFN0cmVhbVtvcHRpb25dID0gb3B0aW9uc1tvcHRpb25dO1xuICB9XG5cbiAgZGVsYXllZFN0cmVhbS5zb3VyY2UgPSBzb3VyY2U7XG5cbiAgdmFyIHJlYWxFbWl0ID0gc291cmNlLmVtaXQ7XG4gIHNvdXJjZS5lbWl0ID0gZnVuY3Rpb24oKSB7XG4gICAgZGVsYXllZFN0cmVhbS5faGFuZGxlRW1pdChhcmd1bWVudHMpO1xuICAgIHJldHVybiByZWFsRW1pdC5hcHBseShzb3VyY2UsIGFyZ3VtZW50cyk7XG4gIH07XG5cbiAgc291cmNlLm9uKCdlcnJvcicsIGZ1bmN0aW9uKCkge30pO1xuICBpZiAoZGVsYXllZFN0cmVhbS5wYXVzZVN0cmVhbSkge1xuICAgIHNvdXJjZS5wYXVzZSgpO1xuICB9XG5cbiAgcmV0dXJuIGRlbGF5ZWRTdHJlYW07XG59O1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoRGVsYXllZFN0cmVhbS5wcm90b3R5cGUsICdyZWFkYWJsZScsIHtcbiAgY29uZmlndXJhYmxlOiB0cnVlLFxuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLnNvdXJjZS5yZWFkYWJsZTtcbiAgfVxufSk7XG5cbkRlbGF5ZWRTdHJlYW0ucHJvdG90eXBlLnNldEVuY29kaW5nID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLnNvdXJjZS5zZXRFbmNvZGluZy5hcHBseSh0aGlzLnNvdXJjZSwgYXJndW1lbnRzKTtcbn07XG5cbkRlbGF5ZWRTdHJlYW0ucHJvdG90eXBlLnJlc3VtZSA9IGZ1bmN0aW9uKCkge1xuICBpZiAoIXRoaXMuX3JlbGVhc2VkKSB7XG4gICAgdGhpcy5yZWxlYXNlKCk7XG4gIH1cblxuICB0aGlzLnNvdXJjZS5yZXN1bWUoKTtcbn07XG5cbkRlbGF5ZWRTdHJlYW0ucHJvdG90eXBlLnBhdXNlID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuc291cmNlLnBhdXNlKCk7XG59O1xuXG5EZWxheWVkU3RyZWFtLnByb3RvdHlwZS5yZWxlYXNlID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuX3JlbGVhc2VkID0gdHJ1ZTtcblxuICB0aGlzLl9idWZmZXJlZEV2ZW50cy5mb3JFYWNoKGZ1bmN0aW9uKGFyZ3MpIHtcbiAgICB0aGlzLmVtaXQuYXBwbHkodGhpcywgYXJncyk7XG4gIH0uYmluZCh0aGlzKSk7XG4gIHRoaXMuX2J1ZmZlcmVkRXZlbnRzID0gW107XG59O1xuXG5EZWxheWVkU3RyZWFtLnByb3RvdHlwZS5waXBlID0gZnVuY3Rpb24oKSB7XG4gIHZhciByID0gU3RyZWFtLnByb3RvdHlwZS5waXBlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIHRoaXMucmVzdW1lKCk7XG4gIHJldHVybiByO1xufTtcblxuRGVsYXllZFN0cmVhbS5wcm90b3R5cGUuX2hhbmRsZUVtaXQgPSBmdW5jdGlvbihhcmdzKSB7XG4gIGlmICh0aGlzLl9yZWxlYXNlZCkge1xuICAgIHRoaXMuZW1pdC5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoYXJnc1swXSA9PT0gJ2RhdGEnKSB7XG4gICAgdGhpcy5kYXRhU2l6ZSArPSBhcmdzWzFdLmxlbmd0aDtcbiAgICB0aGlzLl9jaGVja0lmTWF4RGF0YVNpemVFeGNlZWRlZCgpO1xuICB9XG5cbiAgdGhpcy5fYnVmZmVyZWRFdmVudHMucHVzaChhcmdzKTtcbn07XG5cbkRlbGF5ZWRTdHJlYW0ucHJvdG90eXBlLl9jaGVja0lmTWF4RGF0YVNpemVFeGNlZWRlZCA9IGZ1bmN0aW9uKCkge1xuICBpZiAodGhpcy5fbWF4RGF0YVNpemVFeGNlZWRlZCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmICh0aGlzLmRhdGFTaXplIDw9IHRoaXMubWF4RGF0YVNpemUpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICB0aGlzLl9tYXhEYXRhU2l6ZUV4Y2VlZGVkID0gdHJ1ZTtcbiAgdmFyIG1lc3NhZ2UgPVxuICAgICdEZWxheWVkU3RyZWFtI21heERhdGFTaXplIG9mICcgKyB0aGlzLm1heERhdGFTaXplICsgJyBieXRlcyBleGNlZWRlZC4nXG4gIHRoaXMuZW1pdCgnZXJyb3InLCBuZXcgRXJyb3IobWVzc2FnZSkpO1xufTtcbiJdLCJuYW1lcyI6WyJTdHJlYW0iLCJyZXF1aXJlIiwidXRpbCIsIm1vZHVsZSIsImV4cG9ydHMiLCJEZWxheWVkU3RyZWFtIiwic291cmNlIiwiZGF0YVNpemUiLCJtYXhEYXRhU2l6ZSIsInBhdXNlU3RyZWFtIiwiX21heERhdGFTaXplRXhjZWVkZWQiLCJfcmVsZWFzZWQiLCJfYnVmZmVyZWRFdmVudHMiLCJpbmhlcml0cyIsImNyZWF0ZSIsIm9wdGlvbnMiLCJkZWxheWVkU3RyZWFtIiwib3B0aW9uIiwicmVhbEVtaXQiLCJlbWl0IiwiX2hhbmRsZUVtaXQiLCJhcmd1bWVudHMiLCJhcHBseSIsIm9uIiwicGF1c2UiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsInByb3RvdHlwZSIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJnZXQiLCJyZWFkYWJsZSIsInNldEVuY29kaW5nIiwicmVzdW1lIiwicmVsZWFzZSIsImZvckVhY2giLCJhcmdzIiwiYmluZCIsInBpcGUiLCJyIiwibGVuZ3RoIiwiX2NoZWNrSWZNYXhEYXRhU2l6ZUV4Y2VlZGVkIiwicHVzaCIsIm1lc3NhZ2UiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/delayed-stream@1.0.0/node_modules/delayed-stream/lib/delayed_stream.js\n");

/***/ })

};
;